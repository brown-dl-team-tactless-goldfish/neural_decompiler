func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movq    %rsi, -32(%rbp)
        movq    %rdx, -40(%rbp)
        cmpq    $0, -32(%rbp)
        jne     .L2
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movb    $48, (%rax)
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %edx
        movq    -40(%rbp), %rax
        movl    %edx, (%rax)
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movb    $46, (%rax)
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %edx
        movq    -40(%rbp), %rax
        movl    %edx, (%rax)
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movb    $48, (%rax)
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %edx
        movq    -40(%rbp), %rax
        movl    %edx, (%rax)
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movb    $48, (%rax)
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %edx
        movq    -40(%rbp), %rax
        movl    %edx, (%rax)
        jmp     .L1
.L2:
        cmpq    $99, -32(%rbp)
        jg      .L4
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movb    $48, (%rax)
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %edx
        movq    -40(%rbp), %rax
        movl    %edx, (%rax)
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movb    $46, (%rax)
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %edx
        movq    -40(%rbp), %rax
        movl    %edx, (%rax)
        movq    -32(%rbp), %rcx
        movabsq $7378697629483820647, %rdx
        movq    %rcx, %rax
        imulq   %rdx
        sarq    $2, %rdx
        movq    %rcx, %rax
        sarq    $63, %rax
        subq    %rax, %rdx
        movq    %rdx, %rax
        leal    48(%rax), %ecx
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    %ecx, %edx
        movb    %dl, (%rax)
        movq    -32(%rbp), %rcx
        movabsq $7378697629483820647, %rdx
        movq    %rcx, %rax
        imulq   %rdx
        sarq    $2, %rdx
        movq    %rcx, %rax
        sarq    $63, %rax
        subq    %rax, %rdx
        movq    %rdx, %rax
        salq    $2, %rax
        addq    %rdx, %rax
        addq    %rax, %rax
        subq    %rax, %rcx
        movq    %rcx, %rax
        movq    %rax, -32(%rbp)
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %edx
        movq    -40(%rbp), %rax
        movl    %edx, (%rax)
        movq    -32(%rbp), %rax
        leal    48(%rax), %ecx
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    %ecx, %edx
        movb    %dl, (%rax)
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %edx
        movq    -40(%rbp), %rax
        movl    %edx, (%rax)
        jmp     .L1
.L4:
        movabsq $100000000000, %rax
        movq    %rax, -8(%rbp)
        jmp     .L5
.L6:
        movq    -8(%rbp), %rcx
        movabsq $7378697629483820647, %rdx
        movq    %rcx, %rax
        imulq   %rdx
        sarq    $2, %rdx
        movq    %rcx, %rax
        sarq    $63, %rax
        subq    %rax, %rdx
        movq    %rdx, %rax
        movq    %rax, -8(%rbp)
.L5:
        movq    -32(%rbp), %rax
        cmpq    -8(%rbp), %rax
        jl      .L6
        jmp     .L7
.L8:
        movq    -32(%rbp), %rax
        cqto
        idivq   -8(%rbp)
        leal    48(%rax), %ecx
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    %ecx, %edx
        movb    %dl, (%rax)
        movq    -32(%rbp), %rax
        cqto
        idivq   -8(%rbp)
        movq    %rdx, -32(%rbp)
        movq    -8(%rbp), %rcx
        movabsq $7378697629483820647, %rdx
        movq    %rcx, %rax
        imulq   %rdx
        sarq    $2, %rdx
        movq    %rcx, %rax
        sarq    $63, %rax
        subq    %rax, %rdx
        movq    %rdx, %rax
        movq    %rax, -8(%rbp)
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %edx
        movq    -40(%rbp), %rax
        movl    %edx, (%rax)
.L7:
        cmpq    $99, -8(%rbp)
        jg      .L8
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movb    $46, (%rax)
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %edx
        movq    -40(%rbp), %rax
        movl    %edx, (%rax)
        movq    -32(%rbp), %rcx
        movabsq $7378697629483820647, %rdx
        movq    %rcx, %rax
        imulq   %rdx
        sarq    $2, %rdx
        movq    %rcx, %rax
        sarq    $63, %rax
        subq    %rax, %rdx
        movq    %rdx, %rax
        leal    48(%rax), %ecx
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    %ecx, %edx
        movb    %dl, (%rax)
        movq    -32(%rbp), %rcx
        movabsq $7378697629483820647, %rdx
        movq    %rcx, %rax
        imulq   %rdx
        sarq    $2, %rdx
        movq    %rcx, %rax
        sarq    $63, %rax
        subq    %rax, %rdx
        movq    %rdx, %rax
        salq    $2, %rax
        addq    %rdx, %rax
        addq    %rax, %rax
        subq    %rax, %rcx
        movq    %rcx, %rax
        movq    %rax, -32(%rbp)
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %edx
        movq    -40(%rbp), %rax
        movl    %edx, (%rax)
        movq    -32(%rbp), %rax
        leal    48(%rax), %ecx
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    %ecx, %edx
        movb    %dl, (%rax)
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %edx
        movq    -40(%rbp), %rax
        movl    %edx, (%rax)
        nop
.L1:
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $80, %rsp
        movq    %rdi, -72(%rbp)
        movl    %esi, -76(%rbp)
        movq    -72(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -40(%rbp)
        movl    $100, %eax
        subl    -76(%rbp), %eax
        movl    %eax, -76(%rbp)
        movl    -40(%rbp), %eax
        addl    %eax, %eax
        cltq
        addq    $3, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -48(%rbp)
        movl    $0, -60(%rbp)
        movl    $0, -4(%rbp)
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $36, %al
        jne     .L10
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    -60(%rbp), %edx
        movslq  %edx, %rcx
        movq    -48(%rbp), %rdx
        addq    %rcx, %rdx
        movzbl  (%rax), %eax
        movb    %al, (%rdx)
        movl    -60(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -60(%rbp)
        addl    $1, -4(%rbp)
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $48, %al
        jle     .L11
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $57, %al
        jg      .L11
        movl    -4(%rbp), %eax
        movl    %eax, -52(%rbp)
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        subl    $48, %eax
        cltq
        movq    %rax, -16(%rbp)
        addl    $1, -4(%rbp)
        jmp     .L12
.L14:
        movq    -16(%rbp), %rdx
        movq    %rdx, %rax
        salq    $2, %rax
        addq    %rdx, %rax
        addq    %rax, %rax
        movq    %rax, -16(%rbp)
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        subl    $48, %eax
        cltq
        addq    %rax, -16(%rbp)
        addl    $1, -4(%rbp)
.L12:
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $47, %al
        jle     .L13
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $57, %al
        jle     .L14
.L13:
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $32, %al
        je      .L15
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        jne     .L16
.L15:
        movl    -76(%rbp), %eax
        cltq
        imulq   -16(%rbp), %rax
        movq    %rax, %rcx
        leaq    -60(%rbp), %rdx
        movq    -48(%rbp), %rax
        movq    %rcx, %rsi
        movq    %rax, %rdi
        call    func_1
        subl    $1, -4(%rbp)
        jmp     .L21
.L16:
        movl    -52(%rbp), %eax
        movl    %eax, -20(%rbp)
        jmp     .L18
.L19:
        movl    -20(%rbp), %eax
        movslq  %eax, %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    -60(%rbp), %edx
        movslq  %edx, %rcx
        movq    -48(%rbp), %rdx
        addq    %rcx, %rdx
        movzbl  (%rax), %eax
        movb    %al, (%rdx)
        movl    -60(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -60(%rbp)
        addl    $1, -20(%rbp)
.L18:
        movl    -20(%rbp), %eax
        cmpl    -4(%rbp), %eax
        jle     .L19
        jmp     .L21
.L11:
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    -60(%rbp), %edx
        movslq  %edx, %rcx
        movq    -48(%rbp), %rdx
        addq    %rcx, %rdx
        movzbl  (%rax), %eax
        movb    %al, (%rdx)
        movl    -60(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -60(%rbp)
        jmp     .L21
.L10:
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    -60(%rbp), %edx
        movslq  %edx, %rcx
        movq    -48(%rbp), %rdx
        addq    %rcx, %rdx
        movzbl  (%rax), %eax
        movb    %al, (%rdx)
        movl    -60(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -60(%rbp)
.L21:
        addl    $1, -4(%rbp)
        jmp     .L22
.L33:
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $32, %al
        jne     .L23
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    -60(%rbp), %edx
        movslq  %edx, %rcx
        movq    -48(%rbp), %rdx
        addq    %rcx, %rdx
        movzbl  (%rax), %eax
        movb    %al, (%rdx)
        movl    -60(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -60(%rbp)
        addl    $1, -4(%rbp)
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $36, %al
        jne     .L23
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    -60(%rbp), %edx
        movslq  %edx, %rcx
        movq    -48(%rbp), %rdx
        addq    %rcx, %rdx
        movzbl  (%rax), %eax
        movb    %al, (%rdx)
        movl    -60(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -60(%rbp)
        addl    $1, -4(%rbp)
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $48, %al
        jle     .L23
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $57, %al
        jg      .L23
        movl    -4(%rbp), %eax
        movl    %eax, -56(%rbp)
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        subl    $48, %eax
        cltq
        movq    %rax, -32(%rbp)
        addl    $1, -4(%rbp)
        jmp     .L24
.L26:
        movq    -32(%rbp), %rdx
        movq    %rdx, %rax
        salq    $2, %rax
        addq    %rdx, %rax
        addq    %rax, %rax
        movq    %rax, -32(%rbp)
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        subl    $48, %eax
        cltq
        addq    %rax, -32(%rbp)
        addl    $1, -4(%rbp)
.L24:
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $47, %al
        jle     .L25
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $57, %al
        jle     .L26
.L25:
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $32, %al
        je      .L27
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        jne     .L28
.L27:
        movl    -76(%rbp), %eax
        cltq
        imulq   -32(%rbp), %rax
        movq    %rax, %rcx
        leaq    -60(%rbp), %rdx
        movq    -48(%rbp), %rax
        movq    %rcx, %rsi
        movq    %rax, %rdi
        call    func_1
        subl    $1, -4(%rbp)
        jmp     .L32
.L28:
        movl    -56(%rbp), %eax
        movl    %eax, -36(%rbp)
        jmp     .L30
.L31:
        movl    -36(%rbp), %eax
        movslq  %eax, %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    -60(%rbp), %edx
        movslq  %edx, %rcx
        movq    -48(%rbp), %rdx
        addq    %rcx, %rdx
        movzbl  (%rax), %eax
        movb    %al, (%rdx)
        movl    -60(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -60(%rbp)
        addl    $1, -36(%rbp)
.L30:
        movl    -36(%rbp), %eax
        cmpl    -4(%rbp), %eax
        jle     .L31
        jmp     .L32
.L23:
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    -60(%rbp), %edx
        movslq  %edx, %rcx
        movq    -48(%rbp), %rdx
        addq    %rcx, %rdx
        movzbl  (%rax), %eax
        movb    %al, (%rdx)
        movl    -60(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -60(%rbp)
.L32:
        addl    $1, -4(%rbp)
.L22:
        movl    -4(%rbp), %eax
        cmpl    -40(%rbp), %eax
        jl      .L33
        movl    -60(%rbp), %eax
        movslq  %eax, %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movb    $0, (%rax)
        movq    -48(%rbp), %rax
        leave
        ret
