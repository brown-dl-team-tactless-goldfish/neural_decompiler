func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $112, %rsp
        movq    %rdi, -88(%rbp)
        movl    %esi, -92(%rbp)
        movq    %rdx, -104(%rbp)
        movq    -104(%rbp), %rax
        movl    -92(%rbp), %edx
        movl    %edx, (%rax)
        movl    -92(%rbp), %eax
        cltq
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -16(%rbp)
        movl    $0, -20(%rbp)
        movl    $1, -24(%rbp)
        movl    $2, -28(%rbp)
        movl    $3, -32(%rbp)
        movl    $4, -36(%rbp)
        movl    -20(%rbp), %eax
        movl    %eax, -80(%rbp)
        movl    -24(%rbp), %eax
        movl    %eax, -76(%rbp)
        movl    -28(%rbp), %eax
        movl    %eax, -72(%rbp)
        movl    -32(%rbp), %eax
        movl    %eax, -68(%rbp)
        movl    -36(%rbp), %eax
        movl    %eax, -64(%rbp)
        movl    -20(%rbp), %eax
        movl    %eax, -60(%rbp)
        movl    -24(%rbp), %eax
        movl    %eax, -56(%rbp)
        movl    -28(%rbp), %eax
        movl    %eax, -52(%rbp)
        movl    -32(%rbp), %eax
        movl    %eax, -48(%rbp)
        movl    -36(%rbp), %eax
        movl    %eax, -44(%rbp)
        movl    -20(%rbp), %eax
        movl    %eax, -4(%rbp)
        movl    $0, -8(%rbp)
        jmp     .L2
.L3:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -88(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        movl    -4(%rbp), %edx
        movslq  %edx, %rdx
        addq    %rdx, %rdx
        addq    %rdx, %rax
        movl    -80(%rbp,%rax,4), %eax
        movl    %eax, -4(%rbp)
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -16(%rbp), %rax
        addq    %rax, %rdx
        movl    -4(%rbp), %eax
        cmpl    -20(%rbp), %eax
        sete    %al
        movb    %al, (%rdx)
        addl    $1, -8(%rbp)
.L2:
        movl    -8(%rbp), %eax
        cmpl    -92(%rbp), %eax
        jl      .L3
        movq    -16(%rbp), %rax
        leave
        ret
