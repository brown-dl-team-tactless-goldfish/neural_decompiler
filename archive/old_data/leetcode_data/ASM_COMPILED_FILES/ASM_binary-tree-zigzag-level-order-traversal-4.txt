func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $2112, %rsp
        movq    %rdi, -2088(%rbp)
        movq    %rsi, -2096(%rbp)
        movq    %rdx, -2104(%rbp)
        movl    $0, var_10(%rip)
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        movl    $0, -12(%rbp)
        movq    -2104(%rbp), %rax
        movq    %rax, var_13(%rip)
        movl    $8000, %edi
        movl    $0, %eax
        call    var_8
        movslq  %eax, %rdx
        movq    var_13(%rip), %rax
        movq    %rdx, (%rax)
        movl    $0, var_19(%rip)
        movl    var_19(%rip), %eax
        movl    %eax, var_4(%rip)
        movq    -2096(%rbp), %rax
        movl    $0, (%rax)
        movq    var_13(%rip), %rax
        movq    (%rax), %rax
        movl    $0, (%rax)
        cmpq    $0, -2088(%rbp)
        jne     .L2
        movl    $0, %eax
        jmp     .L18
.L2:
        movl    $16000, %edi
        movl    $0, %eax
        call    var_8
        cltq
        movq    %rax, var_12(%rip)
        movl    var_4(%rip), %eax
        cltq
        movq    -2088(%rbp), %rdx
        movq    %rdx, var_11(,%rax,8)
        movl    var_4(%rip), %eax
        cltq
        movl    -12(%rbp), %edx
        movl    %edx, var_2(,%rax,4)
        movl    var_4(%rip), %eax
        addl    $1, %eax
        movl    %eax, var_4(%rip)
        jmp     .L4
.L12:
        movl    var_19(%rip), %eax
        cltq
        movq    var_11(,%rax,8), %rax
        movq    %rax, -32(%rbp)
        movl    var_19(%rip), %eax
        cltq
        movl    var_2(,%rax,4), %eax
        cmpl    %eax, -12(%rbp)
        jge     .L5
        movl    -8(%rbp), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        movl    $0, %eax
        call    var_8
        movslq  %eax, %rdx
        movq    var_12(%rip), %rax
        movl    var_10(%rip), %ecx
        movslq  %ecx, %rcx
        salq    $3, %rcx
        addq    %rcx, %rax
        movq    %rdx, (%rax)
        cmpl    $0, -4(%rbp)
        je      .L6
        movl    -8(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -16(%rbp)
        jmp     .L7
.L8:
        movl    -8(%rbp), %eax
        subl    -16(%rbp), %eax
        leal    -1(%rax), %ecx
        movq    var_12(%rip), %rax
        movl    var_10(%rip), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -16(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rax, %rdx
        movslq  %ecx, %rax
        movl    -2080(%rbp,%rax,4), %eax
        movl    %eax, (%rdx)
        subl    $1, -16(%rbp)
.L7:
        cmpl    $0, -16(%rbp)
        jns     .L8
        jmp     .L9
.L6:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    var_12(%rip), %rax
        movl    var_10(%rip), %ecx
        movslq  %ecx, %rcx
        salq    $3, %rcx
        addq    %rcx, %rax
        movq    (%rax), %rax
        leaq    -2080(%rbp), %rcx
        movq    %rcx, %rsi
        movq    %rax, %rdi
        movl    $0, %eax
        call    var_9
.L9:
        movq    var_13(%rip), %rax
        movq    (%rax), %rax
        movl    var_10(%rip), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rax, %rdx
        movl    -8(%rbp), %eax
        movl    %eax, (%rdx)
        movl    $0, -8(%rbp)
        movl    var_10(%rip), %eax
        addl    $1, %eax
        movl    %eax, var_10(%rip)
        xorl    $1, -4(%rbp)
        movl    var_19(%rip), %eax
        cltq
        movl    var_2(,%rax,4), %eax
        movl    %eax, -12(%rbp)
.L5:
        movq    -32(%rbp), %rax
        movl    (%rax), %edx
        movl    -8(%rbp), %eax
        cltq
        movl    %edx, -2080(%rbp,%rax,4)
        addl    $1, -8(%rbp)
        movq    -32(%rbp), %rax
        movq    8(%rax), %rax
        testq   %rax, %rax
        je      .L10
        movl    var_4(%rip), %ecx
        movq    -32(%rbp), %rax
        movq    8(%rax), %rdx
        movslq  %ecx, %rax
        movq    %rdx, var_11(,%rax,8)
        movl    var_4(%rip), %eax
        movl    -12(%rbp), %edx
        addl    $1, %edx
        cltq
        movl    %edx, var_2(,%rax,4)
        movl    var_4(%rip), %eax
        addl    $1, %eax
        movl    %eax, var_4(%rip)
.L10:
        movq    -32(%rbp), %rax
        movq    16(%rax), %rax
        testq   %rax, %rax
        je      .L11
        movl    var_4(%rip), %ecx
        movq    -32(%rbp), %rax
        movq    16(%rax), %rdx
        movslq  %ecx, %rax
        movq    %rdx, var_11(,%rax,8)
        movl    var_4(%rip), %eax
        movl    -12(%rbp), %edx
        addl    $1, %edx
        cltq
        movl    %edx, var_2(,%rax,4)
        movl    var_4(%rip), %eax
        addl    $1, %eax
        movl    %eax, var_4(%rip)
.L11:
        movl    var_19(%rip), %eax
        addl    $1, %eax
        movl    %eax, var_19(%rip)
.L4:
        movl    var_4(%rip), %edx
        movl    var_19(%rip), %eax
        cmpl    %eax, %edx
        jg      .L12
        cmpl    $0, -8(%rbp)
        je      .L13
        movl    -8(%rbp), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        movl    $0, %eax
        call    var_8
        movslq  %eax, %rdx
        movq    var_12(%rip), %rax
        movl    var_10(%rip), %ecx
        movslq  %ecx, %rcx
        salq    $3, %rcx
        addq    %rcx, %rax
        movq    %rdx, (%rax)
        cmpl    $0, -4(%rbp)
        je      .L14
        movl    -8(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -20(%rbp)
        jmp     .L15
.L16:
        movl    -8(%rbp), %eax
        subl    -20(%rbp), %eax
        leal    -1(%rax), %ecx
        movq    var_12(%rip), %rax
        movl    var_10(%rip), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rax, %rdx
        movslq  %ecx, %rax
        movl    -2080(%rbp,%rax,4), %eax
        movl    %eax, (%rdx)
        subl    $1, -20(%rbp)
.L15:
        cmpl    $0, -20(%rbp)
        jns     .L16
        jmp     .L17
.L14:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    var_12(%rip), %rax
        movl    var_10(%rip), %ecx
        movslq  %ecx, %rcx
        salq    $3, %rcx
        addq    %rcx, %rax
        movq    (%rax), %rax
        leaq    -2080(%rbp), %rcx
        movq    %rcx, %rsi
        movq    %rax, %rdi
        movl    $0, %eax
        call    var_9
.L17:
        movq    var_13(%rip), %rax
        movq    (%rax), %rax
        movl    var_10(%rip), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rax, %rdx
        movl    -8(%rbp), %eax
        movl    %eax, (%rdx)
        movl    $0, -8(%rbp)
        movl    var_10(%rip), %eax
        addl    $1, %eax
        movl    %eax, var_10(%rip)
.L13:
        movl    var_10(%rip), %edx
        movq    -2096(%rbp), %rax
        movl    %edx, (%rax)
        movq    var_12(%rip), %rax
.L18:
        leave
        ret
