func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -8(%rbp)
        movq    %rsi, -16(%rbp)
        movq    -8(%rbp), %rax
        movl    (%rax), %edx
        movq    -16(%rbp), %rax
        movl    (%rax), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $64, %rsp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movq    %rdx, -56(%rbp)
        movl    -44(%rbp), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -24(%rbp)
        movl    -44(%rbp), %eax
        movslq  %eax, %rsi
        movq    -40(%rbp), %rax
        movl    $func_1, %ecx
        movl    $4, %edx
        movq    %rax, %rdi
        call    qsort
        movl    -44(%rbp), %eax
        subl    $1, %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        movl    %eax, -4(%rbp)
        movl    -44(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -8(%rbp)
        movl    $0, -12(%rbp)
        jmp     .L4
.L7:
        movl    -12(%rbp), %eax
        andl    $1, %eax
        testl   %eax, %eax
        jne     .L5
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    -12(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -24(%rbp), %rdx
        addq    %rcx, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        subl    $1, -4(%rbp)
        jmp     .L6
.L5:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    -12(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -24(%rbp), %rdx
        addq    %rcx, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        subl    $1, -8(%rbp)
.L6:
        addl    $1, -12(%rbp)
.L4:
        movl    -12(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L7
        movq    -56(%rbp), %rax
        movl    -44(%rbp), %edx
        movl    %edx, (%rax)
        movq    -24(%rbp), %rax
        leave
        ret
