func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $40, %rsp
        movq    %rdi, -40(%rbp)
        movl    $0, -20(%rbp)
        movl    $0, -24(%rbp)
        jmp     .L2
.L8:
        movl    -24(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $32, %al
        je      .L3
        movl    -24(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        jne     .L4
.L3:
        cmpl    $2, -20(%rbp)
        jle     .L5
        movl    -24(%rbp), %eax
        subl    -20(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        leal    -32(%rax), %ecx
        movl    -24(%rbp), %eax
        subl    -20(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    %ecx, %edx
        movb    %dl, (%rax)
.L5:
        movl    $0, -20(%rbp)
        jmp     .L6
.L4:
        movl    -24(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $64, %al
        jle     .L7
        movl    -24(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $90, %al
        jg      .L7
        movl    -24(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        leal    32(%rax), %ecx
        movl    -24(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    %ecx, %edx
        movb    %dl, (%rax)
.L7:
        addl    $1, -20(%rbp)
.L6:
        addl    $1, -24(%rbp)
.L2:
        movl    -24(%rbp), %eax
        movslq  %eax, %rbx
        movq    -40(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        cmpq    %rax, %rbx
        jbe     .L8
        movq    -40(%rbp), %rax
        addq    $40, %rsp
        popq    %rbx
        popq    %rbp
        ret
