func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    %edx, -32(%rbp)
        movl    -28(%rbp), %eax
        cmpl    -32(%rbp), %eax
        jge     .L13
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    %eax, -12(%rbp)
        movl    -28(%rbp), %eax
        movl    %eax, -4(%rbp)
        movl    -32(%rbp), %eax
        movl    %eax, -8(%rbp)
        jmp     .L4
.L7:
        subl    $1, -8(%rbp)
.L5:
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jge     .L6
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -12(%rbp)
        jle     .L7
.L6:
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jge     .L9
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    -4(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -24(%rbp), %rdx
        addq    %rcx, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        jmp     .L9
.L11:
        addl    $1, -4(%rbp)
.L9:
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jge     .L10
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -12(%rbp)
        jge     .L11
.L10:
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jge     .L4
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    -8(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -24(%rbp), %rdx
        addq    %rcx, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
.L4:
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jl      .L5
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movl    -12(%rbp), %eax
        movl    %eax, (%rdx)
        movl    -4(%rbp), %eax
        leal    -1(%rax), %edx
        movl    -28(%rbp), %ecx
        movq    -24(%rbp), %rax
        movl    %ecx, %esi
        movq    %rax, %rdi
        call    func_2
        movl    -4(%rbp), %eax
        leal    1(%rax), %ecx
        movl    -32(%rbp), %edx
        movq    -24(%rbp), %rax
        movl    %ecx, %esi
        movq    %rax, %rdi
        call    func_2
        jmp     .L1
.L13:
        nop
.L1:
        leave
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movl    %edx, -48(%rbp)
        movl    $0, -24(%rbp)
        movl    $1000000, -12(%rbp)
        movl    -44(%rbp), %eax
        leal    -1(%rax), %edx
        movq    -40(%rbp), %rax
        movl    $0, %esi
        movq    %rax, %rdi
        call    func_2
        movl    $0, -20(%rbp)
        jmp     .L15
.L22:
        movl    -20(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -4(%rbp)
        movl    -44(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -8(%rbp)
        jmp     .L16
.L21:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %edx, %eax
        movl    %eax, -24(%rbp)
        movl    -48(%rbp), %eax
        subl    -24(%rbp), %eax
        movl    %eax, %edx
        movl    %edx, %eax
        sarl    $31, %eax
        xorl    %eax, %edx
        movl    %edx, -28(%rbp)
        subl    %eax, -28(%rbp)
        movl    -28(%rbp), %eax
        cmpl    -12(%rbp), %eax
        jge     .L17
        movl    -28(%rbp), %eax
        movl    %eax, -12(%rbp)
        movl    -24(%rbp), %eax
        movl    %eax, -16(%rbp)
.L17:
        movl    -24(%rbp), %eax
        cmpl    -48(%rbp), %eax
        jge     .L18
        addl    $1, -4(%rbp)
        jmp     .L16
.L18:
        movl    -24(%rbp), %eax
        cmpl    -48(%rbp), %eax
        jle     .L19
        subl    $1, -8(%rbp)
        jmp     .L16
.L19:
        movl    -24(%rbp), %eax
        cmpl    -48(%rbp), %eax
        jne     .L16
        movl    -48(%rbp), %eax
        jmp     .L20
.L16:
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jl      .L21
        addl    $1, -20(%rbp)
.L15:
        movl    -20(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L22
        movl    -16(%rbp), %eax
.L20:
        leave
        ret
