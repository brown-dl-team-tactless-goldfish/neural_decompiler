func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $120, %rsp
        movq    %rdi, -88(%rbp)
        movl    %esi, -92(%rbp)
        movq    %rdx, -104(%rbp)
        movl    %ecx, -96(%rbp)
        movl    %r8d, -108(%rbp)
        movq    %r9, -120(%rbp)
        movl    $1, -80(%rbp)
        movl    $0, -76(%rbp)
        movl    $0, -72(%rbp)
        movl    $1, -68(%rbp)
        movl    $-1, -64(%rbp)
        movl    $0, -60(%rbp)
        movl    $0, -56(%rbp)
        movl    $-1, -52(%rbp)
        movl    $32, %edi
        call    malloc
        movq    %rax, -32(%rbp)
        movq    -120(%rbp), %rax
        movl    $0, (%rax)
        movl    $0, -20(%rbp)
        jmp     .L2
.L4:
        movl    -20(%rbp), %eax
        cltq
        movl    -80(%rbp,%rax,8), %edx
        movl    -96(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, -36(%rbp)
        movl    -20(%rbp), %eax
        cltq
        movl    -76(%rbp,%rax,8), %edx
        movl    -108(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, -40(%rbp)
        cmpl    $0, -36(%rbp)
        js      .L3
        movl    -36(%rbp), %eax
        cmpl    -92(%rbp), %eax
        jge     .L3
        cmpl    $0, -40(%rbp)
        js      .L3
        movq    -104(%rbp), %rax
        movl    (%rax), %eax
        cmpl    %eax, -40(%rbp)
        jge     .L3
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -88(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -40(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $-1, %eax
        jne     .L3
        movq    -120(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %ecx
        movq    -120(%rbp), %rdx
        movl    %ecx, (%rdx)
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -32(%rbp), %rax
        leaq    (%rdx,%rax), %rbx
        movl    $8, %edi
        call    malloc
        movq    %rax, (%rbx)
        movq    -120(%rbp), %rax
        movl    (%rax), %eax
        cltq
        salq    $3, %rax
        leaq    -8(%rax), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -36(%rbp), %edx
        movl    %edx, (%rax)
        movq    -120(%rbp), %rax
        movl    (%rax), %eax
        cltq
        salq    $3, %rax
        leaq    -8(%rax), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        leaq    4(%rax), %rdx
        movl    -40(%rbp), %eax
        movl    %eax, (%rdx)
.L3:
        addl    $1, -20(%rbp)
.L2:
        cmpl    $3, -20(%rbp)
        jle     .L4
        movq    -32(%rbp), %rax
        addq    $120, %rsp
        popq    %rbx
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $136, %rsp
        movq    %rdi, -104(%rbp)
        movl    %esi, -108(%rbp)
        movq    %rdx, -120(%rbp)
        movq    %rcx, -128(%rbp)
        movq    %r8, -136(%rbp)
        movq    -128(%rbp), %rax
        movl    -108(%rbp), %edx
        movl    %edx, (%rax)
        movq    -136(%rbp), %rax
        movq    -120(%rbp), %rdx
        movq    %rdx, (%rax)
        movq    -120(%rbp), %rax
        movl    (%rax), %eax
        imull   -108(%rbp), %eax
        cltq
        salq    $3, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -24(%rbp)
        movl    $0, -28(%rbp)
        movl    -108(%rbp), %eax
        cltq
        salq    $3, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -56(%rbp)
        movl    $0, -32(%rbp)
        jmp     .L7
.L12:
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -120(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        salq    $2, %rax
        movl    -32(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -56(%rbp), %rdx
        leaq    (%rcx,%rdx), %rbx
        movq    %rax, %rdi
        call    malloc
        movq    %rax, (%rbx)
        movl    $0, -36(%rbp)
        jmp     .L8
.L11:
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -104(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -36(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L9
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -36(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    $0, (%rax)
        movl    -28(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -28(%rbp)
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        leaq    (%rdx,%rax), %rbx
        movl    $8, %edi
        call    malloc
        movq    %rax, (%rbx)
        movl    -28(%rbp), %eax
        cltq
        salq    $3, %rax
        leaq    -8(%rax), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -32(%rbp), %edx
        movl    %edx, (%rax)
        movl    -28(%rbp), %eax
        cltq
        salq    $3, %rax
        leaq    -8(%rax), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        leaq    4(%rax), %rdx
        movl    -36(%rbp), %eax
        movl    %eax, (%rdx)
        jmp     .L10
.L9:
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -36(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    $-1, (%rax)
.L10:
        addl    $1, -36(%rbp)
.L8:
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -120(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -36(%rbp)
        jl      .L11
        addl    $1, -32(%rbp)
.L7:
        movl    -32(%rbp), %eax
        cmpl    -108(%rbp), %eax
        jl      .L12
        jmp     .L13
.L18:
        movq    -120(%rbp), %rax
        movl    (%rax), %eax
        imull   -108(%rbp), %eax
        cltq
        salq    $3, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -64(%rbp)
        movl    $0, -40(%rbp)
        movl    $0, -44(%rbp)
        jmp     .L14
.L17:
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        movl    %eax, -68(%rbp)
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    4(%rax), %eax
        movl    %eax, -72(%rbp)
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    %rax, %rdi
        call    free
        movl    $0, -84(%rbp)
        leaq    -84(%rbp), %r8
        movl    -72(%rbp), %edi
        movl    -68(%rbp), %ecx
        movq    -120(%rbp), %rdx
        movl    -108(%rbp), %esi
        movq    -56(%rbp), %rax
        movq    %r8, %r9
        movl    %edi, %r8d
        movq    %rax, %rdi
        call    func_1
        movq    %rax, -80(%rbp)
        movl    $0, -48(%rbp)
        jmp     .L15
.L16:
        movl    -68(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -72(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -48(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rcx
        movq    -80(%rbp), %rax
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,8), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    -48(%rbp), %ecx
        movslq  %ecx, %rcx
        leaq    0(,%rcx,8), %rsi
        movq    -80(%rbp), %rcx
        addq    %rsi, %rcx
        movq    (%rcx), %rcx
        addq    $4, %rcx
        movl    (%rcx), %ecx
        movslq  %ecx, %rcx
        salq    $2, %rcx
        addq    %rcx, %rax
        addl    $1, %edx
        movl    %edx, (%rax)
        movl    -40(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -40(%rbp)
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        leaq    (%rdx,%rax), %rbx
        movl    $8, %edi
        call    malloc
        movq    %rax, (%rbx)
        movl    -48(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -80(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rdx
        movl    -40(%rbp), %eax
        cltq
        salq    $3, %rax
        leaq    -8(%rax), %rcx
        movq    -64(%rbp), %rax
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    (%rdx), %edx
        movl    %edx, (%rax)
        movl    -48(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -80(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -40(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        leaq    -8(%rdx), %rcx
        movq    -64(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        addq    $4, %rdx
        movl    4(%rax), %eax
        movl    %eax, (%rdx)
        addl    $1, -48(%rbp)
.L15:
        movl    -84(%rbp), %eax
        cmpl    %eax, -48(%rbp)
        jl      .L16
        addl    $1, -44(%rbp)
.L14:
        movl    -44(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jl      .L17
        movq    -24(%rbp), %rax
        movq    %rax, %rdi
        call    free
        movq    -64(%rbp), %rax
        movq    %rax, -24(%rbp)
        movl    -40(%rbp), %eax
        movl    %eax, -28(%rbp)
.L13:
        cmpl    $0, -28(%rbp)
        jg      .L18
        movq    -56(%rbp), %rax
        addq    $136, %rsp
        popq    %rbx
        popq    %rbp
        ret
