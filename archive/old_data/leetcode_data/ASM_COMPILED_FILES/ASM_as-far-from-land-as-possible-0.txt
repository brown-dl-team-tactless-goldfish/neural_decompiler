func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -8(%rbp)
        movl    %esi, -12(%rbp)
        movl    %edx, -16(%rbp)
        movl    %ecx, -20(%rbp)
        movl    %r8d, -24(%rbp)
        movq    %r9, -32(%rbp)
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -8(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L2
        movq    -32(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %edx
        movq    -32(%rbp), %rax
        movl    %edx, (%rax)
.L2:
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -8(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $1, %eax
        jne     .L3
        movl    $1, -24(%rbp)
        jmp     .L4
.L3:
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -8(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        je      .L4
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -8(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -24(%rbp)
        jge     .L14
.L4:
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -8(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rax, %rdx
        movl    -24(%rbp), %eax
        movl    %eax, (%rdx)
        cmpl    $0, -16(%rbp)
        jle     .L6
        cmpl    $1, -24(%rbp)
        jne     .L7
        movl    -16(%rbp), %eax
        cltq
        salq    $3, %rax
        leaq    -8(%rax), %rdx
        movq    -8(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $1, %eax
        je      .L6
.L7:
        movl    -24(%rbp), %eax
        leal    1(%rax), %r8d
        movl    -16(%rbp), %eax
        leal    -1(%rax), %edi
        movq    -32(%rbp), %rcx
        movl    -20(%rbp), %edx
        movl    -12(%rbp), %esi
        movq    -8(%rbp), %rax
        movq    %rcx, %r9
        movl    %edx, %ecx
        movl    %edi, %edx
        movq    %rax, %rdi
        call    func_1
.L6:
        movl    -12(%rbp), %eax
        subl    $1, %eax
        cmpl    %eax, -16(%rbp)
        jge     .L8
        cmpl    $1, -24(%rbp)
        jne     .L9
        movl    -16(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,8), %rdx
        movq    -8(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $1, %eax
        je      .L8
.L9:
        movl    -24(%rbp), %eax
        leal    1(%rax), %r8d
        movl    -16(%rbp), %eax
        leal    1(%rax), %edi
        movq    -32(%rbp), %rcx
        movl    -20(%rbp), %edx
        movl    -12(%rbp), %esi
        movq    -8(%rbp), %rax
        movq    %rcx, %r9
        movl    %edx, %ecx
        movl    %edi, %edx
        movq    %rax, %rdi
        call    func_1
.L8:
        cmpl    $0, -20(%rbp)
        jle     .L10
        cmpl    $1, -24(%rbp)
        jne     .L11
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -8(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        subq    $4, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $1, %eax
        je      .L10
.L11:
        movl    -24(%rbp), %eax
        leal    1(%rax), %r8d
        movl    -20(%rbp), %eax
        leal    -1(%rax), %ecx
        movq    -32(%rbp), %rdi
        movl    -16(%rbp), %edx
        movl    -12(%rbp), %esi
        movq    -8(%rbp), %rax
        movq    %rdi, %r9
        movq    %rax, %rdi
        call    func_1
.L10:
        movl    -12(%rbp), %eax
        subl    $1, %eax
        cmpl    %eax, -20(%rbp)
        jge     .L15
        cmpl    $1, -24(%rbp)
        jne     .L13
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -8(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        addq    $1, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $1, %eax
        je      .L15
.L13:
        movl    -24(%rbp), %eax
        leal    1(%rax), %r8d
        movl    -20(%rbp), %eax
        leal    1(%rax), %ecx
        movq    -32(%rbp), %rdi
        movl    -16(%rbp), %edx
        movl    -12(%rbp), %esi
        movq    -8(%rbp), %rax
        movq    %rdi, %r9
        movq    %rax, %rdi
        call    func_1
        nop
        jmp     .L15
.L14:
        nop
        jmp     .L1
.L15:
        nop
.L1:
        leave
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $64, %rsp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movq    %rdx, -56(%rbp)
        movl    $0, -24(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L17
.L22:
        movl    $0, -8(%rbp)
        jmp     .L18
.L21:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -8(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L19
        leaq    -24(%rbp), %rdi
        movl    -8(%rbp), %ecx
        movl    -4(%rbp), %edx
        movl    -44(%rbp), %esi
        movq    -40(%rbp), %rax
        movq    %rdi, %r9
        movl    $101, %r8d
        movq    %rax, %rdi
        call    func_1
        jmp     .L20
.L19:
        addl    $1, -8(%rbp)
.L18:
        movl    -8(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L21
.L20:
        addl    $1, -4(%rbp)
.L17:
        movl    -4(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L22
        movl    -44(%rbp), %eax
        imull   -44(%rbp), %eax
        movl    %eax, %edx
        movl    -24(%rbp), %eax
        cmpl    %eax, %edx
        je      .L23
        movl    -24(%rbp), %eax
        testl   %eax, %eax
        jne     .L24
.L23:
        movl    $-1, %eax
        jmp     .L31
.L24:
        movl    $0, -12(%rbp)
        movl    $0, -16(%rbp)
        jmp     .L26
.L30:
        movl    $0, -20(%rbp)
        jmp     .L27
.L29:
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -12(%rbp)
        jge     .L28
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    %eax, -12(%rbp)
.L28:
        addl    $1, -20(%rbp)
.L27:
        movl    -20(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L29
        addl    $1, -16(%rbp)
.L26:
        movl    -16(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L30
        movl    -12(%rbp), %eax
        subl    $1, %eax
.L31:
        leave
        ret
