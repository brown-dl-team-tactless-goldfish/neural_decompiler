func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -8(%rbp)
        movq    %rsi, -16(%rbp)
        movq    -8(%rbp), %rax
        movl    (%rax), %edx
        movq    -16(%rbp), %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        setg    %al
        movzbl  %al, %eax
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $176, %rsp
        movq    %rdi, -168(%rbp)
        movl    %esi, -172(%rbp)
        movl    %edx, -176(%rbp)
        movl    -172(%rbp), %eax
        movslq  %eax, %rsi
        movq    -168(%rbp), %rax
        movl    $func_1, %ecx
        movl    $4, %edx
        movq    %rax, %rdi
        call    qsort
        movl    $0, -4(%rbp)
        movl    $0, -24(%rbp)
        movq    $0, -16(%rbp)
        movq    -168(%rbp), %rax
        movl    (%rax), %eax
        cmpl    $1, %eax
        je      .L4
        movq    -168(%rbp), %rax
        movl    (%rax), %eax
        cmpl    %eax, -176(%rbp)
        jle     .L5
        movq    -168(%rbp), %rax
        movl    (%rax), %eax
        subl    $1, %eax
        cltq
        movq    %rax, -32(%rbp)
        movq    -32(%rbp), %rax
        addq    $1, %rax
        imulq   -32(%rbp), %rax
        movq    %rax, %rdx
        shrq    $63, %rdx
        addq    %rdx, %rax
        sarq    %rax
        movq    %rax, -16(%rbp)
        movq    -32(%rbp), %rax
        movl    %eax, %edx
        movl    -4(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, -4(%rbp)
        jmp     .L4
.L5:
        movq    -168(%rbp), %rax
        movl    (%rax), %eax
        cmpl    %eax, -176(%rbp)
        jne     .L6
        movl    -176(%rbp), %eax
        subl    $1, %eax
        cltq
        movq    %rax, -40(%rbp)
        movq    -40(%rbp), %rax
        addq    $1, %rax
        imulq   -40(%rbp), %rax
        movq    %rax, %rdx
        shrq    $63, %rdx
        addq    %rdx, %rax
        sarq    %rax
        movq    %rax, -16(%rbp)
        movq    -40(%rbp), %rax
        movl    %eax, %edx
        movl    -4(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, -4(%rbp)
        jmp     .L4
.L6:
        movl    -176(%rbp), %eax
        cltq
        movq    %rax, -48(%rbp)
        movq    -48(%rbp), %rax
        addq    $1, %rax
        imulq   -48(%rbp), %rax
        movq    %rax, %rdx
        shrq    $63, %rdx
        addq    %rdx, %rax
        sarq    %rax
        movq    %rax, -16(%rbp)
        movq    -16(%rbp), %rax
        jmp     .L7
.L4:
        movl    $0, -20(%rbp)
        jmp     .L8
.L11:
        movl    -20(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rdx
        movq    -168(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -168(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -52(%rbp)
        cmpl    $1, -52(%rbp)
        jle     .L9
        movl    -52(%rbp), %eax
        leal    -1(%rax), %edx
        movl    -4(%rbp), %eax
        addl    %edx, %eax
        cmpl    %eax, -176(%rbp)
        jle     .L10
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -168(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        movq    %rax, -64(%rbp)
        movl    -20(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rdx
        movq    -168(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        subl    $1, %eax
        cltq
        movq    %rax, -72(%rbp)
        movq    -64(%rbp), %rax
        addq    $1, %rax
        imulq   -64(%rbp), %rax
        movq    %rax, %rdx
        shrq    $63, %rdx
        addq    %rdx, %rax
        sarq    %rax
        movq    %rax, -80(%rbp)
        movq    -72(%rbp), %rax
        addq    $1, %rax
        imulq   -72(%rbp), %rax
        movq    %rax, %rdx
        shrq    $63, %rdx
        addq    %rdx, %rax
        sarq    %rax
        movq    %rax, -88(%rbp)
        movq    -88(%rbp), %rax
        subq    -80(%rbp), %rax
        addq    %rax, -16(%rbp)
        movl    -52(%rbp), %eax
        subl    $1, %eax
        addl    %eax, -4(%rbp)
        jmp     .L9
.L10:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -168(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        movq    %rax, -96(%rbp)
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -168(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -176(%rbp), %eax
        subl    -4(%rbp), %eax
        addl    %edx, %eax
        cltq
        movq    %rax, -104(%rbp)
        movq    -96(%rbp), %rax
        addq    $1, %rax
        imulq   -96(%rbp), %rax
        movq    %rax, %rdx
        shrq    $63, %rdx
        addq    %rdx, %rax
        sarq    %rax
        movq    %rax, -112(%rbp)
        movq    -104(%rbp), %rax
        addq    $1, %rax
        imulq   -104(%rbp), %rax
        movq    %rax, %rdx
        shrq    $63, %rdx
        addq    %rdx, %rax
        sarq    %rax
        movq    %rax, -120(%rbp)
        movq    -120(%rbp), %rax
        subq    -112(%rbp), %rax
        addq    %rax, -16(%rbp)
        movq    -16(%rbp), %rax
        jmp     .L7
.L9:
        addl    $1, -20(%rbp)
.L8:
        movl    -172(%rbp), %eax
        subl    $1, %eax
        cmpl    %eax, -20(%rbp)
        jl      .L11
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -168(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        movq    %rax, -128(%rbp)
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -168(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -176(%rbp), %eax
        subl    -4(%rbp), %eax
        addl    %edx, %eax
        cltq
        movq    %rax, -136(%rbp)
        movq    -128(%rbp), %rax
        addq    $1, %rax
        imulq   -128(%rbp), %rax
        movq    %rax, %rdx
        shrq    $63, %rdx
        addq    %rdx, %rax
        sarq    %rax
        movq    %rax, -144(%rbp)
        movq    -136(%rbp), %rax
        addq    $1, %rax
        imulq   -136(%rbp), %rax
        movq    %rax, %rdx
        shrq    $63, %rdx
        addq    %rdx, %rax
        sarq    %rax
        movq    %rax, -152(%rbp)
        movq    -152(%rbp), %rax
        subq    -144(%rbp), %rax
        addq    %rax, -16(%rbp)
        movq    -16(%rbp), %rax
.L7:
        leave
        ret
