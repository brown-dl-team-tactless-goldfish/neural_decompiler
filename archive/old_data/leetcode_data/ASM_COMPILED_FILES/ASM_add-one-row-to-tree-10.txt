func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    %edx, -32(%rbp)
        movl    %ecx, -36(%rbp)
        movq    %r8, -48(%rbp)
        movl    %r9d, -40(%rbp)
        addl    $1, -36(%rbp)
        movl    -32(%rbp), %eax
        cmpl    -36(%rbp), %eax
        jne     .L2
        movl    $24, %edi
        call    malloc
        movq    %rax, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    -28(%rbp), %edx
        movl    %edx, (%rax)
        movq    -8(%rbp), %rax
        movq    $0, 8(%rax)
        movq    -8(%rbp), %rax
        movq    $0, 16(%rax)
        cmpl    $0, -40(%rbp)
        je      .L3
        movq    -48(%rbp), %rax
        movq    -8(%rbp), %rdx
        movq    %rdx, 16(%rax)
        movq    -8(%rbp), %rax
        movq    -24(%rbp), %rdx
        movq    %rdx, 16(%rax)
        jmp     .L1
.L3:
        movq    -48(%rbp), %rax
        movq    -8(%rbp), %rdx
        movq    %rdx, 8(%rax)
        movq    -8(%rbp), %rax
        movq    -24(%rbp), %rdx
        movq    %rdx, 8(%rax)
        jmp     .L1
.L2:
        cmpq    $0, -24(%rbp)
        je      .L7
        movq    -24(%rbp), %rax
        movq    %rax, -48(%rbp)
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    -24(%rbp), %rdi
        movl    -36(%rbp), %ecx
        movl    -32(%rbp), %edx
        movl    -28(%rbp), %esi
        movl    $0, %r9d
        movq    %rdi, %r8
        movq    %rax, %rdi
        call    func_2
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        movq    -24(%rbp), %rdi
        movl    -36(%rbp), %ecx
        movl    -32(%rbp), %edx
        movl    -28(%rbp), %esi
        movl    $1, %r9d
        movq    %rdi, %r8
        movq    %rax, %rdi
        call    func_2
        jmp     .L1
.L7:
        nop
.L1:
        leave
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    %edx, -32(%rbp)
        movl    $0, -4(%rbp)
        cmpl    $1, -32(%rbp)
        jne     .L9
        movl    $24, %edi
        call    malloc
        movq    %rax, -16(%rbp)
        movq    -16(%rbp), %rax
        movl    -28(%rbp), %edx
        movl    %edx, (%rax)
        movq    -16(%rbp), %rax
        movq    -24(%rbp), %rdx
        movq    %rdx, 8(%rax)
        movq    -16(%rbp), %rax
        movq    $0, 16(%rax)
        movq    -16(%rbp), %rax
        jmp     .L10
.L9:
        movl    -4(%rbp), %ecx
        movl    -32(%rbp), %edx
        movl    -28(%rbp), %esi
        movq    -24(%rbp), %rax
        movl    $0, %r9d
        movl    $0, %r8d
        movq    %rax, %rdi
        call    func_2
        movq    -24(%rbp), %rax
.L10:
        leave
        ret
