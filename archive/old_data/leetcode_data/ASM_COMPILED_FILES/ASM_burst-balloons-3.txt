func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $40, %rsp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movl    -44(%rbp), %eax
        cltq
        salq    $3, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, var_2(%rip)
        movl    $0, -20(%rbp)
        jmp     .L2
.L3:
        movl    -44(%rbp), %eax
        cltq
        movq    var_2(%rip), %rdx
        movl    -20(%rbp), %ecx
        movslq  %ecx, %rcx
        salq    $3, %rcx
        leaq    (%rdx,%rcx), %rbx
        movl    $4, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, (%rbx)
        addl    $1, -20(%rbp)
.L2:
        movl    -20(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L3
        movl    -44(%rbp), %eax
        leal    -1(%rax), %edx
        movl    -44(%rbp), %esi
        movq    -40(%rbp), %rax
        movl    %edx, %ecx
        movl    $0, %edx
        movq    %rax, %rdi
        call    func_2
        addq    $40, %rsp
        popq    %rbx
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $56, %rsp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movl    %edx, -48(%rbp)
        movl    %ecx, -52(%rbp)
        movl    -48(%rbp), %eax
        cmpl    -52(%rbp), %eax
        jg      .L6
        cmpl    $0, -48(%rbp)
        js      .L6
        movl    -52(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L7
.L6:
        movl    $0, %eax
        jmp     .L8
.L7:
        movq    var_2(%rip), %rax
        movl    -48(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -52(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jle     .L9
        movq    var_2(%rip), %rax
        movl    -48(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -52(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        jmp     .L8
.L9:
        movl    $1, -20(%rbp)
        cmpl    $0, -48(%rbp)
        jle     .L10
        movl    -48(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    -20(%rbp), %edx
        imull   %edx, %eax
        movl    %eax, -20(%rbp)
.L10:
        movl    -44(%rbp), %eax
        subl    $1, %eax
        cmpl    %eax, -52(%rbp)
        jge     .L11
        movl    -52(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    -20(%rbp), %edx
        imull   %edx, %eax
        movl    %eax, -20(%rbp)
.L11:
        movl    -48(%rbp), %eax
        cmpl    -52(%rbp), %eax
        jne     .L12
        movl    -48(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movq    var_2(%rip), %rdx
        movl    -48(%rbp), %ecx
        movslq  %ecx, %rcx
        salq    $3, %rcx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        movl    -52(%rbp), %ecx
        movslq  %ecx, %rcx
        salq    $2, %rcx
        addq    %rcx, %rdx
        imull   -20(%rbp), %eax
        movl    %eax, (%rdx)
        movq    var_2(%rip), %rax
        movl    -48(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -52(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        jmp     .L8
.L12:
        movl    $0, -24(%rbp)
        movl    -48(%rbp), %eax
        movl    %eax, -28(%rbp)
        jmp     .L13
.L15:
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        imull   -20(%rbp), %eax
        movl    %eax, %ebx
        movl    -28(%rbp), %eax
        leal    -1(%rax), %ecx
        movl    -48(%rbp), %edx
        movl    -44(%rbp), %esi
        movq    -40(%rbp), %rax
        movq    %rax, %rdi
        call    func_2
        addl    %eax, %ebx
        movl    -28(%rbp), %eax
        leal    1(%rax), %edi
        movl    -52(%rbp), %edx
        movl    -44(%rbp), %esi
        movq    -40(%rbp), %rax
        movl    %edx, %ecx
        movl    %edi, %edx
        movq    %rax, %rdi
        call    func_2
        addl    %ebx, %eax
        movl    %eax, -32(%rbp)
        movl    -32(%rbp), %eax
        cmpl    -24(%rbp), %eax
        jle     .L14
        movl    -32(%rbp), %eax
        movl    %eax, -24(%rbp)
.L14:
        addl    $1, -28(%rbp)
.L13:
        movl    -28(%rbp), %eax
        cmpl    -52(%rbp), %eax
        jle     .L15
        movq    var_2(%rip), %rax
        movl    -48(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -52(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rax, %rdx
        movl    -24(%rbp), %eax
        movl    %eax, (%rdx)
        movq    var_2(%rip), %rax
        movl    -48(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -52(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
.L8:
        addq    $56, %rsp
        popq    %rbx
        popq    %rbp
        ret
