func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -8(%rbp)
        movq    %rsi, -16(%rbp)
        movq    -8(%rbp), %rax
        movl    (%rax), %edx
        movq    -16(%rbp), %rax
        movl    (%rax), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        popq    %rbp
        ret
func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -8(%rbp)
        movq    -8(%rbp), %rax
        cqto
        movq    %rdx, %rax
        xorq    -8(%rbp), %rax
        subq    %rdx, %rax
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $24, %rsp
        movq    %rdi, -16(%rbp)
        movq    %rsi, -24(%rbp)
        movq    %rdx, -32(%rbp)
        movq    -16(%rbp), %rax
        subq    -24(%rbp), %rax
        movq    %rax, %rdi
        call    func_3
        movq    %rax, %rbx
        movq    -16(%rbp), %rax
        subq    -32(%rbp), %rax
        movq    %rax, %rdi
        call    func_3
        cmpq    %rax, %rbx
        jge     .L6
        movl    $1, %eax
        jmp     .L7
.L6:
        movl    $0, %eax
.L7:
        addq    $24, %rsp
        popq    %rbx
        popq    %rbp
        ret
func_5:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movl    %edx, -48(%rbp)
        movl    $2147483647, -16(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L9
.L19:
        cmpl    $0, -4(%rbp)
        jle     .L10
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -4(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L20
.L10:
        movl    -4(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -8(%rbp)
        movl    -44(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -12(%rbp)
        jmp     .L12
.L18:
        movl    -4(%rbp), %eax
        addl    $1, %eax
        cmpl    %eax, -8(%rbp)
        jle     .L13
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -8(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jne     .L13
        addl    $1, -8(%rbp)
        jmp     .L12
.L13:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %edx, %eax
        movl    %eax, -20(%rbp)
        movl    -16(%rbp), %eax
        movslq  %eax, %rdx
        movl    -20(%rbp), %eax
        movslq  %eax, %rcx
        movl    -48(%rbp), %eax
        cltq
        movq    %rcx, %rsi
        movq    %rax, %rdi
        call    func_1
        testb   %al, %al
        je      .L14
        movl    -20(%rbp), %eax
        cmpl    -48(%rbp), %eax
        jne     .L15
        movl    -20(%rbp), %eax
        jmp     .L16
.L15:
        movl    -20(%rbp), %eax
        movl    %eax, -16(%rbp)
.L14:
        movl    -20(%rbp), %eax
        cmpl    -48(%rbp), %eax
        jle     .L17
        subl    $1, -12(%rbp)
        jmp     .L12
.L17:
        addl    $1, -8(%rbp)
.L12:
        movl    -8(%rbp), %eax
        cmpl    -12(%rbp), %eax
        jl      .L18
        jmp     .L11
.L20:
        nop
.L11:
        addl    $1, -4(%rbp)
.L9:
        movl    -4(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L19
        movl    -16(%rbp), %eax
.L16:
        leave
        ret
func_4:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $16, %rsp
        movq    %rdi, -8(%rbp)
        movl    %esi, -12(%rbp)
        movl    %edx, -16(%rbp)
        movl    -12(%rbp), %eax
        movslq  %eax, %rsi
        movq    -8(%rbp), %rax
        movl    $func_2, %ecx
        movl    $4, %edx
        movq    %rax, %rdi
        call    qsort
        movl    -16(%rbp), %edx
        movl    -12(%rbp), %ecx
        movq    -8(%rbp), %rax
        movl    %ecx, %esi
        movq    %rax, %rdi
        call    func_5
        leave
        ret
