func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $24, %rsp
        movq    %rdi, -24(%rbp)
        cmpq    $0, -24(%rbp)
        jne     .L2
        movl    $0, %eax
        jmp     .L3
.L2:
        movq    -24(%rbp), %rax
        movl    (%rax), %ebx
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, %rdi
        call    func_1
        addl    %eax, %ebx
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, %rdi
        call    func_1
        addl    %ebx, %eax
.L3:
        addq    $24, %rsp
        popq    %rbx
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $24, %rsp
        movq    %rdi, -24(%rbp)
        cmpq    $0, -24(%rbp)
        jne     .L5
        movl    $0, %eax
        jmp     .L6
.L5:
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, %rdi
        call    func_1
        movl    %eax, %ebx
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, %rdi
        call    func_1
        movl    %ebx, %edx
        subl    %eax, %edx
        movl    %edx, %eax
        sarl    $31, %eax
        xorl    %eax, %edx
        movl    %edx, %ebx
        subl    %eax, %ebx
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, %rdi
        call    func_2
        addl    %eax, %ebx
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, %rdi
        call    func_2
        addl    %ebx, %eax
.L6:
        addq    $24, %rsp
        popq    %rbx
        popq    %rbp
        ret
