func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movq    %rsi, -32(%rbp)
        movq    -24(%rbp), %rax
        movq    (%rax), %rax
        movq    %rax, -8(%rbp)
        movq    -32(%rbp), %rax
        movq    (%rax), %rax
        movq    %rax, -16(%rbp)
        movq    -8(%rbp), %rax
        movl    (%rax), %edx
        movq    -16(%rbp), %rax
        movl    (%rax), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    %edx, -32(%rbp)
        movl    %ecx, -36(%rbp)
        movl    $0, -4(%rbp)
        movl    -28(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -8(%rbp)
        jmp     .L4
.L9:
        movl    -8(%rbp), %eax
        subl    -4(%rbp), %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        movl    %eax, %edx
        movl    -4(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, -12(%rbp)
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        cmpl    %eax, -32(%rbp)
        jne     .L5
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    (%rax), %eax
        cmpl    %eax, -36(%rbp)
        jg      .L6
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    (%rax), %eax
        movl    -12(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -24(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        addq    $4, %rdx
        subl    -36(%rbp), %eax
        movl    %eax, (%rdx)
        movl    -12(%rbp), %eax
        jmp     .L7
.L6:
        movl    $-1, %eax
        jmp     .L7
.L5:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        cmpl    %eax, -32(%rbp)
        jge     .L8
        movl    -12(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -8(%rbp)
        jmp     .L4
.L8:
        movl    -12(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -4(%rbp)
.L4:
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jl      .L9
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        cmpl    %eax, -32(%rbp)
        jne     .L10
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    (%rax), %eax
        cmpl    %eax, -36(%rbp)
        jg      .L10
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    (%rax), %eax
        movl    -4(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -24(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        addq    $4, %rdx
        subl    -36(%rbp), %eax
        movl    %eax, (%rdx)
        movl    -4(%rbp), %eax
        jmp     .L7
.L10:
        movl    $-1, %eax
.L7:
        popq    %rbp
        ret
func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $88, %rsp
        movq    %rdi, -88(%rbp)
        movl    %esi, -92(%rbp)
        movl    -92(%rbp), %eax
        cltd
        shrl    $31, %edx
        addl    %edx, %eax
        andl    $1, %eax
        subl    %edx, %eax
        cmpl    $1, %eax
        jne     .L12
        movl    $0, %eax
        jmp     .L13
.L12:
        movl    $4, %esi
        movl    $200001, %edi
        call    calloc
        movq    %rax, -48(%rbp)
        movl    $100000, -52(%rbp)
        movl    -92(%rbp), %eax
        cltq
        salq    $3, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -64(%rbp)
        movl    $0, -20(%rbp)
        movl    $0, -24(%rbp)
        jmp     .L14
.L16:
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -88(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -52(%rbp), %eax
        addl    %edx, %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        addl    $1, %edx
        movl    %edx, (%rax)
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -88(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -52(%rbp), %eax
        addl    %edx, %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $1, %eax
        jne     .L15
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        leaq    (%rdx,%rax), %rbx
        movl    $8, %edi
        call    malloc
        movq    %rax, (%rbx)
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -88(%rbp), %rax
        addq    %rax, %rdx
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rcx
        movq    -64(%rbp), %rax
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    (%rdx), %edx
        movl    %edx, (%rax)
        addl    $1, -20(%rbp)
.L15:
        addl    $1, -24(%rbp)
.L14:
        movl    -24(%rbp), %eax
        cmpl    -92(%rbp), %eax
        jl      .L16
        movl    $0, -28(%rbp)
        jmp     .L17
.L18:
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %edx
        movl    -52(%rbp), %eax
        addl    %edx, %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movl    -28(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -64(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        addq    $4, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        addl    $1, -28(%rbp)
.L17:
        movl    -28(%rbp), %eax
        cmpl    -20(%rbp), %eax
        jl      .L18
        movq    -48(%rbp), %rax
        movq    %rax, %rdi
        call    free
        movl    -20(%rbp), %eax
        movslq  %eax, %rsi
        movq    -64(%rbp), %rax
        movl    $func_1, %ecx
        movl    $8, %edx
        movq    %rax, %rdi
        call    qsort
        movl    $0, -32(%rbp)
        movl    -20(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -68(%rbp)
        movl    $0, -36(%rbp)
        jmp     .L19
.L29:
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L20
        movl    -32(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -40(%rbp)
        jmp     .L21
.L23:
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jle     .L22
        movl    -40(%rbp), %eax
        movl    %eax, -32(%rbp)
        jmp     .L20
.L22:
        addl    $1, -40(%rbp)
.L21:
        movl    -40(%rbp), %eax
        cmpl    -20(%rbp), %eax
        jl      .L23
.L20:
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L24
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    (%rax), %eax
        cltd
        shrl    $31, %edx
        addl    %edx, %eax
        andl    $1, %eax
        subl    %edx, %eax
        cmpl    $1, %eax
        jne     .L25
        movl    $0, %eax
        jmp     .L13
.L25:
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    (%rax), %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        addl    %eax, -36(%rbp)
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    $0, (%rax)
        addl    $1, -32(%rbp)
        jmp     .L19
.L24:
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jns     .L26
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        negl    %eax
        andl    $1, %eax
        testl   %eax, %eax
        jne     .L27
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    (%rax), %edx
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rcx
        movq    -64(%rbp), %rax
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        movl    %eax, %ecx
        shrl    $31, %ecx
        addl    %ecx, %eax
        sarl    %eax
        movl    %eax, %edi
        movl    -20(%rbp), %esi
        movq    -64(%rbp), %rax
        movl    %edx, %ecx
        movl    %edi, %edx
        movq    %rax, %rdi
        call    func_2
        cmpl    $-1, %eax
        jne     .L28
.L27:
        movl    $0, %eax
        jmp     .L13
.L26:
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    (%rax), %edx
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rcx
        movq    -64(%rbp), %rax
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        leal    (%rax,%rax), %edi
        movl    -20(%rbp), %esi
        movq    -64(%rbp), %rax
        movl    %edx, %ecx
        movl    %edi, %edx
        movq    %rax, %rdi
        call    func_2
        cmpl    $-1, %eax
        jne     .L28
        movl    $0, %eax
        jmp     .L13
.L28:
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    (%rax), %eax
        addl    %eax, -36(%rbp)
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    $0, (%rax)
        addl    $1, -32(%rbp)
.L19:
        movl    -92(%rbp), %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        cmpl    %eax, -36(%rbp)
        jl      .L29
        movl    $1, %eax
.L13:
        addq    $88, %rsp
        popq    %rbx
        popq    %rbp
        ret
