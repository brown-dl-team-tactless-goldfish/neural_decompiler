.LC0:
        .string "Push"
.LC1:
        .string "Pop"
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $64, %rsp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movl    %edx, -48(%rbp)
        movq    %rcx, -56(%rbp)
        movl    -48(%rbp), %eax
        addl    %eax, %eax
        subl    -44(%rbp), %eax
        movl    %eax, -16(%rbp)
        movl    $1, -4(%rbp)
        movl    $0, -8(%rbp)
        movl    $0, -12(%rbp)
        movl    -16(%rbp), %eax
        cltq
        movl    $8, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, -24(%rbp)
        jmp     .L2
.L5:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    $.LC0, (%rax)
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -4(%rbp)
        jne     .L3
        addl    $1, -4(%rbp)
        addl    $1, -8(%rbp)
        addl    $1, -12(%rbp)
        jmp     .L2
.L3:
        movl    -8(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    $.LC1, (%rax)
        addl    $1, -4(%rbp)
        addl    $2, -8(%rbp)
.L2:
        movl    -4(%rbp), %eax
        cmpl    -48(%rbp), %eax
        jg      .L4
        movl    -12(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L5
.L4:
        movq    -56(%rbp), %rax
        movl    -8(%rbp), %edx
        movl    %edx, (%rax)
        movq    -24(%rbp), %rax
        leave
        ret
