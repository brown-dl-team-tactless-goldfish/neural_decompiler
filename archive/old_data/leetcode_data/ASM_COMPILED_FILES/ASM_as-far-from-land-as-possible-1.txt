func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    %edx, -32(%rbp)
        movl    %ecx, -36(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L2
.L5:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        cmpl    %eax, -32(%rbp)
        jne     .L3
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    (%rax), %eax
        cmpl    %eax, -36(%rbp)
        jne     .L3
        movl    $1, %eax
        jmp     .L4
.L3:
        addl    $1, -4(%rbp)
.L2:
        movl    -4(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jl      .L5
        movl    $0, %eax
.L4:
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $88, %rsp
        movq    %rdi, -72(%rbp)
        movl    %esi, -76(%rbp)
        movq    %rdx, -88(%rbp)
        cmpl    $1, -76(%rbp)
        jne     .L7
        movl    $-1, %eax
        jmp     .L8
.L7:
        movl    $0, -20(%rbp)
        movl    $0, -24(%rbp)
        jmp     .L9
.L13:
        movl    $0, -28(%rbp)
        jmp     .L10
.L12:
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -28(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $1, %eax
        jne     .L11
        addl    $1, -20(%rbp)
.L11:
        addl    $1, -28(%rbp)
.L10:
        movl    -28(%rbp), %eax
        cmpl    -76(%rbp), %eax
        jl      .L12
        addl    $1, -24(%rbp)
.L9:
        movl    -24(%rbp), %eax
        cmpl    -76(%rbp), %eax
        jl      .L13
        movl    -76(%rbp), %eax
        imull   -76(%rbp), %eax
        cmpl    %eax, -20(%rbp)
        je      .L14
        cmpl    $0, -20(%rbp)
        jne     .L15
.L14:
        movl    $-1, %eax
        jmp     .L8
.L15:
        movl    -76(%rbp), %eax
        movslq  %eax, %rdx
        movl    -76(%rbp), %eax
        cltq
        imulq   %rdx, %rax
        salq    $3, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -64(%rbp)
        movl    $0, -32(%rbp)
        jmp     .L16
.L17:
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        leaq    (%rdx,%rax), %rbx
        movl    $8, %edi
        call    malloc
        movq    %rax, (%rbx)
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    $0, (%rax)
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    $0, (%rax)
        addl    $1, -32(%rbp)
.L16:
        movl    -76(%rbp), %eax
        imull   -76(%rbp), %eax
        cmpl    %eax, -32(%rbp)
        jl      .L17
        movl    $0, -36(%rbp)
        movl    $0, -40(%rbp)
        jmp     .L18
.L29:
        movl    $0, -44(%rbp)
        jmp     .L19
.L26:
        movl    $0, -48(%rbp)
        jmp     .L20
.L25:
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -48(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $1, %eax
        jne     .L21
        movl    -44(%rbp), %eax
        addl    $1, %eax
        cmpl    %eax, -76(%rbp)
        jle     .L22
        movl    -44(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,8), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -48(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L22
        movl    -44(%rbp), %eax
        leal    1(%rax), %edi
        movl    -48(%rbp), %edx
        movl    -36(%rbp), %esi
        movq    -64(%rbp), %rax
        movl    %edx, %ecx
        movl    %edi, %edx
        movq    %rax, %rdi
        call    func_2
        testl   %eax, %eax
        jne     .L22
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -44(%rbp), %edx
        addl    $1, %edx
        movl    %edx, (%rax)
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        leaq    4(%rax), %rdx
        movl    -48(%rbp), %eax
        movl    %eax, (%rdx)
        addl    $1, -36(%rbp)
.L22:
        movl    -48(%rbp), %eax
        addl    $1, %eax
        cmpl    %eax, -76(%rbp)
        jle     .L23
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -48(%rbp), %edx
        movslq  %edx, %rdx
        addq    $1, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L23
        movl    -48(%rbp), %eax
        leal    1(%rax), %ecx
        movl    -44(%rbp), %edx
        movl    -36(%rbp), %esi
        movq    -64(%rbp), %rax
        movq    %rax, %rdi
        call    func_2
        testl   %eax, %eax
        jne     .L23
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -44(%rbp), %edx
        movl    %edx, (%rax)
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    -48(%rbp), %edx
        addl    $1, %edx
        movl    %edx, (%rax)
        addl    $1, -36(%rbp)
.L23:
        cmpl    $0, -44(%rbp)
        jle     .L24
        movl    -44(%rbp), %eax
        cltq
        salq    $3, %rax
        leaq    -8(%rax), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -48(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L24
        movl    -44(%rbp), %eax
        leal    -1(%rax), %edi
        movl    -48(%rbp), %edx
        movl    -36(%rbp), %esi
        movq    -64(%rbp), %rax
        movl    %edx, %ecx
        movl    %edi, %edx
        movq    %rax, %rdi
        call    func_2
        testl   %eax, %eax
        jne     .L24
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -44(%rbp), %edx
        subl    $1, %edx
        movl    %edx, (%rax)
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        leaq    4(%rax), %rdx
        movl    -48(%rbp), %eax
        movl    %eax, (%rdx)
        addl    $1, -36(%rbp)
.L24:
        cmpl    $0, -48(%rbp)
        jle     .L21
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -48(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        subq    $4, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L21
        movl    -48(%rbp), %eax
        leal    -1(%rax), %ecx
        movl    -44(%rbp), %edx
        movl    -36(%rbp), %esi
        movq    -64(%rbp), %rax
        movq    %rax, %rdi
        call    func_2
        testl   %eax, %eax
        jne     .L21
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -44(%rbp), %edx
        movl    %edx, (%rax)
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    -48(%rbp), %edx
        subl    $1, %edx
        movl    %edx, (%rax)
        addl    $1, -36(%rbp)
.L21:
        addl    $1, -48(%rbp)
.L20:
        movl    -48(%rbp), %eax
        cmpl    -76(%rbp), %eax
        jl      .L25
        addl    $1, -44(%rbp)
.L19:
        movl    -44(%rbp), %eax
        cmpl    -76(%rbp), %eax
        jl      .L26
        movl    -36(%rbp), %eax
        addl    %eax, -20(%rbp)
        movl    $0, -52(%rbp)
        jmp     .L27
.L28:
        movl    -52(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -52(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -64(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        addq    $4, %rdx
        movl    (%rdx), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    $1, (%rax)
        movl    -52(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    $0, (%rax)
        movl    -52(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    $0, (%rax)
        addl    $1, -52(%rbp)
.L27:
        movl    -52(%rbp), %eax
        cmpl    -36(%rbp), %eax
        jl      .L28
        movl    $0, -36(%rbp)
        addl    $1, -40(%rbp)
.L18:
        movl    -76(%rbp), %eax
        imull   -76(%rbp), %eax
        cmpl    %eax, -20(%rbp)
        jl      .L29
        movl    $0, -56(%rbp)
        jmp     .L30
.L31:
        movl    -56(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    %rax, %rdi
        call    free
        addl    $1, -56(%rbp)
.L30:
        movl    -76(%rbp), %eax
        imull   -76(%rbp), %eax
        cmpl    %eax, -56(%rbp)
        jl      .L31
        movq    -64(%rbp), %rax
        movq    %rax, %rdi
        call    free
        movl    -40(%rbp), %eax
.L8:
        addq    $88, %rsp
        popq    %rbx
        popq    %rbp
        ret
