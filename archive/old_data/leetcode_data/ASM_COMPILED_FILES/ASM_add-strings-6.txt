.LC0:
        .string "cannot var_0 memory"
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $96, %rsp
        movq    %rdi, -88(%rbp)
        movq    %rsi, -96(%rbp)
        movq    -88(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -36(%rbp)
        movq    -96(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -40(%rbp)
        movb    $0, -41(%rbp)
        movq    $5101, -56(%rbp)
        movq    -56(%rbp), %rax
        addq    $2, %rax
        movl    $1, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, -64(%rbp)
        cmpq    $0, -64(%rbp)
        jne     .L2
        movl    $.LC0, %edi
        call    perror
        movl    $1, %edi
        call    exit
.L2:
        movq    -56(%rbp), %rax
        movq    %rax, -8(%rbp)
        movl    -36(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -12(%rbp)
        movl    -40(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -16(%rbp)
        movb    $48, -17(%rbp)
        jmp     .L3
.L10:
        cmpl    $0, -12(%rbp)
        js      .L4
        movl    -12(%rbp), %eax
        leal    -1(%rax), %edx
        movl    %edx, -12(%rbp)
        movslq  %eax, %rdx
        movq    -88(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        jmp     .L5
.L4:
        movl    $48, %eax
.L5:
        movb    %al, -65(%rbp)
        cmpl    $0, -16(%rbp)
        js      .L6
        movl    -16(%rbp), %eax
        leal    -1(%rax), %edx
        movl    %edx, -16(%rbp)
        movslq  %eax, %rdx
        movq    -96(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        jmp     .L7
.L6:
        movl    $48, %eax
.L7:
        movb    %al, -66(%rbp)
        movzbl  -65(%rbp), %edx
        movzbl  -66(%rbp), %eax
        addl    %eax, %edx
        movzbl  -17(%rbp), %eax
        addl    %edx, %eax
        subl    $96, %eax
        movb    %al, -18(%rbp)
        cmpb    $57, -18(%rbp)
        jle     .L8
        movb    $49, -17(%rbp)
        movzbl  -18(%rbp), %eax
        subl    $10, %eax
        movb    %al, -18(%rbp)
        jmp     .L9
.L8:
        movb    $48, -17(%rbp)
.L9:
        subq    $1, -8(%rbp)
        movq    -64(%rbp), %rdx
        movq    -8(%rbp), %rax
        addq    %rax, %rdx
        movzbl  -18(%rbp), %eax
        movb    %al, (%rdx)
.L3:
        cmpl    $0, -12(%rbp)
        jns     .L10
        cmpl    $0, -16(%rbp)
        jns     .L10
        subq    $1, -8(%rbp)
        movq    -64(%rbp), %rdx
        movq    -8(%rbp), %rax
        addq    %rdx, %rax
        movq    %rax, -32(%rbp)
        movq    -32(%rbp), %rax
        movzbl  -17(%rbp), %edx
        movb    %dl, (%rax)
        cmpb    $48, -17(%rbp)
        jne     .L11
        addq    $1, -32(%rbp)
.L11:
        movq    -32(%rbp), %rax
        leave
        ret
