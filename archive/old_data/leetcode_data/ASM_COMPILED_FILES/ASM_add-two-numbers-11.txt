func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $64, %rsp
        movq    %rdi, -56(%rbp)
        movq    %rsi, -64(%rbp)
        movq    $0, -48(%rbp)
        movq    $0, -40(%rbp)
        leaq    -48(%rbp), %rax
        movq    %rax, -8(%rbp)
        movl    $0, -12(%rbp)
        jmp     .L2
.L5:
        cmpq    $0, -56(%rbp)
        je      .L3
        movq    -56(%rbp), %rax
        movl    (%rax), %eax
        addl    %eax, -12(%rbp)
        movq    -56(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -56(%rbp)
.L3:
        cmpq    $0, -64(%rbp)
        je      .L4
        movq    -64(%rbp), %rax
        movl    (%rax), %eax
        addl    %eax, -12(%rbp)
        movq    -64(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -64(%rbp)
.L4:
        movl    $16, %edi
        call    malloc
        movq    %rax, -24(%rbp)
        movl    -12(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movq    -24(%rbp), %rax
        movl    %edx, (%rax)
        movq    -24(%rbp), %rax
        movq    $0, 8(%rax)
        movl    -12(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -12(%rbp)
        movq    -8(%rbp), %rax
        movq    -24(%rbp), %rdx
        movq    %rdx, 8(%rax)
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
.L2:
        cmpq    $0, -56(%rbp)
        jne     .L5
        cmpq    $0, -64(%rbp)
        jne     .L5
        cmpl    $0, -12(%rbp)
        jne     .L5
        movq    -40(%rbp), %rax
        leave
        ret
