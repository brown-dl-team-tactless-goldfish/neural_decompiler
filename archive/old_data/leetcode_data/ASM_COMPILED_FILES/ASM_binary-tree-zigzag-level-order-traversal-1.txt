func_4:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -8(%rbp)
        movq    %rsi, %rax
        movq    %rdx, %rcx
        movq    %rcx, %rdx
        movq    %rax, -32(%rbp)
        movq    %rdx, -24(%rbp)
        movq    -8(%rbp), %rax
        movl    48000(%rax), %eax
        leal    1(%rax), %edx
        movq    -8(%rbp), %rax
        movl    %edx, 48000(%rax)
        movq    -8(%rbp), %rax
        movl    48008(%rax), %edx
        movq    -8(%rbp), %rax
        movslq  %edx, %rdx
        salq    $4, %rdx
        leaq    (%rax,%rdx), %rcx
        movq    -32(%rbp), %rax
        movq    -24(%rbp), %rdx
        movq    %rax, (%rcx)
        movq    %rdx, 8(%rcx)
        movq    -8(%rbp), %rax
        movl    48008(%rax), %eax
        leal    1(%rax), %ecx
        movl    $91625969, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $6, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        imull   $3000, %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %eax
        movq    -8(%rbp), %rdx
        movl    %eax, 48008(%rdx)
        nop
        popq    %rbp
        ret
func_6:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movq    -24(%rbp), %rax
        movl    48000(%rax), %eax
        leal    -1(%rax), %edx
        movq    -24(%rbp), %rax
        movl    %edx, 48000(%rax)
        movq    -24(%rbp), %rax
        movl    48004(%rax), %edx
        movq    -24(%rbp), %rax
        movslq  %edx, %rdx
        salq    $4, %rdx
        addq    %rdx, %rax
        movq    8(%rax), %rdx
        movq    (%rax), %rax
        movq    %rax, -16(%rbp)
        movq    %rdx, -8(%rbp)
        movq    -24(%rbp), %rax
        movl    48004(%rax), %eax
        leal    1(%rax), %ecx
        movl    $91625969, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $6, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        imull   $3000, %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %eax
        movq    -24(%rbp), %rdx
        movl    %eax, 48004(%rdx)
        movq    -16(%rbp), %rax
        movq    -8(%rbp), %rdx
        popq    %rbp
        ret
func_7:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    48000(%rax), %eax
        testl   %eax, %eax
        sete    %al
        movzbl  %al, %eax
        popq    %rbp
        ret
func_5:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $16, %rsp
        movq    %rdi, -8(%rbp)
        movq    -8(%rbp), %rax
        movq    24(%rax), %rax
        testq   %rax, %rax
        je      .L10
        movq    -8(%rbp), %rax
        movl    16(%rax), %edx
        movq    -8(%rbp), %rax
        movl    20(%rax), %eax
        cmpl    %eax, %edx
        jl      .L9
        movq    -8(%rbp), %rax
        movl    20(%rax), %eax
        addl    $1, %eax
        leal    (%rax,%rax), %edx
        movq    -8(%rbp), %rax
        movl    %edx, 20(%rax)
        movq    -8(%rbp), %rax
        movl    20(%rax), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -8(%rbp), %rax
        movq    (%rax), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    realloc
        movq    %rax, %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, (%rax)
        movq    -8(%rbp), %rax
        movl    20(%rax), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    realloc
        movq    %rax, %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, 8(%rax)
.L9:
        movq    -8(%rbp), %rax
        movq    (%rax), %rdx
        movq    -8(%rbp), %rax
        movl    16(%rax), %eax
        cltq
        salq    $3, %rax
        addq    %rax, %rdx
        movq    -8(%rbp), %rax
        movq    24(%rax), %rax
        movq    %rax, (%rdx)
        movq    -8(%rbp), %rax
        movq    8(%rax), %rdx
        movq    -8(%rbp), %rax
        movl    16(%rax), %eax
        cltq
        salq    $2, %rax
        addq    %rax, %rdx
        movq    -8(%rbp), %rax
        movl    32(%rax), %eax
        movl    %eax, (%rdx)
        movq    -8(%rbp), %rax
        movl    16(%rax), %eax
        leal    1(%rax), %edx
        movq    -8(%rbp), %rax
        movl    %edx, 16(%rax)
        movq    -8(%rbp), %rax
        movq    $0, 24(%rax)
        movq    -8(%rbp), %rax
        movl    $0, 36(%rax)
        movq    -8(%rbp), %rax
        movl    36(%rax), %edx
        movq    -8(%rbp), %rax
        movl    %edx, 32(%rax)
        jmp     .L6
.L10:
        nop
.L6:
        leave
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $16, %rsp
        movq    %rdi, -8(%rbp)
        movl    %esi, -12(%rbp)
        movq    -8(%rbp), %rax
        movl    32(%rax), %edx
        movq    -8(%rbp), %rax
        movl    36(%rax), %eax
        cmpl    %eax, %edx
        jl      .L12
        movq    -8(%rbp), %rax
        movl    36(%rax), %eax
        addl    $1, %eax
        leal    (%rax,%rax), %edx
        movq    -8(%rbp), %rax
        movl    %edx, 36(%rax)
        movq    -8(%rbp), %rax
        movl    36(%rax), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -8(%rbp), %rax
        movq    24(%rax), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    realloc
        movq    %rax, %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, 24(%rax)
.L12:
        movq    -8(%rbp), %rax
        movq    24(%rax), %rsi
        movq    -8(%rbp), %rax
        movl    32(%rax), %eax
        leal    1(%rax), %ecx
        movq    -8(%rbp), %rdx
        movl    %ecx, 32(%rdx)
        cltq
        salq    $2, %rax
        leaq    (%rsi,%rax), %rdx
        movl    -12(%rbp), %eax
        movl    %eax, (%rdx)
        nop
        leave
        ret
func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L14
.L15:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    %eax, -8(%rbp)
        movl    -28(%rbp), %eax
        subl    -4(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    -4(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -24(%rbp), %rdx
        addq    %rcx, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        movl    -28(%rbp), %eax
        subl    -4(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movl    -8(%rbp), %eax
        movl    %eax, (%rdx)
        addl    $1, -4(%rbp)
.L14:
        movl    -28(%rbp), %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        cmpl    %eax, -4(%rbp)
        jl      .L15
        nop
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48176, %rsp
        movq    %rdi, -48152(%rbp)
        movq    %rsi, -48160(%rbp)
        movq    %rdx, -48168(%rbp)
        movl    $0, -4(%rbp)
        movq    -48152(%rbp), %rax
        movq    %rax, -48096(%rbp)
        movl    -4(%rbp), %eax
        movl    %eax, -48088(%rbp)
        leaq    -48032(%rbp), %rax
        movl    $48016, %edx
        movl    $0, %esi
        movq    %rax, %rdi
        call    memset
        leaq    -48080(%rbp), %rax
        movl    $40, %edx
        movl    $0, %esi
        movq    %rax, %rdi
        call    memset
        cmpq    $0, -48152(%rbp)
        je      .L18
        movq    -48096(%rbp), %rcx
        movq    -48088(%rbp), %rdx
        leaq    -48032(%rbp), %rax
        movq    %rcx, %rsi
        movq    %rax, %rdi
        call    func_4
        jmp     .L18
.L22:
        leaq    -48032(%rbp), %rax
        movq    %rax, %rdi
        call    func_6
        movq    %rax, -48112(%rbp)
        movq    %rdx, -48104(%rbp)
        movl    -48104(%rbp), %eax
        cmpl    %eax, -4(%rbp)
        je      .L19
        leaq    -48080(%rbp), %rax
        movq    %rax, %rdi
        call    func_5
.L19:
        movq    -48112(%rbp), %rax
        movl    (%rax), %edx
        leaq    -48080(%rbp), %rax
        movl    %edx, %esi
        movq    %rax, %rdi
        call    func_1
        movq    -48112(%rbp), %rax
        movq    8(%rax), %rax
        testq   %rax, %rax
        je      .L20
        movq    -48112(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -48128(%rbp)
        movl    -48104(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -48120(%rbp)
        movq    -48128(%rbp), %rcx
        movq    -48120(%rbp), %rdx
        leaq    -48032(%rbp), %rax
        movq    %rcx, %rsi
        movq    %rax, %rdi
        call    func_4
.L20:
        movq    -48112(%rbp), %rax
        movq    16(%rax), %rax
        testq   %rax, %rax
        je      .L21
        movq    -48112(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, -48144(%rbp)
        movl    -48104(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -48136(%rbp)
        movq    -48144(%rbp), %rcx
        movq    -48136(%rbp), %rdx
        leaq    -48032(%rbp), %rax
        movq    %rcx, %rsi
        movq    %rax, %rdi
        call    func_4
.L21:
        movl    -48104(%rbp), %eax
        movl    %eax, -4(%rbp)
.L18:
        leaq    -48032(%rbp), %rax
        movq    %rax, %rdi
        call    func_7
        testl   %eax, %eax
        je      .L22
        leaq    -48080(%rbp), %rax
        movq    %rax, %rdi
        call    func_5
        movq    -48072(%rbp), %rdx
        movq    -48168(%rbp), %rax
        movq    %rdx, (%rax)
        movl    -48064(%rbp), %edx
        movq    -48160(%rbp), %rax
        movl    %edx, (%rax)
        movl    $1, -8(%rbp)
        jmp     .L23
.L24:
        movq    -48072(%rbp), %rax
        movl    -8(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %edx
        movq    -48080(%rbp), %rax
        movl    -8(%rbp), %ecx
        movslq  %ecx, %rcx
        salq    $3, %rcx
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    %edx, %esi
        movq    %rax, %rdi
        call    func_3
        addl    $2, -8(%rbp)
.L23:
        movl    -48064(%rbp), %eax
        cmpl    %eax, -8(%rbp)
        jl      .L24
        movq    -48080(%rbp), %rax
        leave
        ret
