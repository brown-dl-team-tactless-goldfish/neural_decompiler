func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        jmp     .L2
.L8:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movzbl  (%rax), %eax
        cmpb    $67, %al
        jne     .L3
        addl    $1, -4(%rbp)
        movl    -8(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -12(%rbp)
        jmp     .L4
.L7:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        je      .L5
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movb    $0, (%rax)
        jmp     .L6
.L5:
        subl    $1, -12(%rbp)
.L4:
        cmpl    $0, -12(%rbp)
        jns     .L7
.L6:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movb    $0, (%rax)
.L3:
        addl    $1, -8(%rbp)
.L2:
        movl    -8(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jl      .L8
        movl    -4(%rbp), %eax
        leal    (%rax,%rax), %edx
        movl    -28(%rbp), %eax
        subl    %edx, %eax
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $56, %rsp
        movq    %rdi, -56(%rbp)
        movl    %esi, -60(%rbp)
        movl    -60(%rbp), %edx
        movq    -56(%rbp), %rax
        movl    %edx, %esi
        movq    %rax, %rdi
        call    func_1
        movl    %eax, -36(%rbp)
        movl    -36(%rbp), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -48(%rbp)
        movl    $0, -20(%rbp)
        jmp     .L11
.L12:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movl    $0, (%rax)
        addl    $1, -20(%rbp)
.L11:
        movl    -20(%rbp), %eax
        cmpl    -36(%rbp), %eax
        jl      .L12
        movl    $0, -24(%rbp)
        movl    $0, -28(%rbp)
        movl    $0, -32(%rbp)
        jmp     .L13
.L19:
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        je      .L21
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movzbl  (%rax), %eax
        cmpb    $68, %al
        jne     .L16
        movl    -28(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -48(%rbp), %rax
        addq    %rcx, %rax
        addl    %edx, %edx
        movl    %edx, (%rax)
        jmp     .L17
.L16:
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movzbl  (%rax), %eax
        cmpb    $43, %al
        jne     .L18
        movl    -28(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -8(%rax), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %ecx
        movl    -28(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rsi
        movq    -48(%rbp), %rax
        addq    %rsi, %rax
        addl    %ecx, %edx
        movl    %edx, (%rax)
        jmp     .L17
.L18:
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -28(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -48(%rbp), %rdx
        leaq    (%rcx,%rdx), %rbx
        movq    %rax, %rdi
        call    atoi
        movl    %eax, (%rbx)
.L17:
        movl    -28(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -28(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        addl    %eax, -24(%rbp)
        jmp     .L15
.L21:
        nop
.L15:
        addl    $1, -32(%rbp)
.L13:
        movl    -32(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jl      .L19
        movl    -24(%rbp), %eax
        addq    $56, %rsp
        popq    %rbx
        popq    %rbp
        ret
