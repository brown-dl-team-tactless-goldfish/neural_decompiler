func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movq    %rdx, -40(%rbp)
        movl    %ecx, -32(%rbp)
        movl    -28(%rbp), %eax
        andl    $1, %eax
        testl   %eax, %eax
        jne     .L2
        movl    -32(%rbp), %eax
        andl    $1, %eax
        testl   %eax, %eax
        jne     .L2
        movl    $0, %eax
        jmp     .L3
.L2:
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        movl    $0, -12(%rbp)
        jmp     .L4
.L5:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        xorl    %eax, -4(%rbp)
        addl    $1, -12(%rbp)
.L4:
        movl    -12(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jl      .L5
        movl    $0, -16(%rbp)
        jmp     .L6
.L7:
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        xorl    %eax, -8(%rbp)
        addl    $1, -16(%rbp)
.L6:
        movl    -16(%rbp), %eax
        cmpl    -32(%rbp), %eax
        jl      .L7
        movl    -28(%rbp), %eax
        cltd
        shrl    $31, %edx
        addl    %edx, %eax
        andl    $1, %eax
        subl    %edx, %eax
        imull   -8(%rbp), %eax
        movl    %eax, %ecx
        movl    -32(%rbp), %eax
        cltd
        shrl    $31, %edx
        addl    %edx, %eax
        andl    $1, %eax
        subl    %edx, %eax
        imull   -4(%rbp), %eax
        xorl    %ecx, %eax
.L3:
        popq    %rbp
        ret
