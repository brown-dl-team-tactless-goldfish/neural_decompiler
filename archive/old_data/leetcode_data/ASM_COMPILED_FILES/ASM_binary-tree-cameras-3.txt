func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        movl    $0, -4(%rbp)
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        testq   %rax, %rax
        jne     .L2
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        testq   %rax, %rax
        jne     .L2
        movq    -24(%rbp), %rax
        movl    $0, (%rax)
        movl    $0, %eax
        jmp     .L3
.L2:
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        testq   %rax, %rax
        je      .L4
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, %rdi
        call    func_1
        addl    %eax, -4(%rbp)
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L5
        movq    -24(%rbp), %rax
        movl    $2, (%rax)
.L5:
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movl    (%rax), %eax
        cmpl    $2, %eax
        jne     .L4
        movq    -24(%rbp), %rax
        movl    $1, (%rax)
.L4:
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        testq   %rax, %rax
        je      .L6
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, %rdi
        call    func_1
        addl    %eax, -4(%rbp)
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L7
        movq    -24(%rbp), %rax
        movl    $2, (%rax)
.L7:
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        cmpl    $2, %eax
        je      .L6
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        movl    (%rax), %eax
        cmpl    $2, %eax
        jne     .L6
        movq    -24(%rbp), %rax
        movl    $1, (%rax)
.L6:
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        cmpl    $2, %eax
        jne     .L8
        movl    -4(%rbp), %eax
        addl    $1, %eax
        jmp     .L3
.L8:
        movl    -4(%rbp), %eax
.L3:
        leave
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        movq    -24(%rbp), %rax
        movq    %rax, %rdi
        call    func_1
        movl    %eax, -4(%rbp)
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L10
        movq    -24(%rbp), %rax
        movl    $2, (%rax)
        movl    -4(%rbp), %eax
        addl    $1, %eax
        jmp     .L11
.L10:
        movl    -4(%rbp), %eax
.L11:
        leave
        ret
