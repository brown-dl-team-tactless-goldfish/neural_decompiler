func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movq    %rsi, -32(%rbp)
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, -4(%rbp)
        movq    -32(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, -8(%rbp)
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jge     .L2
        movl    $-1, %eax
        jmp     .L3
.L2:
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jle     .L4
        movl    $1, %eax
        jmp     .L3
.L4:
        movl    $0, %eax
.L3:
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    %edx, -32(%rbp)
        movl    $0, -4(%rbp)
        movl    -28(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -8(%rbp)
        jmp     .L6
.L8:
        movl    -8(%rbp), %eax
        subl    -4(%rbp), %eax
        sarl    %eax
        movl    %eax, %edx
        movl    -4(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, -12(%rbp)
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -32(%rbp)
        jg      .L7
        movl    -12(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -8(%rbp)
        jmp     .L6
.L7:
        movl    -12(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -4(%rbp)
.L6:
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jle     .L8
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -32(%rbp)
        jne     .L9
        movl    -4(%rbp), %eax
        jmp     .L11
.L9:
        movl    $-1, %eax
.L11:
        popq    %rbp
        ret
func_4:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    %edx, -32(%rbp)
        movl    $0, -4(%rbp)
        movl    -28(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -8(%rbp)
        jmp     .L13
.L15:
        movl    -8(%rbp), %eax
        subl    -4(%rbp), %eax
        sarl    %eax
        movl    %eax, %edx
        movl    -4(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, -12(%rbp)
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -32(%rbp)
        jl      .L14
        movl    -12(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -4(%rbp)
        jmp     .L13
.L14:
        movl    -12(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -8(%rbp)
.L13:
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jle     .L15
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -32(%rbp)
        jne     .L16
        movl    -8(%rbp), %eax
        jmp     .L18
.L16:
        movl    $-1, %eax
.L18:
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $112, %rsp
        movq    %rdi, -72(%rbp)
        movl    %esi, -76(%rbp)
        movq    %rdx, -88(%rbp)
        movl    %ecx, -80(%rbp)
        movq    %r8, -96(%rbp)
        movl    %r9d, -100(%rbp)
        movl    -76(%rbp), %eax
        imull   -80(%rbp), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -40(%rbp)
        movl    -100(%rbp), %eax
        imull   24(%rbp), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -48(%rbp)
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        jmp     .L20
.L23:
        movl    $0, -12(%rbp)
        jmp     .L21
.L22:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %esi
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -88(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %ecx
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -4(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        leal    (%rsi,%rcx), %edx
        movl    %edx, (%rax)
        addl    $1, -12(%rbp)
.L21:
        movl    -12(%rbp), %eax
        cmpl    -80(%rbp), %eax
        jl      .L22
        addl    $1, -8(%rbp)
.L20:
        movl    -8(%rbp), %eax
        cmpl    -76(%rbp), %eax
        jl      .L23
        movl    $0, -4(%rbp)
        movl    $0, -16(%rbp)
        jmp     .L24
.L27:
        movl    $0, -20(%rbp)
        jmp     .L25
.L26:
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -96(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %esi
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    16(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %ecx
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -4(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        leal    (%rsi,%rcx), %edx
        movl    %edx, (%rax)
        addl    $1, -20(%rbp)
.L25:
        movl    -20(%rbp), %eax
        cmpl    24(%rbp), %eax
        jl      .L26
        addl    $1, -16(%rbp)
.L24:
        movl    -16(%rbp), %eax
        cmpl    -100(%rbp), %eax
        jl      .L27
        movl    -76(%rbp), %eax
        imull   -80(%rbp), %eax
        movslq  %eax, %rsi
        movq    -40(%rbp), %rax
        movl    $func_3, %ecx
        movl    $4, %edx
        movq    %rax, %rdi
        call    qsort
        movl    -100(%rbp), %eax
        imull   24(%rbp), %eax
        movslq  %eax, %rsi
        movq    -48(%rbp), %rax
        movl    $func_3, %ecx
        movl    $4, %edx
        movq    %rax, %rdi
        call    qsort
        movl    $0, -24(%rbp)
        movl    $0, -28(%rbp)
        jmp     .L28
.L30:
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        negl    %eax
        movl    %eax, %edx
        movl    -100(%rbp), %eax
        imull   24(%rbp), %eax
        movl    %eax, %ecx
        movq    -48(%rbp), %rax
        movl    %ecx, %esi
        movq    %rax, %rdi
        call    func_1
        movl    %eax, -52(%rbp)
        cmpl    $-1, -52(%rbp)
        je      .L29
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        negl    %eax
        movl    %eax, %edx
        movl    -100(%rbp), %eax
        imull   24(%rbp), %eax
        movl    %eax, %ecx
        movq    -48(%rbp), %rax
        movl    %ecx, %esi
        movq    %rax, %rdi
        call    func_4
        movl    %eax, -56(%rbp)
        movl    -56(%rbp), %eax
        subl    -52(%rbp), %eax
        addl    $1, %eax
        addl    %eax, -24(%rbp)
.L29:
        addl    $1, -28(%rbp)
.L28:
        movl    -76(%rbp), %eax
        imull   -80(%rbp), %eax
        cmpl    %eax, -28(%rbp)
        jl      .L30
        movl    -24(%rbp), %eax
        leave
        ret
