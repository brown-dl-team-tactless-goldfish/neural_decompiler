func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        addq    $-128, %rsp
        movq    %rdi, -120(%rbp)
        movq    %rsi, -128(%rbp)
        movl    $4, %esi
        movl    $100, %edi
        call    calloc
        movq    %rax, -56(%rbp)
        movl    $4, %esi
        movl    $100, %edi
        call    calloc
        movq    %rax, -64(%rbp)
        movl    $4, %esi
        movl    $100, %edi
        call    calloc
        movq    %rax, -72(%rbp)
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        movq    -120(%rbp), %rax
        movq    %rax, -16(%rbp)
        movq    -128(%rbp), %rax
        movq    %rax, -32(%rbp)
        jmp     .L2
.L4:
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -4(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rax, %rdx
        movq    -16(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        movq    -16(%rbp), %rax
        movq    8(%rax), %rax
        testq   %rax, %rax
        jne     .L3
        movq    -16(%rbp), %rax
        movq    %rax, -24(%rbp)
.L3:
        movq    -16(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -16(%rbp)
.L2:
        cmpq    $0, -16(%rbp)
        jne     .L4
        jmp     .L5
.L7:
        movl    -8(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -8(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -64(%rbp), %rax
        addq    %rax, %rdx
        movq    -32(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        movq    -32(%rbp), %rax
        movq    8(%rax), %rax
        testq   %rax, %rax
        jne     .L6
        movq    -32(%rbp), %rax
        movq    %rax, -80(%rbp)
.L6:
        movq    -32(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -32(%rbp)
.L5:
        cmpq    $0, -32(%rbp)
        jne     .L7
        movq    -24(%rbp), %rax
        movq    -128(%rbp), %rdx
        movq    %rdx, 8(%rax)
        movl    $0, -36(%rbp)
        movl    -4(%rbp), %eax
        cmpl    %eax, -8(%rbp)
        cmovge  -8(%rbp), %eax
        movl    %eax, -40(%rbp)
        movl    -40(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -84(%rbp)
        movb    $0, -41(%rbp)
        subl    $1, -4(%rbp)
        subl    $1, -8(%rbp)
        jmp     .L8
.L13:
        movl    -4(%rbp), %eax
        leal    -1(%rax), %edx
        movl    %edx, -4(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %ecx
        movl    -8(%rbp), %eax
        leal    -1(%rax), %edx
        movl    %edx, -8(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        addl    %ecx, %eax
        movl    %eax, -88(%rbp)
        cmpb    $0, -41(%rbp)
        je      .L9
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    -88(%rbp), %ecx
        movl    -36(%rbp), %edx
        addl    %ecx, %edx
        movl    %edx, (%rax)
        movb    $0, -41(%rbp)
        movl    $0, -36(%rbp)
        jmp     .L10
.L9:
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rax, %rdx
        movl    -88(%rbp), %eax
        movl    %eax, (%rdx)
.L10:
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $9, %eax
        jle     .L11
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        subl    $10, %edx
        movl    %edx, (%rax)
        movl    $1, -36(%rbp)
        movb    $1, -41(%rbp)
.L11:
        subl    $1, -40(%rbp)
.L8:
        cmpl    $0, -4(%rbp)
        js      .L12
        cmpl    $0, -8(%rbp)
        jns     .L13
.L12:
        cmpl    $0, -8(%rbp)
        js      .L14
        jmp     .L15
.L19:
        movl    -8(%rbp), %eax
        leal    -1(%rax), %edx
        movl    %edx, -8(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -36(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, -92(%rbp)
        cmpb    $0, -41(%rbp)
        je      .L16
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rax, %rdx
        movl    -92(%rbp), %eax
        movl    %eax, (%rdx)
        movb    $0, -41(%rbp)
        movl    $0, -36(%rbp)
        jmp     .L17
.L16:
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rax, %rdx
        movl    -92(%rbp), %eax
        movl    %eax, (%rdx)
.L17:
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $9, %eax
        jle     .L18
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        subl    $10, %edx
        movl    %edx, (%rax)
        movl    $1, -36(%rbp)
        movb    $1, -41(%rbp)
.L18:
        subl    $1, -40(%rbp)
.L15:
        cmpl    $0, -8(%rbp)
        jns     .L19
.L14:
        cmpl    $0, -4(%rbp)
        js      .L20
        jmp     .L21
.L25:
        movl    -4(%rbp), %eax
        leal    -1(%rax), %edx
        movl    %edx, -4(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -36(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, -96(%rbp)
        cmpb    $0, -41(%rbp)
        je      .L22
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rax, %rdx
        movl    -96(%rbp), %eax
        movl    %eax, (%rdx)
        movb    $0, -41(%rbp)
        movl    $0, -36(%rbp)
        jmp     .L23
.L22:
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rax, %rdx
        movl    -96(%rbp), %eax
        movl    %eax, (%rdx)
.L23:
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $9, %eax
        jle     .L24
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        subl    $10, %edx
        movl    %edx, (%rax)
        movl    $1, -36(%rbp)
        movb    $1, -41(%rbp)
.L24:
        subl    $1, -40(%rbp)
.L21:
        cmpl    $0, -4(%rbp)
        jns     .L25
.L20:
        cmpl    $0, -36(%rbp)
        je      .L26
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rax, %rdx
        movl    -36(%rbp), %eax
        movl    %eax, (%rdx)
.L26:
        movq    -120(%rbp), %rax
        movq    %rax, -104(%rbp)
        movl    $0, -48(%rbp)
        jmp     .L27
.L31:
        cmpl    $0, -48(%rbp)
        jne     .L28
        movl    -48(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        je      .L33
.L28:
        movl    -48(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movq    -120(%rbp), %rax
        movl    %edx, (%rax)
        movl    -84(%rbp), %eax
        subl    $1, %eax
        cmpl    %eax, -48(%rbp)
        jne     .L30
        movq    -120(%rbp), %rax
        movq    $0, 8(%rax)
        jmp     .L29
.L30:
        movq    -120(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -120(%rbp)
        jmp     .L29
.L33:
        nop
.L29:
        addl    $1, -48(%rbp)
.L27:
        movl    -48(%rbp), %eax
        cmpl    -84(%rbp), %eax
        jl      .L31
        movq    -56(%rbp), %rax
        movq    %rax, %rdi
        call    free
        movq    -64(%rbp), %rax
        movq    %rax, %rdi
        call    free
        movq    -72(%rbp), %rax
        movq    %rax, %rdi
        call    free
        movq    -104(%rbp), %rax
        leave
        ret
