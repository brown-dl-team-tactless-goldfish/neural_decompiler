func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $80, %rsp
        movl    %edi, -52(%rbp)
        movl    %esi, -56(%rbp)
        movq    %rdx, -64(%rbp)
        movl    %ecx, -68(%rbp)
        movq    %r8, -80(%rbp)
        movl    -56(%rbp), %eax
        movslq  %eax, %rdx
        movl    -52(%rbp), %eax
        cltq
        imulq   %rdx, %rax
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -32(%rbp)
        movl    -56(%rbp), %eax
        movslq  %eax, %rdx
        movl    -52(%rbp), %eax
        cltq
        imulq   %rdx, %rax
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        movl    $0, %esi
        movq    %rax, %rdi
        call    memset
        movl    $0, -4(%rbp)
        jmp     .L2
.L7:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        movl    %eax, -36(%rbp)
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    4(%rax), %eax
        movl    %eax, -40(%rbp)
        movl    -56(%rbp), %eax
        imull   -36(%rbp), %eax
        movl    %eax, -8(%rbp)
        jmp     .L3
.L4:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        sete    %cl
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rax, %rdx
        movzbl  %cl, %eax
        movl    %eax, (%rdx)
        addl    $1, -8(%rbp)
.L3:
        movl    -36(%rbp), %eax
        addl    $1, %eax
        imull   -56(%rbp), %eax
        cmpl    %eax, -8(%rbp)
        jl      .L4
        movl    -40(%rbp), %eax
        movl    %eax, -12(%rbp)
        jmp     .L5
.L6:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        sete    %cl
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rax, %rdx
        movzbl  %cl, %eax
        movl    %eax, (%rdx)
        movl    -56(%rbp), %eax
        addl    %eax, -12(%rbp)
.L5:
        movl    -52(%rbp), %eax
        imull   -56(%rbp), %eax
        cmpl    %eax, -12(%rbp)
        jl      .L6
        addl    $1, -4(%rbp)
.L2:
        movl    -4(%rbp), %eax
        cmpl    -68(%rbp), %eax
        jl      .L7
        movl    $0, -16(%rbp)
        movl    $0, -20(%rbp)
        jmp     .L8
.L9:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltd
        shrl    $31, %edx
        addl    %edx, %eax
        andl    $1, %eax
        subl    %edx, %eax
        addl    %eax, -16(%rbp)
        addl    $1, -20(%rbp)
.L8:
        movl    -56(%rbp), %eax
        imull   -52(%rbp), %eax
        cmpl    %eax, -20(%rbp)
        jl      .L9
        movl    -16(%rbp), %eax
        leave
        ret
