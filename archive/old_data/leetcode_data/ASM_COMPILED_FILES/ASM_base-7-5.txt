func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movl    %edi, -36(%rbp)
        movl    $100, %edi
        call    malloc
        movq    %rax, -16(%rbp)
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        cmpl    $0, -36(%rbp)
        jne     .L2
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -4(%rbp)
        movslq  %eax, %rdx
        movq    -16(%rbp), %rax
        addq    %rdx, %rax
        movb    $48, (%rax)
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -16(%rbp), %rax
        addq    %rdx, %rax
        movb    $0, (%rax)
        movq    -16(%rbp), %rax
        jmp     .L3
.L2:
        cmpl    $0, -36(%rbp)
        jns     .L5
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -16(%rbp), %rax
        addq    %rdx, %rax
        movb    $45, (%rax)
        addl    $1, -4(%rbp)
        movl    $1, -8(%rbp)
        jmp     .L5
.L6:
        movl    -36(%rbp), %eax
        sarl    $31, %eax
        movl    %eax, %ecx
        xorl    -36(%rbp), %ecx
        subl    %eax, %ecx
        movl    $-1840700269, %edx
        movl    %ecx, %eax
        imull   %edx
        leal    (%rdx,%rcx), %eax
        sarl    $2, %eax
        movl    %eax, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $3, %eax
        subl    %edx, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movl    %edx, %eax
        leal    48(%rax), %ecx
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -16(%rbp), %rax
        addq    %rdx, %rax
        movl    %ecx, %edx
        movb    %dl, (%rax)
        movl    -36(%rbp), %eax
        sarl    $31, %eax
        movl    %eax, %ecx
        xorl    -36(%rbp), %ecx
        subl    %eax, %ecx
        movl    $-1840700269, %edx
        movl    %ecx, %eax
        imull   %edx
        leal    (%rdx,%rcx), %eax
        sarl    $2, %eax
        movl    %eax, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -36(%rbp)
        addl    $1, -4(%rbp)
.L5:
        movl    -36(%rbp), %eax
        cltd
        movl    %edx, %eax
        xorl    -36(%rbp), %eax
        subl    %edx, %eax
        testl   %eax, %eax
        jg      .L6
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -16(%rbp), %rax
        addq    %rdx, %rax
        movb    $0, (%rax)
        cmpl    $1, -8(%rbp)
        jne     .L11
        jmp     .L8
.L9:
        movl    -4(%rbp), %eax
        subl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -16(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movb    %al, -17(%rbp)
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -16(%rbp), %rax
        leaq    (%rdx,%rax), %rcx
        movl    -4(%rbp), %eax
        subl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -16(%rbp), %rax
        addq    %rax, %rdx
        movzbl  (%rcx), %eax
        movb    %al, (%rdx)
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -16(%rbp), %rax
        addq    %rax, %rdx
        movzbl  -17(%rbp), %eax
        movb    %al, (%rdx)
        addl    $1, -8(%rbp)
.L8:
        movl    -4(%rbp), %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        cmpl    %eax, -8(%rbp)
        jle     .L9
        jmp     .L10
.L12:
        movl    -4(%rbp), %eax
        subl    $1, %eax
        subl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -16(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movb    %al, -17(%rbp)
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -16(%rbp), %rax
        addq    %rdx, %rax
        movl    -4(%rbp), %edx
        subl    $1, %edx
        subl    -8(%rbp), %edx
        movslq  %edx, %rcx
        movq    -16(%rbp), %rdx
        addq    %rcx, %rdx
        movzbl  (%rax), %eax
        movb    %al, (%rdx)
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -16(%rbp), %rax
        addq    %rax, %rdx
        movzbl  -17(%rbp), %eax
        movb    %al, (%rdx)
        addl    $1, -8(%rbp)
.L11:
        movl    -4(%rbp), %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        cmpl    %eax, -8(%rbp)
        jl      .L12
.L10:
        movq    -16(%rbp), %rax
.L3:
        leave
        ret
