func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -8(%rbp)
        movq    %rsi, -16(%rbp)
        movq    -8(%rbp), %rax
        movl    (%rax), %edx
        movq    -16(%rbp), %rax
        movl    (%rax), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movl    -44(%rbp), %eax
        andl    $1, %eax
        testl   %eax, %eax
        je      .L4
        movl    $0, %eax
        jmp     .L5
.L4:
        movl    -44(%rbp), %eax
        movslq  %eax, %rsi
        movq    -40(%rbp), %rax
        movl    $func_2, %ecx
        movl    $4, %edx
        movq    %rax, %rdi
        call    qsort
        movl    -44(%rbp), %eax
        cltq
        movl    $4, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, -24(%rbp)
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        movl    $0, -12(%rbp)
        jmp     .L6
.L12:
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jne     .L7
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        leaq    (%rdx,%rax), %rcx
        movl    -8(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -8(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movl    (%rcx), %eax
        movl    %eax, (%rdx)
        movl    -44(%rbp), %eax
        subl    -12(%rbp), %eax
        movl    %eax, %edx
        movl    -8(%rbp), %eax
        subl    -4(%rbp), %eax
        cmpl    %eax, %edx
        jg      .L13
        movl    $0, %eax
        jmp     .L5
.L7:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    -4(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -24(%rbp), %rdx
        addq    %rcx, %rdx
        movl    (%rdx), %edx
        addl    %edx, %edx
        cmpl    %edx, %eax
        jne     .L10
        addl    $1, -4(%rbp)
        jmp     .L9
.L10:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    -4(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -24(%rbp), %rdx
        addq    %rcx, %rdx
        movl    (%rdx), %edx
        addl    %edx, %edx
        cmpl    %edx, %eax
        jge     .L11
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        leaq    (%rdx,%rax), %rcx
        movl    -8(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -8(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movl    (%rcx), %eax
        movl    %eax, (%rdx)
        movl    -44(%rbp), %eax
        subl    -12(%rbp), %eax
        movl    %eax, %edx
        movl    -8(%rbp), %eax
        subl    -4(%rbp), %eax
        cmpl    %eax, %edx
        jg      .L9
        movl    $0, %eax
        jmp     .L5
.L11:
        movl    $0, %eax
        jmp     .L5
.L13:
        nop
.L9:
        addl    $1, -12(%rbp)
.L6:
        movl    -12(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L12
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        sete    %al
.L5:
        leave
        ret
func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movl    -44(%rbp), %eax
        cltq
        movl    $4, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, -24(%rbp)
        movl    $0, -4(%rbp)
        movl    -44(%rbp), %eax
        cltq
        movl    $4, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, -32(%rbp)
        movl    $0, -8(%rbp)
        movl    $0, -12(%rbp)
        jmp     .L15
.L18:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jg      .L16
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %ecx
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -4(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        negl    %ecx
        movl    %ecx, %edx
        movl    %edx, (%rax)
        jmp     .L17
.L16:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        leaq    (%rdx,%rax), %rcx
        movl    -8(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -8(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rax, %rdx
        movl    (%rcx), %eax
        movl    %eax, (%rdx)
.L17:
        addl    $1, -12(%rbp)
.L15:
        movl    -12(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L18
        movl    -4(%rbp), %edx
        movq    -24(%rbp), %rax
        movl    %edx, %esi
        movq    %rax, %rdi
        call    func_1
        testb   %al, %al
        je      .L19
        movl    -8(%rbp), %edx
        movq    -32(%rbp), %rax
        movl    %edx, %esi
        movq    %rax, %rdi
        call    func_1
        testb   %al, %al
        je      .L19
        movl    $1, %eax
        jmp     .L20
.L19:
        movl    $0, %eax
.L20:
        andl    $1, %eax
        leave
        ret
