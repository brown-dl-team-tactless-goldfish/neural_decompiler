func_1function:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $16, %rsp
        movl    %edi, -4(%rbp)
        movq    %rsi, -16(%rbp)
        cmpl    $0, -4(%rbp)
        jne     .L2
        movl    $0, %eax
        jmp     .L3
.L2:
        movl    -4(%rbp), %ecx
        movl    $-1840700269, %edx
        movl    %ecx, %eax
        imull   %edx
        leal    (%rdx,%rcx), %eax
        sarl    $2, %eax
        movl    %eax, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $3, %eax
        subl    %edx, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movl    %edx, %eax
        addl    $48, %eax
        movl    %eax, %edx
        movq    -16(%rbp), %rax
        movb    %dl, (%rax)
        movq    -16(%rbp), %rax
        leaq    -1(%rax), %rsi
        movl    -4(%rbp), %ecx
        movl    $-1840700269, %edx
        movl    %ecx, %eax
        imull   %edx
        leal    (%rdx,%rcx), %eax
        sarl    $2, %eax
        movl    %eax, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, %edi
        call    func_1function
        addl    $1, %eax
.L3:
        leave
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movl    %edi, -36(%rbp)
        movl    $10, -4(%rbp)
        movl    -4(%rbp), %eax
        cltq
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -16(%rbp)
        movl    -4(%rbp), %eax
        cltq
        leaq    -1(%rax), %rdx
        movq    -16(%rbp), %rax
        addq    %rdx, %rax
        movb    $0, (%rax)
        movl    $0, -20(%rbp)
        cmpl    $0, -36(%rbp)
        jne     .L5
        movl    -4(%rbp), %eax
        cltq
        leaq    -2(%rax), %rdx
        movq    -16(%rbp), %rax
        addq    %rdx, %rax
        movb    $48, (%rax)
        movl    -4(%rbp), %eax
        cltq
        leaq    -2(%rax), %rdx
        movq    -16(%rbp), %rax
        addq    %rdx, %rax
        jmp     .L6
.L5:
        cmpl    $0, -36(%rbp)
        jns     .L7
        movl    -4(%rbp), %eax
        cltq
        leaq    -2(%rax), %rdx
        movq    -16(%rbp), %rax
        addq    %rax, %rdx
        movl    -36(%rbp), %eax
        negl    %eax
        movq    %rdx, %rsi
        movl    %eax, %edi
        call    func_1function
        movl    %eax, -20(%rbp)
        movl    -4(%rbp), %eax
        subl    $2, %eax
        subl    -20(%rbp), %eax
        movslq  %eax, %rdx
        movq    -16(%rbp), %rax
        addq    %rdx, %rax
        movb    $45, (%rax)
        movl    -4(%rbp), %eax
        subl    $2, %eax
        subl    -20(%rbp), %eax
        movslq  %eax, %rdx
        movq    -16(%rbp), %rax
        addq    %rdx, %rax
        jmp     .L6
.L7:
        movl    -4(%rbp), %eax
        cltq
        leaq    -2(%rax), %rdx
        movq    -16(%rbp), %rax
        addq    %rax, %rdx
        movl    -36(%rbp), %eax
        movq    %rdx, %rsi
        movl    %eax, %edi
        call    func_1function
        movl    %eax, -20(%rbp)
        movl    -4(%rbp), %eax
        subl    $2, %eax
        subl    -20(%rbp), %eax
        cltq
        leaq    1(%rax), %rdx
        movq    -16(%rbp), %rax
        addq    %rdx, %rax
.L6:
        leave
        ret
