func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -4(%rbp)
        movl    %esi, -8(%rbp)
        movl    -8(%rbp), %eax
        cmpl    %eax, -4(%rbp)
        cmovge  -4(%rbp), %eax
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $24, %rsp
        movq    %rdi, -24(%rbp)
        cmpq    $0, -24(%rbp)
        jne     .L4
        movl    $0, %eax
        jmp     .L5
.L4:
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, %rdi
        call    func_2
        movl    %eax, %ebx
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, %rdi
        call    func_2
        movl    %ebx, %esi
        movl    %eax, %edi
        call    func_3
        addl    $1, %eax
.L5:
        addq    $24, %rsp
        popq    %rbx
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        cmpq    $0, -24(%rbp)
        jne     .L7
        movl    $1, %eax
        jmp     .L8
.L7:
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, %rdi
        call    func_2
        movl    %eax, -4(%rbp)
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, %rdi
        call    func_2
        movl    %eax, -8(%rbp)
        movl    -4(%rbp), %eax
        subl    -8(%rbp), %eax
        cmpl    $-1, %eax
        jl      .L9
        movl    -4(%rbp), %eax
        subl    -8(%rbp), %eax
        cmpl    $1, %eax
        jg      .L9
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, %rdi
        call    func_1
        testb   %al, %al
        je      .L9
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, %rdi
        call    func_1
        testb   %al, %al
        je      .L9
        movl    $1, %eax
        jmp     .L10
.L9:
        movl    $0, %eax
.L10:
        andl    $1, %eax
.L8:
        leave
        ret
