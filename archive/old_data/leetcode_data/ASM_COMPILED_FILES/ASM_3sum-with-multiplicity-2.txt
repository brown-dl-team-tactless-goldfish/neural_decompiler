func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -8(%rbp)
        movq    %rsi, -16(%rbp)
        movq    -8(%rbp), %rax
        movl    (%rax), %edx
        movq    -16(%rbp), %rax
        movl    (%rax), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movq    %rdx, -40(%rbp)
        cmpq    $0, -24(%rbp)
        jne     .L4
        movl    $0, %eax
        jmp     .L5
.L4:
        movl    $0, -4(%rbp)
        jmp     .L6
.L12:
        movl    $3, -8(%rbp)
        movl    $0, -12(%rbp)
        jmp     .L7
.L10:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -12(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jne     .L13
        subl    $1, -8(%rbp)
        addl    $1, -12(%rbp)
.L7:
        cmpl    $2, -12(%rbp)
        jle     .L10
        jmp     .L9
.L13:
        nop
.L9:
        cmpl    $0, -8(%rbp)
        jne     .L11
        movl    $1, %eax
        jmp     .L5
.L11:
        addl    $1, -4(%rbp)
.L6:
        movl    -4(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jl      .L12
        movl    $0, %eax
.L5:
        popq    %rbp
        ret
func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movq    %rsi, -32(%rbp)
        movl    %edx, -36(%rbp)
        movl    %ecx, -40(%rbp)
        movl    %r8d, -44(%rbp)
        movq    $0, -8(%rbp)
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -32(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jne     .L15
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -32(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jne     .L15
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -40(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -32(%rbp), %rdx
        addq    %rcx, %rdx
        movl    (%rdx), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -24(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        subq    $1, %rdx
        imulq   %rdx, %rax
        movl    -44(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -32(%rbp), %rdx
        addq    %rcx, %rdx
        movl    (%rdx), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -24(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        subq    $2, %rdx
        imulq   %rdx, %rax
        movq    %rax, %rcx
        movabsq $3074457345618258603, %rdx
        movq    %rcx, %rax
        imulq   %rdx
        movq    %rcx, %rax
        sarq    $63, %rax
        subq    %rax, %rdx
        movq    %rdx, %rax
        addq    %rax, -8(%rbp)
        jmp     .L16
.L15:
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -32(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jne     .L17
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -40(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -32(%rbp), %rdx
        addq    %rcx, %rdx
        movl    (%rdx), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -24(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        subq    $1, %rdx
        imulq   %rax, %rdx
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -32(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,8), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movq    (%rax), %rax
        imulq   %rdx, %rax
        movq    %rax, %rdx
        shrq    $63, %rdx
        addq    %rdx, %rax
        sarq    %rax
        addq    %rax, -8(%rbp)
        jmp     .L16
.L17:
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -32(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L18
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -32(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jne     .L19
.L18:
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rdx
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -32(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,8), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movq    (%rax), %rax
        imulq   %rdx, %rax
        movl    -44(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -32(%rbp), %rdx
        addq    %rcx, %rdx
        movl    (%rdx), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -24(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        subq    $1, %rdx
        imulq   %rdx, %rax
        movq    %rax, %rdx
        shrq    $63, %rdx
        addq    %rdx, %rax
        sarq    %rax
        addq    %rax, -8(%rbp)
        jmp     .L16
.L19:
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rdx
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -32(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,8), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movq    (%rax), %rax
        imulq   %rax, %rdx
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -32(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,8), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movq    (%rax), %rax
        imulq   %rdx, %rax
        addq    %rax, -8(%rbp)
.L16:
        movq    -8(%rbp), %rcx
        movabsq $-8543223828751151131, %rdx
        movq    %rcx, %rax
        imulq   %rdx
        leaq    (%rdx,%rcx), %rax
        sarq    $29, %rax
        movq    %rax, %rdx
        movq    %rcx, %rax
        sarq    $63, %rax
        subq    %rax, %rdx
        movq    %rdx, %rax
        imulq   $1000000007, %rax, %rax
        subq    %rax, %rcx
        movq    %rcx, %rax
        popq    %rbp
        ret
func_4:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $80, %rsp
        movq    %rdi, -72(%rbp)
        movl    %esi, -76(%rbp)
        movl    %edx, -80(%rbp)
        movl    -76(%rbp), %eax
        movslq  %eax, %rsi
        movq    -72(%rbp), %rax
        movl    $func_1, %ecx
        movl    $4, %edx
        movq    %rax, %rdi
        call    qsort
        movl    $8, %esi
        movl    $101, %edi
        call    calloc
        movq    %rax, -48(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L22
.L23:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rdx
        addq    $1, %rdx
        movq    %rdx, (%rax)
        addl    $1, -4(%rbp)
.L22:
        movl    -4(%rbp), %eax
        cmpl    -76(%rbp), %eax
        jl      .L23
        movl    $0, -8(%rbp)
        movq    $0, -16(%rbp)
        movl    $0, -20(%rbp)
        movl    -76(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -24(%rbp)
        movq    $0, -32(%rbp)
        jmp     .L24
.L30:
        movl    -20(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -36(%rbp)
        movl    -76(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -24(%rbp)
        jmp     .L25
.L29:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %edx, %eax
        cmpl    %eax, -80(%rbp)
        jne     .L26
        movl    $12, %edi
        call    malloc
        movq    %rax, -56(%rbp)
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movq    -56(%rbp), %rax
        movl    %edx, (%rax)
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movq    -56(%rbp), %rdx
        addq    $4, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movq    -56(%rbp), %rdx
        addq    $8, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        movq    -56(%rbp), %rdx
        movl    -8(%rbp), %ecx
        movq    -16(%rbp), %rax
        movl    %ecx, %esi
        movq    %rax, %rdi
        call    func_2
        xorl    $1, %eax
        testb   %al, %al
        je      .L27
        movl    -24(%rbp), %edi
        movl    -36(%rbp), %ecx
        movl    -20(%rbp), %edx
        movq    -72(%rbp), %rsi
        movq    -48(%rbp), %rax
        movl    %edi, %r8d
        movq    %rax, %rdi
        call    func_3
        addq    %rax, -32(%rbp)
        addl    $1, -8(%rbp)
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -16(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    realloc
        movq    %rax, -16(%rbp)
        movl    -8(%rbp), %eax
        cltq
        salq    $3, %rax
        leaq    -8(%rax), %rdx
        movq    -16(%rbp), %rax
        addq    %rax, %rdx
        movq    -56(%rbp), %rax
        movq    %rax, (%rdx)
.L27:
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    %eax, %edx
        movl    -36(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, -36(%rbp)
        movl    -24(%rbp), %eax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -72(%rbp), %rdx
        addq    %rcx, %rdx
        movl    (%rdx), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -48(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        subl    %edx, %eax
        movl    %eax, -24(%rbp)
        jmp     .L25
.L26:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %edx, %eax
        cmpl    %eax, -80(%rbp)
        jge     .L28
        subl    $1, -24(%rbp)
        jmp     .L25
.L28:
        addl    $1, -36(%rbp)
.L25:
        movl    -36(%rbp), %eax
        cmpl    -24(%rbp), %eax
        jl      .L29
        addl    $1, -20(%rbp)
.L24:
        movl    -20(%rbp), %eax
        cmpl    -24(%rbp), %eax
        jl      .L30
        movq    -32(%rbp), %rax
        leave
        ret
