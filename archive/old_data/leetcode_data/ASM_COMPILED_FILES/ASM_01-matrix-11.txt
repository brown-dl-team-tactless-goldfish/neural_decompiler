func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movq    %rsi, -32(%rbp)
        movl    %edx, -36(%rbp)
        movq    %rcx, -48(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L2
.L5:
        movl    $0, -8(%rbp)
        jmp     .L3
.L4:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -8(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    -4(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -32(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        movl    -8(%rbp), %ecx
        movslq  %ecx, %rcx
        salq    $2, %rcx
        addq    %rcx, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        addl    $1, -8(%rbp)
.L3:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -8(%rbp)
        jl      .L4
        addl    $1, -4(%rbp)
.L2:
        movl    -4(%rbp), %eax
        cmpl    -36(%rbp), %eax
        jl      .L5
        nop
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $88, %rsp
        movq    %rdi, -56(%rbp)
        movl    %esi, -60(%rbp)
        movq    %rdx, -72(%rbp)
        movq    %rcx, -80(%rbp)
        movq    %r8, -88(%rbp)
        movl    $0, -28(%rbp)
        movl    $0, -32(%rbp)
        movl    -60(%rbp), %eax
        cltq
        salq    $3, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -40(%rbp)
        movl    -60(%rbp), %eax
        cltq
        salq    $3, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -48(%rbp)
        movl    -60(%rbp), %eax
        cltq
        movl    $4, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, %rdx
        movq    -80(%rbp), %rax
        movq    %rdx, (%rax)
        movq    -88(%rbp), %rax
        movl    -60(%rbp), %edx
        movl    %edx, (%rax)
        movl    $0, -20(%rbp)
        jmp     .L7
.L14:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        salq    $2, %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -40(%rbp), %rdx
        leaq    (%rcx,%rdx), %rbx
        movq    %rax, %rdi
        call    malloc
        movq    %rax, (%rbx)
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        salq    $2, %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -48(%rbp), %rdx
        leaq    (%rcx,%rdx), %rbx
        movq    %rax, %rdi
        call    malloc
        movq    %rax, (%rbx)
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        leaq    (%rdx,%rax), %rcx
        movq    -80(%rbp), %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rax, %rdx
        movl    (%rcx), %eax
        movl    %eax, (%rdx)
        movl    $0, -24(%rbp)
        jmp     .L8
.L13:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L9
        movl    $0, %ecx
        jmp     .L10
.L9:
        movl    $-1, %ecx
.L10:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    %ecx, (%rax)
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L11
        movl    $0, %ecx
        jmp     .L12
.L11:
        movl    $-1, %ecx
.L12:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    %ecx, (%rax)
        addl    $1, -24(%rbp)
.L8:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -24(%rbp)
        jl      .L13
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        addl    %eax, -32(%rbp)
        addl    $1, -20(%rbp)
.L7:
        movl    -20(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jl      .L14
        jmp     .L15
.L36:
        movl    $0, -28(%rbp)
        movl    $0, -20(%rbp)
        jmp     .L16
.L35:
        movl    $0, -24(%rbp)
        jmp     .L17
.L34:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        js      .L18
        addl    $1, -28(%rbp)
        cmpl    $0, -20(%rbp)
        jle     .L19
        movl    -20(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -24(%rbp)
        jge     .L19
        movl    -20(%rbp), %eax
        cltq
        salq    $3, %rax
        leaq    -8(%rax), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $-1, %eax
        je      .L20
        movl    -20(%rbp), %eax
        cltq
        salq    $3, %rax
        leaq    -8(%rax), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -48(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        movl    -24(%rbp), %ecx
        movslq  %ecx, %rcx
        salq    $2, %rcx
        addq    %rcx, %rdx
        movl    (%rdx), %edx
        addl    $1, %edx
        cmpl    %edx, %eax
        jle     .L21
.L20:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        addl    $1, %eax
        jmp     .L22
.L21:
        movl    -20(%rbp), %eax
        cltq
        salq    $3, %rax
        leaq    -8(%rax), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
.L22:
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        leaq    -8(%rdx), %rcx
        movq    -40(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        movl    -24(%rbp), %ecx
        movslq  %ecx, %rcx
        salq    $2, %rcx
        addq    %rcx, %rdx
        movl    %eax, (%rdx)
.L19:
        cmpl    $0, -24(%rbp)
        jle     .L23
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        subq    $4, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $-1, %eax
        je      .L24
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        subq    $4, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -48(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        movl    -24(%rbp), %ecx
        movslq  %ecx, %rcx
        salq    $2, %rcx
        addq    %rcx, %rdx
        movl    (%rdx), %edx
        addl    $1, %edx
        cmpl    %edx, %eax
        jle     .L25
.L24:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        addl    $1, %eax
        jmp     .L26
.L25:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        subq    $4, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
.L26:
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -40(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        movl    -24(%rbp), %ecx
        movslq  %ecx, %rcx
        salq    $2, %rcx
        subq    $4, %rcx
        addq    %rcx, %rdx
        movl    %eax, (%rdx)
.L23:
        movl    -60(%rbp), %eax
        subl    $1, %eax
        cmpl    %eax, -20(%rbp)
        jge     .L27
        movl    -20(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -24(%rbp)
        jge     .L27
        movl    -20(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $-1, %eax
        je      .L28
        movl    -20(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -48(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        movl    -24(%rbp), %ecx
        movslq  %ecx, %rcx
        salq    $2, %rcx
        addq    %rcx, %rdx
        movl    (%rdx), %edx
        addl    $1, %edx
        cmpl    %edx, %eax
        jle     .L29
.L28:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        addl    $1, %eax
        jmp     .L30
.L29:
        movl    -20(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
.L30:
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        addq    $1, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -40(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        movl    -24(%rbp), %ecx
        movslq  %ecx, %rcx
        salq    $2, %rcx
        addq    %rcx, %rdx
        movl    %eax, (%rdx)
.L27:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        subl    $1, %eax
        cmpl    %eax, -24(%rbp)
        jge     .L18
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        addq    $1, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $-1, %eax
        je      .L31
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        addq    $1, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -48(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        movl    -24(%rbp), %ecx
        movslq  %ecx, %rcx
        salq    $2, %rcx
        addq    %rcx, %rdx
        movl    (%rdx), %edx
        addl    $1, %edx
        cmpl    %edx, %eax
        jle     .L32
.L31:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        addl    $1, %eax
        jmp     .L33
.L32:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        addq    $1, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
.L33:
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -40(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        movl    -24(%rbp), %ecx
        movslq  %ecx, %rcx
        addq    $1, %rcx
        salq    $2, %rcx
        addq    %rcx, %rdx
        movl    %eax, (%rdx)
.L18:
        addl    $1, -24(%rbp)
.L17:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -24(%rbp)
        jl      .L34
        addl    $1, -20(%rbp)
.L16:
        movl    -20(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jl      .L35
        movq    -72(%rbp), %rcx
        movl    -60(%rbp), %edx
        movq    -48(%rbp), %rsi
        movq    -40(%rbp), %rax
        movq    %rax, %rdi
        call    func_1
.L15:
        movl    -28(%rbp), %eax
        cmpl    -32(%rbp), %eax
        jl      .L36
        movl    $0, -20(%rbp)
        jmp     .L37
.L38:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    %rax, %rdi
        call    free
        addl    $1, -20(%rbp)
.L37:
        movl    -20(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jl      .L38
        movq    -48(%rbp), %rax
        movq    %rax, %rdi
        call    free
        movq    -40(%rbp), %rax
        addq    $88, %rsp
        popq    %rbx
        popq    %rbp
        ret
