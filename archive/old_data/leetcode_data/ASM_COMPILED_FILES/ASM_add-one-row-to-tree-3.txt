func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    %edx, -32(%rbp)
        movl    %ecx, -36(%rbp)
        cmpq    $0, -24(%rbp)
        je      .L5
        movl    -32(%rbp), %eax
        subl    $1, %eax
        cmpl    %eax, -36(%rbp)
        jne     .L4
        movl    $24, %edi
        call    malloc
        movq    %rax, -8(%rbp)
        movl    $24, %edi
        call    malloc
        movq    %rax, -16(%rbp)
        movq    -16(%rbp), %rax
        movl    -28(%rbp), %edx
        movl    %edx, (%rax)
        movq    -16(%rbp), %rax
        movl    (%rax), %edx
        movq    -8(%rbp), %rax
        movl    %edx, (%rax)
        movq    -24(%rbp), %rax
        movq    8(%rax), %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, 8(%rax)
        movq    -24(%rbp), %rax
        movq    16(%rax), %rdx
        movq    -16(%rbp), %rax
        movq    %rdx, 16(%rax)
        movq    -16(%rbp), %rax
        movq    $0, 8(%rax)
        movq    -16(%rbp), %rax
        movq    8(%rax), %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, 16(%rax)
        movq    -24(%rbp), %rax
        movq    -8(%rbp), %rdx
        movq    %rdx, 8(%rax)
        movq    -24(%rbp), %rax
        movq    -16(%rbp), %rdx
        movq    %rdx, 16(%rax)
        jmp     .L1
.L4:
        movl    -36(%rbp), %eax
        leal    1(%rax), %ecx
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movl    -32(%rbp), %edx
        movl    -28(%rbp), %esi
        movq    %rax, %rdi
        call    func_1
        movl    -36(%rbp), %eax
        leal    1(%rax), %ecx
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        movl    -32(%rbp), %edx
        movl    -28(%rbp), %esi
        movq    %rax, %rdi
        call    func_1
        jmp     .L1
.L5:
        nop
.L1:
        leave
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    %edx, -32(%rbp)
        cmpl    $1, -32(%rbp)
        jne     .L7
        cmpq    $0, -24(%rbp)
        je      .L7
        movl    $24, %edi
        call    malloc
        movq    %rax, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    -28(%rbp), %edx
        movl    %edx, (%rax)
        movq    -8(%rbp), %rax
        movq    -24(%rbp), %rdx
        movq    %rdx, 8(%rax)
        movq    -8(%rbp), %rax
        movq    $0, 16(%rax)
        movq    -8(%rbp), %rax
        jmp     .L8
.L7:
        movl    -32(%rbp), %edx
        movl    -28(%rbp), %esi
        movq    -24(%rbp), %rax
        movl    $1, %ecx
        movq    %rax, %rdi
        call    func_1
        movq    -24(%rbp), %rax
.L8:
        leave
        ret
