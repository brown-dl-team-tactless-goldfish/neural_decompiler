func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movl    %edi, -36(%rbp)
        cmpl    $1, -36(%rbp)
        je      .L2
        cmpl    $0, -36(%rbp)
        jne     .L3
.L2:
        movl    $1, %eax
        jmp     .L4
.L3:
        movl    $32, %edi
        call    malloc
        movq    %rax, -24(%rbp)
        movl    $31, -4(%rbp)
        jmp     .L5
.L8:
        movl    -4(%rbp), %eax
        movl    -36(%rbp), %edx
        movl    %eax, %ecx
        sarl    %cl, %edx
        movl    %edx, %eax
        movl    %eax, -28(%rbp)
        movl    -28(%rbp), %eax
        andl    $1, %eax
        testl   %eax, %eax
        je      .L6
        movl    $31, %eax
        subl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movb    $49, (%rax)
        jmp     .L7
.L6:
        movl    $31, %eax
        subl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movb    $48, (%rax)
.L7:
        subl    $1, -4(%rbp)
.L5:
        cmpl    $0, -4(%rbp)
        jns     .L8
        movl    $0, -8(%rbp)
        movl    $0, -12(%rbp)
        movl    $0, -12(%rbp)
        jmp     .L9
.L12:
        movl    -12(%rbp), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $49, %al
        je      .L19
        addl    $1, -12(%rbp)
.L9:
        cmpl    $31, -12(%rbp)
        jle     .L12
        jmp     .L13
.L19:
        nop
        jmp     .L13
.L18:
        movl    -12(%rbp), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $49, %al
        jne     .L14
        cmpl    $1, -8(%rbp)
        jne     .L15
        movl    $0, %eax
        jmp     .L4
.L15:
        movl    $1, -8(%rbp)
        jmp     .L16
.L14:
        cmpl    $0, -8(%rbp)
        jne     .L17
        movl    $0, %eax
        jmp     .L4
.L17:
        movl    $0, -8(%rbp)
.L16:
        addl    $1, -12(%rbp)
.L13:
        cmpl    $31, -12(%rbp)
        jle     .L18
        movl    $1, %eax
.L4:
        leave
        ret
