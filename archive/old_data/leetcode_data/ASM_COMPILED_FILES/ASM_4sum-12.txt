func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -8(%rbp)
        movq    %rsi, -16(%rbp)
        movq    -8(%rbp), %rax
        movl    (%rax), %edx
        movq    -16(%rbp), %rax
        movl    (%rax), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        popq    %rbp
        ret
func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $80, %rsp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movq    %rdx, -56(%rbp)
        movq    %rcx, -64(%rbp)
        movl    %r8d, -48(%rbp)
        movl    %r9d, -68(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L4
.L15:
        cmpl    $0, -4(%rbp)
        jle     .L5
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -4(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L16
.L5:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movslq  %eax, %rdx
        movl    -4(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cltq
        addq    %rax, %rdx
        movl    -4(%rbp), %eax
        cltq
        addq    $2, %rax
        leaq    0(,%rax,4), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cltq
        addq    %rax, %rdx
        movl    -48(%rbp), %eax
        cltq
        cmpq    %rax, %rdx
        jg      .L17
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movslq  %eax, %rdx
        movl    -44(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -8(%rax), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cltq
        addq    %rax, %rdx
        movl    -44(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cltq
        addq    %rax, %rdx
        movl    -48(%rbp), %eax
        cltq
        cmpq    %rax, %rdx
        jl      .L18
        movl    -4(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -8(%rbp)
        movl    -44(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -12(%rbp)
        jmp     .L10
.L14:
        movl    -4(%rbp), %eax
        addl    $1, %eax
        cmpl    %eax, -8(%rbp)
        jle     .L11
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -8(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jne     .L11
        addl    $1, -8(%rbp)
        jmp     .L10
.L11:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movslq  %eax, %rdx
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cltq
        addq    %rax, %rdx
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cltq
        addq    %rdx, %rax
        movq    %rax, -24(%rbp)
        movl    -48(%rbp), %eax
        cltq
        cmpq    %rax, -24(%rbp)
        jle     .L12
        subl    $1, -12(%rbp)
        jmp     .L10
.L12:
        movl    -48(%rbp), %eax
        cltq
        cmpq    %rax, -24(%rbp)
        jge     .L13
        addl    $1, -8(%rbp)
        jmp     .L10
.L13:
        movl    $16, %edi
        call    malloc
        movq    %rax, -32(%rbp)
        movq    -32(%rbp), %rax
        movl    -68(%rbp), %edx
        movl    %edx, (%rax)
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    -32(%rbp), %rdx
        addq    $4, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    -32(%rbp), %rdx
        addq    $8, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    -32(%rbp), %rdx
        addq    $12, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        movq    -56(%rbp), %rax
        movq    (%rax), %rsi
        movq    -64(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %ecx
        movq    -64(%rbp), %rdx
        movl    %ecx, (%rdx)
        cltq
        salq    $3, %rax
        leaq    (%rsi,%rax), %rdx
        movq    -32(%rbp), %rax
        movq    %rax, (%rdx)
        addl    $1, -8(%rbp)
.L10:
        movl    -8(%rbp), %eax
        cmpl    -12(%rbp), %eax
        jl      .L14
        jmp     .L6
.L16:
        nop
        jmp     .L6
.L18:
        nop
.L6:
        addl    $1, -4(%rbp)
.L4:
        movl    -44(%rbp), %eax
        subl    $2, %eax
        cmpl    %eax, -4(%rbp)
        jl      .L15
        jmp     .L3
.L17:
        nop
.L3:
        leave
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    %edx, -32(%rbp)
        movq    %rcx, -40(%rbp)
        movq    %r8, -48(%rbp)
        movq    -40(%rbp), %rax
        movl    $0, (%rax)
        cmpl    $3, -28(%rbp)
        jg      .L20
        movl    $0, %eax
        jmp     .L32
.L20:
        movl    -28(%rbp), %eax
        movslq  %eax, %rsi
        movq    -24(%rbp), %rax
        movl    $func_1, %ecx
        movl    $4, %edx
        movq    %rax, %rdi
        call    qsort
        movl    $16000, %edi
        call    malloc
        movq    %rax, -16(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L22
.L28:
        cmpl    $0, -4(%rbp)
        jle     .L23
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -4(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L33
.L23:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movslq  %eax, %rdx
        movl    -4(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cltq
        addq    %rax, %rdx
        movl    -4(%rbp), %eax
        cltq
        addq    $2, %rax
        leaq    0(,%rax,4), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cltq
        addq    %rax, %rdx
        movl    -4(%rbp), %eax
        cltq
        addq    $3, %rax
        leaq    0(,%rax,4), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cltq
        addq    %rax, %rdx
        movl    -32(%rbp), %eax
        cltq
        cmpq    %rax, %rdx
        jg      .L34
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movslq  %eax, %rdx
        movl    -28(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -12(%rax), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cltq
        addq    %rax, %rdx
        movl    -28(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -8(%rax), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cltq
        addq    %rax, %rdx
        movl    -28(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cltq
        addq    %rax, %rdx
        movl    -32(%rbp), %eax
        cltq
        cmpq    %rax, %rdx
        jl      .L35
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %ecx
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    -32(%rbp), %edx
        subl    %eax, %edx
        movl    %edx, %r8d
        movl    -28(%rbp), %eax
        subl    -4(%rbp), %eax
        leal    -1(%rax), %esi
        movl    -4(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        leaq    (%rdx,%rax), %rdi
        movq    -40(%rbp), %rdx
        leaq    -16(%rbp), %rax
        movl    %ecx, %r9d
        movq    %rdx, %rcx
        movq    %rax, %rdx
        call    func_3
        jmp     .L24
.L33:
        nop
        jmp     .L24
.L35:
        nop
.L24:
        addl    $1, -4(%rbp)
.L22:
        movl    -28(%rbp), %eax
        subl    $3, %eax
        cmpl    %eax, -4(%rbp)
        jl      .L28
        jmp     .L26
.L34:
        nop
.L26:
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L29
        movl    $0, %eax
        jmp     .L32
.L29:
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, %rdx
        movq    -48(%rbp), %rax
        movq    %rdx, (%rax)
        movl    $0, -4(%rbp)
        jmp     .L30
.L31:
        movq    -48(%rbp), %rax
        movq    (%rax), %rax
        movl    -4(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    $4, (%rax)
        addl    $1, -4(%rbp)
.L30:
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        cmpl    %eax, -4(%rbp)
        jl      .L31
        movq    -16(%rbp), %rax
.L32:
        leave
        ret
