func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $40, %rsp
        movq    %rdi, -40(%rbp)
        movq    %rsi, -48(%rbp)
        movq    -40(%rbp), %rax
        addq    $4, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %edx
        movq    -40(%rbp), %rax
        addq    $1, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        leal    1(%rax), %ecx
        movq    -40(%rbp), %rax
        addq    $3, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %edx
        movq    -40(%rbp), %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        addl    $1, %eax
        imull   %eax, %ecx
        movl    %ecx, %edx
        movq    -48(%rbp), %rax
        movl    %edx, (%rax)
        movq    -48(%rbp), %rax
        movl    (%rax), %eax
        cltq
        salq    $3, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -32(%rbp)
        movl    $0, -24(%rbp)
        jmp     .L2
.L3:
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -32(%rbp), %rax
        leaq    (%rdx,%rax), %rbx
        movl    $3, %edi
        call    malloc
        movq    %rax, (%rbx)
        addl    $1, -24(%rbp)
.L2:
        movq    -48(%rbp), %rax
        movl    (%rax), %eax
        cmpl    %eax, -24(%rbp)
        jl      .L3
        movl    $0, -24(%rbp)
        movq    -40(%rbp), %rax
        movzbl  (%rax), %eax
        movb    %al, -17(%rbp)
        jmp     .L4
.L7:
        movq    -40(%rbp), %rax
        movzbl  1(%rax), %eax
        movb    %al, -18(%rbp)
        jmp     .L5
.L6:
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movzbl  -17(%rbp), %edx
        movb    %dl, (%rax)
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        leaq    1(%rax), %rdx
        movzbl  -18(%rbp), %eax
        movb    %al, (%rdx)
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $2, %rax
        movb    $0, (%rax)
        addl    $1, -24(%rbp)
        movzbl  -18(%rbp), %eax
        addl    $1, %eax
        movb    %al, -18(%rbp)
.L5:
        movq    -40(%rbp), %rax
        addq    $4, %rax
        movzbl  (%rax), %eax
        cmpb    %al, -18(%rbp)
        jle     .L6
        movzbl  -17(%rbp), %eax
        addl    $1, %eax
        movb    %al, -17(%rbp)
.L4:
        movq    -40(%rbp), %rax
        addq    $3, %rax
        movzbl  (%rax), %eax
        cmpb    %al, -17(%rbp)
        jle     .L7
        movq    -32(%rbp), %rax
        addq    $40, %rsp
        popq    %rbx
        popq    %rbp
        ret
