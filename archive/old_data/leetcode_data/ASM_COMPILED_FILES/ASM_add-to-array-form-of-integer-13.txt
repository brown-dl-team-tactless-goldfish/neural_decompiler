func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $16, %rsp
        movl    %edi, -4(%rbp)
        cvtsi2sd        -4(%rbp), %xmm0
        call    log10
        movapd  %xmm0, %xmm1
        movsd   .LC0(%rip), %xmm0
        addsd   %xmm1, %xmm0
        call    floor
        cvttsd2si       %xmm0, %eax
        leave
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $64, %rsp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movl    %edx, -48(%rbp)
        movq    %rcx, -56(%rbp)
        movl    -44(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -4(%rbp)
        movl    -48(%rbp), %eax
        movl    %eax, -8(%rbp)
        jmp     .L4
.L7:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %ecx
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    -8(%rbp), %edx
        addl    %ecx, %edx
        movl    %edx, (%rax)
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $9, %eax
        jg      .L5
        movl    $0, -8(%rbp)
        jmp     .L6
.L5:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -8(%rbp)
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %ecx
        movl    -8(%rbp), %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        negl    %eax
        movl    %eax, %edx
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rsi
        movq    -40(%rbp), %rax
        addq    %rsi, %rax
        addl    %ecx, %edx
        movl    %edx, (%rax)
        subl    $1, -4(%rbp)
.L4:
        cmpl    $0, -4(%rbp)
        jns     .L7
.L6:
        cmpl    $0, -8(%rbp)
        jne     .L8
        movq    -56(%rbp), %rax
        movl    -44(%rbp), %edx
        movl    %edx, (%rax)
        movq    -40(%rbp), %rax
        jmp     .L9
.L8:
        movl    -8(%rbp), %eax
        movl    %eax, %edi
        call    func_2
        movl    %eax, -12(%rbp)
        movl    -44(%rbp), %edx
        movl    -12(%rbp), %eax
        addl    %eax, %edx
        movq    -56(%rbp), %rax
        movl    %edx, (%rax)
        movl    -44(%rbp), %edx
        movl    -12(%rbp), %eax
        addl    %edx, %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -24(%rbp)
        jmp     .L10
.L11:
        movl    -12(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -24(%rbp), %rax
        leaq    (%rdx,%rax), %rsi
        movl    -8(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movl    %edx, (%rsi)
        movl    -8(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -8(%rbp)
        subl    $1, -12(%rbp)
.L10:
        cmpl    $0, -12(%rbp)
        jg      .L11
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        movl    (%rax), %eax
        subl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -24(%rbp), %rax
        addq    %rax, %rcx
        movq    -40(%rbp), %rax
        movq    %rax, %rsi
        movq    %rcx, %rdi
        call    memcpy
        movq    -24(%rbp), %rax
.L9:
        leave
        ret
.LC0:
        .long   0
        .long   1072693248
