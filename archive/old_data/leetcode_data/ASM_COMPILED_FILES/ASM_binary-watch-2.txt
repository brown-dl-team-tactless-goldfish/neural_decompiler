func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -20(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L2
.L3:
        movl    -20(%rbp), %eax
        andl    $1, %eax
        addl    %eax, -4(%rbp)
        sarl    -20(%rbp)
.L2:
        cmpl    $0, -20(%rbp)
        jne     .L3
        movl    -4(%rbp), %eax
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $312, %rsp
        movl    %edi, -308(%rbp)
        movq    %rsi, -320(%rbp)
        movl    $0, -20(%rbp)
        jmp     .L6
.L7:
        movl    -20(%rbp), %eax
        movl    %eax, %edi
        call    func_2
        movl    %eax, %edx
        movl    -20(%rbp), %eax
        cltq
        movl    %edx, -304(%rbp,%rax,4)
        addl    $1, -20(%rbp)
.L6:
        cmpl    $59, -20(%rbp)
        jle     .L7
        movl    $0, -24(%rbp)
        movl    $0, -28(%rbp)
        movl    $0, -32(%rbp)
        movl    $12, -36(%rbp)
        movl    $60, -40(%rbp)
        movl    -36(%rbp), %eax
        imull   -40(%rbp), %eax
        cltq
        sall    $3, %eax
        movl    %eax, -44(%rbp)
        movl    -44(%rbp), %eax
        cltq
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -56(%rbp)
        jmp     .L8
.L12:
        movl    $0, -28(%rbp)
        jmp     .L9
.L11:
        movl    -24(%rbp), %eax
        cltq
        movl    -304(%rbp,%rax,4), %edx
        movl    -28(%rbp), %eax
        cltq
        movl    -304(%rbp,%rax,4), %eax
        addl    %edx, %eax
        cmpl    %eax, -308(%rbp)
        jne     .L10
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        leaq    (%rdx,%rax), %rbx
        movl    $6, %edi
        call    malloc
        movq    %rax, (%rbx)
        addl    $1, -32(%rbp)
.L10:
        addl    $1, -28(%rbp)
.L9:
        movl    -28(%rbp), %eax
        cmpl    -40(%rbp), %eax
        jl      .L11
        addl    $1, -24(%rbp)
.L8:
        movl    -24(%rbp), %eax
        cmpl    -36(%rbp), %eax
        jl      .L12
        movq    -320(%rbp), %rax
        movl    -32(%rbp), %edx
        movl    %edx, (%rax)
        movq    -56(%rbp), %rax
        addq    $312, %rsp
        popq    %rbx
        popq    %rbp
        ret
