func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -8(%rbp)
        movq    %rsi, -16(%rbp)
        movq    -8(%rbp), %rax
        movl    (%rax), %edx
        movq    -16(%rbp), %rax
        movl    (%rax), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $88, %rsp
        movq    %rdi, -72(%rbp)
        movl    %esi, -76(%rbp)
        movl    %edx, -80(%rbp)
        movq    %rcx, -88(%rbp)
        movq    %r8, -96(%rbp)
        movl    $0, -20(%rbp)
        movq    $0, -32(%rbp)
        cmpq    $0, -72(%rbp)
        je      .L4
        cmpq    $0, -88(%rbp)
        je      .L4
        cmpq    $0, -96(%rbp)
        jne     .L5
.L4:
        movl    $0, %eax
        jmp     .L6
.L5:
        movl    -76(%rbp), %eax
        movslq  %eax, %rsi
        movq    -72(%rbp), %rax
        movl    $func_1, %ecx
        movl    $4, %edx
        movq    %rax, %rdi
        call    qsort
        movl    $0, -36(%rbp)
        jmp     .L7
.L29:
        cmpl    $0, -36(%rbp)
        jle     .L8
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -36(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L32
.L8:
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -36(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -36(%rbp), %eax
        cltq
        addq    $2, %rax
        leaq    0(,%rax,4), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -36(%rbp), %eax
        cltq
        addq    $3, %rax
        leaq    0(,%rax,4), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %edx, %eax
        cmpl    %eax, -80(%rbp)
        jl      .L33
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -76(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -12(%rax), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -76(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -8(%rax), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -76(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %edx, %eax
        cmpl    %eax, -80(%rbp)
        jg      .L34
        movl    -36(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -40(%rbp)
        jmp     .L13
.L28:
        movl    -36(%rbp), %eax
        addl    $1, %eax
        cmpl    %eax, -40(%rbp)
        jle     .L14
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -40(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L35
.L14:
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -40(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -40(%rbp), %eax
        cltq
        addq    $2, %rax
        leaq    0(,%rax,4), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %edx, %eax
        cmpl    %eax, -80(%rbp)
        jl      .L36
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -76(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -8(%rax), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -76(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %edx, %eax
        cmpl    %eax, -80(%rbp)
        jg      .L37
        movl    -40(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -44(%rbp)
        movl    -76(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -48(%rbp)
        jmp     .L18
.L27:
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -48(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %edx, %eax
        movl    %eax, -56(%rbp)
        movl    -56(%rbp), %eax
        cmpl    -80(%rbp), %eax
        jne     .L19
        movl    -20(%rbp), %eax
        addl    $1, %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -32(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    realloc
        movq    %rax, -32(%rbp)
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -32(%rbp), %rax
        leaq    (%rdx,%rax), %rbx
        movl    $16, %edi
        call    malloc
        movq    %rax, (%rbx)
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rax, %rdx
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rcx
        movq    -32(%rbp), %rax
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    (%rdx), %edx
        movl    %edx, (%rax)
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -32(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        addq    $4, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -32(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        addq    $8, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        movl    -48(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -32(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        addq    $12, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        jmp     .L20
.L22:
        addl    $1, -44(%rbp)
.L20:
        movl    -44(%rbp), %eax
        cmpl    -48(%rbp), %eax
        jge     .L23
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -44(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L22
        jmp     .L23
.L25:
        subl    $1, -48(%rbp)
.L23:
        movl    -44(%rbp), %eax
        cmpl    -48(%rbp), %eax
        jge     .L24
        movl    -48(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -48(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L25
.L24:
        addl    $1, -44(%rbp)
        subl    $1, -48(%rbp)
        addl    $1, -20(%rbp)
        jmp     .L18
.L19:
        movl    -56(%rbp), %eax
        cmpl    -80(%rbp), %eax
        jle     .L26
        subl    $1, -48(%rbp)
        jmp     .L18
.L26:
        addl    $1, -44(%rbp)
.L18:
        movl    -44(%rbp), %eax
        cmpl    -48(%rbp), %eax
        jl      .L27
        jmp     .L15
.L35:
        nop
        jmp     .L15
.L37:
        nop
.L15:
        addl    $1, -40(%rbp)
.L13:
        movl    -76(%rbp), %eax
        subl    $2, %eax
        cmpl    %eax, -40(%rbp)
        jl      .L28
        jmp     .L9
.L32:
        nop
        jmp     .L9
.L34:
        nop
        jmp     .L9
.L36:
        nop
.L9:
        addl    $1, -36(%rbp)
.L7:
        movl    -76(%rbp), %eax
        subl    $3, %eax
        cmpl    %eax, -36(%rbp)
        jl      .L29
        jmp     .L11
.L33:
        nop
.L11:
        movl    -20(%rbp), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, %rdx
        movq    -96(%rbp), %rax
        movq    %rdx, (%rax)
        movl    $0, -52(%rbp)
        jmp     .L30
.L31:
        movq    -96(%rbp), %rax
        movq    (%rax), %rax
        movl    -52(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    $4, (%rax)
        addl    $1, -52(%rbp)
.L30:
        movl    -52(%rbp), %eax
        cmpl    -20(%rbp), %eax
        jl      .L31
        movq    -88(%rbp), %rax
        movl    -20(%rbp), %edx
        movl    %edx, (%rax)
        movq    -32(%rbp), %rax
.L6:
        addq    $88, %rsp
        popq    %rbx
        popq    %rbp
        ret
