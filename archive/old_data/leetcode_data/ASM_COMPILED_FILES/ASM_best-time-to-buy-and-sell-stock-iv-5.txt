func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -4(%rbp)
        movl    %esi, -8(%rbp)
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jle     .L2
        movl    -4(%rbp), %eax
        jmp     .L3
.L2:
        movl    -8(%rbp), %eax
.L3:
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %r15
        pushq   %r14
        pushq   %r13
        pushq   %r12
        pushq   %rbx
        subq    $88, %rsp
        movl    %edi, -84(%rbp)
        movq    %rsi, -96(%rbp)
        movl    %edx, -88(%rbp)
        movq    %rsp, %rax
        movq    %rax, -120(%rbp)
        movl    -84(%rbp), %eax
        leal    1(%rax), %ecx
        movl    -88(%rbp), %eax
        leal    1(%rax), %esi
        movslq  %ecx, %rax
        subq    $1, %rax
        movq    %rax, -64(%rbp)
        movslq  %ecx, %rax
        movq    %rax, -112(%rbp)
        movq    $0, -104(%rbp)
        movslq  %ecx, %rax
        leaq    0(,%rax,8), %rbx
        movslq  %esi, %rax
        subq    $1, %rax
        movq    %rax, -72(%rbp)
        movslq  %ecx, %rax
        movq    %rax, %r14
        movl    $0, %r15d
        movslq  %esi, %rax
        movq    %rax, %r12
        movl    $0, %r13d
        movq    %r15, %rdx
        imulq   %r12, %rdx
        movq    %r13, %rax
        imulq   %r14, %rax
        leaq    (%rdx,%rax), %rdi
        movq    %r14, %rax
        mulq    %r12
        addq    %rdx, %rdi
        movq    %rdi, %rdx
        movslq  %ecx, %rax
        movq    %rax, %r10
        movl    $0, %r11d
        movslq  %esi, %rax
        movq    %rax, %r8
        movl    $0, %r9d
        movq    %r11, %rdx
        imulq   %r8, %rdx
        movq    %r9, %rax
        imulq   %r10, %rax
        leaq    (%rdx,%rax), %rdi
        movq    %r10, %rax
        mulq    %r8
        addq    %rdx, %rdi
        movq    %rdi, %rdx
        movslq  %ecx, %rdx
        movslq  %esi, %rax
        imulq   %rdx, %rax
        leaq    0(,%rax,8), %rdx
        movl    $16, %eax
        subq    $1, %rax
        addq    %rdx, %rax
        movl    $16, %edi
        movl    $0, %edx
        divq    %rdi
        imulq   $16, %rax, %rax
        subq    %rax, %rsp
        movq    %rsp, %rax
        addq    $3, %rax
        shrq    $2, %rax
        salq    $2, %rax
        movq    %rax, -80(%rbp)
        movslq  %ecx, %rdx
        movslq  %esi, %rax
        imulq   %rdx, %rax
        leaq    0(,%rax,8), %rdx
        movq    -80(%rbp), %rax
        movl    $0, %esi
        movq    %rax, %rdi
        call    memset
        movl    -88(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -56(%rbp)
        jmp     .L5
.L8:
        movl    $1, -52(%rbp)
        jmp     .L6
.L7:
        movq    %rbx, %rsi
        shrq    $2, %rsi
        movl    -56(%rbp), %eax
        leal    1(%rax), %edx
        movl    -52(%rbp), %eax
        leal    -1(%rax), %ecx
        movq    -80(%rbp), %rax
        movslq  %ecx, %rcx
        movslq  %edx, %rdx
        imulq   %rsi, %rdx
        addq    %rcx, %rcx
        addq    %rcx, %rdx
        movl    (%rax,%rdx,4), %edx
        movl    -56(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -96(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movq    %rbx, %rdi
        shrq    $2, %rdi
        movl    -56(%rbp), %eax
        leal    1(%rax), %r8d
        movq    -80(%rbp), %rax
        movl    -52(%rbp), %ecx
        movslq  %ecx, %rsi
        movslq  %r8d, %rcx
        imulq   %rdi, %rcx
        addq    %rsi, %rsi
        addq    %rsi, %rcx
        addq    $1, %rcx
        movl    (%rax,%rcx,4), %eax
        movq    %rbx, %r12
        shrq    $2, %r12
        movl    %edx, %esi
        movl    %eax, %edi
        call    func_2
        movl    %eax, %esi
        movq    -80(%rbp), %rax
        movl    -52(%rbp), %edx
        movslq  %edx, %rcx
        movl    -56(%rbp), %edx
        movslq  %edx, %rdx
        imulq   %r12, %rdx
        addq    %rcx, %rcx
        addq    %rcx, %rdx
        addq    $1, %rdx
        movl    %esi, (%rax,%rdx,4)
        movq    %rbx, %rsi
        shrq    $2, %rsi
        movl    -56(%rbp), %eax
        leal    1(%rax), %edi
        movq    -80(%rbp), %rax
        movl    -52(%rbp), %edx
        movslq  %edx, %rcx
        movslq  %edi, %rdx
        imulq   %rsi, %rdx
        addq    %rcx, %rcx
        addq    %rcx, %rdx
        addq    $1, %rdx
        movl    (%rax,%rdx,4), %edx
        movl    -56(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -96(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        subl    %eax, %edx
        movq    %rbx, %rdi
        shrq    $2, %rdi
        movl    -56(%rbp), %eax
        leal    1(%rax), %r8d
        movq    -80(%rbp), %rax
        movl    -52(%rbp), %ecx
        movslq  %ecx, %rsi
        movslq  %r8d, %rcx
        imulq   %rdi, %rcx
        addq    %rsi, %rsi
        addq    %rsi, %rcx
        movl    (%rax,%rcx,4), %eax
        movq    %rbx, %r12
        shrq    $2, %r12
        movl    %edx, %esi
        movl    %eax, %edi
        call    func_2
        movl    %eax, %esi
        movq    -80(%rbp), %rax
        movl    -52(%rbp), %edx
        movslq  %edx, %rcx
        movl    -56(%rbp), %edx
        movslq  %edx, %rdx
        imulq   %r12, %rdx
        addq    %rcx, %rcx
        addq    %rcx, %rdx
        movl    %esi, (%rax,%rdx,4)
        addl    $1, -52(%rbp)
.L6:
        movl    -52(%rbp), %eax
        cmpl    -84(%rbp), %eax
        jle     .L7
        subl    $1, -56(%rbp)
.L5:
        cmpl    $0, -56(%rbp)
        jns     .L8
        movq    -80(%rbp), %rax
        movl    -84(%rbp), %edx
        movslq  %edx, %rdx
        movl    (%rax,%rdx,8), %eax
        movq    -120(%rbp), %rsp
        leaq    -40(%rbp), %rsp
        popq    %rbx
        popq    %r12
        popq    %r13
        popq    %r14
        popq    %r15
        popq    %rbp
        ret
