func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $72, %rsp
        movq    %rdi, -56(%rbp)
        movl    %esi, -60(%rbp)
        movq    %rdx, -72(%rbp)
        movl    $0, -32(%rbp)
        movl    $0, -36(%rbp)
        movl    $0, -40(%rbp)
        movl    -60(%rbp), %eax
        movslq  %eax, %rdx
        movl    -60(%rbp), %eax
        subl    $1, %eax
        cltq
        imulq   %rax, %rdx
        movl    -60(%rbp), %eax
        subl    $2, %eax
        cltq
        imulq   %rdx, %rax
        salq    $3, %rax
        movabsq $-6148914691236517205, %rdx
        mulq    %rdx
        movq    %rdx, %rax
        shrq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -48(%rbp)
        movq    -72(%rbp), %rax
        movl    $0, (%rax)
        cmpl    $2, -60(%rbp)
        jg      .L2
        movq    -48(%rbp), %rax
        jmp     .L3
.L2:
        movl    -60(%rbp), %eax
        movslq  %eax, %rsi
        movq    -56(%rbp), %rax
        movl    $func_2, %ecx
        movl    $4, %edx
        movq    %rax, %rdi
        call    qsort
        movl    $0, -20(%rbp)
        jmp     .L4
.L8:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jns     .L5
        addl    $1, -32(%rbp)
        jmp     .L6
.L5:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L7
        addl    $1, -36(%rbp)
        jmp     .L6
.L7:
        addl    $1, -40(%rbp)
.L6:
        addl    $1, -20(%rbp)
.L4:
        movl    -20(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jl      .L8
        cmpl    $2, -36(%rbp)
        jle     .L9
        movq    -72(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %ecx
        movq    -72(%rbp), %rdx
        movl    %ecx, (%rdx)
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        leaq    (%rdx,%rax), %rbx
        movl    $0, %edx
        movl    $0, %esi
        movl    $0, %edi
        call    func_1
        movq    %rax, (%rbx)
.L9:
        cmpl    $0, -36(%rbp)
        jle     .L10
        movl    $0, -20(%rbp)
        movl    -60(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -24(%rbp)
        jmp     .L11
.L16:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %edx, %eax
        testl   %eax, %eax
        jns     .L12
        addl    $1, -20(%rbp)
        jmp     .L11
.L12:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %edx, %eax
        testl   %eax, %eax
        jle     .L13
        subl    $1, -24(%rbp)
        jmp     .L11
.L13:
        cmpl    $0, -20(%rbp)
        jle     .L14
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -20(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jne     .L14
        addl    $1, -20(%rbp)
        jmp     .L11
.L14:
        movl    -60(%rbp), %eax
        subl    $1, %eax
        cmpl    %eax, -24(%rbp)
        jge     .L15
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -24(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jne     .L15
        subl    $1, -24(%rbp)
        jmp     .L11
.L15:
        movl    -24(%rbp), %eax
        leal    -1(%rax), %edx
        movl    %edx, -24(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -20(%rbp), %eax
        leal    1(%rax), %ecx
        movl    %ecx, -20(%rbp)
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %ecx
        movq    -72(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %edi
        movq    -72(%rbp), %rsi
        movl    %edi, (%rsi)
        cltq
        leaq    0(,%rax,8), %rsi
        movq    -48(%rbp), %rax
        leaq    (%rsi,%rax), %rbx
        movl    $0, %esi
        movl    %ecx, %edi
        call    func_1
        movq    %rax, (%rbx)
.L11:
        movl    -20(%rbp), %eax
        cmpl    -32(%rbp), %eax
        jge     .L10
        movl    -32(%rbp), %edx
        movl    -36(%rbp), %eax
        addl    %edx, %eax
        cmpl    %eax, -24(%rbp)
        jge     .L16
.L10:
        cmpl    $1, -32(%rbp)
        jle     .L17
        cmpl    $0, -40(%rbp)
        jle     .L17
        movl    $0, -20(%rbp)
        jmp     .L18
.L27:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -60(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %edx, %eax
        testl   %eax, %eax
        js      .L19
        cmpl    $0, -20(%rbp)
        jle     .L20
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -20(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L19
.L20:
        movl    -20(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -24(%rbp)
        movl    -60(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -28(%rbp)
        jmp     .L21
.L26:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %edx, %eax
        testl   %eax, %eax
        jns     .L22
        addl    $1, -24(%rbp)
        jmp     .L21
.L22:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %edx, %eax
        testl   %eax, %eax
        jle     .L23
        subl    $1, -28(%rbp)
        jmp     .L21
.L23:
        movl    -20(%rbp), %eax
        addl    $1, %eax
        cmpl    %eax, -24(%rbp)
        jle     .L24
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -24(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jne     .L24
        addl    $1, -24(%rbp)
        jmp     .L21
.L24:
        movl    -60(%rbp), %eax
        subl    $1, %eax
        cmpl    %eax, -28(%rbp)
        jge     .L25
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -28(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jne     .L25
        subl    $1, -28(%rbp)
        jmp     .L21
.L25:
        movl    -28(%rbp), %eax
        leal    -1(%rax), %edx
        movl    %edx, -28(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -24(%rbp), %eax
        leal    1(%rax), %ecx
        movl    %ecx, -24(%rbp)
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %esi
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %ecx
        movq    -72(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %r8d
        movq    -72(%rbp), %rdi
        movl    %r8d, (%rdi)
        cltq
        leaq    0(,%rax,8), %rdi
        movq    -48(%rbp), %rax
        leaq    (%rdi,%rax), %rbx
        movl    %ecx, %edi
        call    func_1
        movq    %rax, (%rbx)
.L21:
        movl    -24(%rbp), %eax
        cmpl    -32(%rbp), %eax
        jge     .L19
        movl    -32(%rbp), %edx
        movl    -36(%rbp), %eax
        addl    %edx, %eax
        cmpl    %eax, -28(%rbp)
        jge     .L26
.L19:
        addl    $1, -20(%rbp)
.L18:
        movl    -20(%rbp), %eax
        cmpl    -32(%rbp), %eax
        jl      .L27
.L17:
        cmpl    $0, -32(%rbp)
        jle     .L28
        cmpl    $1, -40(%rbp)
        jle     .L28
        movl    -60(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -20(%rbp)
        jmp     .L29
.L38:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movq    -56(%rbp), %rax
        movl    (%rax), %eax
        addl    %edx, %eax
        testl   %eax, %eax
        jg      .L30
        movl    -60(%rbp), %eax
        subl    $1, %eax
        cmpl    %eax, -20(%rbp)
        jge     .L31
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -20(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L30
.L31:
        movl    -20(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -24(%rbp)
        movl    $0, -28(%rbp)
        jmp     .L32
.L37:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %edx, %eax
        testl   %eax, %eax
        jle     .L33
        subl    $1, -24(%rbp)
        jmp     .L32
.L33:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %edx, %eax
        testl   %eax, %eax
        jns     .L34
        addl    $1, -28(%rbp)
        jmp     .L32
.L34:
        movl    -20(%rbp), %eax
        subl    $1, %eax
        cmpl    %eax, -24(%rbp)
        jge     .L35
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -24(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jne     .L35
        subl    $1, -24(%rbp)
        jmp     .L32
.L35:
        cmpl    $0, -28(%rbp)
        jle     .L36
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -28(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jne     .L36
        addl    $1, -28(%rbp)
        jmp     .L32
.L36:
        movl    -28(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -28(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -24(%rbp), %eax
        leal    -1(%rax), %ecx
        movl    %ecx, -24(%rbp)
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %esi
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %ecx
        movq    -72(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %r8d
        movq    -72(%rbp), %rdi
        movl    %r8d, (%rdi)
        cltq
        leaq    0(,%rax,8), %rdi
        movq    -48(%rbp), %rax
        leaq    (%rdi,%rax), %rbx
        movl    %ecx, %edi
        call    func_1
        movq    %rax, (%rbx)
.L32:
        movl    -32(%rbp), %edx
        movl    -36(%rbp), %eax
        addl    %edx, %eax
        cmpl    %eax, -24(%rbp)
        jl      .L30
        movl    -28(%rbp), %eax
        cmpl    -32(%rbp), %eax
        jl      .L37
.L30:
        subl    $1, -20(%rbp)
.L29:
        movl    -32(%rbp), %edx
        movl    -36(%rbp), %eax
        addl    %edx, %eax
        cmpl    %eax, -20(%rbp)
        jge     .L38
.L28:
        movq    -48(%rbp), %rax
.L3:
        addq    $72, %rsp
        popq    %rbx
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -8(%rbp)
        movq    %rsi, -16(%rbp)
        movq    -8(%rbp), %rax
        movl    (%rax), %edx
        movq    -16(%rbp), %rax
        movl    (%rax), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movl    %edi, -20(%rbp)
        movl    %esi, -24(%rbp)
        movl    %edx, -28(%rbp)
        movl    $12, %edi
        call    malloc
        movq    %rax, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    -20(%rbp), %edx
        movl    %edx, (%rax)
        movq    -8(%rbp), %rax
        leaq    4(%rax), %rdx
        movl    -24(%rbp), %eax
        movl    %eax, (%rdx)
        movq    -8(%rbp), %rax
        leaq    8(%rax), %rdx
        movl    -28(%rbp), %eax
        movl    %eax, (%rdx)
        movq    -8(%rbp), %rax
        leave
        ret
