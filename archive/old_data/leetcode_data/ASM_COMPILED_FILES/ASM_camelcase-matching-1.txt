func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $64, %rsp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movq    %rdx, -56(%rbp)
        movq    %rcx, -64(%rbp)
        movq    -56(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -16(%rbp)
        movl    -44(%rbp), %eax
        cltq
        movl    $1, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, -24(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L2
.L8:
        movl    $0, -8(%rbp)
        movl    $0, -12(%rbp)
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -28(%rbp)
        jmp     .L3
.L7:
        movl    -12(%rbp), %eax
        cmpl    -16(%rbp), %eax
        jge     .L4
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rdx
        movl    -8(%rbp), %eax
        cltq
        addq    %rdx, %rax
        movzbl  (%rax), %edx
        movl    -12(%rbp), %eax
        movslq  %eax, %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        jne     .L4
        addl    $1, -12(%rbp)
        jmp     .L5
.L4:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rdx
        movl    -8(%rbp), %eax
        cltq
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $64, %al
        jle     .L5
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rdx
        movl    -8(%rbp), %eax
        cltq
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $90, %al
        jg      .L5
        movl    $0, -12(%rbp)
        jmp     .L6
.L5:
        addl    $1, -8(%rbp)
.L3:
        movl    -8(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jl      .L7
.L6:
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movl    -12(%rbp), %eax
        cmpl    -16(%rbp), %eax
        sete    %al
        movb    %al, (%rdx)
        addl    $1, -4(%rbp)
.L2:
        movl    -4(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L8
        movq    -64(%rbp), %rax
        movl    -44(%rbp), %edx
        movl    %edx, (%rax)
        movq    -24(%rbp), %rax
        leave
        ret
