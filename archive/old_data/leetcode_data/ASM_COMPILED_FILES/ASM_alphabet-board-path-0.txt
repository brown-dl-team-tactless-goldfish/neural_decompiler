.LC0:
        .string "a"
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $144, %rsp
        movq    %rdi, -136(%rbp)
        movq    $0, -128(%rbp)
        movq    $0, -120(%rbp)
        movq    $0, -112(%rbp)
        movq    $0, -104(%rbp)
        movq    $0, -96(%rbp)
        movq    $0, -88(%rbp)
        movl    $0, -80(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L2
.L3:
        movl    -4(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movl    -4(%rbp), %eax
        cltq
        movb    %dl, -128(%rbp,%rax,2)
        movl    -4(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, %edx
        movl    -4(%rbp), %eax
        cltq
        movb    %dl, -127(%rbp,%rax,2)
        addl    $1, -4(%rbp)
.L2:
        cmpl    $25, -4(%rbp)
        jle     .L3
        movq    $.LC0, -16(%rbp)
        movq    -136(%rbp), %rax
        movq    %rax, -24(%rbp)
        movl    $100, %edi
        call    malloc
        movq    %rax, -32(%rbp)
        movl    $100, -36(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L4
.L18:
        movl    -36(%rbp), %eax
        subl    -4(%rbp), %eax
        cmpl    $10, %eax
        jg      .L5
        addl    $11, -36(%rbp)
        movl    -36(%rbp), %eax
        movslq  %eax, %rdx
        movq    -32(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    realloc
        movq    %rax, -56(%rbp)
        cmpq    $0, -56(%rbp)
        je      .L5
        movq    -56(%rbp), %rax
        movq    %rax, -32(%rbp)
.L5:
        movq    -24(%rbp), %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        subl    $97, %eax
        movl    %eax, -60(%rbp)
        movq    -16(%rbp), %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        subl    $97, %eax
        movl    %eax, -64(%rbp)
        movl    -60(%rbp), %eax
        cltq
        movzbl  -128(%rbp,%rax,2), %eax
        movsbl  %al, %edx
        movl    -64(%rbp), %eax
        cltq
        movzbl  -128(%rbp,%rax,2), %eax
        movsbl  %al, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -40(%rbp)
        movl    -60(%rbp), %eax
        cltq
        movzbl  -127(%rbp,%rax,2), %eax
        movsbl  %al, %edx
        movl    -64(%rbp), %eax
        cltq
        movzbl  -127(%rbp,%rax,2), %eax
        movsbl  %al, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -44(%rbp)
        cmpl    $0, -40(%rbp)
        jns     .L6
        jmp     .L7
.L8:
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -4(%rbp)
        movslq  %eax, %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movb    $76, (%rax)
        addl    $1, -40(%rbp)
.L7:
        cmpl    $0, -40(%rbp)
        jne     .L8
.L6:
        cmpl    $0, -44(%rbp)
        jle     .L9
        jmp     .L10
.L11:
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -4(%rbp)
        movslq  %eax, %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movb    $68, (%rax)
        subl    $1, -44(%rbp)
.L10:
        cmpl    $0, -44(%rbp)
        jne     .L11
.L9:
        cmpl    $0, -44(%rbp)
        jns     .L12
        jmp     .L13
.L14:
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -4(%rbp)
        movslq  %eax, %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movb    $85, (%rax)
        addl    $1, -44(%rbp)
.L13:
        cmpl    $0, -44(%rbp)
        jne     .L14
.L12:
        cmpl    $0, -40(%rbp)
        jle     .L15
        jmp     .L16
.L17:
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -4(%rbp)
        movslq  %eax, %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movb    $82, (%rax)
        subl    $1, -40(%rbp)
.L16:
        cmpl    $0, -40(%rbp)
        jne     .L17
.L15:
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -4(%rbp)
        movslq  %eax, %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movb    $33, (%rax)
        movq    -24(%rbp), %rax
        movq    %rax, -16(%rbp)
        addq    $1, -24(%rbp)
.L4:
        movq    -24(%rbp), %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        jne     .L18
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movb    $0, (%rax)
        movq    -32(%rbp), %rax
        leave
        ret
