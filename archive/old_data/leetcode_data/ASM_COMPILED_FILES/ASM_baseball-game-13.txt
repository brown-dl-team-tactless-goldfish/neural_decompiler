func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $56, %rsp
        movq    %rdi, -56(%rbp)
        movl    %esi, -60(%rbp)
        movq    %rsp, %rax
        movq    %rax, %rbx
        movl    -60(%rbp), %eax
        movslq  %eax, %rdx
        subq    $1, %rdx
        movq    %rdx, -40(%rbp)
        movslq  %eax, %rdx
        movq    %rdx, %r10
        movl    $0, %r11d
        movslq  %eax, %rdx
        movq    %rdx, %r8
        movl    $0, %r9d
        cltq
        leaq    0(,%rax,4), %rdx
        movl    $16, %eax
        subq    $1, %rax
        addq    %rdx, %rax
        movl    $16, %esi
        movl    $0, %edx
        divq    %rsi
        imulq   $16, %rax, %rax
        subq    %rax, %rsp
        movq    %rsp, %rax
        addq    $3, %rax
        shrq    $2, %rax
        salq    $2, %rax
        movq    %rax, -48(%rbp)
        movl    $0, -28(%rbp)
        movl    $0, -24(%rbp)
        jmp     .L2
.L7:
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movzbl  (%rax), %eax
        cmpb    $43, %al
        jne     .L3
        movl    -28(%rbp), %eax
        leal    -1(%rax), %edx
        movq    -48(%rbp), %rax
        movslq  %edx, %rdx
        movl    (%rax,%rdx,4), %ecx
        movl    -28(%rbp), %eax
        leal    -2(%rax), %edx
        movq    -48(%rbp), %rax
        movslq  %edx, %rdx
        movl    (%rax,%rdx,4), %eax
        addl    %eax, %ecx
        movq    -48(%rbp), %rax
        movl    -28(%rbp), %edx
        movslq  %edx, %rdx
        movl    %ecx, (%rax,%rdx,4)
        jmp     .L4
.L3:
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movzbl  (%rax), %eax
        cmpb    $68, %al
        jne     .L5
        movl    -28(%rbp), %eax
        leal    -1(%rax), %edx
        movq    -48(%rbp), %rax
        movslq  %edx, %rdx
        movl    (%rax,%rdx,4), %eax
        leal    (%rax,%rax), %ecx
        movq    -48(%rbp), %rax
        movl    -28(%rbp), %edx
        movslq  %edx, %rdx
        movl    %ecx, (%rax,%rdx,4)
        jmp     .L4
.L5:
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movzbl  (%rax), %eax
        cmpb    $67, %al
        jne     .L6
        movl    -28(%rbp), %eax
        leal    -1(%rax), %edx
        movq    -48(%rbp), %rax
        movslq  %edx, %rdx
        movl    $0, (%rax,%rdx,4)
        subl    $2, -28(%rbp)
        jmp     .L4
.L6:
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    %rax, %rdi
        call    atoi
        movl    %eax, %ecx
        movq    -48(%rbp), %rax
        movl    -28(%rbp), %edx
        movslq  %edx, %rdx
        movl    %ecx, (%rax,%rdx,4)
.L4:
        addl    $1, -28(%rbp)
        addl    $1, -24(%rbp)
.L2:
        movl    -24(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jl      .L7
        movl    $0, -20(%rbp)
        jmp     .L8
.L9:
        movq    -48(%rbp), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        movl    (%rax,%rdx,4), %eax
        addl    %eax, -32(%rbp)
        addl    $1, -20(%rbp)
.L8:
        movl    -20(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jl      .L9
        movl    -32(%rbp), %eax
        movq    %rbx, %rsp
        movq    -8(%rbp), %rbx
        leave
        ret
