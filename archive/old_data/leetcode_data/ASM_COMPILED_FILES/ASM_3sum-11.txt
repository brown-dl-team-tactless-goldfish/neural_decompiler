func_7:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -4(%rbp)
        movl    -4(%rbp), %eax
        addl    %eax, %eax
        popq    %rbp
        ret
func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -4(%rbp)
        movl    -4(%rbp), %eax
        addl    %eax, %eax
        addl    $1, %eax
        popq    %rbp
        ret
func_5:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -8(%rbp)
        movq    %rsi, -16(%rbp)
        movq    -8(%rbp), %rax
        movl    (%rax), %edx
        movq    -16(%rbp), %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L7
        movq    -8(%rbp), %rax
        movl    (%rax), %edx
        movq    -16(%rbp), %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movq    -8(%rbp), %rax
        movl    %edx, (%rax)
        movq    -8(%rbp), %rax
        movl    (%rax), %edx
        movq    -16(%rbp), %rax
        movl    (%rax), %eax
        subl    %eax, %edx
        movq    -16(%rbp), %rax
        movl    %edx, (%rax)
        movq    -8(%rbp), %rax
        movl    (%rax), %edx
        movq    -16(%rbp), %rax
        movl    (%rax), %eax
        subl    %eax, %edx
        movq    -8(%rbp), %rax
        movl    %edx, (%rax)
.L7:
        nop
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    %edx, -32(%rbp)
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        movl    $0, -12(%rbp)
.L15:
        movl    -28(%rbp), %eax
        movl    %eax, %edi
        call    func_7
        movl    %eax, -8(%rbp)
        movl    -28(%rbp), %eax
        movl    %eax, %edi
        call    func_3
        movl    %eax, -12(%rbp)
        movl    -8(%rbp), %eax
        cmpl    -32(%rbp), %eax
        jge     .L9
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jge     .L9
        movl    -8(%rbp), %eax
        movl    %eax, -4(%rbp)
        jmp     .L10
.L9:
        movl    -28(%rbp), %eax
        movl    %eax, -4(%rbp)
.L10:
        movl    -12(%rbp), %eax
        cmpl    -32(%rbp), %eax
        jge     .L11
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jge     .L11
        movl    -12(%rbp), %eax
        movl    %eax, -4(%rbp)
.L11:
        movl    -4(%rbp), %eax
        cmpl    -28(%rbp), %eax
        je      .L16
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    func_5
        movl    -4(%rbp), %eax
        movl    %eax, -28(%rbp)
        jmp     .L15
.L16:
        nop
        nop
        leave
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    -28(%rbp), %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        movl    %eax, -4(%rbp)
        jmp     .L18
.L19:
        movl    -28(%rbp), %edx
        movl    -4(%rbp), %ecx
        movq    -24(%rbp), %rax
        movl    %ecx, %esi
        movq    %rax, %rdi
        call    func_1
        subl    $1, -4(%rbp)
.L18:
        cmpl    $0, -4(%rbp)
        jns     .L19
        nop
        leave
        ret
func_4:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        cmpq    $0, -24(%rbp)
        je      .L26
        cmpl    $0, -28(%rbp)
        je      .L26
        movl    -28(%rbp), %edx
        movq    -24(%rbp), %rax
        movl    %edx, %esi
        movq    %rax, %rdi
        call    func_2
        movl    -28(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -4(%rbp)
        jmp     .L24
.L25:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movq    -24(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    func_5
        movl    -4(%rbp), %edx
        movq    -24(%rbp), %rax
        movl    $0, %esi
        movq    %rax, %rdi
        call    func_1
        subl    $1, -4(%rbp)
.L24:
        cmpl    $0, -4(%rbp)
        jns     .L25
        jmp     .L20
.L26:
        nop
.L20:
        leave
        ret
func_6:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $88, %rsp
        movq    %rdi, -72(%rbp)
        movl    %esi, -76(%rbp)
        movq    %rdx, -88(%rbp)
        cmpl    $2, -76(%rbp)
        jg      .L28
        movl    $0, %eax
        jmp     .L29
.L28:
        movq    -72(%rbp), %rax
        movq    %rax, -24(%rbp)
        movl    -76(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movq    %rax, -32(%rbp)
        movq    $0, -40(%rbp)
        movl    $8, %esi
        movl    $4048, %edi
        call    calloc
        movq    %rax, -56(%rbp)
        movl    $0, -44(%rbp)
        movl    $0, -60(%rbp)
        movl    -76(%rbp), %edx
        movq    -72(%rbp), %rax
        movl    %edx, %esi
        movq    %rax, %rdi
        call    func_4
        jmp     .L30
.L48:
        movq    -24(%rbp), %rax
        addq    $4, %rax
        movq    %rax, -40(%rbp)
        jmp     .L31
.L47:
        movq    -32(%rbp), %rax
        movl    (%rax), %edx
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        addl    %edx, %eax
        movl    %eax, -60(%rbp)
        movq    -40(%rbp), %rax
        movl    (%rax), %edx
        movl    -60(%rbp), %eax
        addl    %edx, %eax
        testl   %eax, %eax
        jne     .L32
        cmpl    $0, -44(%rbp)
        je      .L33
        movq    -24(%rbp), %rax
        movl    (%rax), %edx
        movl    -44(%rbp), %eax
        cltq
        salq    $3, %rax
        leaq    -8(%rax), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jne     .L33
        movq    -40(%rbp), %rax
        movl    (%rax), %edx
        movl    -44(%rbp), %eax
        cltq
        salq    $3, %rax
        leaq    -8(%rax), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jne     .L33
        subq    $4, -32(%rbp)
        jmp     .L31
.L33:
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        leaq    (%rdx,%rax), %rbx
        movl    $12, %edi
        call    malloc
        movq    %rax, (%rbx)
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    -24(%rbp), %rdx
        movl    (%rdx), %edx
        movl    %edx, (%rax)
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        leaq    4(%rax), %rdx
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        leaq    8(%rax), %rdx
        movq    -32(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        addl    $1, -44(%rbp)
        jmp     .L34
.L36:
        addq    $4, -24(%rbp)
.L34:
        movq    -24(%rbp), %rax
        cmpq    -32(%rbp), %rax
        jnb     .L37
        movq    -24(%rbp), %rax
        movl    (%rax), %edx
        movq    -24(%rbp), %rax
        addq    $4, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L36
        jmp     .L37
.L39:
        subq    $4, -32(%rbp)
.L37:
        movq    -24(%rbp), %rax
        cmpq    -32(%rbp), %rax
        jnb     .L38
        movq    -32(%rbp), %rax
        movl    (%rax), %edx
        movq    -32(%rbp), %rax
        subq    $4, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L39
.L38:
        subq    $4, -32(%rbp)
        jmp     .L31
.L32:
        cmpl    $0, -60(%rbp)
        jle     .L40
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jns     .L41
.L40:
        cmpl    $0, -60(%rbp)
        jns     .L42
        movq    -32(%rbp), %rax
        subq    $4, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        js      .L41
.L42:
        movq    -32(%rbp), %rax
        subq    $4, %rax
        cmpq    %rax, -40(%rbp)
        jne     .L43
.L41:
        movq    -24(%rbp), %rax
        addq    $4, %rax
        movq    %rax, -40(%rbp)
        jmp     .L44
.L46:
        subq    $4, -32(%rbp)
.L44:
        movq    -24(%rbp), %rax
        cmpq    -32(%rbp), %rax
        jnb     .L45
        movq    -32(%rbp), %rax
        movl    (%rax), %edx
        movq    -32(%rbp), %rax
        subq    $4, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L46
.L45:
        subq    $4, -32(%rbp)
        jmp     .L31
.L43:
        addq    $4, -40(%rbp)
.L31:
        movq    -40(%rbp), %rax
        cmpq    -32(%rbp), %rax
        jb      .L47
        addq    $4, -24(%rbp)
        movl    -76(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movq    %rax, -32(%rbp)
.L30:
        movq    -32(%rbp), %rax
        subq    $4, %rax
        cmpq    %rax, -24(%rbp)
        jb      .L48
        movq    -88(%rbp), %rax
        movl    -44(%rbp), %edx
        movl    %edx, (%rax)
        movq    -56(%rbp), %rax
.L29:
        addq    $88, %rsp
        popq    %rbx
        popq    %rbp
        ret
