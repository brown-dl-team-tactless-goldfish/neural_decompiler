func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $96, %rsp
        movq    %rdi, -88(%rbp)
        movq    %rsi, -96(%rbp)
        movq    $0, -80(%rbp)
        movq    $0, -72(%rbp)
        movq    $0, -64(%rbp)
        movq    $0, -56(%rbp)
        movq    $0, -48(%rbp)
        movl    $0, -20(%rbp)
        movl    $0, -24(%rbp)
        movq    -88(%rbp), %rax
        movq    %rax, -8(%rbp)
        jmp     .L2
.L3:
        movq    -8(%rbp), %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        subl    $48, %eax
        movslq  %eax, %rdx
        movl    -80(%rbp,%rdx,4), %edx
        addl    $1, %edx
        cltq
        movl    %edx, -80(%rbp,%rax,4)
        addq    $1, -8(%rbp)
.L2:
        movq    -8(%rbp), %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        jne     .L3
        movq    -88(%rbp), %rax
        movq    %rax, -8(%rbp)
        movq    -96(%rbp), %rax
        movq    %rax, -16(%rbp)
        jmp     .L4
.L10:
        movq    -8(%rbp), %rax
        movzbl  (%rax), %edx
        movq    -16(%rbp), %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        jne     .L5
        addl    $1, -20(%rbp)
        movq    -16(%rbp), %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        subl    $48, %eax
        cltq
        movl    -80(%rbp,%rax,4), %eax
        testl   %eax, %eax
        je      .L6
        movq    -16(%rbp), %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        subl    $48, %eax
        movslq  %eax, %rdx
        movl    -80(%rbp,%rdx,4), %edx
        subl    $1, %edx
        cltq
        movl    %edx, -80(%rbp,%rax,4)
        jmp     .L8
.L6:
        subl    $1, -24(%rbp)
        jmp     .L8
.L5:
        movq    -16(%rbp), %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        subl    $48, %eax
        cltq
        movl    -80(%rbp,%rax,4), %eax
        testl   %eax, %eax
        je      .L8
        addl    $1, -24(%rbp)
        movq    -16(%rbp), %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        subl    $48, %eax
        movslq  %eax, %rdx
        movl    -80(%rbp,%rdx,4), %edx
        subl    $1, %edx
        cltq
        movl    %edx, -80(%rbp,%rax,4)
.L8:
        addq    $1, -8(%rbp)
        addq    $1, -16(%rbp)
.L4:
        movq    -8(%rbp), %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        je      .L9
        movq    -16(%rbp), %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        jne     .L10
.L9:
        movl    $1, %esi
        movl    $9, %edi
        call    calloc
        movq    %rax, -32(%rbp)
        movq    -32(%rbp), %rax
        leave
        ret
