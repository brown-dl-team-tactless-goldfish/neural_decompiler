func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $56, %rsp
        movq    %rdi, -56(%rbp)
        movl    %esi, -60(%rbp)
        cmpl    $0, -60(%rbp)
        jne     .L2
        movl    $0, %eax
        jmp     .L3
.L2:
        movl    -60(%rbp), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -32(%rbp)
        movl    -60(%rbp), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -40(%rbp)
        movq    -32(%rbp), %rax
        movl    $0, (%rax)
        movq    -56(%rbp), %rax
        movl    (%rax), %eax
        negl    %eax
        movl    %eax, %edx
        movq    -40(%rbp), %rax
        movl    %edx, (%rax)
        movl    $1, -20(%rbp)
        jmp     .L4
.L7:
        movl    -20(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -20(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -32(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        movl    -20(%rbp), %ecx
        movslq  %ecx, %rcx
        leaq    0(,%rcx,4), %rsi
        movq    -32(%rbp), %rcx
        leaq    (%rsi,%rcx), %rbx
        movl    %edx, %esi
        movl    %eax, %edi
        movl    $0, %eax
        call    func_2
        movl    %eax, (%rbx)
        cmpl    $1, -20(%rbp)
        jle     .L5
        movl    -20(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -8(%rax), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        subl    %eax, %edx
        movl    -20(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        movl    -20(%rbp), %ecx
        movslq  %ecx, %rcx
        leaq    0(,%rcx,4), %rsi
        movq    -40(%rbp), %rcx
        leaq    (%rsi,%rcx), %rbx
        movl    %edx, %esi
        movl    %eax, %edi
        movl    $0, %eax
        call    func_2
        movl    %eax, (%rbx)
        jmp     .L6
.L5:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        negl    %eax
        movl    %eax, %edx
        movl    -20(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        movl    -20(%rbp), %ecx
        movslq  %ecx, %rcx
        leaq    0(,%rcx,4), %rsi
        movq    -40(%rbp), %rcx
        leaq    (%rsi,%rcx), %rbx
        movl    %edx, %esi
        movl    %eax, %edi
        movl    $0, %eax
        call    func_2
        movl    %eax, (%rbx)
.L6:
        addl    $1, -20(%rbp)
.L4:
        movl    -20(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jl      .L7
        movl    -60(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
.L3:
        addq    $56, %rsp
        popq    %rbx
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -4(%rbp)
        movl    %esi, -8(%rbp)
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jle     .L9
        movl    -4(%rbp), %eax
        jmp     .L10
.L9:
        movl    -8(%rbp), %eax
.L10:
        popq    %rbp
        ret
