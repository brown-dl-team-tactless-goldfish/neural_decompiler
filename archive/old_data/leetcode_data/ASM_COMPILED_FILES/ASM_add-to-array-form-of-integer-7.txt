func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %r12
        pushq   %rbx
        subq    $80, %rsp
        movq    %rdi, -72(%rbp)
        movl    %esi, -76(%rbp)
        movl    %edx, -80(%rbp)
        movq    %rcx, -88(%rbp)
        movl    $10001, -32(%rbp)
        movl    -32(%rbp), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -40(%rbp)
        movl    -32(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -20(%rbp)
        movl    -76(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -24(%rbp)
        movl    $0, -28(%rbp)
        jmp     .L2
.L7:
        cmpl    $0, -24(%rbp)
        js      .L3
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        jmp     .L4
.L3:
        movl    $0, %eax
.L4:
        movl    -28(%rbp), %edx
        leal    (%rax,%rdx), %esi
        movl    -80(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        leal    (%rsi,%rdx), %eax
        movl    %eax, -44(%rbp)
        movl    -80(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -80(%rbp)
        cmpl    $9, -44(%rbp)
        setg    %al
        movzbl  %al, %eax
        movl    %eax, -28(%rbp)
        cmpl    $0, -28(%rbp)
        je      .L5
        movl    $10, %ecx
        jmp     .L6
.L5:
        movl    $0, %ecx
.L6:
        movl    -20(%rbp), %eax
        leal    -1(%rax), %edx
        movl    %edx, -20(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    -44(%rbp), %edx
        subl    %ecx, %edx
        movl    %edx, (%rax)
        subl    $1, -24(%rbp)
.L2:
        cmpl    $0, -24(%rbp)
        jns     .L7
        cmpl    $0, -80(%rbp)
        jne     .L7
        cmpl    $0, -28(%rbp)
        jne     .L7
        movl    -32(%rbp), %eax
        subl    -20(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -48(%rbp)
        movl    -48(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %r12
        movl    -20(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        leaq    (%rdx,%rax), %rbx
        movl    -48(%rbp), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -56(%rbp)
        movq    -56(%rbp), %rax
        movq    %r12, %rdx
        movq    %rbx, %rsi
        movq    %rax, %rdi
        call    memcpy
        movq    -40(%rbp), %rax
        movq    %rax, %rdi
        call    free
        movq    -88(%rbp), %rax
        movl    -48(%rbp), %edx
        movl    %edx, (%rax)
        movq    -56(%rbp), %rax
        addq    $80, %rsp
        popq    %rbx
        popq    %r12
        popq    %rbp
        ret
