func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        cmpq    $0, -24(%rbp)
        jne     .L2
        movl    $0, %eax
        jmp     .L3
.L2:
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        testq   %rax, %rax
        jne     .L4
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        testq   %rax, %rax
        jne     .L4
        movl    $1, %eax
        jmp     .L3
.L4:
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, %rdi
        call    func_1
        movl    %eax, -4(%rbp)
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, %rdi
        call    func_1
        movl    %eax, -8(%rbp)
        cvtsi2sd        -8(%rbp), %xmm1
        cvtsi2sd        -4(%rbp), %xmm0
        call    fmax
        movapd  %xmm0, %xmm1
        movsd   .LC0(%rip), %xmm0
        addsd   %xmm1, %xmm0
        cvttsd2si       %xmm0, %eax
.L3:
        leave
        ret
func_1_start:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movq    %rdx, -40(%rbp)
        movq    %rcx, -48(%rbp)
        cmpq    $0, -24(%rbp)
        jne     .L6
        movl    $0, %eax
        jmp     .L7
.L6:
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        cmpl    %eax, -28(%rbp)
        jne     .L8
        movq    -24(%rbp), %rax
        movq    %rax, %rdi
        call    func_1
        leal    -1(%rax), %edx
        movq    -40(%rbp), %rax
        movl    %edx, (%rax)
        movl    $-1, %eax
        jmp     .L7
.L8:
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        testq   %rax, %rax
        jne     .L9
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        testq   %rax, %rax
        jne     .L9
        movl    $1, %eax
        jmp     .L7
.L9:
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    -48(%rbp), %rcx
        movq    -40(%rbp), %rdx
        movl    -28(%rbp), %esi
        movq    %rax, %rdi
        call    func_1_start
        movl    %eax, -4(%rbp)
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        movq    -48(%rbp), %rcx
        movq    -40(%rbp), %rdx
        movl    -28(%rbp), %esi
        movq    %rax, %rdi
        call    func_1_start
        movl    %eax, -8(%rbp)
        cmpl    $-1, -4(%rbp)
        jne     .L10
        movq    -48(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %edx
        movq    -48(%rbp), %rax
        movl    %edx, (%rax)
        movq    -48(%rbp), %rax
        movl    (%rax), %edx
        movl    -8(%rbp), %eax
        addl    %edx, %eax
        cvtsi2sd        %eax, %xmm1
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        cvtsi2sd        %eax, %xmm0
        call    fmax
        cvttsd2si       %xmm0, %edx
        movq    -40(%rbp), %rax
        movl    %edx, (%rax)
        movl    $-1, %eax
        jmp     .L7
.L10:
        cmpl    $-1, -8(%rbp)
        jne     .L11
        movq    -48(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %edx
        movq    -48(%rbp), %rax
        movl    %edx, (%rax)
        movq    -48(%rbp), %rax
        movl    (%rax), %edx
        movl    -4(%rbp), %eax
        addl    %edx, %eax
        cvtsi2sd        %eax, %xmm1
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        cvtsi2sd        %eax, %xmm0
        call    fmax
        cvttsd2si       %xmm0, %edx
        movq    -40(%rbp), %rax
        movl    %edx, (%rax)
        movl    $-1, %eax
        jmp     .L7
.L11:
        cvtsi2sd        -8(%rbp), %xmm1
        cvtsi2sd        -4(%rbp), %xmm0
        call    fmax
        movapd  %xmm0, %xmm1
        movsd   .LC0(%rip), %xmm0
        addsd   %xmm1, %xmm0
        cvttsd2si       %xmm0, %eax
.L7:
        leave
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        cmpq    $0, -24(%rbp)
        jne     .L13
        movl    $0, %eax
        jmp     .L17
.L13:
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        testq   %rax, %rax
        jne     .L15
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        testq   %rax, %rax
        jne     .L15
        movl    $0, %eax
        jmp     .L17
.L15:
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        cmpl    %eax, -28(%rbp)
        jne     .L16
        movq    -24(%rbp), %rax
        movq    %rax, %rdi
        call    func_1
        subl    $1, %eax
        jmp     .L17
.L16:
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        leaq    -8(%rbp), %rcx
        leaq    -4(%rbp), %rdx
        movl    -28(%rbp), %esi
        movq    -24(%rbp), %rax
        movq    %rax, %rdi
        call    func_1_start
        movl    -4(%rbp), %eax
.L17:
        leave
        ret
.LC0:
        .long   0
        .long   1072693248
