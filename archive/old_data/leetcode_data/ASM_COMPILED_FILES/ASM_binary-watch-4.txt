func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -20(%rbp)
        cmpl    $0, -20(%rbp)
        jne     .L2
        movl    $0, %eax
        jmp     .L3
.L2:
        cmpl    $1, -20(%rbp)
        jne     .L4
        movl    $1, %eax
        jmp     .L3
.L4:
        movl    $0, -4(%rbp)
        jmp     .L5
.L6:
        movl    -20(%rbp), %eax
        subl    $1, %eax
        andl    %eax, -20(%rbp)
        addl    $1, -4(%rbp)
.L5:
        cmpl    $0, -20(%rbp)
        jne     .L6
        movl    -4(%rbp), %eax
.L3:
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $56, %rsp
        movl    %edi, -52(%rbp)
        movq    %rsi, -64(%rbp)
        movq    -64(%rbp), %rax
        movl    $0, (%rax)
        movl    $1600, %edi
        call    malloc
        movq    %rax, -40(%rbp)
        movl    $0, -20(%rbp)
        jmp     .L8
.L9:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        leaq    (%rdx,%rax), %rbx
        movl    $6, %edi
        call    malloc
        movq    %rax, (%rbx)
        addl    $1, -20(%rbp)
.L8:
        cmpl    $199, -20(%rbp)
        jle     .L9
        movl    $0, -24(%rbp)
        jmp     .L10
.L13:
        movl    $0, -28(%rbp)
        jmp     .L11
.L12:
        movl    -24(%rbp), %eax
        movl    %eax, %edi
        call    func_2
        movl    -28(%rbp), %eax
        movl    %eax, %edi
        call    func_2
        addl    $1, -28(%rbp)
.L11:
        cmpl    $59, -28(%rbp)
        jle     .L12
        addl    $1, -24(%rbp)
.L10:
        cmpl    $11, -24(%rbp)
        jle     .L13
        movq    -40(%rbp), %rax
        addq    $56, %rsp
        popq    %rbx
        popq    %rbp
        ret
