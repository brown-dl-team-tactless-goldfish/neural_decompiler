.LC0:
        .string ""
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movq    -24(%rbp), %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        je      .L2
        movq    -24(%rbp), %rax
        addq    $1, %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        jne     .L3
.L2:
        movl    $.LC0, %eax
        jmp     .L4
.L3:
        movl    $0, -4(%rbp)
        jmp     .L5
.L7:
        addl    $1, -4(%rbp)
.L5:
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        je      .L6
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $97, %al
        je      .L7
.L6:
        movl    -4(%rbp), %eax
        movl    %eax, -8(%rbp)
        jmp     .L8
.L9:
        addl    $1, -8(%rbp)
.L8:
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        jne     .L9
        movl    -8(%rbp), %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        cmpl    %eax, -4(%rbp)
        jl      .L10
        subl    $1, -8(%rbp)
        movl    -8(%rbp), %eax
        movl    %eax, -4(%rbp)
.L10:
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $97, %al
        jne     .L11
        movl    $98, %ecx
        jmp     .L12
.L11:
        movl    $97, %ecx
.L12:
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movb    %cl, (%rax)
        movq    -24(%rbp), %rax
.L4:
        popq    %rbp
        ret
