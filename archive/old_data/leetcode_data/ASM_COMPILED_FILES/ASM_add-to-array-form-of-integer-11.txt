func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $64, %rsp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movl    %edx, -48(%rbp)
        movq    %rcx, -56(%rbp)
        cmpl    $0, -48(%rbp)
        jne     .L2
        movq    -56(%rbp), %rax
        movl    -44(%rbp), %edx
        movl    %edx, (%rax)
        movq    -40(%rbp), %rax
        jmp     .L3
.L2:
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        movl    -44(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -12(%rbp)
        jmp     .L4
.L7:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %esi
        movl    -48(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        addl    %esi, %edx
        movl    -4(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, -8(%rbp)
        cmpl    $9, -8(%rbp)
        jle     .L5
        movl    -8(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -4(%rbp)
        movl    -8(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %eax
        movl    %eax, -8(%rbp)
        jmp     .L6
.L5:
        movl    $0, -4(%rbp)
.L6:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rax, %rdx
        movl    -8(%rbp), %eax
        movl    %eax, (%rdx)
        movl    -48(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -48(%rbp)
        subl    $1, -12(%rbp)
.L4:
        cmpl    $0, -12(%rbp)
        jns     .L7
        movl    $0, -16(%rbp)
        cmpl    $0, -48(%rbp)
        jle     .L8
        cvtsi2sd        -48(%rbp), %xmm0
        call    log10
        movapd  %xmm0, %xmm1
        movsd   .LC0(%rip), %xmm0
        addsd   %xmm1, %xmm0
        cvttsd2si       %xmm0, %eax
        movl    %eax, -16(%rbp)
.L8:
        cmpl    $0, -4(%rbp)
        jle     .L9
        addl    $1, -16(%rbp)
.L9:
        cmpl    $0, -16(%rbp)
        js      .L10
        movl    -44(%rbp), %edx
        movl    -16(%rbp), %eax
        addl    %eax, %edx
        movq    -56(%rbp), %rax
        movl    %edx, (%rax)
        jmp     .L11
.L10:
        movq    -56(%rbp), %rax
        movl    -44(%rbp), %edx
        movl    %edx, (%rax)
.L11:
        movq    -56(%rbp), %rax
        movl    (%rax), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -32(%rbp)
        cmpl    $0, -16(%rbp)
        js      .L12
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -32(%rbp), %rax
        addq    %rax, %rcx
        movq    -40(%rbp), %rax
        movq    %rax, %rsi
        movq    %rcx, %rdi
        call    memcpy
        jmp     .L13
.L12:
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rcx
        movq    -32(%rbp), %rax
        movq    %rcx, %rsi
        movq    %rax, %rdi
        call    memcpy
.L13:
        cmpl    $0, -16(%rbp)
        js      .L14
        movl    -16(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -20(%rbp)
        jmp     .L15
.L18:
        movl    -48(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movl    -4(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, -8(%rbp)
        cmpl    $9, -8(%rbp)
        jle     .L16
        movl    -8(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -4(%rbp)
        movl    -8(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %eax
        movl    %eax, -8(%rbp)
        jmp     .L17
.L16:
        movl    $0, -4(%rbp)
.L17:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rax, %rdx
        movl    -8(%rbp), %eax
        movl    %eax, (%rdx)
        movl    -48(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -48(%rbp)
        subl    $1, -20(%rbp)
.L15:
        cmpl    $0, -20(%rbp)
        jns     .L18
.L14:
        movq    -32(%rbp), %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        je      .L19
        movq    -32(%rbp), %rax
        jmp     .L3
.L19:
        movq    -56(%rbp), %rax
        movl    (%rax), %eax
        leal    -1(%rax), %edx
        movq    -56(%rbp), %rax
        movl    %edx, (%rax)
        movq    -32(%rbp), %rax
        addq    $4, %rax
.L3:
        leave
        ret
.LC0:
        .long   0
        .long   1072693248
