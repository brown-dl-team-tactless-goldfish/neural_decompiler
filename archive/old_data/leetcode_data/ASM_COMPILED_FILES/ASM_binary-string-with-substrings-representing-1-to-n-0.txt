func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movl    %edi, -20(%rbp)
        movl    $32, %edi
        call    malloc
        movq    %rax, -16(%rbp)
        movq    -16(%rbp), %rax
        addq    $31, %rax
        movb    $0, (%rax)
        movl    $30, -4(%rbp)
        jmp     .L2
.L3:
        movl    -20(%rbp), %eax
        cltd
        shrl    $31, %edx
        addl    %edx, %eax
        andl    $1, %eax
        subl    %edx, %eax
        leal    48(%rax), %ecx
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -16(%rbp), %rax
        addq    %rdx, %rax
        movl    %ecx, %edx
        movb    %dl, (%rax)
        movl    -20(%rbp), %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        movl    %eax, -20(%rbp)
        subl    $1, -4(%rbp)
.L2:
        cmpl    $0, -20(%rbp)
        jne     .L3
        movl    -4(%rbp), %eax
        cltq
        leaq    1(%rax), %rdx
        movq    -16(%rbp), %rax
        addq    %rdx, %rax
        leave
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movb    $1, -1(%rbp)
        movl    -28(%rbp), %eax
        movl    %eax, -8(%rbp)
        jmp     .L6
.L9:
        movl    -8(%rbp), %eax
        movl    %eax, %edi
        call    func_2
        movq    %rax, -16(%rbp)
        movq    -16(%rbp), %rdx
        movq    -24(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    strstr
        testq   %rax, %rax
        jne     .L7
        movb    $0, -1(%rbp)
        jmp     .L8
.L7:
        subl    $1, -8(%rbp)
.L6:
        cmpl    $0, -8(%rbp)
        jg      .L9
.L8:
        movzbl  -1(%rbp), %eax
        leave
        ret
