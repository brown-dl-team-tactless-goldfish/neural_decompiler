func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $64, %rsp
        movq    %rdi, -56(%rbp)
        movq    %rsi, -64(%rbp)
        movq    -56(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -16(%rbp)
        movq    -64(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -20(%rbp)
        movl    -16(%rbp), %eax
        cmpl    -20(%rbp), %eax
        je      .L2
        movl    $0, %eax
        jmp     .L12
.L2:
        movl    $0, -4(%rbp)
        movb    $0, -5(%rbp)
        movl    $4, %esi
        movl    $26, %edi
        call    calloc
        movq    %rax, -32(%rbp)
        movl    $0, -12(%rbp)
        jmp     .L4
.L8:
        movl    -12(%rbp), %eax
        movslq  %eax, %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbq  %al, %rax
        salq    $2, %rax
        leaq    -388(%rax), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        addl    $1, %edx
        movl    %edx, (%rax)
        movl    -12(%rbp), %eax
        movslq  %eax, %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbq  %al, %rax
        salq    $2, %rax
        leaq    -388(%rax), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $2, %eax
        jne     .L5
        movb    $1, -5(%rbp)
.L5:
        movl    -12(%rbp), %eax
        movslq  %eax, %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %edx
        movl    -12(%rbp), %eax
        movslq  %eax, %rcx
        movq    -64(%rbp), %rax
        addq    %rcx, %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        je      .L6
        cmpl    $2, -4(%rbp)
        jne     .L7
        movl    $0, %eax
        jmp     .L12
.L7:
        movl    -4(%rbp), %eax
        cltq
        movl    -12(%rbp), %edx
        movl    %edx, -40(%rbp,%rax,4)
        addl    $1, -4(%rbp)
.L6:
        addl    $1, -12(%rbp)
.L4:
        movl    -12(%rbp), %eax
        cmpl    -16(%rbp), %eax
        jl      .L8
        cmpl    $1, -4(%rbp)
        jne     .L9
        movl    $0, %eax
        jmp     .L12
.L9:
        cmpl    $0, -4(%rbp)
        jne     .L10
        cmpb    $0, -5(%rbp)
        je      .L10
        movl    $1, %eax
        jmp     .L12
.L10:
        cmpl    $2, -4(%rbp)
        jne     .L11
        movl    -40(%rbp), %eax
        movslq  %eax, %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %edx
        movl    -36(%rbp), %eax
        movslq  %eax, %rcx
        movq    -64(%rbp), %rax
        addq    %rcx, %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        jne     .L11
        movl    -36(%rbp), %eax
        movslq  %eax, %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %edx
        movl    -40(%rbp), %eax
        movslq  %eax, %rcx
        movq    -64(%rbp), %rax
        addq    %rcx, %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        jne     .L11
        movl    $1, %eax
        jmp     .L12
.L11:
        movl    $0, %eax
.L12:
        leave
        ret
