func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $20088, %rsp
        movq    %rdi, -20088(%rbp)
        movq    %rsi, -20096(%rbp)
        movl    $0, -28(%rbp)
        movl    $0, -32(%rbp)
        movl    $0, -36(%rbp)
        movl    $0, -40(%rbp)
        movl    $0, -44(%rbp)
        movb    $0, -45(%rbp)
        movl    $0, -20(%rbp)
        jmp     .L2
.L4:
        movl    -20(%rbp), %eax
        movslq  %eax, %rdx
        movq    -20088(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %edx
        movl    -20(%rbp), %eax
        movslq  %eax, %rcx
        movq    -20096(%rbp), %rax
        addq    %rcx, %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        jne     .L3
        movl    -20(%rbp), %eax
        movslq  %eax, %rdx
        movq    -20096(%rbp), %rax
        addq    %rdx, %rax
        movb    $32, (%rax)
        movl    -20(%rbp), %eax
        movslq  %eax, %rdx
        movq    -20088(%rbp), %rax
        addq    %rdx, %rax
        movb    $32, (%rax)
        addl    $1, -28(%rbp)
.L3:
        addl    $1, -20(%rbp)
.L2:
        movl    -20(%rbp), %eax
        movslq  %eax, %rbx
        movq    -20088(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        cmpq    %rax, %rbx
        jb      .L4
        movl    $0, -20(%rbp)
        jmp     .L5
.L11:
        movl    -20(%rbp), %eax
        movslq  %eax, %rdx
        movq    -20088(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $32, %al
        je      .L6
        movl    $0, -24(%rbp)
        jmp     .L7
.L10:
        movl    -20(%rbp), %eax
        movslq  %eax, %rdx
        movq    -20088(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %edx
        movl    -24(%rbp), %eax
        movslq  %eax, %rcx
        movq    -20096(%rbp), %rax
        addq    %rcx, %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        jne     .L8
        movl    -20(%rbp), %eax
        cmpl    -24(%rbp), %eax
        jne     .L8
        movl    -24(%rbp), %eax
        movslq  %eax, %rdx
        movq    -20096(%rbp), %rax
        addq    %rdx, %rax
        movb    $32, (%rax)
        addl    $1, -28(%rbp)
        jmp     .L6
.L8:
        movl    -20(%rbp), %eax
        movslq  %eax, %rdx
        movq    -20088(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %edx
        movl    -24(%rbp), %eax
        movslq  %eax, %rcx
        movq    -20096(%rbp), %rax
        addq    %rcx, %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        jne     .L9
        movl    -20(%rbp), %eax
        cmpl    -24(%rbp), %eax
        je      .L9
        movl    -24(%rbp), %eax
        movslq  %eax, %rdx
        movq    -20096(%rbp), %rax
        addq    %rdx, %rax
        movb    $32, (%rax)
        addl    $1, -32(%rbp)
        jmp     .L6
.L9:
        addl    $1, -24(%rbp)
.L7:
        movl    -24(%rbp), %eax
        movslq  %eax, %rbx
        movq    -20096(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        cmpq    %rax, %rbx
        jb      .L10
.L6:
        addl    $1, -20(%rbp)
.L5:
        movl    -20(%rbp), %eax
        movslq  %eax, %rbx
        movq    -20088(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        cmpq    %rax, %rbx
        jb      .L11
        movl    $0, -44(%rbp)
        jmp     .L12
.L13:
        movl    -28(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movl    %edx, %eax
        addl    $48, %eax
        movl    %eax, %edx
        movl    -44(%rbp), %eax
        cltq
        movb    %dl, -10080(%rbp,%rax)
        addl    $1, -44(%rbp)
        movl    -28(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -28(%rbp)
.L12:
        cmpl    $0, -28(%rbp)
        jg      .L13
        cmpl    $0, -44(%rbp)
        jne     .L14
        addl    $1, -44(%rbp)
        movb    $48, -10080(%rbp)
.L14:
        movl    $0, -36(%rbp)
        movl    -44(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -40(%rbp)
        jmp     .L15
.L16:
        movl    -36(%rbp), %eax
        cltq
        movzbl  -10080(%rbp,%rax), %eax
        movb    %al, -45(%rbp)
        movl    -40(%rbp), %eax
        cltq
        movzbl  -10080(%rbp,%rax), %edx
        movl    -36(%rbp), %eax
        cltq
        movb    %dl, -10080(%rbp,%rax)
        movl    -40(%rbp), %eax
        cltq
        movzbl  -45(%rbp), %edx
        movb    %dl, -10080(%rbp,%rax)
        addl    $1, -36(%rbp)
        subl    $1, -40(%rbp)
.L15:
        movl    -36(%rbp), %eax
        cmpl    -40(%rbp), %eax
        jl      .L16
        movl    -44(%rbp), %eax
        cltq
        movb    $65, -10080(%rbp,%rax)
        movl    -44(%rbp), %eax
        addl    $1, %eax
        cltq
        movb    $0, -10080(%rbp,%rax)
        movl    $0, -44(%rbp)
        jmp     .L17
.L18:
        movl    -32(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movl    %edx, %eax
        addl    $48, %eax
        movl    %eax, %edx
        movl    -44(%rbp), %eax
        cltq
        movb    %dl, -20080(%rbp,%rax)
        addl    $1, -44(%rbp)
        movl    -32(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -32(%rbp)
.L17:
        cmpl    $0, -32(%rbp)
        jg      .L18
        movl    $0, -36(%rbp)
        movl    -44(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -40(%rbp)
        jmp     .L19
.L20:
        movl    -36(%rbp), %eax
        cltq
        movzbl  -20080(%rbp,%rax), %eax
        movb    %al, -45(%rbp)
        movl    -40(%rbp), %eax
        cltq
        movzbl  -20080(%rbp,%rax), %edx
        movl    -36(%rbp), %eax
        cltq
        movb    %dl, -20080(%rbp,%rax)
        movl    -40(%rbp), %eax
        cltq
        movzbl  -45(%rbp), %edx
        movb    %dl, -20080(%rbp,%rax)
        addl    $1, -36(%rbp)
        subl    $1, -40(%rbp)
.L19:
        movl    -36(%rbp), %eax
        cmpl    -40(%rbp), %eax
        jl      .L20
        cmpl    $0, -44(%rbp)
        jne     .L21
        addl    $1, -44(%rbp)
        movb    $48, -20080(%rbp)
.L21:
        movl    -44(%rbp), %eax
        cltq
        movb    $66, -20080(%rbp,%rax)
        movl    -44(%rbp), %eax
        addl    $1, %eax
        cltq
        movb    $0, -20080(%rbp,%rax)
        leaq    -10080(%rbp), %rax
        movq    %rax, %rdi
        call    puts
        leaq    -20080(%rbp), %rax
        movq    %rax, %rdi
        call    puts
        leaq    -20080(%rbp), %rdx
        leaq    -10080(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    strcat
        leaq    -10080(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -52(%rbp)
        movl    -52(%rbp), %eax
        addl    $1, %eax
        cltq
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -64(%rbp)
        movl    -52(%rbp), %eax
        addl    $1, %eax
        cltq
        movq    %rax, -72(%rbp)
        leaq    -10080(%rbp), %rdx
        movq    -64(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    strcpy
        movq    -64(%rbp), %rax
        addq    $20088, %rsp
        popq    %rbx
        popq    %rbp
        ret
