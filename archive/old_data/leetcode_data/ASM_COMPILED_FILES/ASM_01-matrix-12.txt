func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $72, %rsp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movq    %rdx, -56(%rbp)
        movq    %rcx, -64(%rbp)
        movq    %r8, -72(%rbp)
        movl    $24, %edi
        call    malloc
        movq    %rax, -32(%rbp)
        movl    $0, -20(%rbp)
        jmp     .L2
.L3:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -32(%rbp), %rax
        leaq    (%rdx,%rax), %rbx
        movl    $12, %edi
        call    malloc
        movq    %rax, (%rbx)
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    $1, (%rax)
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    $1, (%rax)
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    $1, (%rax)
        addl    $1, -20(%rbp)
.L2:
        cmpl    $2, -20(%rbp)
        jle     .L3
        movq    -56(%rbp), %rax
        movl    $3, (%rax)
        movq    -56(%rbp), %rax
        addq    $4, %rax
        movl    $3, (%rax)
        movq    -56(%rbp), %rax
        addq    $8, %rax
        movl    $10, (%rax)
        movq    -72(%rbp), %rax
        movl    $3, (%rax)
        movq    -40(%rbp), %rax
        addq    $72, %rsp
        popq    %rbx
        popq    %rbp
        ret
