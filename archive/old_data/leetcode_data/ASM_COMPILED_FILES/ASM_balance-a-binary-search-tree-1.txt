func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -8(%rbp)
        movq    %rsi, -16(%rbp)
        movq    %rdx, -24(%rbp)
        cmpq    $0, -8(%rbp)
        je      .L4
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    -24(%rbp), %rdx
        movq    -16(%rbp), %rcx
        movq    %rcx, %rsi
        movq    %rax, %rdi
        call    func_1
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %ecx
        movq    -24(%rbp), %rdx
        movl    %ecx, (%rdx)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -16(%rbp), %rax
        addq    %rax, %rdx
        movq    -8(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        movq    -8(%rbp), %rax
        movq    16(%rax), %rax
        movq    -24(%rbp), %rdx
        movq    -16(%rbp), %rcx
        movq    %rcx, %rsi
        movq    %rax, %rdi
        call    func_1
        jmp     .L1
.L4:
        nop
.L1:
        leave
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -24(%rbp)
        movq    %rsi, -32(%rbp)
        movl    %edx, -36(%rbp)
        movl    %ecx, -40(%rbp)
        cmpl    $0, -40(%rbp)
        jne     .L6
        movl    $0, %eax
        jmp     .L7
.L6:
        movl    -40(%rbp), %eax
        sarl    %eax
        movl    %eax, %edx
        movl    -36(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, -4(%rbp)
        movl    $24, %esi
        movl    $1, %edi
        call    calloc
        movq    %rax, -24(%rbp)
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movq    -24(%rbp), %rax
        movl    %edx, (%rax)
        movl    -40(%rbp), %eax
        sarl    %eax
        movl    %eax, %ecx
        movl    -36(%rbp), %edx
        movq    -32(%rbp), %rsi
        movq    -24(%rbp), %rax
        movq    %rax, %rdi
        call    func_2
        movq    %rax, %rdx
        movq    -24(%rbp), %rax
        movq    %rdx, 8(%rax)
        movl    -40(%rbp), %eax
        leal    -1(%rax), %edx
        movl    -40(%rbp), %eax
        sarl    %eax
        movl    %edx, %ecx
        subl    %eax, %ecx
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movq    -32(%rbp), %rsi
        movq    -24(%rbp), %rax
        movq    %rax, %rdi
        call    func_2
        movq    %rax, %rdx
        movq    -24(%rbp), %rax
        movq    %rdx, 16(%rax)
        movq    -24(%rbp), %rax
.L7:
        leave
        ret
func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -40(%rbp)
        movl    $4, %esi
        movl    $10001, %edi
        call    calloc
        movq    %rax, -8(%rbp)
        movl    $0, -20(%rbp)
        leaq    -20(%rbp), %rdx
        movq    -8(%rbp), %rcx
        movq    -40(%rbp), %rax
        movq    %rcx, %rsi
        movq    %rax, %rdi
        call    func_1
        movl    -20(%rbp), %edx
        movq    -8(%rbp), %rsi
        movq    -16(%rbp), %rax
        movl    %edx, %ecx
        movl    $0, %edx
        movq    %rax, %rdi
        call    func_2
        movq    %rax, -16(%rbp)
        movq    -16(%rbp), %rax
        leave
        ret
