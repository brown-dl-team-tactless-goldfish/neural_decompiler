func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        addq    $-128, %rsp
        movq    %rdi, -120(%rbp)
        movq    %rsi, -128(%rbp)
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        movq    $0, -64(%rbp)
        movq    $0, -56(%rbp)
        movq    $0, -48(%rbp)
        movq    $0, -40(%rbp)
        movq    $0, -32(%rbp)
        movq    $0, -112(%rbp)
        movq    $0, -104(%rbp)
        movq    $0, -96(%rbp)
        movq    $0, -88(%rbp)
        movq    $0, -80(%rbp)
        jmp     .L2
.L6:
        movq    -120(%rbp), %rax
        movzbl  (%rax), %edx
        movq    -128(%rbp), %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        jne     .L3
        addl    $1, -4(%rbp)
        jmp     .L4
.L3:
        movq    -128(%rbp), %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        subl    $48, %eax
        movslq  %eax, %rdx
        movl    -64(%rbp,%rdx,4), %edx
        addl    $1, %edx
        cltq
        movl    %edx, -64(%rbp,%rax,4)
        movq    -120(%rbp), %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        subl    $48, %eax
        movslq  %eax, %rdx
        movl    -112(%rbp,%rdx,4), %edx
        addl    $1, %edx
        cltq
        movl    %edx, -112(%rbp,%rax,4)
.L4:
        addq    $1, -120(%rbp)
        addq    $1, -128(%rbp)
.L2:
        movq    -120(%rbp), %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        je      .L5
        movq    -128(%rbp), %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        jne     .L6
.L5:
        movl    $0, -12(%rbp)
        jmp     .L7
.L9:
        movl    -12(%rbp), %eax
        cltq
        movl    -112(%rbp,%rax,4), %eax
        testl   %eax, %eax
        je      .L8
        movl    -12(%rbp), %eax
        cltq
        movl    -64(%rbp,%rax,4), %eax
        testl   %eax, %eax
        je      .L8
        movl    -12(%rbp), %eax
        cltq
        movl    -64(%rbp,%rax,4), %edx
        movl    -12(%rbp), %eax
        cltq
        movl    -112(%rbp,%rax,4), %eax
        cmpl    %eax, %edx
        cmovle  %edx, %eax
        addl    %eax, -8(%rbp)
.L8:
        addl    $1, -12(%rbp)
.L7:
        cmpl    $9, -12(%rbp)
        jle     .L9
        movl    $1, %esi
        movl    $16, %edi
        call    calloc
        movq    %rax, -24(%rbp)
        movq    -24(%rbp), %rax
        leave
        ret
