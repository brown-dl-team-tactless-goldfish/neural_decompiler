func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $72, %rsp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movq    %rdx, -56(%rbp)
        movl    %ecx, -48(%rbp)
        movl    %r8d, -60(%rbp)
        movq    %r9, -72(%rbp)
        movl    -60(%rbp), %eax
        cltq
        movl    -44(%rbp), %edx
        movl    %edx, var_7(,%rax,4)
        movl    -48(%rbp), %eax
        subl    $1, %eax
        cmpl    %eax, -44(%rbp)
        jne     .L2
        movq    -56(%rbp), %rax
        movl    (%rax), %ebx
        movl    $4, %esi
        movl    $16, %edi
        call    calloc
        movq    %rax, %rdx
        movslq  %ebx, %rax
        movq    %rdx, var_8(,%rax,8)
        movq    16(%rbp), %rax
        movq    (%rax), %rdx
        movq    -56(%rbp), %rax
        movl    (%rax), %eax
        cltq
        salq    $2, %rax
        addq    %rdx, %rax
        movl    -60(%rbp), %edx
        addl    $1, %edx
        movl    %edx, (%rax)
        movl    -60(%rbp), %eax
        addl    $1, %eax
        cltq
        leaq    0(,%rax,4), %rsi
        movq    -56(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %ecx
        movq    -56(%rbp), %rdx
        movl    %ecx, (%rdx)
        cltq
        movq    var_8(,%rax,8), %rax
        movq    %rsi, %rdx
        movl    $var_7, %esi
        movq    %rax, %rdi
        call    memcpy
        jmp     .L6
.L2:
        movl    $0, -20(%rbp)
        jmp     .L4
.L5:
        movl    -60(%rbp), %eax
        leal    1(%rax), %r8d
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %esi
        movq    -72(%rbp), %rdi
        movl    -48(%rbp), %ecx
        movq    -56(%rbp), %rdx
        movq    -40(%rbp), %rax
        subq    $8, %rsp
        pushq   16(%rbp)
        movq    %rdi, %r9
        movq    %rax, %rdi
        call    func_1
        addq    $16, %rsp
        addl    $1, -20(%rbp)
.L4:
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -20(%rbp)
        jl      .L5
.L6:
        nop
        movq    -8(%rbp), %rbx
        leave
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $64, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movq    %rdx, -40(%rbp)
        movq    %rcx, -48(%rbp)
        movq    %r8, -56(%rbp)
        movl    $28000, %edi
        call    malloc
        movq    %rax, %rdx
        movq    -56(%rbp), %rax
        movq    %rdx, (%rax)
        movl    $0, -4(%rbp)
        movq    -40(%rbp), %rsi
        movl    -28(%rbp), %ecx
        leaq    -4(%rbp), %rdx
        movq    -24(%rbp), %rax
        subq    $8, %rsp
        pushq   -56(%rbp)
        movq    %rsi, %r9
        movl    $0, %r8d
        movl    $0, %esi
        movq    %rax, %rdi
        call    func_1
        addq    $16, %rsp
        movl    -4(%rbp), %edx
        movq    -48(%rbp), %rax
        movl    %edx, (%rax)
        movl    $var_8, %eax
        leave
        ret
