func_4:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -4(%rbp)
        movl    %esi, -8(%rbp)
        movl    var_5(%rip), %eax
        cltq
        movl    -4(%rbp), %edx
        movl    %edx, var_10(,%rax,8)
        movl    var_5(%rip), %eax
        cltq
        movl    -8(%rbp), %edx
        movl    %edx, var_10+4(,%rax,8)
        movl    var_5(%rip), %eax
        addl    $1, %eax
        movl    %eax, var_5(%rip)
        nop
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    var_13(%rip), %eax
        cltq
        movl    var_10(,%rax,8), %eax
        movl    %eax, -8(%rbp)
        movl    var_13(%rip), %eax
        cltq
        movl    var_10+4(,%rax,8), %eax
        movl    %eax, -4(%rbp)
        movl    var_13(%rip), %eax
        addl    $1, %eax
        movl    %eax, var_13(%rip)
        movq    -8(%rbp), %rax
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -4(%rbp)
        movl    %esi, -8(%rbp)
        movl    var_9(%rip), %eax
        cmpl    %eax, -4(%rbp)
        jge     .L5
        movl    var_9(%rip), %eax
        cmpl    %eax, -8(%rbp)
        jge     .L5
        cmpl    $0, -4(%rbp)
        js      .L5
        cmpl    $0, -8(%rbp)
        js      .L5
        movl    $1, %eax
        jmp     .L6
.L5:
        movl    $0, %eax
.L6:
        popq    %rbp
        ret
func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $104, %rsp
        movq    %rdi, -88(%rbp)
        movl    %esi, -92(%rbp)
        movq    %rdx, -104(%rbp)
        movl    -92(%rbp), %eax
        movl    %eax, var_9(%rip)
        movl    $0, var_5(%rip)
        movl    $0, var_13(%rip)
        movl    $0, -4(%rbp)
        jmp     .L8
.L12:
        movl    $0, -8(%rbp)
        jmp     .L9
.L11:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -88(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -8(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $1, %eax
        jne     .L10
        movl    -8(%rbp), %edx
        movl    -4(%rbp), %eax
        movl    %edx, %esi
        movl    %eax, %edi
        call    func_4
.L10:
        addl    $1, -8(%rbp)
.L9:
        movl    var_9(%rip), %eax
        cmpl    %eax, -8(%rbp)
        jl      .L11
        addl    $1, -4(%rbp)
.L8:
        movl    var_9(%rip), %eax
        cmpl    %eax, -4(%rbp)
        jl      .L12
        movl    var_5(%rip), %eax
        testl   %eax, %eax
        je      .L13
        movl    -92(%rbp), %eax
        imull   -92(%rbp), %eax
        movl    %eax, %edx
        movl    var_5(%rip), %eax
        cmpl    %eax, %edx
        jne     .L14
.L13:
        movl    $-1, %eax
        jmp     .L23
.L14:
        movl    $0, -12(%rbp)
        movl    $1, -48(%rbp)
        movl    $-1, -44(%rbp)
        movl    $0, -40(%rbp)
        movl    $0, -36(%rbp)
        movl    $0, -64(%rbp)
        movl    $0, -60(%rbp)
        movl    $1, -56(%rbp)
        movl    $-1, -52(%rbp)
        jmp     .L16
.L22:
        movl    var_5(%rip), %edx
        movl    var_13(%rip), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -16(%rbp)
        jmp     .L17
.L21:
        movl    $0, %eax
        call    func_1
        movq    %rax, -72(%rbp)
        movl    $0, -20(%rbp)
        jmp     .L18
.L20:
        movl    -72(%rbp), %edx
        movl    -20(%rbp), %eax
        cltq
        movl    -48(%rbp,%rax,4), %eax
        addl    %edx, %eax
        movl    %eax, -24(%rbp)
        movl    -68(%rbp), %edx
        movl    -20(%rbp), %eax
        cltq
        movl    -64(%rbp,%rax,4), %eax
        addl    %edx, %eax
        movl    %eax, -28(%rbp)
        movl    -28(%rbp), %edx
        movl    -24(%rbp), %eax
        movl    %edx, %esi
        movl    %eax, %edi
        call    func_2
        testl   %eax, %eax
        je      .L19
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -88(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -28(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L19
        movl    -28(%rbp), %edx
        movl    -24(%rbp), %eax
        movl    %edx, %esi
        movl    %eax, %edi
        call    func_4
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -88(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -28(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    $1, (%rax)
.L19:
        addl    $1, -20(%rbp)
.L18:
        cmpl    $3, -20(%rbp)
        jle     .L20
.L17:
        movl    -16(%rbp), %eax
        leal    -1(%rax), %edx
        movl    %edx, -16(%rbp)
        testl   %eax, %eax
        jne     .L21
        addl    $1, -12(%rbp)
.L16:
        movl    var_5(%rip), %edx
        movl    var_13(%rip), %eax
        cmpl    %eax, %edx
        jg      .L22
        movl    -12(%rbp), %eax
        subl    $1, %eax
.L23:
        leave
        ret
