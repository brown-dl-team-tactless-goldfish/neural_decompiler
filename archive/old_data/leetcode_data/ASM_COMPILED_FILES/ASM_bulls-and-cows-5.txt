func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $160, %rsp
        movq    %rdi, -152(%rbp)
        movq    %rsi, -160(%rbp)
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        movl    $0, -12(%rbp)
        movl    $0, -16(%rbp)
        movl    $0, -24(%rbp)
        movl    $0, -24(%rbp)
        jmp     .L2
.L3:
        movl    -24(%rbp), %eax
        cltq
        movl    $0, -144(%rbp,%rax,4)
        movl    -24(%rbp), %eax
        cltq
        movl    -144(%rbp,%rax,4), %edx
        movl    -24(%rbp), %eax
        cltq
        movl    %edx, -96(%rbp,%rax,4)
        addl    $1, -24(%rbp)
.L2:
        cmpl    $9, -24(%rbp)
        jle     .L3
        movl    $0, -24(%rbp)
        jmp     .L4
.L18:
        movsbl  -25(%rbp), %eax
        subl    $48, %eax
        cmpl    $9, %eax
        ja      .L52
        movl    %eax, %eax
        movq    .L7(,%rax,8), %rax
        jmp     *%rax
.L7:
        .quad   .L16
        .quad   .L15
        .quad   .L14
        .quad   .L13
        .quad   .L12
        .quad   .L11
        .quad   .L10
        .quad   .L9
        .quad   .L8
        .quad   .L6
.L16:
        movl    -96(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -96(%rbp)
        jmp     .L17
.L15:
        movl    -92(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -92(%rbp)
        jmp     .L17
.L14:
        movl    -88(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -88(%rbp)
        jmp     .L17
.L13:
        movl    -84(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -84(%rbp)
        jmp     .L17
.L12:
        movl    -80(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -80(%rbp)
        jmp     .L17
.L11:
        movl    -76(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -76(%rbp)
        jmp     .L17
.L10:
        movl    -72(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -72(%rbp)
        jmp     .L17
.L9:
        movl    -68(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -68(%rbp)
        jmp     .L17
.L8:
        movl    -64(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -64(%rbp)
        jmp     .L17
.L6:
        movl    -60(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -60(%rbp)
        jmp     .L17
.L52:
        nop
.L17:
        addl    $1, -24(%rbp)
.L4:
        movl    -24(%rbp), %eax
        movslq  %eax, %rdx
        movq    -152(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movb    %al, -25(%rbp)
        cmpb    $0, -25(%rbp)
        jne     .L18
        movl    $0, -24(%rbp)
        jmp     .L19
.L33:
        movsbl  -25(%rbp), %eax
        subl    $48, %eax
        cmpl    $9, %eax
        ja      .L53
        movl    %eax, %eax
        movq    .L22(,%rax,8), %rax
        jmp     *%rax
.L22:
        .quad   .L31
        .quad   .L30
        .quad   .L29
        .quad   .L28
        .quad   .L27
        .quad   .L26
        .quad   .L25
        .quad   .L24
        .quad   .L23
        .quad   .L21
.L31:
        movl    -144(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -144(%rbp)
        jmp     .L32
.L30:
        movl    -140(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -140(%rbp)
        jmp     .L32
.L29:
        movl    -136(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -136(%rbp)
        jmp     .L32
.L28:
        movl    -132(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -132(%rbp)
        jmp     .L32
.L27:
        movl    -128(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -128(%rbp)
        jmp     .L32
.L26:
        movl    -124(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -124(%rbp)
        jmp     .L32
.L25:
        movl    -120(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -120(%rbp)
        jmp     .L32
.L24:
        movl    -116(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -116(%rbp)
        jmp     .L32
.L23:
        movl    -112(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -112(%rbp)
        jmp     .L32
.L21:
        movl    -108(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -108(%rbp)
        jmp     .L32
.L53:
        nop
.L32:
        addl    $1, -24(%rbp)
.L19:
        movl    -24(%rbp), %eax
        movslq  %eax, %rdx
        movq    -160(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movb    %al, -25(%rbp)
        cmpb    $0, -25(%rbp)
        jne     .L33
        movl    $0, -24(%rbp)
        jmp     .L34
.L36:
        movl    -24(%rbp), %eax
        movslq  %eax, %rdx
        movq    -152(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %edx
        movl    -24(%rbp), %eax
        movslq  %eax, %rcx
        movq    -160(%rbp), %rax
        addq    %rcx, %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        jne     .L35
        addl    $1, -4(%rbp)
.L35:
        addl    $1, -24(%rbp)
.L34:
        movl    -24(%rbp), %eax
        movslq  %eax, %rdx
        movq    -152(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        jne     .L36
        movl    $0, -24(%rbp)
        jmp     .L37
.L40:
        movl    -24(%rbp), %eax
        cltq
        movl    -96(%rbp,%rax,4), %edx
        movl    -24(%rbp), %eax
        cltq
        movl    -144(%rbp,%rax,4), %eax
        cmpl    %eax, %edx
        jl      .L38
        movl    -24(%rbp), %eax
        cltq
        movl    -144(%rbp,%rax,4), %eax
        addl    %eax, -8(%rbp)
        jmp     .L39
.L38:
        movl    -24(%rbp), %eax
        cltq
        movl    -96(%rbp,%rax,4), %eax
        addl    %eax, -8(%rbp)
.L39:
        addl    $1, -24(%rbp)
.L37:
        cmpl    $9, -24(%rbp)
        jle     .L40
        movl    -8(%rbp), %eax
        subl    -4(%rbp), %eax
        movl    %eax, -32(%rbp)
        movl    $0, -24(%rbp)
        movl    -4(%rbp), %eax
        movl    %eax, -20(%rbp)
        jmp     .L41
.L42:
        movl    -20(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -20(%rbp)
        addl    $1, -12(%rbp)
        addl    $1, -24(%rbp)
.L41:
        cmpl    $0, -20(%rbp)
        jg      .L42
        cmpl    $0, -12(%rbp)
        jne     .L43
        addl    $1, -12(%rbp)
.L43:
        movl    $0, -24(%rbp)
        movl    -32(%rbp), %eax
        movl    %eax, -20(%rbp)
        jmp     .L44
.L45:
        movl    -20(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -20(%rbp)
        addl    $1, -16(%rbp)
        addl    $1, -24(%rbp)
.L44:
        cmpl    $0, -20(%rbp)
        jg      .L45
        cmpl    $0, -16(%rbp)
        jne     .L46
        addl    $1, -16(%rbp)
.L46:
        movl    -12(%rbp), %edx
        movl    -16(%rbp), %eax
        addl    %edx, %eax
        addl    $3, %eax
        cltq
        movq    %rax, %rdi
        movl    $0, %eax
        call    var_11
        cltq
        movq    %rax, -40(%rbp)
        movl    -12(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -24(%rbp)
        movl    -4(%rbp), %eax
        movl    %eax, -20(%rbp)
        jmp     .L47
.L48:
        movl    -20(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %eax
        movl    %eax, -44(%rbp)
        movl    -44(%rbp), %eax
        leal    48(%rax), %ecx
        movl    -24(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    %ecx, %edx
        movb    %dl, (%rax)
        movl    -20(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -20(%rbp)
        subl    $1, -24(%rbp)
.L47:
        cmpl    $0, -24(%rbp)
        jns     .L48
        movl    -12(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movb    $65, (%rax)
        movl    -16(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -24(%rbp)
        movl    -32(%rbp), %eax
        movl    %eax, -20(%rbp)
        jmp     .L49
.L50:
        movl    -20(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %eax
        movl    %eax, -44(%rbp)
        movl    -44(%rbp), %eax
        leal    48(%rax), %ecx
        movl    -24(%rbp), %eax
        movslq  %eax, %rdx
        movl    -12(%rbp), %eax
        cltq
        addq    %rdx, %rax
        leaq    1(%rax), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    %ecx, %edx
        movb    %dl, (%rax)
        movl    -20(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -20(%rbp)
        subl    $1, -24(%rbp)
.L49:
        cmpl    $0, -24(%rbp)
        jns     .L50
        movl    -12(%rbp), %eax
        movslq  %eax, %rdx
        movl    -16(%rbp), %eax
        cltq
        addq    %rdx, %rax
        leaq    1(%rax), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movb    $66, (%rax)
        movl    -12(%rbp), %eax
        movslq  %eax, %rdx
        movl    -16(%rbp), %eax
        cltq
        addq    %rdx, %rax
        leaq    2(%rax), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movb    $0, (%rax)
        movq    -40(%rbp), %rax
        leave
        ret
