func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        cmpq    $0, -24(%rbp)
        jne     .L2
        movl    $0, %eax
        jmp     .L3
.L2:
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, %rdi
        call    func_1
        movl    %eax, -4(%rbp)
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, %rdi
        call    func_1
        movl    %eax, -8(%rbp)
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jl      .L4
        movl    -4(%rbp), %eax
        addl    $1, %eax
        jmp     .L3
.L4:
        movl    -8(%rbp), %eax
        addl    $1, %eax
.L3:
        leave
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $40, %rsp
        movq    %rdi, -40(%rbp)
        movl    $0, -20(%rbp)
        movq    -40(%rbp), %rax
        movq    8(%rax), %rax
        testq   %rax, %rax
        jne     .L6
        movq    -40(%rbp), %rax
        movq    16(%rax), %rax
        testq   %rax, %rax
        jne     .L6
        movl    $0, -20(%rbp)
        jmp     .L7
.L6:
        movq    -40(%rbp), %rax
        movq    8(%rax), %rax
        testq   %rax, %rax
        jne     .L8
        movq    -40(%rbp), %rax
        movq    16(%rax), %rax
        testq   %rax, %rax
        je      .L8
        movq    -40(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, %rdi
        call    func_1
        negl    %eax
        movl    %eax, -20(%rbp)
        jmp     .L7
.L8:
        movq    -40(%rbp), %rax
        movq    8(%rax), %rax
        testq   %rax, %rax
        je      .L9
        movq    -40(%rbp), %rax
        movq    16(%rax), %rax
        testq   %rax, %rax
        jne     .L9
        movq    -40(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, %rdi
        call    func_1
        movl    %eax, -20(%rbp)
        jmp     .L7
.L9:
        movq    -40(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, %rdi
        call    func_1
        movl    %eax, %ebx
        movq    -40(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, %rdi
        call    func_1
        subl    %eax, %ebx
        movl    %ebx, %eax
        movl    %eax, -20(%rbp)
.L7:
        movl    -20(%rbp), %eax
        addq    $40, %rsp
        popq    %rbx
        popq    %rbp
        ret
func_4:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $112, %rsp
        movq    %rdi, -104(%rbp)
        movq    %rsi, -112(%rbp)
        cmpq    $0, -104(%rbp)
        je      .L21
        movq    -104(%rbp), %rax
        movq    8(%rax), %rax
        movq    -112(%rbp), %rdx
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    func_4
        movq    %rax, %rdx
        movq    -104(%rbp), %rax
        movq    %rdx, 8(%rax)
        movq    -104(%rbp), %rax
        movq    16(%rax), %rax
        movq    -112(%rbp), %rdx
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    func_4
        movq    %rax, %rdx
        movq    -104(%rbp), %rax
        movq    %rdx, 16(%rax)
        movq    -104(%rbp), %rax
        movq    %rax, %rdi
        call    func_2
        movl    %eax, -4(%rbp)
        cmpl    $1, -4(%rbp)
        jg      .L14
        cmpl    $-1, -4(%rbp)
        jge     .L15
.L14:
        movq    -112(%rbp), %rax
        movb    $0, (%rax)
        cmpl    $1, -4(%rbp)
        jle     .L16
        movq    -104(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, %rdi
        call    func_2
        testl   %eax, %eax
        js      .L16
        movq    -104(%rbp), %rax
        movq    %rax, -16(%rbp)
        movq    -104(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -24(%rbp)
        movq    -24(%rbp), %rax
        movq    16(%rax), %rdx
        movq    -16(%rbp), %rax
        movq    %rdx, 8(%rax)
        movq    -24(%rbp), %rax
        movq    -16(%rbp), %rdx
        movq    %rdx, 16(%rax)
        movq    -24(%rbp), %rax
        jmp     .L11
.L16:
        cmpl    $-1, -4(%rbp)
        jge     .L18
        movq    -104(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, %rdi
        call    func_2
        testl   %eax, %eax
        jg      .L18
        movq    -104(%rbp), %rax
        movq    %rax, -32(%rbp)
        movq    -104(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, -40(%rbp)
        movq    -40(%rbp), %rax
        movq    8(%rax), %rdx
        movq    -32(%rbp), %rax
        movq    %rdx, 16(%rax)
        movq    -40(%rbp), %rax
        movq    -32(%rbp), %rdx
        movq    %rdx, 8(%rax)
        movq    -40(%rbp), %rax
        jmp     .L11
.L18:
        cmpl    $1, -4(%rbp)
        jle     .L19
        movq    -104(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, %rdi
        call    func_2
        testl   %eax, %eax
        jg      .L19
        movq    -104(%rbp), %rax
        movq    %rax, -48(%rbp)
        movq    -104(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -56(%rbp)
        movq    -56(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, -64(%rbp)
        movq    -64(%rbp), %rax
        movq    16(%rax), %rdx
        movq    -48(%rbp), %rax
        movq    %rdx, 8(%rax)
        movq    -64(%rbp), %rax
        movq    8(%rax), %rdx
        movq    -56(%rbp), %rax
        movq    %rdx, 16(%rax)
        movq    -64(%rbp), %rax
        movq    -56(%rbp), %rdx
        movq    %rdx, 8(%rax)
        movq    -64(%rbp), %rax
        movq    -48(%rbp), %rdx
        movq    %rdx, 16(%rax)
        movq    -64(%rbp), %rax
        jmp     .L11
.L19:
        cmpl    $-1, -4(%rbp)
        jge     .L15
        movq    -104(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, %rdi
        call    func_2
        testl   %eax, %eax
        js      .L15
        movq    -104(%rbp), %rax
        movq    %rax, -72(%rbp)
        movq    -104(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, -80(%rbp)
        movq    -80(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -88(%rbp)
        movq    -88(%rbp), %rax
        movq    8(%rax), %rdx
        movq    -72(%rbp), %rax
        movq    %rdx, 16(%rax)
        movq    -88(%rbp), %rax
        movq    16(%rax), %rdx
        movq    -80(%rbp), %rax
        movq    %rdx, 8(%rax)
        movq    -88(%rbp), %rax
        movq    -80(%rbp), %rdx
        movq    %rdx, 16(%rax)
        movq    -88(%rbp), %rax
        movq    -72(%rbp), %rdx
        movq    %rdx, 8(%rax)
        movq    -88(%rbp), %rax
        jmp     .L11
.L15:
        movq    -104(%rbp), %rax
        jmp     .L11
.L21:
        nop
        nop
.L11:
        leave
        ret
func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        movb    $0, -1(%rbp)
        jmp     .L23
.L24:
        movb    $1, -1(%rbp)
        leaq    -1(%rbp), %rdx
        movq    -24(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    func_4
        movq    %rax, -24(%rbp)
.L23:
        movzbl  -1(%rbp), %eax
        xorl    $1, %eax
        testb   %al, %al
        jne     .L24
        movq    -24(%rbp), %rax
        leave
        ret
