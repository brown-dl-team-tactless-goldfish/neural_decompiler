func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $72, %rsp
        movq    %rdi, -72(%rbp)
        movl    %esi, -76(%rbp)
        movl    -76(%rbp), %eax
        addl    $2, %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -48(%rbp)
        movl    -76(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movl    $1, (%rax)
        movl    (%rax), %edx
        movq    -48(%rbp), %rax
        movl    %edx, (%rax)
        movl    $0, -20(%rbp)
        jmp     .L2
.L3:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        addq    $1, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -48(%rbp), %rdx
        addq    %rcx, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        addl    $1, -20(%rbp)
.L2:
        movl    -20(%rbp), %eax
        cmpl    -76(%rbp), %eax
        jl      .L3
        addl    $2, -76(%rbp)
        movl    -76(%rbp), %eax
        cltq
        salq    $3, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -56(%rbp)
        movl    $0, -24(%rbp)
        jmp     .L4
.L5:
        movl    -76(%rbp), %eax
        cltq
        salq    $2, %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -56(%rbp), %rdx
        leaq    (%rcx,%rdx), %rbx
        movq    %rax, %rdi
        call    malloc
        movq    %rax, (%rbx)
        movl    -76(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    $0, %esi
        movq    %rax, %rdi
        call    memset
        addl    $1, -24(%rbp)
.L4:
        movl    -24(%rbp), %eax
        cmpl    -76(%rbp), %eax
        jl      .L5
        movl    $2, -28(%rbp)
        jmp     .L6
.L12:
        movl    $0, -32(%rbp)
        jmp     .L7
.L11:
        movl    -32(%rbp), %edx
        movl    -28(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, -60(%rbp)
        movl    -32(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -36(%rbp)
        jmp     .L8
.L10:
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -36(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    -60(%rbp), %ecx
        movslq  %ecx, %rcx
        salq    $2, %rcx
        addq    %rcx, %rax
        movl    (%rax), %eax
        leal    (%rdx,%rax), %ecx
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -60(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rsi
        movq    -48(%rbp), %rax
        addq    %rsi, %rax
        movl    (%rax), %eax
        imull   %eax, %edx
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rsi
        movq    -48(%rbp), %rax
        addq    %rsi, %rax
        movl    (%rax), %eax
        imull   %edx, %eax
        addl    %ecx, %eax
        movl    %eax, -64(%rbp)
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -60(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -64(%rbp)
        jle     .L9
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -60(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rax, %rdx
        movl    -64(%rbp), %eax
        movl    %eax, (%rdx)
.L9:
        addl    $1, -36(%rbp)
.L8:
        movl    -36(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jl      .L10
        addl    $1, -32(%rbp)
.L7:
        movl    -32(%rbp), %edx
        movl    -28(%rbp), %eax
        addl    %edx, %eax
        cmpl    %eax, -76(%rbp)
        jg      .L11
        addl    $1, -28(%rbp)
.L6:
        movl    -28(%rbp), %eax
        cmpl    -76(%rbp), %eax
        jl      .L12
        movq    -56(%rbp), %rax
        movq    (%rax), %rax
        movl    -76(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        subq    $4, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        addq    $72, %rsp
        popq    %rbx
        popq    %rbp
        ret
