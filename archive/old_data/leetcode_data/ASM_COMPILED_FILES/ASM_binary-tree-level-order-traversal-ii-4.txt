func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -4(%rbp)
        movl    %esi, -8(%rbp)
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jge     .L2
        movl    -8(%rbp), %eax
        jmp     .L3
.L2:
        movl    -4(%rbp), %eax
.L3:
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $16, %rsp
        movq    %rdi, -8(%rbp)
        movl    %esi, -12(%rbp)
        cmpq    $0, -8(%rbp)
        je      .L7
        movl    -12(%rbp), %eax
        cltq
        movl    var_5(,%rax,4), %eax
        leal    1(%rax), %ecx
        movl    -12(%rbp), %edx
        movslq  %edx, %rdx
        movl    %ecx, var_5(,%rdx,4)
        movq    -8(%rbp), %rdx
        movl    (%rdx), %edx
        cltq
        movl    -12(%rbp), %ecx
        movslq  %ecx, %rcx
        imulq   $1000, %rcx, %rcx
        addq    %rcx, %rax
        movl    %edx, var_2(,%rax,4)
        movl    -12(%rbp), %eax
        leal    1(%rax), %edx
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movl    %edx, %esi
        movq    %rax, %rdi
        call    func_1
        movl    -12(%rbp), %eax
        leal    1(%rax), %edx
        movq    -8(%rbp), %rax
        movq    16(%rax), %rax
        movl    %edx, %esi
        movq    %rax, %rdi
        call    func_1
        movl    -12(%rbp), %eax
        leal    1(%rax), %edx
        movl    var_10(%rip), %eax
        movl    %edx, %esi
        movl    %eax, %edi
        call    func_3
        movl    %eax, var_10(%rip)
        jmp     .L4
.L7:
        nop
.L4:
        leave
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $72, %rsp
        movq    %rdi, -56(%rbp)
        movq    %rsi, -64(%rbp)
        movq    %rdx, -72(%rbp)
        movl    $0, -20(%rbp)
        jmp     .L9
.L10:
        movl    -20(%rbp), %eax
        cltq
        movl    $0, var_5(,%rax,4)
        addl    $1, -20(%rbp)
.L9:
        cmpl    $999, -20(%rbp)
        jle     .L10
        movl    $0, var_10(%rip)
        movq    -56(%rbp), %rax
        movl    $0, %esi
        movq    %rax, %rdi
        call    func_1
        movl    $0, -24(%rbp)
        movl    var_10(%rip), %eax
        cltq
        salq    $3, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -40(%rbp)
        movl    var_10(%rip), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, %rdx
        movq    -72(%rbp), %rax
        movq    %rdx, (%rax)
        movl    var_10(%rip), %eax
        subl    $1, %eax
        movl    %eax, -28(%rbp)
        jmp     .L11
.L16:
        movl    -28(%rbp), %eax
        cltq
        movl    var_5(,%rax,4), %eax
        testl   %eax, %eax
        je      .L18
        movl    -28(%rbp), %eax
        cltq
        movl    var_5(,%rax,4), %eax
        cltq
        salq    $2, %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -40(%rbp), %rdx
        leaq    (%rcx,%rdx), %rbx
        movq    %rax, %rdi
        call    malloc
        movq    %rax, (%rbx)
        movq    -72(%rbp), %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rax, %rdx
        movl    -28(%rbp), %eax
        cltq
        movl    var_5(,%rax,4), %eax
        movl    %eax, (%rdx)
        movl    $0, -32(%rbp)
        jmp     .L14
.L15:
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -32(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rax, %rdx
        movl    -32(%rbp), %eax
        cltq
        movl    -28(%rbp), %ecx
        movslq  %ecx, %rcx
        imulq   $1000, %rcx, %rcx
        addq    %rcx, %rax
        movl    var_2(,%rax,4), %eax
        movl    %eax, (%rdx)
        addl    $1, -32(%rbp)
.L14:
        movl    -28(%rbp), %eax
        cltq
        movl    var_5(,%rax,4), %eax
        cmpl    %eax, -32(%rbp)
        jl      .L15
        addl    $1, -24(%rbp)
        jmp     .L13
.L18:
        nop
.L13:
        subl    $1, -28(%rbp)
.L11:
        cmpl    $0, -28(%rbp)
        jns     .L16
        movq    -64(%rbp), %rax
        movl    -24(%rbp), %edx
        movl    %edx, (%rax)
        movq    -40(%rbp), %rax
        addq    $72, %rsp
        popq    %rbx
        popq    %rbp
        ret
