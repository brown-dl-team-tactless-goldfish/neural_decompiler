func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $64, %rsp
        movq    %rdi, -56(%rbp)
        movq    %rsi, -64(%rbp)
        movl    $0, -4(%rbp)
        movl    $1, -8(%rbp)
        movl    $0, -12(%rbp)
        movl    $0, -16(%rbp)
        movl    $1, -20(%rbp)
        movb    $1, -21(%rbp)
        movq    -56(%rbp), %rax
        movzbl  (%rax), %eax
        movb    %al, -24(%rbp)
        movb    $0, -22(%rbp)
        movl    $0, -28(%rbp)
        movl    $0, -32(%rbp)
        movl    $1200, %edi
        call    malloc
        movq    %rax, -40(%rbp)
        movb    $0, -23(%rbp)
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        jne     .L4
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        jne     .L4
        movl    $0, %eax
        jmp     .L3
.L10:
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbq  %al, %rax
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $1, %eax
        jne     .L5
        movb    $1, -23(%rbp)
.L5:
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbq  %al, %rax
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    $1, (%rax)
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    %al, -24(%rbp)
        je      .L6
        movb    $0, -21(%rbp)
.L6:
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %edx
        movl    -4(%rbp), %eax
        movslq  %eax, %rcx
        movq    -64(%rbp), %rax
        addq    %rcx, %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        je      .L7
        movzbl  -22(%rbp), %eax
        xorl    $1, %eax
        testb   %al, %al
        je      .L8
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        movl    %eax, -8(%rbp)
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        movl    %eax, -16(%rbp)
.L8:
        movb    $1, -22(%rbp)
        cmpb    $0, -22(%rbp)
        je      .L7
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        movl    %eax, -12(%rbp)
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        movl    %eax, -20(%rbp)
.L7:
        addl    $1, -4(%rbp)
.L4:
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        je      .L9
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        jne     .L10
.L9:
        movzbl  -22(%rbp), %eax
        xorl    $1, %eax
        testb   %al, %al
        je      .L11
        cmpb    $0, -23(%rbp)
        je      .L11
        movl    $1, %eax
        jmp     .L3
.L11:
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        je      .L12
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        jne     .L12
        movl    $0, %eax
        jmp     .L3
.L12:
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        jne     .L13
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        je      .L13
        movl    $0, %eax
        jmp     .L3
.L13:
        cmpb    $0, -21(%rbp)
        je      .L14
        movzbl  -22(%rbp), %eax
        xorl    $1, %eax
        testb   %al, %al
        je      .L14
        movl    $1, %eax
        jmp     .L3
.L14:
        movl    -8(%rbp), %eax
        cmpl    -12(%rbp), %eax
        jne     .L15
        movl    -16(%rbp), %eax
        cmpl    -20(%rbp), %eax
        jne     .L15
        movl    $1, %eax
        jmp     .L16
.L15:
        movl    $0, %eax
.L16:
        andl    $1, %eax
.L3:
        leave
        ret
