func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $104, %rsp
        movq    %rdi, -104(%rbp)
        movl    %esi, -108(%rbp)
        movl    %edx, -112(%rbp)
        movl    $1000000007, -56(%rbp)
        movl    $4, %esi
        movl    $101, %edi
        call    calloc
        movq    %rax, -64(%rbp)
        movq    $0, -24(%rbp)
        movl    $0, -28(%rbp)
        movl    $0, -32(%rbp)
        jmp     .L2
.L4:
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -104(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        addl    $1, %edx
        movl    %edx, (%rax)
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -104(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $1, %eax
        jne     .L3
        addl    $1, -28(%rbp)
.L3:
        addl    $1, -32(%rbp)
.L2:
        movl    -32(%rbp), %eax
        cmpl    -108(%rbp), %eax
        jl      .L4
        movl    -28(%rbp), %eax
        cltq
        salq    $3, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -72(%rbp)
        movl    $0, -36(%rbp)
        movl    $0, -40(%rbp)
        jmp     .L5
.L7:
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        je      .L6
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -72(%rbp), %rax
        leaq    (%rdx,%rax), %rbx
        movl    $8, %edi
        call    malloc
        movq    %rax, (%rbx)
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -40(%rbp), %edx
        movl    %edx, (%rax)
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movl    -36(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -72(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        addq    $4, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        addl    $1, -36(%rbp)
.L6:
        addl    $1, -40(%rbp)
.L5:
        cmpl    $100, -40(%rbp)
        jle     .L7
        movl    $0, -44(%rbp)
        jmp     .L8
.L23:
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        movl    %eax, -76(%rbp)
        movl    $0, -48(%rbp)
        jmp     .L9
.L22:
        movl    -48(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        movl    %eax, -80(%rbp)
        movl    -76(%rbp), %eax
        cmpl    -80(%rbp), %eax
        jg      .L27
        movl    -112(%rbp), %eax
        subl    -76(%rbp), %eax
        subl    -80(%rbp), %eax
        movl    %eax, -84(%rbp)
        cmpl    $0, -84(%rbp)
        js      .L12
        movl    -84(%rbp), %eax
        cmpl    -80(%rbp), %eax
        jl      .L12
        cmpl    $100, -84(%rbp)
        jg      .L28
        movl    -84(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        je      .L28
        movl    -76(%rbp), %eax
        cmpl    -80(%rbp), %eax
        jne     .L15
        movl    -80(%rbp), %eax
        cmpl    -84(%rbp), %eax
        jne     .L15
        movl    -84(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $2, %eax
        jle     .L17
        movl    -84(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movslq  %eax, %rdx
        movl    -84(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -64(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        subl    $1, %eax
        cltq
        imulq   %rax, %rdx
        movl    -84(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -64(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        subl    $2, %eax
        cltq
        movq    %rdx, %rcx
        imulq   %rax, %rcx
        movabsq $3074457345618258603, %rdx
        movq    %rcx, %rax
        imulq   %rdx
        movq    %rcx, %rax
        sarq    $63, %rax
        subq    %rax, %rdx
        movq    %rdx, %rax
        addq    %rax, -24(%rbp)
        jmp     .L17
.L15:
        movl    -76(%rbp), %eax
        cmpl    -80(%rbp), %eax
        jne     .L18
        movl    -76(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $1, %eax
        jle     .L17
        movl    -84(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -76(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -64(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        imull   %edx, %eax
        movl    -76(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -64(%rbp), %rdx
        addq    %rcx, %rdx
        movl    (%rdx), %edx
        subl    $1, %edx
        imull   %edx, %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        cltq
        addq    %rax, -24(%rbp)
        jmp     .L17
.L18:
        movl    -80(%rbp), %eax
        cmpl    -84(%rbp), %eax
        jne     .L20
        movl    -80(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $1, %eax
        jle     .L17
        movl    -76(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -80(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -64(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        imull   %edx, %eax
        movl    -80(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -64(%rbp), %rdx
        addq    %rcx, %rdx
        movl    (%rdx), %edx
        subl    $1, %edx
        imull   %edx, %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        cltq
        addq    %rax, -24(%rbp)
        jmp     .L17
.L20:
        movl    -76(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -80(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -64(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        imull   %eax, %edx
        movl    -84(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -64(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        imull   %edx, %eax
        cltq
        addq    %rax, -24(%rbp)
.L17:
        movl    -56(%rbp), %eax
        movslq  %eax, %rcx
        movq    -24(%rbp), %rax
        cqto
        idivq   %rcx
        movq    %rdx, -24(%rbp)
        jmp     .L11
.L27:
        nop
        jmp     .L11
.L28:
        nop
.L11:
        addl    $1, -48(%rbp)
.L9:
        movl    -48(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jl      .L22
.L12:
        addl    $1, -44(%rbp)
.L8:
        movl    -44(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jl      .L23
        movq    -64(%rbp), %rax
        movq    %rax, %rdi
        call    free
        movl    $0, -52(%rbp)
        jmp     .L24
.L25:
        movl    -52(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    %rax, %rdi
        call    free
        addl    $1, -52(%rbp)
.L24:
        movl    -52(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jl      .L25
        movq    -72(%rbp), %rax
        movq    %rax, %rdi
        call    free
        movq    -24(%rbp), %rax
        addq    $104, %rsp
        popq    %rbx
        popq    %rbp
        ret
