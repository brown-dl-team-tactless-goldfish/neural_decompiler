func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $56, %rsp
        movq    %rdi, -56(%rbp)
        movl    %esi, -60(%rbp)
        cmpl    $1, -60(%rbp)
        jne     .L2
        movq    -56(%rbp), %rax
        movq    (%rax), %rax
        movq    %rax, %rdi
        call    atoi
        jmp     .L3
.L2:
        movl    -60(%rbp), %eax
        cltq
        movl    $4, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, -48(%rbp)
        movl    $0, -20(%rbp)
        movq    -48(%rbp), %rax
        movq    %rax, -40(%rbp)
        movl    $0, -24(%rbp)
        jmp     .L4
.L11:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movzbl  (%rax), %eax
        cmpb    $43, %al
        jne     .L5
        movq    -40(%rbp), %rax
        subq    $4, %rax
        movl    (%rax), %esi
        movq    -40(%rbp), %rax
        subq    $8, %rax
        movl    (%rax), %ecx
        movq    -40(%rbp), %rax
        leaq    4(%rax), %rdx
        movq    %rdx, -40(%rbp)
        leal    (%rsi,%rcx), %edx
        movl    %edx, (%rax)
        jmp     .L6
.L5:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movzbl  (%rax), %eax
        cmpb    $68, %al
        jne     .L7
        movq    -40(%rbp), %rax
        subq    $4, %rax
        movl    (%rax), %ecx
        movq    -40(%rbp), %rax
        leaq    4(%rax), %rdx
        movq    %rdx, -40(%rbp)
        leal    (%rcx,%rcx), %edx
        movl    %edx, (%rax)
        jmp     .L6
.L7:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movzbl  (%rax), %eax
        cmpb    $67, %al
        jne     .L8
        subq    $4, -40(%rbp)
        jmp     .L6
.L8:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    -40(%rbp), %rbx
        leaq    4(%rbx), %rdx
        movq    %rdx, -40(%rbp)
        movq    %rax, %rdi
        call    atoi
        movl    %eax, (%rbx)
.L6:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movzbl  (%rax), %eax
        cmpb    $67, %al
        jne     .L9
        movl    $-1, %eax
        jmp     .L10
.L9:
        movl    $1, %eax
.L10:
        addl    %eax, -24(%rbp)
        addl    $1, -20(%rbp)
.L4:
        movl    -20(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jl      .L11
        movl    $0, -20(%rbp)
        movl    $0, -28(%rbp)
        jmp     .L12
.L13:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        addl    %eax, -28(%rbp)
        addl    $1, -20(%rbp)
.L12:
        movl    -20(%rbp), %eax
        cmpl    -24(%rbp), %eax
        jl      .L13
        movq    -48(%rbp), %rax
        movq    %rax, %rdi
        call    free
        movl    -28(%rbp), %eax
.L3:
        addq    $56, %rsp
        popq    %rbx
        popq    %rbp
        ret
