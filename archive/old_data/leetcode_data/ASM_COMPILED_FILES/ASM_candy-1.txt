func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $72, %rsp
        movq    %rdi, -72(%rbp)
        movl    %esi, -76(%rbp)
        movq    %rsp, %rax
        movq    %rax, %rsi
        movl    -76(%rbp), %eax
        movslq  %eax, %rdx
        subq    $1, %rdx
        movq    %rdx, -48(%rbp)
        movslq  %eax, %rdx
        movq    %rdx, %r8
        movl    $0, %r9d
        movslq  %eax, %rdx
        movq    %rdx, %rcx
        movl    $0, %ebx
        cltq
        leaq    0(,%rax,4), %rdx
        movl    $16, %eax
        subq    $1, %rax
        addq    %rdx, %rax
        movl    $16, %ebx
        movl    $0, %edx
        divq    %rbx
        imulq   $16, %rax, %rax
        subq    %rax, %rsp
        movq    %rsp, %rax
        addq    $3, %rax
        shrq    $2, %rax
        salq    $2, %rax
        movq    %rax, -56(%rbp)
        movl    $0, -36(%rbp)
        jmp     .L2
.L3:
        movq    -56(%rbp), %rax
        movl    -36(%rbp), %edx
        movslq  %edx, %rdx
        movl    $1, (%rax,%rdx,4)
        addl    $1, -36(%rbp)
.L2:
        movl    -36(%rbp), %eax
        cmpl    -76(%rbp), %eax
        jl      .L3
        movl    $1, -32(%rbp)
        jmp     .L4
.L6:
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -32(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jle     .L5
        movl    -32(%rbp), %eax
        leal    -1(%rax), %edx
        movq    -56(%rbp), %rax
        movslq  %edx, %rdx
        movl    (%rax,%rdx,4), %eax
        leal    1(%rax), %ecx
        movq    -56(%rbp), %rax
        movl    -32(%rbp), %edx
        movslq  %edx, %rdx
        movl    %ecx, (%rax,%rdx,4)
.L5:
        addl    $1, -32(%rbp)
.L4:
        movl    -32(%rbp), %eax
        cmpl    -76(%rbp), %eax
        jl      .L6
        movl    -76(%rbp), %eax
        subl    $2, %eax
        movl    %eax, -28(%rbp)
        jmp     .L7
.L9:
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -28(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jle     .L8
        movq    -56(%rbp), %rax
        movl    -28(%rbp), %edx
        movslq  %edx, %rdx
        movl    (%rax,%rdx,4), %ecx
        movl    -28(%rbp), %eax
        leal    1(%rax), %edx
        movq    -56(%rbp), %rax
        movslq  %edx, %rdx
        movl    (%rax,%rdx,4), %eax
        cmpl    %eax, %ecx
        jg      .L8
        movl    -28(%rbp), %eax
        leal    1(%rax), %edx
        movq    -56(%rbp), %rax
        movslq  %edx, %rdx
        movl    (%rax,%rdx,4), %eax
        leal    1(%rax), %ecx
        movq    -56(%rbp), %rax
        movl    -28(%rbp), %edx
        movslq  %edx, %rdx
        movl    %ecx, (%rax,%rdx,4)
.L8:
        subl    $1, -28(%rbp)
.L7:
        cmpl    $0, -28(%rbp)
        jns     .L9
        movl    $0, -24(%rbp)
        movl    $0, -20(%rbp)
        jmp     .L10
.L11:
        movq    -56(%rbp), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        movl    (%rax,%rdx,4), %eax
        addl    %eax, -24(%rbp)
        addl    $1, -20(%rbp)
.L10:
        movl    -20(%rbp), %eax
        cmpl    -76(%rbp), %eax
        jl      .L11
        movl    -24(%rbp), %eax
        movq    %rsi, %rsp
        movq    -8(%rbp), %rbx
        leave
        ret
