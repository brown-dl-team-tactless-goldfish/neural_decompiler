func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -4(%rbp)
        cmpl    $0, -4(%rbp)
        jns     .L2
        movl    -4(%rbp), %eax
        negl    %eax
        jmp     .L3
.L2:
        movl    -4(%rbp), %eax
.L3:
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movl    %edx, -48(%rbp)
        movq    -40(%rbp), %rax
        movl    (%rax), %edx
        movq    -40(%rbp), %rax
        addq    $4, %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movq    -40(%rbp), %rax
        addq    $8, %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -48(%rbp), %eax
        subl    %edx, %eax
        movl    %eax, %edi
        call    func_2
        movl    %eax, -28(%rbp)
        movl    $0, -16(%rbp)
        movl    $1, -20(%rbp)
        movl    $2, -24(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L5
.L13:
        movl    -4(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -8(%rbp)
        jmp     .L6
.L10:
        movl    -8(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -12(%rbp)
        jmp     .L7
.L9:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -48(%rbp), %eax
        subl    %edx, %eax
        movl    %eax, %edi
        call    func_2
        movl    %eax, -32(%rbp)
        movl    -32(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jge     .L8
        movl    -32(%rbp), %eax
        movl    %eax, -28(%rbp)
        movl    -4(%rbp), %eax
        movl    %eax, -16(%rbp)
        movl    -8(%rbp), %eax
        movl    %eax, -20(%rbp)
        movl    -12(%rbp), %eax
        movl    %eax, -24(%rbp)
.L8:
        addl    $1, -12(%rbp)
.L7:
        movl    -12(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L9
        addl    $1, -8(%rbp)
.L6:
        movl    -44(%rbp), %eax
        subl    $1, %eax
        cmpl    %eax, -8(%rbp)
        jl      .L10
        cmpl    $0, -28(%rbp)
        je      .L15
        addl    $1, -4(%rbp)
.L5:
        movl    -44(%rbp), %eax
        subl    $2, %eax
        cmpl    %eax, -4(%rbp)
        jl      .L13
        jmp     .L12
.L15:
        nop
.L12:
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %edx, %eax
        leave
        ret
