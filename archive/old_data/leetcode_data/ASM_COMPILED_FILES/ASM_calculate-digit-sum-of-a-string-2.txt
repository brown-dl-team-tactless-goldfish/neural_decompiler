func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    $0, -4(%rbp)
        cmpl    $0, -28(%rbp)
        jne     .L4
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -4(%rbp)
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movb    $48, (%rax)
        movl    -4(%rbp), %eax
        jmp     .L3
.L5:
        movl    -28(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movl    %edx, %eax
        leal    48(%rax), %ecx
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -4(%rbp)
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    %ecx, %edx
        movb    %dl, (%rax)
        movl    -28(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -28(%rbp)
.L4:
        cmpl    $0, -28(%rbp)
        jne     .L5
        movl    $0, -8(%rbp)
        movl    -4(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -12(%rbp)
        jmp     .L6
.L7:
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movb    %al, -13(%rbp)
        movl    -12(%rbp), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        leaq    (%rdx,%rax), %rcx
        movl    -8(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -8(%rbp)
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movzbl  (%rcx), %eax
        movb    %al, (%rdx)
        movl    -12(%rbp), %eax
        leal    -1(%rax), %edx
        movl    %edx, -12(%rbp)
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movzbl  -13(%rbp), %eax
        movb    %al, (%rdx)
.L6:
        movl    -8(%rbp), %eax
        cmpl    -12(%rbp), %eax
        jl      .L7
        movl    -4(%rbp), %eax
.L3:
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movl    $0, -4(%rbp)
        movq    -40(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -16(%rbp)
        movl    $0, -20(%rbp)
        movl    $0, -8(%rbp)
        movl    -16(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jg      .L9
        movq    -40(%rbp), %rax
        jmp     .L10
.L9:
        movl    $0, -12(%rbp)
        jmp     .L11
.L14:
        movl    -12(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        subl    $48, %eax
        addl    %eax, -8(%rbp)
        movl    -12(%rbp), %eax
        cltd
        idivl   -44(%rbp)
        movl    -44(%rbp), %eax
        subl    $1, %eax
        cmpl    %eax, %edx
        je      .L12
        movl    -16(%rbp), %eax
        subl    $1, %eax
        cmpl    %eax, -12(%rbp)
        jne     .L13
.L12:
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rax, %rdx
        movl    -8(%rbp), %eax
        movl    %eax, %esi
        movq    %rdx, %rdi
        call    func_1
        addl    %eax, -4(%rbp)
        movl    $0, -8(%rbp)
.L13:
        addl    $1, -12(%rbp)
.L11:
        movl    -12(%rbp), %eax
        cmpl    -16(%rbp), %eax
        jl      .L14
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movb    $0, (%rax)
        movl    -4(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jle     .L15
        movl    -44(%rbp), %edx
        movq    -40(%rbp), %rax
        movl    %edx, %esi
        movq    %rax, %rdi
        call    func_2
        movq    %rax, -40(%rbp)
.L15:
        movq    -40(%rbp), %rax
.L10:
        leave
        ret
