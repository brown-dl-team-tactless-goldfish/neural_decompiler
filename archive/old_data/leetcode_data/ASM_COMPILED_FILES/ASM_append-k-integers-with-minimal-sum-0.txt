func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -8(%rbp)
        movq    %rsi, -16(%rbp)
        movq    -8(%rbp), %rax
        movl    (%rax), %edx
        movq    -16(%rbp), %rax
        movl    (%rax), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $64, %rsp
        movq    %rdi, -56(%rbp)
        movl    %esi, -60(%rbp)
        movl    %edx, -64(%rbp)
        movl    -60(%rbp), %eax
        movslq  %eax, %rsi
        movq    -56(%rbp), %rax
        movl    $func_1, %ecx
        movl    $4, %edx
        movq    %rax, %rdi
        call    qsort
        movl    -64(%rbp), %eax
        movl    %eax, -4(%rbp)
        movq    $0, -16(%rbp)
        movq    -56(%rbp), %rax
        movl    (%rax), %eax
        subl    $1, %eax
        cmpl    %eax, -64(%rbp)
        jl      .L4
        movq    -56(%rbp), %rax
        movl    (%rax), %eax
        movslq  %eax, %rdx
        movq    -56(%rbp), %rax
        movl    (%rax), %eax
        subl    $1, %eax
        cltq
        imulq   %rdx, %rax
        movq    %rax, %rdx
        shrq    $63, %rdx
        addq    %rdx, %rax
        sarq    %rax
        addq    %rax, -16(%rbp)
        movq    -56(%rbp), %rax
        movl    (%rax), %eax
        subl    $1, %eax
        subl    %eax, -4(%rbp)
        movl    $1, -20(%rbp)
        jmp     .L7
.L4:
        movl    -64(%rbp), %eax
        addl    $1, %eax
        movslq  %eax, %rdx
        movl    -64(%rbp), %eax
        cltq
        imulq   %rdx, %rax
        movq    %rax, %rdx
        shrq    $63, %rdx
        addq    %rdx, %rax
        sarq    %rax
        addq    %rax, -16(%rbp)
        movq    -16(%rbp), %rax
        jmp     .L6
.L12:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -20(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        subl    $1, %eax
        movl    %eax, -24(%rbp)
        cmpl    $0, -24(%rbp)
        jle     .L13
        movl    -24(%rbp), %eax
        cmpl    -4(%rbp), %eax
        jg      .L10
        movl    -24(%rbp), %eax
        subl    %eax, -4(%rbp)
        movl    -20(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        addl    $1, %eax
        movl    %eax, -28(%rbp)
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        subl    $1, %eax
        movl    %eax, -32(%rbp)
        movl    -28(%rbp), %edx
        movl    -32(%rbp), %eax
        addl    %edx, %eax
        movslq  %eax, %rdx
        movl    -32(%rbp), %eax
        subl    -28(%rbp), %eax
        addl    $1, %eax
        cltq
        imulq   %rdx, %rax
        movq    %rax, %rdx
        shrq    $63, %rdx
        addq    %rdx, %rax
        sarq    %rax
        addq    %rax, -16(%rbp)
        jmp     .L11
.L10:
        movl    -20(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        addl    $1, %eax
        movl    %eax, -36(%rbp)
        movl    -36(%rbp), %edx
        movl    -4(%rbp), %eax
        addl    %edx, %eax
        subl    $1, %eax
        movl    %eax, -40(%rbp)
        movl    -36(%rbp), %edx
        movl    -40(%rbp), %eax
        addl    %edx, %eax
        movslq  %eax, %rdx
        movl    -40(%rbp), %eax
        subl    -36(%rbp), %eax
        addl    $1, %eax
        cltq
        imulq   %rdx, %rax
        movq    %rax, %rdx
        shrq    $63, %rdx
        addq    %rdx, %rax
        sarq    %rax
        addq    %rax, -16(%rbp)
        movl    $0, -4(%rbp)
.L11:
        cmpl    $0, -4(%rbp)
        jne     .L9
        movq    -16(%rbp), %rax
        jmp     .L6
.L13:
        nop
.L9:
        addl    $1, -20(%rbp)
.L7:
        movl    -20(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jl      .L12
        movl    -60(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        addl    $1, %eax
        movl    %eax, -44(%rbp)
        movl    -44(%rbp), %edx
        movl    -4(%rbp), %eax
        addl    %edx, %eax
        subl    $1, %eax
        movl    %eax, -48(%rbp)
        movl    -44(%rbp), %edx
        movl    -48(%rbp), %eax
        addl    %edx, %eax
        movslq  %eax, %rdx
        movl    -48(%rbp), %eax
        subl    -44(%rbp), %eax
        addl    $1, %eax
        cltq
        imulq   %rdx, %rax
        movq    %rax, %rdx
        shrq    $63, %rdx
        addq    %rdx, %rax
        sarq    %rax
        addq    %rax, -16(%rbp)
        movq    -16(%rbp), %rax
.L6:
        leave
        ret
