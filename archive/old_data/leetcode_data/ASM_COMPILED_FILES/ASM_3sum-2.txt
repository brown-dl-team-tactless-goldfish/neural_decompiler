func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -8(%rbp)
        movq    %rsi, -16(%rbp)
        movq    -8(%rbp), %rax
        movl    (%rax), %edx
        movq    -16(%rbp), %rax
        movl    (%rax), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $72, %rsp
        movq    %rdi, -56(%rbp)
        movl    %esi, -60(%rbp)
        movq    %rdx, -72(%rbp)
        movq    %rcx, -80(%rbp)
        movl    -60(%rbp), %eax
        movslq  %eax, %rsi
        movq    -56(%rbp), %rax
        movl    $func_1, %ecx
        movl    $4, %edx
        movq    %rax, %rdi
        call    qsort
        movq    -72(%rbp), %rax
        movl    $0, (%rax)
        movl    -60(%rbp), %eax
        movslq  %eax, %rdx
        movl    -60(%rbp), %eax
        cltq
        imulq   %rdx, %rax
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, %rdx
        movq    -80(%rbp), %rax
        movq    %rdx, (%rax)
        movl    -60(%rbp), %eax
        movslq  %eax, %rdx
        movl    -60(%rbp), %eax
        cltq
        imulq   %rdx, %rax
        salq    $3, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -40(%rbp)
        movl    $0, -20(%rbp)
        jmp     .L4
.L13:
        cmpl    $0, -20(%rbp)
        je      .L5
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -20(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L6
.L5:
        movl    -20(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -24(%rbp)
        movl    -60(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -28(%rbp)
        jmp     .L7
.L12:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %edx, %eax
        testl   %eax, %eax
        jns     .L8
        addl    $1, -24(%rbp)
        jmp     .L7
.L8:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %edx, %eax
        testl   %eax, %eax
        jle     .L9
        subl    $1, -28(%rbp)
        jmp     .L7
.L9:
        movq    -72(%rbp), %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        leaq    (%rdx,%rax), %rbx
        movl    $12, %edi
        call    malloc
        movq    %rax, (%rbx)
        movq    -80(%rbp), %rax
        movq    (%rax), %rdx
        movq    -72(%rbp), %rax
        movl    (%rax), %eax
        cltq
        salq    $2, %rax
        addq    %rdx, %rax
        movl    $3, (%rax)
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rax, %rdx
        movq    -72(%rbp), %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,8), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    (%rdx), %edx
        movl    %edx, (%rax)
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        leaq    (%rdx,%rax), %rcx
        movq    -72(%rbp), %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        leaq    4(%rax), %rdx
        movl    (%rcx), %eax
        movl    %eax, (%rdx)
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        leaq    (%rdx,%rax), %rcx
        movq    -72(%rbp), %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        leaq    8(%rax), %rdx
        movl    (%rcx), %eax
        movl    %eax, (%rdx)
        movq    -72(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %edx
        movq    -72(%rbp), %rax
        movl    %edx, (%rax)
        addl    $1, -24(%rbp)
        jmp     .L10
.L11:
        addl    $1, -24(%rbp)
.L10:
        movl    -24(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jge     .L7
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -24(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L11
.L7:
        movl    -24(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jl      .L12
.L6:
        addl    $1, -20(%rbp)
.L4:
        movl    -60(%rbp), %eax
        subl    $2, %eax
        cmpl    %eax, -20(%rbp)
        jl      .L13
        movq    -40(%rbp), %rax
        addq    $72, %rsp
        popq    %rbx
        popq    %rbp
        ret
