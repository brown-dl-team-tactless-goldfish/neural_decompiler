func_4:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -4(%rbp)
        movl    %esi, -8(%rbp)
        movl    -4(%rbp), %eax
        cmpl    %eax, -8(%rbp)
        cmovge  -8(%rbp), %eax
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $24, %rsp
        movq    %rdi, -24(%rbp)
        cmpq    $0, -24(%rbp)
        je      .L4
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, %rdi
        call    func_1
        movl    %eax, %ebx
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, %rdi
        call    func_1
        movl    %ebx, %esi
        movl    %eax, %edi
        call    func_4
        addl    $1, %eax
        jmp     .L6
.L4:
        movl    $0, %eax
.L6:
        addq    $24, %rsp
        popq    %rbx
        popq    %rbp
        ret
func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -4(%rbp)
        movl    -4(%rbp), %eax
        cltd
        movl    %edx, %eax
        xorl    -4(%rbp), %eax
        subl    %edx, %eax
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $24, %rsp
        movq    %rdi, -24(%rbp)
        cmpq    $0, -24(%rbp)
        je      .L10
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, %rdi
        call    func_1
        movl    %eax, %ebx
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, %rdi
        call    func_1
        subl    %eax, %ebx
        movl    %ebx, %eax
        movl    %eax, %edi
        call    func_3
        cmpl    $1, %eax
        jg      .L11
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, %rdi
        call    func_2
        testl   %eax, %eax
        je      .L11
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, %rdi
        call    func_2
        testl   %eax, %eax
        je      .L11
.L10:
        movl    $1, %eax
        jmp     .L13
.L11:
        movl    $0, %eax
.L13:
        addq    $24, %rsp
        popq    %rbx
        popq    %rbp
        ret
