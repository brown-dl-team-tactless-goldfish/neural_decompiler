func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $160, %rsp
        movq    %rdi, -152(%rbp)
        movq    %rsi, -160(%rbp)
        movq    -152(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -16(%rbp)
        movq    -160(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -20(%rbp)
        leaq    -128(%rbp), %rdx
        movl    $0, %eax
        movl    $13, %ecx
        movq    %rdx, %rdi
        rep stosq
        movl    -16(%rbp), %eax
        cmpl    -20(%rbp), %eax
        jne     .L2
        cmpl    $1, -16(%rbp)
        jle     .L2
        cmpl    $1, -20(%rbp)
        jg      .L3
.L2:
        movl    $0, %eax
        jmp     .L14
.L3:
        movl    $0, -132(%rbp)
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        jmp     .L5
.L8:
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -152(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        subl    $97, %eax
        movslq  %eax, %rdx
        movl    -128(%rbp,%rdx,4), %edx
        addl    $1, %edx
        cltq
        movl    %edx, -128(%rbp,%rax,4)
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -152(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %edx
        movl    -8(%rbp), %eax
        movslq  %eax, %rcx
        movq    -160(%rbp), %rax
        addq    %rcx, %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        je      .L6
        cmpl    $1, -4(%rbp)
        jle     .L7
        movl    $0, %eax
        jmp     .L14
.L7:
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -152(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %edx
        movl    -4(%rbp), %eax
        cltq
        movb    %dl, -132(%rbp,%rax,2)
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -160(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %edx
        movl    -4(%rbp), %eax
        cltq
        movb    %dl, -131(%rbp,%rax,2)
        addl    $1, -4(%rbp)
.L6:
        addl    $1, -8(%rbp)
.L5:
        movl    -8(%rbp), %eax
        cmpl    -16(%rbp), %eax
        jl      .L8
        cmpl    $0, -4(%rbp)
        jne     .L9
        movl    $0, -12(%rbp)
        jmp     .L10
.L12:
        movl    -12(%rbp), %eax
        cltq
        movl    -128(%rbp,%rax,4), %eax
        cmpl    $1, %eax
        jle     .L11
        movl    $1, %eax
        jmp     .L14
.L11:
        addl    $1, -12(%rbp)
.L10:
        cmpl    $25, -12(%rbp)
        jle     .L12
        movl    $0, %eax
        jmp     .L14
.L9:
        movzbl  -132(%rbp), %edx
        movzbl  -129(%rbp), %eax
        cmpb    %al, %dl
        jne     .L13
        movzbl  -130(%rbp), %edx
        movzbl  -131(%rbp), %eax
        cmpb    %al, %dl
        jne     .L13
        movl    $1, %eax
        jmp     .L14
.L13:
        movl    $0, %eax
.L14:
        leave
        ret
