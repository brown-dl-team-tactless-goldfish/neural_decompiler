.LC0:
        .string "01"
        .string ""
.LC1:
        .string "02"
        .string ""
.LC2:
        .string "04"
        .string ""
.LC3:
        .string "08"
        .string ""
.LC4:
        .string "16"
        .string ""
.LC5:
        .string "32"
        .string ""
var_7:
        .quad   .LC0
        .quad   .LC1
        .quad   .LC2
        .quad   .LC3
        .quad   .LC0
        .quad   .LC1
        .quad   .LC2
        .quad   .LC3
        .quad   .LC4
        .quad   .LC5
func_5:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -8(%rbp)
        movl    %esi, -12(%rbp)
        movl    -12(%rbp), %eax
        movl    $1, %edx
        movl    %eax, %ecx
        sall    %cl, %edx
        movq    -8(%rbp), %rax
        movl    (%rax), %eax
        orl     %eax, %edx
        movq    -8(%rbp), %rax
        movl    %edx, (%rax)
        nop
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -8(%rbp)
        movl    %esi, -12(%rbp)
        movl    -12(%rbp), %eax
        movl    $1, %edx
        movl    %eax, %ecx
        sall    %cl, %edx
        movq    -8(%rbp), %rax
        movl    (%rax), %eax
        andl    %edx, %eax
        testl   %eax, %eax
        setg    %al
        movzbl  %al, %eax
        popq    %rbp
        ret
func_4:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movl    %edi, -36(%rbp)
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        jmp     .L5
.L7:
        movl    -8(%rbp), %edx
        leaq    -36(%rbp), %rax
        movl    %edx, %esi
        movq    %rax, %rdi
        call    func_1
        cmpl    $1, %eax
        jne     .L6
        movl    -8(%rbp), %eax
        cltq
        movq    var_7(,%rax,8), %rax
        movq    %rax, %rdi
        call    atoi
        addl    %eax, -4(%rbp)
.L6:
        addl    $1, -8(%rbp)
.L5:
        cmpl    $3, -8(%rbp)
        jle     .L7
        cmpl    $11, -4(%rbp)
        jg      .L19
        movl    $0, -12(%rbp)
        movl    $4, -16(%rbp)
        jmp     .L10
.L12:
        movl    -16(%rbp), %edx
        leaq    -36(%rbp), %rax
        movl    %edx, %esi
        movq    %rax, %rdi
        call    func_1
        cmpl    $1, %eax
        jne     .L11
        movl    -16(%rbp), %eax
        cltq
        movq    var_7(,%rax,8), %rax
        movq    %rax, %rdi
        call    atoi
        addl    %eax, -12(%rbp)
.L11:
        addl    $1, -16(%rbp)
.L10:
        cmpl    $9, -16(%rbp)
        jle     .L12
        cmpl    $59, -12(%rbp)
        jg      .L20
        movl    var_4(%rip), %eax
        addl    $1, %eax
        movl    %eax, var_4(%rip)
        movl    $0, -20(%rbp)
        cmpl    $9, -4(%rbp)
        jle     .L14
        movq    var_3(%rip), %rax
        movl    var_4(%rip), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rdx
        movl    -20(%rbp), %eax
        cltq
        addq    %rdx, %rax
        movb    $49, (%rax)
        addl    $1, -20(%rbp)
.L14:
        cmpl    $0, -4(%rbp)
        jne     .L15
        movq    var_3(%rip), %rax
        movl    var_4(%rip), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rdx
        movl    -20(%rbp), %eax
        cltq
        addq    %rdx, %rax
        movb    $48, (%rax)
        addl    $1, -20(%rbp)
        movq    var_3(%rip), %rax
        movl    var_4(%rip), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rdx
        movl    -20(%rbp), %eax
        cltq
        addq    %rdx, %rax
        movb    $58, (%rax)
        jmp     .L16
.L15:
        movl    -4(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movl    %edx, %eax
        leal    48(%rax), %ecx
        movq    var_3(%rip), %rax
        movl    var_4(%rip), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rdx
        movl    -20(%rbp), %eax
        cltq
        addq    %rdx, %rax
        movl    %ecx, %edx
        movb    %dl, (%rax)
        addl    $1, -20(%rbp)
        movq    var_3(%rip), %rax
        movl    var_4(%rip), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rdx
        movl    -20(%rbp), %eax
        cltq
        addq    %rdx, %rax
        movb    $58, (%rax)
.L16:
        addl    $1, -20(%rbp)
        cmpl    $9, -12(%rbp)
        jg      .L17
        movq    var_3(%rip), %rax
        movl    var_4(%rip), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rdx
        movl    -20(%rbp), %eax
        cltq
        addq    %rdx, %rax
        movb    $48, (%rax)
        addl    $1, -20(%rbp)
        movl    -12(%rbp), %eax
        leal    48(%rax), %ecx
        movq    var_3(%rip), %rax
        movl    var_4(%rip), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rdx
        movl    -20(%rbp), %eax
        cltq
        addq    %rdx, %rax
        movl    %ecx, %edx
        movb    %dl, (%rax)
        addl    $1, -20(%rbp)
        jmp     .L18
.L17:
        movl    -12(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        leal    48(%rax), %ecx
        movq    var_3(%rip), %rax
        movl    var_4(%rip), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rdx
        movl    -20(%rbp), %eax
        cltq
        addq    %rdx, %rax
        movl    %ecx, %edx
        movb    %dl, (%rax)
        addl    $1, -20(%rbp)
        movl    -12(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movl    %edx, %eax
        leal    48(%rax), %ecx
        movq    var_3(%rip), %rax
        movl    var_4(%rip), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rdx
        movl    -20(%rbp), %eax
        cltq
        addq    %rdx, %rax
        movl    %ecx, %edx
        movb    %dl, (%rax)
        addl    $1, -20(%rbp)
.L18:
        movq    var_3(%rip), %rax
        movl    var_4(%rip), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rdx
        movl    -20(%rbp), %eax
        cltq
        addq    %rdx, %rax
        movb    $0, (%rax)
        jmp     .L4
.L19:
        nop
        jmp     .L4
.L20:
        nop
.L4:
        leave
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movl    %edi, -20(%rbp)
        movl    %esi, -24(%rbp)
        movl    %edx, -28(%rbp)
        movl    %ecx, -32(%rbp)
        cmpl    $0, -32(%rbp)
        jne     .L22
        movl    -28(%rbp), %eax
        movl    %eax, %edi
        call    func_4
        jmp     .L21
.L22:
        movl    -20(%rbp), %eax
        movl    %eax, -4(%rbp)
        jmp     .L24
.L25:
        movl    -28(%rbp), %eax
        movl    %eax, -8(%rbp)
        movl    -4(%rbp), %edx
        leaq    -28(%rbp), %rax
        movl    %edx, %esi
        movq    %rax, %rdi
        call    func_5
        movl    -32(%rbp), %eax
        leal    -1(%rax), %ecx
        movl    -28(%rbp), %edx
        movl    -4(%rbp), %eax
        leal    1(%rax), %edi
        movl    -24(%rbp), %eax
        movl    %eax, %esi
        call    func_2
        movl    -8(%rbp), %eax
        movl    %eax, -28(%rbp)
        addl    $1, -4(%rbp)
.L24:
        movl    -4(%rbp), %eax
        cmpl    -24(%rbp), %eax
        jle     .L25
.L21:
        leave
        ret
func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $40, %rsp
        movl    %edi, -36(%rbp)
        movq    %rsi, -48(%rbp)
        cmpl    $8, -36(%rbp)
        jle     .L27
        movq    -48(%rbp), %rax
        movl    $0, (%rax)
        movq    var_3(%rip), %rax
        jmp     .L28
.L27:
        movl    $8, %esi
        movl    $200, %edi
        call    calloc
        movq    %rax, var_3(%rip)
        movl    $-1, var_4(%rip)
        movl    $0, -20(%rbp)
        jmp     .L29
.L30:
        movq    var_3(%rip), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        leaq    (%rax,%rdx), %rbx
        movl    $1, %esi
        movl    $6, %edi
        call    calloc
        movq    %rax, (%rbx)
        addl    $1, -20(%rbp)
.L29:
        cmpl    $199, -20(%rbp)
        jle     .L30
        movl    -36(%rbp), %eax
        movl    %eax, %ecx
        movl    $0, %edx
        movl    $9, %esi
        movl    $0, %edi
        call    func_2
        movl    var_4(%rip), %eax
        leal    1(%rax), %edx
        movq    -48(%rbp), %rax
        movl    %edx, (%rax)
        movq    var_3(%rip), %rax
.L28:
        addq    $40, %rsp
        popq    %rbx
        popq    %rbp
        ret
