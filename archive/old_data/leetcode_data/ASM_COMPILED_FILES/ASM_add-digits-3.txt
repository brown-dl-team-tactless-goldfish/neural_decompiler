func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -20(%rbp)
        cmpl    $9, -20(%rbp)
        jle     .L2
        movl    -20(%rbp), %eax
        movl    %eax, -4(%rbp)
        andl    $7, -20(%rbp)
        jmp     .L3
.L4:
        sarl    $3, -4(%rbp)
        movl    -4(%rbp), %eax
        andl    $7, %eax
        subl    %eax, -20(%rbp)
        sarl    $3, -4(%rbp)
        movl    -4(%rbp), %eax
        andl    $7, %eax
        addl    %eax, -20(%rbp)
.L3:
        cmpl    $0, -4(%rbp)
        jne     .L4
        subl    $1, -20(%rbp)
        jmp     .L5
.L6:
        addl    $9, -20(%rbp)
.L5:
        cmpl    $0, -20(%rbp)
        js      .L6
        addl    $1, -20(%rbp)
.L2:
        cmpl    $9, -20(%rbp)
        jle     .L7
        movl    -20(%rbp), %eax
        sarl    $3, %eax
        movl    %eax, -4(%rbp)
        movl    -20(%rbp), %eax
        andl    $7, %eax
        movl    %eax, %edx
        movl    -4(%rbp), %eax
        andl    $7, %eax
        subl    %eax, %edx
        movl    -4(%rbp), %eax
        sarl    $3, %eax
        andl    $7, %eax
        addl    %edx, %eax
        movl    %eax, -20(%rbp)
        cmpl    $0, -20(%rbp)
        jns     .L7
        addl    $9, -20(%rbp)
.L7:
        cmpl    $9, -20(%rbp)
        jle     .L8
        movl    -20(%rbp), %eax
        andl    $7, %eax
        movl    %eax, %edx
        movl    -20(%rbp), %eax
        sarl    $3, %eax
        andl    $7, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -20(%rbp)
        cmpl    $0, -20(%rbp)
        jns     .L8
        addl    $9, -20(%rbp)
.L8:
        movl    -20(%rbp), %eax
        popq    %rbp
        ret
