func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movl    %edi, -20(%rbp)
        movl    %esi, -24(%rbp)
        movq    %rdx, -32(%rbp)
        movl    -20(%rbp), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -16(%rbp)
        movl    $0, -4(%rbp)
        movq    -32(%rbp), %rax
        movl    -20(%rbp), %edx
        movl    %edx, (%rax)
        movq    -16(%rbp), %rax
        movl    $1, (%rax)
        jmp     .L2
.L5:
        movl    -4(%rbp), %eax
        andl    $1, %eax
        testl   %eax, %eax
        jne     .L3
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -16(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %ecx
        movl    -4(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rdx
        movq    -16(%rbp), %rax
        addq    %rdx, %rax
        movl    -24(%rbp), %edx
        addl    %ecx, %edx
        movl    %edx, (%rax)
        jmp     .L4
.L3:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -16(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    -4(%rbp), %edx
        movslq  %edx, %rdx
        addq    $1, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -16(%rbp), %rdx
        addq    %rcx, %rdx
        subl    -24(%rbp), %eax
        movl    %eax, (%rdx)
.L4:
        addl    $1, -4(%rbp)
        subl    $1, -24(%rbp)
.L2:
        cmpl    $0, -24(%rbp)
        jne     .L5
        movl    -4(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -8(%rbp)
        jmp     .L6
.L7:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -16(%rbp), %rax
        addq    %rdx, %rax
        movl    -8(%rbp), %edx
        addl    $1, %edx
        movl    %edx, (%rax)
        addl    $1, -8(%rbp)
.L6:
        movl    -8(%rbp), %eax
        cmpl    -20(%rbp), %eax
        jl      .L7
        movq    -16(%rbp), %rax
        leave
        ret
