func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $80, %rsp
        movq    %rdi, -56(%rbp)
        movl    %esi, -60(%rbp)
        movl    %edx, -64(%rbp)
        movq    %rcx, -72(%rbp)
        cvtsi2sd        -64(%rbp), %xmm0
        call    log10
        movapd  %xmm0, %xmm1
        movsd   .LC0(%rip), %xmm0
        addsd   %xmm1, %xmm0
        cvttsd2si       %xmm0, %eax
        movl    %eax, -16(%rbp)
        movl    -16(%rbp), %eax
        cmpl    %eax, -60(%rbp)
        cmovge  -60(%rbp), %eax
        movl    %eax, -20(%rbp)
        movl    -60(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -4(%rbp)
        movl    -20(%rbp), %eax
        movl    %eax, -8(%rbp)
        movl    $0, -12(%rbp)
        movl    -20(%rbp), %eax
        addl    $1, %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        movl    $0, %eax
        call    var_7
        cltq
        movq    %rax, -32(%rbp)
        movq    -32(%rbp), %rax
        movl    $0, (%rax)
        jmp     .L2
.L5:
        cmpl    $0, -4(%rbp)
        js      .L3
        movl    -4(%rbp), %eax
        leal    -1(%rax), %edx
        movl    %edx, -4(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        jmp     .L4
.L3:
        movl    $0, %eax
.L4:
        movl    %eax, -36(%rbp)
        movl    -64(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movl    -36(%rbp), %eax
        addl    %eax, %edx
        movl    -12(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, -40(%rbp)
        movl    -64(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -64(%rbp)
        movl    -8(%rbp), %eax
        leal    -1(%rax), %edx
        movl    %edx, -8(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        leaq    (%rdx,%rax), %rsi
        movl    -40(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movl    %edx, (%rsi)
        movl    -40(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -12(%rbp)
.L2:
        cmpl    $0, -8(%rbp)
        jns     .L5
        movq    -32(%rbp), %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L6
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        leaq    4(%rax), %rcx
        movq    -32(%rbp), %rax
        movq    %rcx, %rsi
        movq    %rax, %rdi
        movl    $0, %eax
        call    var_8
        movq    -72(%rbp), %rax
        movl    -20(%rbp), %edx
        movl    %edx, (%rax)
        jmp     .L7
.L6:
        movl    -20(%rbp), %eax
        leal    1(%rax), %edx
        movq    -72(%rbp), %rax
        movl    %edx, (%rax)
.L7:
        movq    -32(%rbp), %rax
        leave
        ret
.LC0:
        .long   0
        .long   1072693248
