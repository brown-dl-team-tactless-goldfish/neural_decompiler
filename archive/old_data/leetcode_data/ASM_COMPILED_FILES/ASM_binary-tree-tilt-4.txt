var_5:
        .zero   4
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        cmpq    $0, -24(%rbp)
        je      .L2
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, %rdi
        call    func_2
        movl    %eax, -4(%rbp)
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, %rdi
        call    func_2
        movl    %eax, -8(%rbp)
        movl    -4(%rbp), %eax
        subl    -8(%rbp), %eax
        movl    %eax, %edx
        movl    %edx, %eax
        sarl    $31, %eax
        xorl    %eax, %edx
        movl    %edx, -12(%rbp)
        subl    %eax, -12(%rbp)
        movl    var_5(%rip), %edx
        movl    -12(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, var_5(%rip)
        movq    -24(%rbp), %rax
        movl    (%rax), %edx
        movl    -4(%rbp), %eax
        addl    %eax, %edx
        movl    -8(%rbp), %eax
        addl    %edx, %eax
        jmp     .L3
.L2:
        movl    $0, %eax
.L3:
        leave
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $16, %rsp
        movq    %rdi, -8(%rbp)
        movl    $0, var_5(%rip)
        movq    -8(%rbp), %rax
        movq    %rax, %rdi
        call    func_2
        movl    var_5(%rip), %eax
        leave
        ret
