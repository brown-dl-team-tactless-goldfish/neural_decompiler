func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $72, %rsp
        movq    %rdi, -40(%rbp)
        movq    %rsi, -48(%rbp)
        movl    %edx, -52(%rbp)
        movq    %rcx, -64(%rbp)
        movl    %r8d, -56(%rbp)
        movl    %r9d, -68(%rbp)
        cmpl    $11, -68(%rbp)
        jg      .L12
        cmpl    $59, 16(%rbp)
        jg      .L12
        cmpl    $0, -52(%rbp)
        jne     .L5
        movq    -48(%rbp), %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        leaq    (%rdx,%rax), %rbx
        movl    $1, %esi
        movl    $6, %edi
        call    calloc
        movq    %rax, (%rbx)
        movq    -48(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %edx
        movq    -48(%rbp), %rax
        movl    %edx, (%rax)
        jmp     .L1
.L5:
        movl    -56(%rbp), %eax
        movl    %eax, -20(%rbp)
        jmp     .L6
.L11:
        cmpl    $5, -20(%rbp)
        jle     .L7
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -68(%rbp), %eax
        addl    %edx, %eax
        jmp     .L8
.L7:
        movl    -68(%rbp), %eax
.L8:
        movl    %eax, -24(%rbp)
        cmpl    $5, -20(%rbp)
        jg      .L9
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    16(%rbp), %eax
        addl    %edx, %eax
        jmp     .L10
.L9:
        movl    16(%rbp), %eax
.L10:
        movl    %eax, -28(%rbp)
        movl    -20(%rbp), %eax
        leal    1(%rax), %r10d
        movl    -52(%rbp), %eax
        leal    -1(%rax), %edi
        movl    -24(%rbp), %r8d
        movq    -64(%rbp), %rdx
        movq    -48(%rbp), %rsi
        movq    -40(%rbp), %rax
        subq    $8, %rsp
        movl    -28(%rbp), %ecx
        pushq   %rcx
        movl    %r8d, %r9d
        movl    %r10d, %r8d
        movq    %rdx, %rcx
        movl    %edi, %edx
        movq    %rax, %rdi
        call    func_2
        addq    $16, %rsp
        addl    $1, -20(%rbp)
.L6:
        cmpl    $9, -20(%rbp)
        jle     .L11
        jmp     .L1
.L12:
        nop
.L1:
        movq    -8(%rbp), %rbx
        leave
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $80, %rsp
        movl    %edi, -68(%rbp)
        movq    %rsi, -80(%rbp)
        movl    $1, -64(%rbp)
        movl    $2, -60(%rbp)
        movl    $4, -56(%rbp)
        movl    $8, -52(%rbp)
        movl    $16, -48(%rbp)
        movl    $32, -44(%rbp)
        movl    $1, -40(%rbp)
        movl    $2, -36(%rbp)
        movl    $4, -32(%rbp)
        movl    $8, -28(%rbp)
        movl    $8, %esi
        movl    $720, %edi
        call    calloc
        movq    %rax, -8(%rbp)
        movl    $0, -12(%rbp)
        movl    $0, -16(%rbp)
        movl    $0, -20(%rbp)
        movq    -80(%rbp), %rax
        movl    $0, (%rax)
        movl    -16(%rbp), %r9d
        movl    -12(%rbp), %r8d
        leaq    -64(%rbp), %rcx
        movl    -68(%rbp), %edx
        movq    -80(%rbp), %rsi
        movq    -8(%rbp), %rax
        subq    $8, %rsp
        movl    -20(%rbp), %edi
        pushq   %rdi
        movq    %rax, %rdi
        call    func_2
        addq    $16, %rsp
        movq    -8(%rbp), %rax
        leave
        ret
