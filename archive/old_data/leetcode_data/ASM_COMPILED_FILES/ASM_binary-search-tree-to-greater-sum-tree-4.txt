func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $16, %rsp
        movq    %rdi, -8(%rbp)
        movl    %esi, -12(%rbp)
        cmpq    $0, -8(%rbp)
        jne     .L2
        movl    -12(%rbp), %eax
        jmp     .L3
.L2:
        movq    -8(%rbp), %rax
        movq    16(%rax), %rax
        movl    -12(%rbp), %edx
        movl    %edx, %esi
        movq    %rax, %rdi
        call    func_1
        movl    %eax, %edx
        movq    -8(%rbp), %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movq    -8(%rbp), %rax
        movl    %edx, (%rax)
        movq    -8(%rbp), %rax
        movl    (%rax), %edx
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movl    %edx, %esi
        movq    %rax, %rdi
        call    func_1
        movl    %eax, -12(%rbp)
        movl    -12(%rbp), %eax
.L3:
        leave
        ret
func_1ToGst:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $16, %rsp
        movq    %rdi, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    $0, %esi
        movq    %rax, %rdi
        call    func_1
        movq    -8(%rbp), %rax
        leave
        ret
