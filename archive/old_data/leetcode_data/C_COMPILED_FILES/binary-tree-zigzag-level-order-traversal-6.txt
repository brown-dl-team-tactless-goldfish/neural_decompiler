#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
struct var_0 {
int var_19;
struct var_0 *var_6;
struct var_0 *var_15;
};
typedef struct var_0 var_18;
int** func_1(var_18* var_16, int** var_1, int* var_14) {
if(var_16 == NULL)
{
*var_14 = 0;
return NULL; 
}
*var_14 = 0;
int** var_13 = (int**)malloc(sizeof(int*) * 1000);
var_18* var_9[2000]; 
var_18* var_17;
int var_7;
*var_1 = (int*)malloc(sizeof(int) * 1000);
memset(*var_1, 0, sizeof(int)*1000);
int var_3 = 0, var_2 = 0;
int var_11 = 1, var_10=0;
int var_4 = 0, var_5=0, var_8=0;
bool var_12=false;
var_9[var_2++] = var_16;
while(var_2 > var_3)
{
var_13[var_5] = (int*)malloc(sizeof(int)* 1000);
var_8= (var_12)? var_11-1 : 0;
for(var_4=0; var_4<var_11 && var_2 > var_3; var_4++)
{
var_17 = var_9[var_3++];
if(var_12 == false)
var_13[var_5][var_8++] = var_17->var_19;
else
var_13[var_5][(var_8--)] = var_17->var_19; 
if(var_17->var_6 != NULL)
{
var_9[var_2++] = var_17->var_6; 
var_10++;
}
if(var_17->var_15!=NULL)
{
var_9[var_2++] = var_17->var_15; 
var_10++;
}
}
(*var_1)[var_5++] = var_11;
var_11 = var_10;
if(var_10 == 0)
break;
var_10 = 0;
var_12 ^= 1;
}
*var_14 = var_5;
return var_13;
}