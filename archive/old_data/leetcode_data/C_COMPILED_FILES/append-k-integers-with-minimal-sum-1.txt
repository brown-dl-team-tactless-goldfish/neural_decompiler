#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
int func_1(void *var_0, void *var_1){
return ( *((int*)var_0) > *((int*)var_1) );
}
long long func_2(int* var_9, int var_10, int var_6){
	
qsort(var_9, var_10, sizeof(var_9[0]), func_1);
int var_2 = 0, var_4 = 0;
long long var_11 = 0;
if(var_9[0] != 1){
if(var_9[0] < var_6){
long long var_8 = var_9[0]-1;
var_11 = (var_8 * (var_8+1))/2;
var_2 += var_8;
}
else if(var_9[0] == var_6){
long long var_8 = var_6-1;
var_11 = (var_8 * (var_8+1))/2;
var_2 += var_8;
}
else{
long long var_8 = var_6;
var_11 = (var_8 * (var_8+1))/2;
return var_11;
}
}
int var_5 = 0;
while(var_5 < var_10-1){
int var_3 = (var_9[var_5+1] - var_9[var_5]);
if(var_3 > 1){
if((var_2 + (var_3-1)) < var_6){
long long var_7 = var_9[var_5];
long long var_8 = var_9[var_5+1] - 1;
long long var_12 = (var_7 * (var_7+1))/2;
long long var_13 = (var_8 * (var_8+1))/2;
var_11 += (var_13 - var_12);
var_2 += (var_3-1); 
}
else{
long long var_7 = var_9[var_5];
long long var_8 = var_9[var_5] + (var_6 - var_2);
long long var_12 = (var_7 * (var_7+1))/2;
long long var_13 = (var_8 * (var_8+1))/2;
var_11 += (var_13 - var_12);
return var_11;
}
}
var_5++;
}
long long var_7 = var_9[var_5];
long long var_8 = var_9[var_5] + (var_6 - var_2);
long long var_12 = (var_7 * (var_7+1))/2;
long long var_13 = (var_8 * (var_8+1))/2;
var_11 += (var_13 - var_12);
 
return var_11;
}