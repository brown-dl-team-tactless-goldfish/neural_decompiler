#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
struct var_1
{
int var_27;
struct var_1 *var_8;
struct var_1 *var_18;
};
enum
{
var_0,
RIGHT
} var_10;
int func_1(struct var_1 *var_19, int *var_17,
int **var_16)
{
if (!var_19)
{
*var_17 = 0;
(*var_16)[0] = 0;
return NULL;
}
struct var_1 *var_22[200];
struct var_1 *var_23[200];
struct var_1 **var_3 = var_22; 
struct var_1 **var_11 = var_23; 
int var_20 = 0;
int var_21 = 0;
int var_4 = var_20; 
int var_12 = var_21; 
int var_13[2000];
int var_14 = 0;
int var_2 = 0; 
*var_17 = 0;
*var_16 = NULL;
int var_9 = var_0;
var_3[var_4++] = var_19;
while (var_4 > 0)
{
struct var_1 *var_24 = var_3[var_4 - 1];
if (var_24) 
{
var_13[var_14++] = var_24->var_27; 
if (var_9 == var_0) 
{
if (var_24->var_8)
var_11[var_12++] = var_24->var_8;
if (var_24->var_18)
var_11[var_12++] = var_24->var_18;
}
else
{
if (var_24->var_18)
var_11[var_12++] = var_24->var_18;
if (var_24->var_8)
var_11[var_12++] = var_24->var_8;
}
var_4--;
var_2++; 
}
if (var_4 == 0)
{
var_9 = (var_9 == var_0)
? RIGHT
: var_0; 
struct var_1 **var_25 = var_3;
var_3 = var_11;
var_11 = var_25;
int var_26 = var_4;
var_4 = var_12;
var_12 = var_26;
(*var_17)++;
*var_16 =
realloc(*var_16, sizeof(int) * (*var_17));
(*var_16)[*var_17 - 1] = var_2;
var_2 = 0;
}
}
int **var_15 = malloc(sizeof(int *) * (*var_17));
int var_7 = 0; 
for (int var_5 = 0; var_5 < *var_17; var_5++)
{
var_15[var_5] = malloc(sizeof(int) * (*var_16)[var_5]);
for (int var_6 = 0; var_6 < (*var_16)[var_5]; var_6++)
{
var_15[var_5][var_6] = var_13[var_7];
var_7++;
}
}
return var_15;
}