#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
int func_1(const void *var_1, const void *var_2)
{
return (*(int *) var_1 - *(int *) var_2);
}
int** func_2(int* var_7, int var_8, int var_11, int* var_10) {
int **var_9 = NULL;
int var_3, var_4, var_5, var_6;
int var_0;
*var_10 = 0;
if ((var_7 == NULL) || (var_8 < 4))
return NULL;
qsort(var_7, var_8, sizeof(int), func_1);
var_9 = malloc(sizeof(int *) * var_8 * (var_8 - 1) * (var_8 - 2) * (var_8 - 3) / 24);
for (var_3 = 0; var_3 < var_8; var_3++) {
for (var_4 = var_3 + 1; var_4 < var_8; var_4++) {
var_5 = var_4 + 1;
var_6 = var_8 - 1;
while (var_5 < var_6) {
var_0 = var_7[var_3] + var_7[var_4] + var_7[var_5] + var_7[var_6];
if (var_0 == var_11) {
var_9[*var_10] = malloc(sizeof(int) * 4);
var_9[*var_10][0] = var_7[var_3];
var_9[*var_10][1] = var_7[var_4];
var_9[*var_10][2] = var_7[var_5];
var_9[*var_10][3] = var_7[var_6];
(*var_10)++;
while ((var_7[var_5] == var_7[var_5 + 1]) && (var_5 < var_8))
var_5++;
while ((var_7[var_6] == var_7[var_6 - 1]) && (var_6 > 0))
var_6--;
var_5++;
var_6--;
} else if (var_0 > var_11) {
var_6--;
} else {
var_5++;
}
}
while ((var_7[var_4] == var_7[var_4 + 1]) && (var_4 < var_8))
var_4++;
}
while ((var_7[var_3] == var_7[var_3 + 1]) && (var_3 < var_8))
var_3++;
}
return var_9;
}