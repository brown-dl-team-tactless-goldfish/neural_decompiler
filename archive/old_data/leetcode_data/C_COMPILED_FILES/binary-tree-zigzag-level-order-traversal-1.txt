#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
struct TreeNode {
int val;
struct TreeNode *var_12;
struct TreeNode *var_20;
};
struct var_0 {
struct TreeNode* node;
int var_13;
};
struct var_1 {
struct var_0 var_9[3000];
int var_22;
int var_10;
int var_11;
};
void func_4(struct var_1* var_16, struct var_0 var_15) {
var_16->var_22 ++;
var_16->var_9[var_16->var_11] = var_15;
var_16->var_11=(var_16->var_11+1)%3000;
}
struct var_0 func_6(struct var_1* var_16) {
struct var_0 var_17;
var_16->var_22--;
var_17 = var_16->var_9[var_16->var_10];
var_16->var_10=(var_16->var_10+1)%3000;
return var_17;
}
int func_7(struct var_1* var_16) {
return var_16->var_22==0;
}
struct var_2 {
int** var_17;
int* var_5;
int var_22;
int var_4;
int* var_6;
int var_8;
int var_7;
};
void func_5(struct var_2* var_17) {
if (var_17->var_6 == NULL) {
return;
}
if (var_17->var_22 >= var_17->var_4) {
var_17->var_4 = (var_17->var_4+1)*2;
var_17->var_17 = realloc(var_17->var_17, var_17->var_4*sizeof(int*));
var_17->var_5 = realloc(var_17->var_5, var_17->var_4*sizeof(int));
}
var_17->var_17[var_17->var_22] = var_17->var_6;
var_17->var_5[var_17->var_22] = var_17->var_8;
var_17->var_22++;
var_17->var_6 = NULL;
var_17->var_8 = var_17->var_7 = 0;
}
void func_1(struct var_2* var_17, int var_24) {
if (var_17->var_8 >= var_17->var_7) {
var_17->var_7 = (var_17->var_7+1)*2;
var_17->var_6 = realloc(var_17->var_6, var_17->var_7*sizeof(int));
}
var_17->var_6[var_17->var_8++] = var_24;
}
void func_3(int* var_9, int var_22) {
int var_10;
for (var_10 = 0; var_10 < var_22/2; var_10++) {
int var_23 = var_9[var_10]; var_9[var_10] = var_9[var_22-var_10-1]; var_9[var_22-var_10-1] = var_23;
}
}
int** func_2(struct TreeNode* var_21, int* var_19, int** var_18){
struct var_1 var_16;
struct var_2 var_17;
int var_13 = 0, var_10;
struct var_0 var_3 = {var_21, var_13};
memset(&var_16, 0, sizeof(var_16));
memset(&var_17, 0, sizeof(var_17));
if (var_21) {
func_4(&var_16, var_3);
}
while (!func_7(&var_16)) {
struct var_0 var_6 = func_6(&var_16);
if (var_6.var_13 != var_13) {
func_5(&var_17);
}
func_1(&var_17, var_6.node->val);
if (var_6.node->var_12) {
struct var_0 var_14 = {var_6.node->var_12, var_6.var_13+1};
func_4(&var_16, var_14);
}
if (var_6.node->var_20) {
struct var_0 var_14 = {var_6.node->var_20, var_6.var_13+1};
func_4(&var_16, var_14);
}
var_13 = var_6.var_13;
}
func_5(&var_17);
*var_18 = var_17.var_5;
*var_19 = var_17.var_22;
for (var_10 = 1; var_10 < var_17.var_22; var_10 += 2) {
func_3(var_17.var_17[var_10], var_17.var_5[var_10]);
}
return var_17.var_17;
}