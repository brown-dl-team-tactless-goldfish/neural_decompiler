#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
typedef struct {
int var_8;
int var_6;
float var_11;
} var_2;
int func_2( const void * var_0, const void * var_1 )
{
return ( (( var_2* )var_0)->var_6 - (( var_2* )var_1)->var_6 );
}
int func_1( int var_10, int* var_6, int var_7, int* var_8, int var_9 ) {
int var_4 = 1;
var_2 * var_3 = malloc( sizeof( var_2 )*var_7 );
if ( var_7 == 0 ) return 0;
for ( int var_5 = 0; var_5 < var_7; var_5++ )
{
var_3[var_5].var_11 = ( ( float )var_10 - ( float )var_6[var_5] ) / ( float )var_8[var_5];
var_3[var_5].var_6 = var_6[var_5];
var_3[var_5].var_8 = var_8[var_5];
}
qsort( var_3, var_7, sizeof( var_2 ), func_2 );
for ( int var_5 = var_7 - 1; var_5 >= 1; var_5-- )
{
if ( var_3[var_5].var_11 < var_3[var_5 - 1].var_11 )
{
var_4++;
}
else
{
var_3[var_5-1].var_11 = var_3[var_5].var_11;
}
}
free( var_3 );
return var_4;
}