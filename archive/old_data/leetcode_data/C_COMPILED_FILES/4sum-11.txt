#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
int func_2(const void *var_0, const void *var_1){
int var_6 = *(const int*) var_0;
int var_9 = *(const int*) var_1;
return var_6-var_9;
}
int** func_1(int* var_7, int var_8, int var_14, int* var_11) {
if(var_7==NULL || var_8 == 0)
return NULL;
qsort((void *)var_7, var_8, sizeof(var_7[0]), func_2);
int **var_10 = NULL;
int var_2 = 0;
for(int var_4=0;var_4<var_8;var_4++){
if(var_4>0&&var_7[var_4]==var_7[var_4-1])
continue;
for(int var_5=var_4+1;var_5<var_8;var_5++){
if(var_5>var_4+1&&var_7[var_5]==var_7[var_5-1])
continue;
int var_12 = var_5+1, var_3 = var_8 - 1;
while(var_12 < var_3){
int var_13 = var_7[var_4]-var_14;
var_13 += var_7[var_5] + var_7[var_12] + var_7[var_3];
if(var_13 == 0){
var_2++;
var_10 = (int**)realloc(var_10, sizeof(int*) * var_2);
var_10[var_2-1] = (int*)malloc(sizeof(int) * 4);
var_10[var_2-1][0] = var_7[var_4];
var_10[var_2-1][1] = var_7[var_5];
var_10[var_2-1][2] = var_7[var_12];
var_10[var_2-1][3] = var_7[var_3];
while(var_12<var_3 && var_7[var_12]==var_7[var_12+1])
var_12++;
while(var_12<var_3 && var_7[var_3]==var_7[var_3-1])
var_3--;
var_12++;
var_3--;
} else if(var_13>0)
var_3--;
else
var_12++;
} 
}
}
*var_11 = var_2;
return var_10;
}