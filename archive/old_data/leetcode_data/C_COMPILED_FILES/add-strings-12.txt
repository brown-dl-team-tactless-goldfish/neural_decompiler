#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
char* func_2(char* var_5,int var_7){
char* var_2=(char*)malloc(var_7);
memset(var_2,'0',var_7);
memcpy(var_2+var_7-strlen(var_5),var_5,strlen(var_5));
return var_2;
}
bool func_3(char* var_3, char* var_4, int var_7){
int var_0=0; int var_8=0;
for(int var_1=var_7-1;var_1>=0;var_1--){
var_8=(var_3[var_1]-'0')+(var_4[var_1]-'0')+var_0;
if(var_8>=10){
var_0=1;
var_8=var_8-10;
}
else{
var_0=0;
}
var_3[var_1]=var_8+48;
}
return var_0;
}
char * func_1(char * var_3, char * var_4){
if(strlen(var_3) < strlen(var_4)){
int var_7=strlen(var_4);
var_3=func_2(var_3,var_7);
bool var_0=func_3(var_3,var_4,var_7);
if(var_0){
char* var_6=(char*)malloc((var_7+2)*sizeof(char));
memcpy(var_6+1,var_3,var_7);
*var_6='1'; *(var_6+var_7+1)='\0';
return var_6;
}
char* var_6=(char*)malloc((var_7+1)*sizeof(char));
memcpy(var_6,var_3,var_7);
*(var_6+var_7)='\0';
return var_6;
}
else if(strlen(var_3) > strlen(var_4)){
int var_7=strlen(var_3);
var_4=func_2(var_4,var_7);
bool var_0=func_3(var_3,var_4,var_7);
if(var_0){
char* var_6=(char*)malloc((var_7+2)*sizeof(char));
memcpy(var_6+1,var_3,var_7);
*var_6='1'; *(var_6+var_7+1)='\0';
return var_6;
}
char* var_6=(char*)malloc((var_7+1)*sizeof(char));
memcpy(var_6,var_3,var_7);
*(var_6+var_7)='\0';
return var_6;
}
int var_7=strlen(var_3);
bool var_0=func_3(var_3,var_4,var_7);
if(var_0){
char* var_6=(char*)malloc((var_7+2)*sizeof(char));
memcpy(var_6+1,var_3,var_7);
*var_6='1'; *(var_6+var_7+1)='\0';
return var_6;
}
char* var_6=(char*)malloc((var_7+1)*sizeof(char));
memcpy(var_6,var_3,var_7);
*(var_6+var_7)='\0';
return var_6;
}