#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
int func_2(const void* var_0, const void* var_4);
int func_3(int* var_15, int var_24, int var_12);
int func_1(int* var_16, int var_17, int* var_18, int var_19, int* var_20, int var_21, int* var_22, int var_23){
int var_9, var_11;
int var_2 = var_17 * var_19;
int var_6 = var_21 * var_23;
int* var_1 = malloc(var_2 * sizeof(int));
int* var_5 = malloc(var_6 * sizeof(int));
int var_10 = 0;
for(var_9 = 0; var_9 < var_17; var_9++){
for(var_11 = 0; var_11 < var_19; var_11++){
var_1[var_10] = var_16[var_9] + var_18[var_11];
var_10++;
}
}
var_10 = 0;
for(var_9 = 0; var_9 < var_21; var_9++){
for(var_11 = 0; var_11 < var_23; var_11++){
var_5[var_10] = var_20[var_9] + var_22[var_11];
var_10++;
}
}
qsort(var_1, var_2, sizeof(int), func_2);
qsort(var_5, var_6, sizeof(int), func_2);
int var_26;
int var_3 = 0;
for(var_9 = 0; var_9 < var_2; var_9++){
if(var_9 > 0 && var_1[var_9] == var_1[var_9-1]){
var_3 += var_26;
}
else{
var_26 = func_3(var_5, var_6, -1 * var_1[var_9]);
var_3 += var_26;
}
}
free(var_1);
free(var_5);
return var_3;
}
int func_3(int* var_15, int var_24, int var_12){
int var_7 = 0;
int var_13 = 0; 
int var_25 = var_24 -1;
int var_14;
bool var_8 = false;
while(var_13 <= var_25){
var_14 = (var_13 + var_25)/2;
if(var_15[var_14] == var_12){
var_8 = true;
var_7 =1;
break;
}
else if(var_15[var_14] < var_12){
var_13 = var_14 + 1;
}
else{
var_25 = var_14 - 1;
}
}
int var_9;
if(var_8){
for(var_9 = var_14 + 1; var_9 < var_24; var_9++){
if(var_15[var_9] == var_12)
var_7++;
else
break;
}
for(var_9 = var_14 -1; var_9 >= 0; var_9--){
if(var_15[var_9] == var_12)
var_7++;
else
break;
}
}
return var_7;
}
int func_2(const void* var_0, const void* var_4){
return *(int*)var_0 - *(int*)var_4;
}