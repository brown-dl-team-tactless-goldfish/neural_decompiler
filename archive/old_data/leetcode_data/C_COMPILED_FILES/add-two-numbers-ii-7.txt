#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
struct var_0 {
int var_17;
struct var_0 *var_9;
};
int func_1(struct var_0 *var_5){
int var_10 = 0;
while(var_5 != NULL){
var_10++;
var_5 = var_5->var_9;
}
return var_10;
}
struct var_0* func_4(struct var_0* var_5, struct var_0* var_6, int* var_1){
if(var_5 == NULL) return NULL;
struct var_0 *var_11 = malloc(sizeof(struct var_0));
var_11->var_9 = func_4(var_5->var_9, var_6->var_9, var_1);
int var_14 = var_5->var_17 + var_6->var_17 + *var_1;
var_11->var_17 = var_14%10;
*var_1 = var_14/10;
return var_11;
}
struct var_0* func_2(struct var_0* var_5, struct var_0* var_2, int* var_1){
if(var_5 != var_2){
struct var_0 *var_8 = malloc(sizeof(struct var_0));
var_8->var_9 = func_2(var_5->var_9, var_2, var_1);
int var_14 = var_5->var_17 + *var_1;
var_8->var_17 = var_14 % 10;
*var_1 = var_14/10;
return var_8;
}
else return NULL;
}
struct var_0* func_3(struct var_0* var_5, struct var_0* var_6){
int var_12 = func_1(var_5);
int var_13 = func_1(var_6);
if(var_5 == NULL) return var_6;
if(var_6 == NULL) return var_5;
int var_3 = abs(var_12 - var_13);
int var_1 = 0;
struct var_0* var_11 = NULL;
if (!var_3)
{
var_11 = func_4(var_5, var_6, &var_1);
}
else{
if(var_12 < var_13){
struct var_0 *var_15 = var_6;
var_6 = var_5;
var_5 = var_15;
}
struct var_0 *var_2 = var_5;
for(int var_4 = 0; var_4 < var_3; var_4++) var_2 = var_2->var_9;
var_11 = func_4(var_2, var_6, &var_1);
struct var_0 *var_15 = NULL;
struct var_0 *var_16 = NULL;
var_15 = func_2(var_5, var_2, &var_1);
var_16 = var_15;
while(var_15!= NULL && var_15->var_9 != NULL) var_15 = var_15->var_9;
var_15->var_9 = var_11;
var_11 = var_16;
}
if(var_1){
struct var_0* var_7 = malloc(sizeof(struct var_0));
var_7->var_9 = var_11;
var_7->var_17 = var_1;
var_11 = var_7;
}
return var_11;
}