#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
int * func_1(int var_5, int **var_1){
if (var_1[var_5] != NULL){
return var_1[var_5];
}
int* var_0 =(int*)malloc(sizeof(int)*var_5);
if (var_5 == 1){
var_0[0] = 1;
} else{
int var_4 = 0;
int * var_6 = func_1((var_5+1)/2,var_1);
for (int var_9 = 0; var_9 < (var_5+1)/2; var_9++){
var_0[var_9] = 2*var_6[var_9] - 1;
}
int * var_2 = func_1(var_5/2,var_1);
for (int var_10 = 0; var_10 < var_5/2; var_10++){
var_0[((var_5+1)/2)+var_10] = 2*var_2[var_10];
}
}
var_1[var_5] = var_0;
return var_0;
}
int* func_2(int var_5, int* var_7){
int * var_8 =(int*) malloc(sizeof(int)*var_5);
*var_7 = var_5;
if (var_5 == 1){
var_8[0] = 1;
return var_8;
}
if (var_5 == 2){
var_8[0] = 1;
var_8[1] = 2;
return var_8;
}
int ** var_1 = (int**)malloc(sizeof(int*)*(var_5+1));
for (int var_3 = 0; var_3 < var_5 + 1; var_3++){
var_1[var_3] = NULL;
}
var_8 = func_1(var_5,var_1); 
*var_7 = var_5;
for (int var_3 = 0; var_3 < var_5; var_3++){
if (var_1[var_3] != NULL){
free(var_1[var_3]);
}
}
free(var_1);
return var_8;
}