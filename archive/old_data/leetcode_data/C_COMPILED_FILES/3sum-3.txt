#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
int func_1(const void *var_2, const void *var_7) {
const int var_1 = *(int *)var_2;
const int var_6 = *(int *)var_7;
if (var_1 < var_6)
return -1;
else if (var_1 == var_6)
return 0;
else
return 1;
}
int func_3(int var_4[], int var_11, int var_15, int var_21, int var_20)
{
if (var_15 >= var_11) {
int var_12 = var_11 + (var_15 - var_11) / 2;
if (var_4[var_12] == var_21)
return var_12;
if (var_4[var_12] > var_21)
return func_3(var_4, var_11, var_12 - 1, var_21, var_20);
return func_3(var_4, var_12 + 1, var_15, var_21, var_20);
}
return var_20;
}
int** func_2(int* var_13, int var_14, int* var_18, int** var_17) {
int var_0 = 0;
int var_3 = var_14 * 2;
int **var_16 = (int **)malloc(var_3 * sizeof(int *));
*var_18 = 0;
if (var_14 < 3)
return var_16;
qsort(var_13, var_14, sizeof(*var_13), func_1);
int var_10 = var_14;
for (int var_8 = 0; var_8 < var_14 && var_13[var_8] <= 0; ++var_8) {
for (int var_9 = var_8 + 1; var_9 < var_14; ++var_9) {
int var_19 = -(var_13[var_8] + var_13[var_9]);
if (var_19 < 0)
break;
var_10 = func_3(var_13, var_9 + 1, var_14 - 1, var_19, var_14);
if (var_10 < var_14) {
var_16[var_0] = malloc(sizeof(int) * 3);
var_16[var_0][0] = var_13[var_8];
var_16[var_0][1] = var_13[var_9];
var_16[var_0][2] = var_13[var_10];
++var_0;
if (var_9 == var_8 + 1)
var_14 = var_10;
if (var_0 == var_3) {
var_3 *= 2;
var_16 = (int **)realloc(var_16, var_3 * sizeof(int *));
}
} 
while (var_9 + 1 < var_14 && var_13[var_9] == var_13[var_9 + 1])
++var_9;
}
while (var_8 + 1 < var_14 && var_13[var_8] == var_13[var_8 + 1])
++var_8;
}
*var_18 = var_0;
*var_17 = malloc(var_0 * sizeof(int));
for (int var_8 = 0; var_8 < var_0; ++var_8)
(*var_17)[var_8] = 3;
return var_16;
}