#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
void func_4(int* var_0, int* var_2) {
int var_20 = *var_0;
*var_0 = *var_2;
*var_2 = var_20;
}
void func_5(int* var_1, int var_4, int var_19) {
int var_10 = var_4;
int var_9 = 2*var_4 + 1;
int var_18 = 2*var_4 + 2;
if (var_9 < var_19 && var_1[var_9] > var_1[var_10]) var_10 = var_9;
if (var_18 < var_19 && var_1[var_18] > var_1[var_10]) var_10 = var_18;
if (var_4 != var_10) {
func_4(&var_1[var_4], &var_1[var_10]);
func_5(var_1, var_10, var_19);
}
}
bool func_2(int* var_1, int var_19) {
int var_3;
for (var_3 = var_19/2 - 1; var_3 >= 0; var_3--) {
func_5(var_1, var_3, var_19);
}
for (var_3 = var_19-1; var_3 > 0; var_3--) {
func_4(&var_1[var_3], &var_1[0]);
func_5(var_1, 0, var_3);
}
int var_20 = var_1[1] - var_1[0];
for (var_3 = 2; var_3 < var_19; var_3++) {
if (var_1[var_3] - var_1[var_3-1] != var_20) return false;
}
return true;
}
bool func_1(int* var_11, int var_7, int var_14) {
int var_19 = var_14 - var_7 + 1;
int* var_20 = (int*)malloc(sizeof(int) * var_19);
int var_3, var_5 = 0;
for (var_3 = var_7; var_3 <= var_14; var_3++) {
var_20[var_5++] = var_11[var_3];
}
bool var_16 = func_2(var_20, var_19);
free(var_20);
return var_16;
}
bool* func_1Subarrays(int* var_11, int var_12, int* var_6, int var_8, int* var_13, int var_15, int* var_17){
assert(var_8 == var_15);
bool* var_16 = (bool*)malloc(sizeof(bool) * var_8);
int var_3 = 0, var_20;
for (var_3 = 0; var_3 < var_8; var_3++) {
var_16[var_3] = func_1(var_11, var_6[var_3], var_13[var_3]);
}
*var_17 = var_8;
return var_16;
}