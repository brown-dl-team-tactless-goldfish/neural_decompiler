#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
typedef struct {
char var_16;
int var_7, var_11;
} var_13;
int func_1(int var_14) {
if (var_14 == 0)
return 1;
int var_6 = 0;
while(var_14 > 0) {
var_14 /= 10;
var_6++;
}
return var_6;
}
#define var_0 11
char * func_2(char * var_15, char * var_8){
var_13 *var_12 = (var_13 *) malloc(var_0 * sizeof(var_13));
int var_10, var_1, var_3, var_2, var_4;
for (var_10 = 0; var_10 < var_0; var_10++) {
var_12[var_10].var_7 = 0;
var_12[var_10].var_11 = -1;
}
for (var_10 = 0; var_15[var_10] != '\0'; var_10++) {
int var_11 = var_15[var_10] - '0';
var_12[var_11].var_16 = var_15[var_10];
var_12[var_11].var_11 = var_10;
var_12[var_11].var_7++;
}
var_1 = var_3 = 0;
for (var_10 = 0; var_8[var_10] != '\0'; var_10++) {
int var_11 = var_8[var_10] - '0';
if (var_12[var_11].var_11 > -1) {
if (var_8[var_10] == var_15[var_10]) {
var_1++;
if (var_12[var_11].var_7 <= 0)
var_3--;
} else {
if (var_12[var_11].var_7 > 0)
var_3++;
} 
var_12[var_11].var_7--;
}
}
free(var_12);
var_2 = func_1(var_1);;
var_4 = func_1(var_3);
char *var_9 = (char *) calloc((3 + var_2 + var_4), sizeof(char));
return var_9;
}