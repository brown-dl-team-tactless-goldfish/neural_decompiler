#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
struct TreeNode {
int var_17;
struct TreeNode *var_11;
struct TreeNode *var_15;
};
struct TreeNode** func_1(int var_12, int* var_14){
if(var_12 % 2 == 0){
* var_14 = 0;
return NULL;
}
if(var_12 == 1){
struct TreeNode* var_16 = malloc(sizeof(struct TreeNode));
var_16->var_17 = 0;
var_16->var_11 = NULL;
var_16->var_15 = NULL;
struct TreeNode** var_4 = malloc(sizeof(struct TreeNode*));
* var_14 = 1;
var_4[0] = var_16;
return var_4;
}
if(var_12 == 3){
struct TreeNode* var_16 = malloc(sizeof(struct TreeNode));
struct TreeNode* var_1 = malloc(sizeof(struct TreeNode));
struct TreeNode* var_3 = malloc(sizeof(struct TreeNode));
var_16->var_17 = 0;
var_1->var_17 = 0;
var_3->var_17 = 0;
var_1->var_11 = NULL;
var_1->var_15 = NULL;
var_3->var_11 = NULL;
var_3->var_15 = NULL;
var_16->var_11 = var_1;
var_16->var_15 = var_3;
struct TreeNode** var_4 = malloc(sizeof(struct TreeNode*));
* var_14 = 1;
var_4[0] = var_16;
return var_4;
}
struct TreeNode** var_4 = malloc(5000 * sizeof(struct TreeNode*));
int var_8 = 0;
for(int var_7 = 1; var_7 <= (var_12-2); var_7+=2){
int* var_5 = calloc(1 , sizeof(int));
struct TreeNode** var_0 = func_1(var_7, var_5);
int* var_6 = calloc(1 , sizeof(int));
struct TreeNode** var_2 = func_1(var_12-1-var_7, var_6);
for(int var_9 = 0; var_9 < (*var_5); var_9++){
for(int var_10 = 0; var_10 < (*var_6); var_10++){
struct TreeNode* var_13 = malloc(sizeof(struct TreeNode));
var_13->var_17 = 0;
var_13->var_11 = var_0[var_9];
var_13->var_15 = var_2[var_10];
var_4[var_8] = var_13;
var_8++;
}
}
free(var_5);
free(var_6);
}
var_4 = realloc(var_4, var_8*sizeof(struct TreeNode*));
*var_14 = var_8;
return var_4;
}