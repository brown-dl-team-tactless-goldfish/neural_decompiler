#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
char* func_1(char* var_14, char* var_8) 
{
int var_5[10];
int var_4[10];
int var_2 = 0;
int var_1 = 0;
int var_3;
int var_6 = 0;
int var_7 = 0;
int var_10, var_12;
int var_9 = 0;
char var_0;
char * var_13;
for (var_9 = 0; var_9 < 10; var_9++)
var_5[var_9] = var_4[var_9] = 0;
var_9 = 0;
while ((var_0 = *(var_14 + var_9)) != '\0')
{
switch (var_0){
case '0' : var_5[0]++;
break;
case '1' : var_5[1]++;
break;
case '2' : var_5[2]++;
break;
case '3' : var_5[3]++;
break;
case '4' : var_5[4]++;
break;
case '5' : var_5[5]++;
break;
case '6' : var_5[6]++;
break;
case '7' : var_5[7]++;
break;
case '8' : var_5[8]++;
break;
case '9' : var_5[9]++;
break;
default : break;
}
var_9++;
}
var_9 = 0;
while ((var_0 = *(var_8 + var_9)) != '\0')
{
switch (var_0){
case '0' : var_4[0]++;
break;
case '1' : var_4[1]++;
break;
case '2' : var_4[2]++;
break;
case '3' : var_4[3]++;
break;
case '4' : var_4[4]++;
break;
case '5' : var_4[5]++;
break;
case '6' : var_4[6]++;
break;
case '7' : var_4[7]++;
break;
case '8' : var_4[8]++;
break;
case '9' : var_4[9]++;
break;
default : break;
}
var_9++;
}
var_9 = 0;
while (*(var_14 + var_9) != '\0')
{
if (*(var_14 + var_9) == *(var_8 + var_9))
var_2++;
var_9++;
}
for (var_9 = 0; var_9 < 10; var_9++)
{
if(var_5[var_9] >= var_4[var_9])
var_1 += var_4[var_9];
else
var_1 += var_5[var_9];
}
var_3 = var_1 - var_2;
for (var_9 = 0, var_12 = var_2; var_12 > 0; var_9++)
{
var_12 /= 10;
var_6++;
}
if (var_6 == 0)
var_6++;
for (var_9 = 0, var_12 = var_3; var_12 > 0; var_9++)
{
var_12 /= 10;
var_7++;
}
if (var_7 == 0)
var_7++;
var_13 = (char *) var_11 ((var_6+var_7+3)*sizeof(char));
for (var_9 = var_6-1, var_12 = var_2; var_9 >= 0; var_9--)
{
var_10 = var_12 % 10;
*(var_13 + var_9) = '0' + var_10;
var_12 /= 10;
}
*(var_13 + var_6) = 'A';
for (var_9 = var_7-1, var_12 = var_3; var_9 >= 0; var_9--)
{
var_10 = var_12 % 10;
*(var_13 + var_9 + var_6 + 1) = '0' + var_10;
var_12 /= 10;
}
*(var_13 + var_6 + var_7 + 1) = 'B';
*(var_13 + var_6 + var_7 + 2) = '\0';
return var_13;
}