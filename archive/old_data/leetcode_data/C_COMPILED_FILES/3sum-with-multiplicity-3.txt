#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
typedef struct {
int var_15;
int var_6;
}var_0;
static var_0 **var_12;
static int var_7;
void func_3(int var_16){
int var_11 = var_16 % var_7;
while(1){
if (var_12[var_11] == NULL){
var_12[var_11] = calloc(1, sizeof(var_0));
var_12[var_11] -> var_15 = var_16;
var_12[var_11] -> var_6 = 1;
return;
} else {
if (var_12[var_11]-> var_15 == var_16){
(var_12[var_11] -> var_6)++;
return;
} else {
var_11 = var_11 + 1;
var_11 = var_11 % var_7;
}
}
}
}
int func_4(int var_16){
int var_11 = var_16 % var_7;
while(1){
if (var_12[var_11] == NULL){
return -1;
} else {
if (var_12[var_11]-> var_15 == var_16){
return var_11;
} else {
var_11 = var_11 + 1;
var_11 = var_11 % var_7;
}
}
}
}
long long func_1(int var_1, int var_5){
if (var_5 == 1) return var_1;
if (var_1==var_5 || var_5==0) return 1;
if (var_5>var_1) return 0;
long long var_2 = 1;
for (int var_8 = 0; var_8 < var_5; var_8++){
var_2 = var_2 * (var_1 - var_8);
}
for (int var_8 = var_5; var_8 > 1; var_8--){
var_2 = var_2 / var_8;
}
return var_2;
}
int func_2(int* var_3, int var_4, int var_14){
var_7 = var_4 + 1;
var_12 = (var_0**)calloc(var_7, sizeof(var_0*));
for (int var_8 = 0 ; var_8 < var_4; var_8++){
func_3(var_3[var_8]);
}
long long var_2 = 0;
for (int var_8 = 0; var_8 < var_7; var_8++){
if (var_12[var_8] == NULL) continue;
for (int var_9 = var_8 ; var_9 < var_7; var_9++){
if (var_12[var_9] == NULL) continue;
int var_13 = var_14 - var_12[var_8] -> var_15 - var_12[var_9] -> var_15;
if (var_13 < 0) continue;
int var_10 = func_4(var_13);
if (var_10 == -1 || var_10 < var_9){
continue;
}
if (var_12[var_8] -> var_15 != var_12[var_9] -> var_15 &&var_12[var_9] -> var_15 != var_12[var_10] -> var_15 && var_12[var_8] -> var_15 != var_12[var_10] -> var_15 ){
var_2 = var_2 + var_12[var_8] -> var_6 * var_12[var_9] -> var_6 * var_12[var_10] -> var_6;
continue;
}
if (var_12[var_8] -> var_15 == var_12[var_9] -> var_15 &&var_12[var_9] -> var_15 != var_12[var_10] -> var_15 ){
var_2 = var_2 + var_12[var_10] -> var_6 * func_1(var_12[var_8] -> var_6, 2);
continue;
}
if (var_12[var_8] -> var_15 != var_12[var_9] -> var_15 &&var_12[var_9] -> var_15 == var_12[var_10] -> var_15 ){
var_2 = var_2 + var_12[var_8] -> var_6 * func_1(var_12[var_9] -> var_6, 2);
continue;
}
if (var_12[var_8] -> var_15 == var_12[var_10] -> var_15 &&var_12[var_9] -> var_15 != var_12[var_10] -> var_15 ){
var_2 = var_2 + var_12[var_9] -> var_6 * func_1(var_12[var_8] -> var_6, 2);
continue;
}
if (var_12[var_8] -> var_15 == var_12[var_10] -> var_15 &&var_12[var_9] -> var_15 == var_12[var_10] -> var_15 ){
var_2 = var_2 +func_1(var_12[var_8] -> var_6, 3);
continue;
}
}
}
return (int)(var_2 % (1000000000+7));
}