twoSum:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $800032, %rsp
        movq    %rdi, -800024(%rbp)
        movl    %esi, -800028(%rbp)
        movl    %edx, -800032(%rbp)
        cmpq    $0, -800024(%rbp)
        je      .L2
        cmpl    $0, -800028(%rbp)
        jg      .L3
.L2:
        movl    $0, %eax
        jmp     .L16
.L3:
        movl    $0, -4(%rbp)
        jmp     .L5
.L6:
        movl    -4(%rbp), %eax
        cltq
        movl    $-1, -400016(%rbp,%rax,4)
        movl    -4(%rbp), %eax
        cltq
        movl    $-1, -800016(%rbp,%rax,4)
        addl    $1, -4(%rbp)
.L5:
        cmpl    $99999, -4(%rbp)
        jle     .L6
        movl    $0, -8(%rbp)
        jmp     .L7
.L15:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -800024(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    -800032(%rbp), %edx
        subl    %eax, %edx
        movl    %edx, %eax
        testl   %eax, %eax
        jns     .L8
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -800024(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    -800032(%rbp), %edx
        subl    %eax, %edx
        movl    %edx, %eax
        cltq
        movl    -800016(%rbp,%rax,4), %eax
        cmpl    $-1, %eax
        setne   %al
        jmp     .L9
.L8:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -800024(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    -800032(%rbp), %edx
        subl    %eax, %edx
        movl    %edx, %eax
        cltq
        movl    -400016(%rbp,%rax,4), %eax
        cmpl    $-1, %eax
        setne   %al
.L9:
        testb   %al, %al
        je      .L10
        movl    $8, %edi
        call    malloc
        movq    %rax, -16(%rbp)
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -800024(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    -800032(%rbp), %edx
        subl    %eax, %edx
        movl    %edx, %eax
        testl   %eax, %eax
        jns     .L11
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -800024(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    -800032(%rbp), %edx
        subl    %eax, %edx
        movl    %edx, %eax
        cltq
        movl    -800016(%rbp,%rax,4), %eax
        jmp     .L12
.L11:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -800024(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    -800032(%rbp), %edx
        subl    %eax, %edx
        movl    %edx, %eax
        cltq
        movl    -400016(%rbp,%rax,4), %eax
.L12:
        movq    -16(%rbp), %rdx
        movl    %eax, (%rdx)
        movq    -16(%rbp), %rax
        leaq    4(%rax), %rdx
        movl    -8(%rbp), %eax
        movl    %eax, (%rdx)
        movq    -16(%rbp), %rax
        jmp     .L16
.L10:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -800024(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jns     .L13
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -800024(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        movl    -8(%rbp), %edx
        movl    %edx, -800016(%rbp,%rax,4)
        jmp     .L14
.L13:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -800024(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        movl    -8(%rbp), %edx
        movl    %edx, -400016(%rbp,%rax,4)
.L14:
        addl    $1, -8(%rbp)
.L7:
        movl    -8(%rbp), %eax
        cmpl    -800028(%rbp), %eax
        jl      .L15
        movl    $0, %eax
.L16:
        leave
        ret
