class Solution {
public:
    int wordCount(vector<string>& startWords, vector<string>& targetWords) {
        unordered_set<int> start;
        for(int i=0, m=startWords.size(); i<m; i++)
        {
            start.insert(getBits(startWords[i]).to_ulong());
        }
        
        int ans = 0;
        for(int i=0, n=targetWords.size(); i<n; i++)
        {
            auto bits = getBits(targetWords[i]);
            for(int c=0; c<26; c++)
            {
                if(bits[c])
                {
                    bits[c] = 0;
                    if(start.find(bits.to_ulong()) != start.end())
                    {
                        ans++;
                        break;
                    }
                    bits[c] = 1;
                }
            }
        }
        
        return ans;
    }
    
    bitset<26> getBits(string word)
    {
        bitset<26> bits;
        for(int c=0, l=word.length(); c<l; c++)
        {
            bits.set(word[c] - 'a', 1);
        }
        
        return bits;
    }
};