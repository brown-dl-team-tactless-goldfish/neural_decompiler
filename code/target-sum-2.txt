int findTargetSumWays(int *nums, int numsSize, int S) {
    int sum = 0;
    for (int i = 0; i < numsSize; i++) sum += nums[i];

    if (S < -sum || sum < S) return 0;
    if (S % 2 != sum % 2) return 0;

    int counts[sum + 1];
    for (int i = 0; i < sum; i++) counts[i] = 0;
    counts[sum] = 1;

    int target = (S >= 0) ? S : -S;
    
    for (int i = 0; i < numsSize; i++) {
        for (int j = target; j <= sum - (2 * nums[i]); j++) {
            counts[j] += counts[j + (2 * nums[i])];
        }
    }
    return counts[target];
}