/*
Using Xor Property x^x = 0
Ex :  v1 = x y z
      v2 = a b c 
	 ans = x^a ^ x^b ^ x^c ^ y^a ^ y^b ^ y^c ^ z^a ^ z^b ^ z^c 
	 Here x y z frequency available odd times in ans because each element of v1 is xor with each element of v2 and 
	 v2 size is odd
	 same a b c are also odd times. All even makes pair and they make 0 only single value left 
	 
	 so if v2.size() == odd then every v1 comes single times else 0 times
	 similarily if v1.size() == odd then every v2 comes single times else 0 times
	 x - 3  1 pair becomes 0 and single x left
	 y - 3  1 pair becomes 0 and single y left
	 z - 3  1 pair becomes 0 and single z left
	 a - 3  1 pair becomes 0 and single a left
	 b - 3  1 pair becomes 0 and single b left
	 c - 3  1 pair becomes 0 and single c left
	 ans = x^y^z^a^b^c 
*/
public:
    int xorAllNums(vector<int>& nums1, vector<int>& nums2) {
        int ans = 0;
        if(nums2.size()&1){
            for(auto &x : nums1) ans = ans^x;
        }
        if(nums1.size()&1){
            for(auto &x : nums2) ans = ans^x;
        }
        return ans;
    }
};