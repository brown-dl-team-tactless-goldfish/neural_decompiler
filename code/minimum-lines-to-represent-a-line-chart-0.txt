int cmpfunc(const void* a, const void* b){
    int* arr1 = *(int**)a;
    int* arr2 = *(int**)b;
    return arr1[0] - arr2[0];
}

int minimumLines(int** stockPrices, int stockPricesSize, int* stockPricesColSize){
    if(stockPricesSize == 1)
        return 0;
    qsort(stockPrices, stockPricesSize, sizeof(int*), cmpfunc);
    int cn = 1;
    long double slop;

    if(  stockPrices[1][0] - stockPrices[0][0] )
        slop = (long double)(stockPrices[1][1] - stockPrices[0][1])/(stockPrices[1][0] - stockPrices[0][0]);
    else
        slop = INT_MAX;

    for(int i = 2; i < stockPricesSize; i++){
        long double a;
        if(  stockPrices[i][0] - stockPrices[i-1][0] )
            a = (long double)(stockPrices[i][1] - stockPrices[i-1][1])/(stockPrices[i][0] - stockPrices[i-1][0]);
        else
            a = INT_MAX;
        
        if(a != slop){
            cn++;
            slop = a;
        }
    }

    return cn;
}