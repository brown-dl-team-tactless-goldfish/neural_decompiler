#define MAX(x,y) ((x) > (y) ? (x) : (y))

static int AMAX;
int get_fibs(int A[], int M[], int i, int j, int sum);

int lenLongestFibSubseq(int* A, int ASize){
			 AMAX    = A[ASize-1];
    int     MSize   = AMAX + 1;
    int     count   = 0;
    int     *M;
    int     i; // lo
    int     j; // hi
    int     sum;
    int     temp;

    M = calloc(MSize, sizeof(int));
   
    /** Place all A[] indexes as VALUES in M[] at the index
      * that matches the A[i] VALUE, plus offset of 1. All the rest stay as 0
      */
    for (i = 0; i < ASize; i++) {
        M[A[i]] = i + 1;
    }
    
    for (i = 0; i < ASize; i++) {
        for (j = i + 1; j < ASize; j++) {
            sum = A[i] + A[j];
            if (sum > AMAX)     break;
            if (M[sum] == 0)    continue;
            temp = get_fibs(A, M, i, j, sum);
            count = MAX(count, temp);
        }
    }
    count += 2;
    free(M);
    return (count > 2 ? count : 0);
}

int get_fibs(int A[], int M[], int i, int j, int sum)
{
    int count = 0;
    while (sum <= AMAX) {
        if (M[sum] == 0) break;
        count++;
        i = j;
        j = M[sum]-1;
        sum = A[i] + A[j];
    }
    return count;
}