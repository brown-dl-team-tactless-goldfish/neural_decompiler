bool validPartition(int* nums, int numsSize){
    int n = numsSize ;
    bool* dp = calloc(n+1, sizeof(bool)) ;
    dp[0] = true ;
    if(nums[0] == nums[1])
        dp[2] = true ;
    
    int consecutiveFalse = 0 ;
    for(int i = 3; i <= n; i++){
        if(nums[i-1] == nums[i-2]){
            dp[i] |= dp[i-2] ;
            if(dp[i]){
                consecutiveFalse = 0 ;
                continue ;
            }
            if(nums[i-2] == nums[i-3])
                dp[i] |= dp[i-3] ;
                if(dp[i]){
                    consecutiveFalse = 0;
                    continue ; 
                }
        }
        else
        {
            if((nums[i-1] == nums[i-2] + 1) && (nums[i-2] == nums[i-3] + 1)){
                dp[i] |= dp[i-3] ;
                if(dp[i]){
                    consecutiveFalse = 0 ;
                    continue ;
                }
            }
        }
        consecutiveFalse++ ;
        if(consecutiveFalse == 3)
            break ;
    }
    return dp[n] ;
}