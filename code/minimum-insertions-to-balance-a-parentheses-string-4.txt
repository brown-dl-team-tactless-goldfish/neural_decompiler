class Solution {
public:
    int minInsertions(string s) {
        stack<char> stack;
        int ret = 0;
        for (auto c : s)
        {
            if (stack.empty())
            {
                stack.push(c);continue;
            }
            // case 1: "))"
            if (c==')' && stack.top() == ')')
            {
                stack.pop();
                //case of "))"
                if(stack.empty()) 
                {
                    ret += 1;
                    continue;
                }
                // case of "())"
                else
                {
                   stack.pop();   
                }
            }
            // case 2: "()"
            else if (c==')' && stack.top() == '(')
            {
                stack.push(c);
            }
            // case 3: "(("
            else if (c=='(' && stack.top() == '(')
            {
                stack.push(c);
            }
            // case 4: ")("
            else if (c=='(' && stack.top() == ')')
            {
                stack.pop();
                if(stack.empty())
                {
                    ret += 2;
                    stack.push(c);
                    continue;
                }
                else
                {
                    stack.pop();
                    ret += 1;
                    stack.push(c);
                    continue;
                }
            }
        }
        if(!stack.empty() && stack.top()==')') 
        {
            
            stack.pop();
            //case of ")"
            if(stack.empty())ret += 2;
            //case of "()"
            else
            {
                ret += 1;
                //stack.pop();
                stack.pop();
            }
            
        }
        ret += 2*stack.size();
        return ret;
    }
};