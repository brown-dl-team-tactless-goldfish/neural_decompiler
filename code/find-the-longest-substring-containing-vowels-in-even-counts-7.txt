    public class Solution
    {
        public int FindTheLongestSubstring(string s)
        {
            int res = 0;
            ISet<char> vowels = new HashSet<char>() { 'a', 'e', 'i', 'o', 'u' };
            
            IDictionary<char, int> vowel2Count = new Dictionary<char, int>()
            {
                {'a', 0},
                {'e', 0},
                {'i', 0},
                {'o', 0},
                {'u', 0}
            };

            IDictionary<string, int> key2Index = new Dictionary<string, int>()
            {
                {"a0e0i0o0u0", -1 }
            };

            for (int i = 0; i < s.Length; i++)
            {
                var c = s[i];
                if (vowels.Contains(c))
                {
                    vowel2Count[c]++;
                }

                string key = $"a{vowel2Count['a'] % 2}e{vowel2Count['e'] % 2}i{vowel2Count['i'] % 2}o{vowel2Count['o'] % 2}u{vowel2Count['u'] % 2}";

                if (key2Index.ContainsKey(key))
                {
                    res = Math.Max(res, i - (key2Index[key]));
                }
				else
                {
                    key2Index[key] = i;
                }
            }

            return res;
        }
    }