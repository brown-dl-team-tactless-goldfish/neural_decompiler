int** shiftGrid(int** grid, int gridSize, int* gridColSize, int k, int* returnSize, int** returnColumnSizes){
    *returnSize = gridSize;
    *returnColumnSizes = calloc(gridSize, sizeof(int));
    for (int i = 0; i < gridSize; i++)
        *((*returnColumnSizes) + i) = *gridColSize;

    if (k == gridSize * *gridColSize || (1 == gridSize && 1 == *gridColSize))
        return grid;
    
    k %= gridSize * *gridColSize;
    int *shifted = calloc(gridSize * *gridColSize, sizeof(int));
    int ptr = k;
    
    for (int i = 0; i < gridSize; i++) {
        for (int j = 0; j < *gridColSize; j++) {
            *(shifted + ptr) = *(*(grid + i) + j);
            if (gridSize * *gridColSize == ++ptr)
                ptr = 0;
        }
    }

    ptr = 0;
    for (int i = 0; i < gridSize; i++) {
        for (int j = 0; j < *gridColSize; j++)
            *(*(grid + i) + j) = *(shifted + ptr++);
    }
    
    return grid;
}