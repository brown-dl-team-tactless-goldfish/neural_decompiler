class Solution {
public:
    int minimumScore(string s, string t) {
        int n = s.size();
        int m = t.size();
        vector<int> pre_mch(m);
        vector<int> suf_mch(n+1,2*m+1);
        
        int cur = 0;
        for (int i=0; i<m; i++){
            while (cur < n && s[cur] != t[i]) 
                cur++;
            pre_mch[i] = cur++;
        }
        
        cur = n-1;
        for (int i=m-1; i>=0; i--){
            while (cur >= 0 && s[cur] != t[i]){ 
                suf_mch[cur--] = i+1;}
            if(cur>=0) suf_mch[cur--] = i;
        }

        int ans = min(m,suf_mch[0]);
        for (int i=0; i<m; i++){
            if (pre_mch[i] < n) ans = min(ans, m-i-1);
            ans = min(ans, max(0, suf_mch[min(n,pre_mch[i]+1)]-i-1));
        }
        return ans;
    }
};