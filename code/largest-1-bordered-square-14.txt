    public int Largest1BorderedSquare(int[][] grid) {
        int maxRes = 0,
            maxRow = grid.Length,
            maxCol = grid[0].Length;
        var dpRows = new int[maxRow, maxCol];
        var dpCols = new int[maxRow, maxCol];

        for(var row = 0; row < maxRow; row++)
        for(var col = 0; col < maxCol; col++) {
            if(grid[row][col] == 0) continue;
            dpRows[row, col] = 1 + (col > 0 ? dpRows[row, col - 1] : 0);
            dpCols[row, col] = 1 + (row > 0 ? dpCols[row - 1, col] : 0);
            maxRes = Math.Max(maxRes, MaxSquare(row, col));
        }
        return maxRes * maxRes;

        int MaxSquare(int row, int col) {
            var maxPossible = Math.Min(dpRows[row, col], dpCols[row, col]);
            var maxBorder = 1;
            for(var border = maxPossible; maxRes < border; border--)
                if(border <= dpRows[row - border + 1, col] &&
                   border <= dpCols[row, col - border + 1]) return border;
            
            return maxRes;
        }
    }