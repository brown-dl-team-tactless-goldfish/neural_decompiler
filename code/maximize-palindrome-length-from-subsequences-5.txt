class Solution {
public:
    int longestPalindrome(string word1, string word2) {
        auto w = word1 + word2;
        int n1 = word1.size(), n2 = word2.size();
        int n = n1 + n2;
        int res = 0;
        vector<int> dp(n), prev(n);
        for (int i = n-1; i >= 0; i--) {
            dp[i] = 1;
            for (int j = i+1; j < n; j++) {
                if (w[i] == w[j]) {
                    dp[j] = prev[j-1] + 2;
                    if (i < n1 and j >= n1) {
                        res = max(res, dp[j]);
                    }
                }
                else {
                    dp[j] = max(dp[j-1], prev[j]);
                }
            }
            dp.swap(prev);
        }
        return res;
    }
};