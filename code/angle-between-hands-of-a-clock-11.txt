double angleClock(int hour, int minutes){
    // Handling this corner case for simplicity
    hour = hour == 12 ? 0 : hour;
    
    // Converting the hours to be in minutes format (multiplying by 5)
    // And adding the minutes effect on the hour's hand.
    // For example - if minutes == 30, this means that the hour's hand is half way,
    // meaning that it should have an increase of 2.5 minutes to its place.
    double hoursInMinutes = (hour + minutes/60.0) * 5.0;
    
    // Two options to pick the smaller angle 
    double option1 = hoursInMinutes < minutes ? 
                        minutes - hoursInMinutes : 
                        hoursInMinutes - minutes;
    double option2 = hoursInMinutes < minutes ? 
                        60 + (hoursInMinutes - minutes) :
                        60 + (minutes - hoursInMinutes);
    
    // Choosing the minimum between the sub of these two (this will lead to smallest angle)
    double min = option1 < option2 ? option1 : option2;
    
    // Calculating the angle, where 60 minutes means 360 degrees
    return 360.0 * (1.0 * min) / (1.0 * 60);
}