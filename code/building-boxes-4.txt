class Solution {
public:
    int minimumBoxes(int n) {
        int l = 1, r = 10000000;
        while(l<r){
            auto mid = (l+r)/2;
            auto num = numBox(mid);
            if(num < n) l = mid+1;
            else if(num == n) return mid;
            else r = mid;
        }
        return l;
    }
    
    long numBox(int m){
        long sum = 0;
        while(m){
            sum += m;
            m = numOnTop(m);
        }
        return sum;
    }
    
    int numOnTop(int x){
        // 1,3,6,10..... s = i(1+i)/2 => i^2 < 2s < (i+1)^2
        int i = sqrt(2*x);
        if(i*(i+1)/2 > x) i--;
        int S1 = i*(i+1)/2, S2 = i*(i-1)/2;
        if(x == S1 || x == S1+1) return S2;
        return x-S1-1 + S2;
    }
};