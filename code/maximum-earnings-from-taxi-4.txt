class Solution {
    static bool cmp(vector<int>&a, vector<int>&b)
    {
        return a[1] < b[1] ;
    }
public:
    long long maxTaxiEarnings(int n, vector<vector<int>>& rides) {
        int m = rides.size() ;
        rides.push_back({0,0,0})  ;  //dummy head
        sort(rides.begin(), rides.end(), cmp) ;
        vector<int>endPoints ;
        for(auto& r : rides)
            endPoints.push_back(r[1]) ;
        
        vector<long long>dp(m+1) ;
        for(int i = 1 ; i <= m; i++)
        {
            dp[i] = dp[i-1] ;
            int start = rides[i][0] ;
            auto iter = upper_bound(endPoints.begin(), endPoints.end(), start) ;
            if(iter == endPoints.begin())
                continue ;
            int j = prev(iter) - endPoints.begin() ;
            dp[i] = fmax( dp[i], dp[j] + rides[i][1] - rides[i][0] + rides[i][2] );
        }                        
        return dp[m] ;
    }
};