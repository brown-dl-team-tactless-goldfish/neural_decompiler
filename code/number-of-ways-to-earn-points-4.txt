int waysToReachTarget(int target, vector<vector<int>>& types) 
{        
	long result=0,n=types.size(),d=1000000007,dp[2][target+1];
	memset(dp,0,sizeof(dp));
	for(int i=0;i<n;i++)
	{
		dp[i%2][0]=1;
		for(int j=1;j<=types[i][0];j++)
			for(int k=0;k<=target;k++)
				if(dp[i%2][k] && k+j*types[i][1]<=target)
					dp[(i+1)%2][k+j*types[i][1]]=(dp[(i+1)%2][k+j*types[i][1]]+dp[i%2][k])%d;

		for(int j=1;j<=target;j++) dp[(i+1)%2][j]=(dp[(i+1)%2][j]+dp[i%2][j])%d;
		memset(dp[i%2],0,sizeof(dp[i%2]));
	}
	return dp[n%2][target];
}