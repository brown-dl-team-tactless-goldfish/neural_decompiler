class Solution:
    def numberOfWays(self, startPos: int, endPos: int, k: int) -> int:
        MOD = 10 ** 9 + 7
        # if (startPos + endPos) and k have different parity, then return 0
        # otherwise we can use comb to get k choose (endPos - startPos + k) / 2
        # it can also be k choose k - (endPos - startPos + k) / 2)
        # assuming endPos >= startPos, and we know
        # left + right = k -- (1)
        # right - left = endPos - startPos -- (2)
        # (1) + (2)
        # left + right - left + right = k + endPos - startPos
        # 2 * right = endPos - startPos + k
        # right = (endPos - startPos + k) / 2
        # in other word, left would be k - (endPos - startPos + k) / 2)
        if (startPos + endPos) % 2 != k % 2:
            return 0
        else:
            return comb(k, (endPos - startPos + k) // 2) % MOD