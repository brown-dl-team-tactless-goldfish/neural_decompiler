class Solution {
public:
    pair<int,int> count(string &s) {
        int n0 = 0;
        for(char c : s)
            if(c == '0') n0++;
        return pair<int,int>{n0, s.length()-n0};
    }

    int findMaxForm(vector<string>& strs, int m, int n) {
        vector<vector<int>> dp(m+1, vector<int>(n+1,-1));
        dp[0][0] = 0;
        int row, col, ans = 0;
        
        for(string &s : strs) {
            pair<int,int> p = count(s);
            row = m-p.first, col = n-p.second;

            for(int i=row; i>=0; i--)
                for(int j=col; j>=0; j--)
                {
                    if(dp[i][j] != -1) {
                        dp[i+p.first][j+p.second] = max(1+dp[i][j], dp[i+p.first][j+p.second]);
                        ans = max(ans,dp[i+p.first][j+p.second]);
                    }
                }
        }

        return ans;
    }
};