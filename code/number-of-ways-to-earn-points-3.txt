public class Solution 
{
    public int WaysToReachTarget(int target, int[][] types) 
    {
        int mod = 1_000_000_007;
        int n = types.Length;
        long[,] dp = new long[n + 1, target + 1];

        int row = 1;
        foreach (var type in types)
        {
            for (int j = 0; j <= target; j++)
            {
                dp[row, j] = dp[row - 1, j];
            }
            for (int j = 0; j <= target; j++)
            {
                long prev = dp[row - 1, j];

                if (j > 0 && prev == 0)
                    continue;

                for (int i = 1; i <= type[0]; i++)
                {
                    int col = j + (i * type[1]);
                    if (col > target)
                        break;
                    if (j == 0)
                        dp[row, col]++;
                    else
                        dp[row, col] = (dp[row, col] + prev) % mod;

                }
            }
            row++;
        }
        return (int)dp[n, target];
    }
}