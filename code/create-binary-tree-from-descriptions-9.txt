TreeNode* createBinaryTree(vector<vector<int>>& d) {
    map<int , TreeNode* > m ; 
    int x = d[0][0]; 
   for(int i = 0 ; i <d.size() ; i++ )
   {
       int a = d[i][0] ; 
       int b = d[i][1] ; 
       int c = d[i][2]  ; 
       if(b==x)
       {
           x=a ; 
       }
       TreeNode* p1  = new TreeNode(a) ; 
       m[a]= p1 ; 
        TreeNode* p2  = new TreeNode(b) ; 
       m[b]= p2 ; 
   }    
           for(int i = 0 ; i <d.size() ; i++ )
   {
       int a = d[i][0] ; 
       int b = d[i][1] ; 
       int c = d[i][2]  ; 
          if(c==0)
          {
              m[a]->right = m[b] ; 
          }
               else
                   m[a]->left = m[b] ;  
               
   }  
    map<int , int > m1 ; 
  for(int i = 0 ; i <d.size() ; i++ )
   {
        int a = d[i][0] ; 
       int b = d[i][1] ; 
       int c = d[i][2]  ; 
 m1[b]=a ; 
          }
    
    while(m1[x]>0)
    {
        int c = m1[x] ; 
        
        x= c; 
    }
    return m[x] ; 
    
}