class Solution {
public:
    #define mod 1000000007
    #define ll long long
    
    ll findSumFromAToB(ll a, ll b){
        return (b*(b+1)/2 - (a*(a+1))/2)%mod;
    }
    
    int maxProfit(vector<int>& nums, int orders) {
        sort(nums.begin(),nums.end());
        int n=nums.size();
        ll res=0;
        for(int i=n-1;i>=0 && orders>0;i--){
            int p=(i==0)?0:nums[i-1];
            int k=(n-1-i)+1;
            if(orders >= k*(nums[i]-p)){
                res += k*findSumFromAToB(p,nums[i]);
                orders -= k*(nums[i]-p);
            }else{
                ll r = orders / k, c = orders % k;
                res += k*findSumFromAToB(nums[i]-r,nums[i]) + (nums[i]-r)*c;
                orders=0;
            }
            res=res%mod;
        }
        return res;
    }
};