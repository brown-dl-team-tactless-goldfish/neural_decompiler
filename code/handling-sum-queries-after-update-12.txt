class Solution {
    public long[] handleQuery(int[] nums1, int[] nums2, int[][] queries) {
        List<Long> results = new ArrayList<>();
        int n = nums1.length;
        BitSet bs = new BitSet(n);
        long sum = 0;

        for (int i = 0; i < n; i++) {
            sum += 1L * nums2[i];
            if (nums1[i] == 1) {
                bs.set(i);
            }
        }

        for (int[] query : queries) {
            int type = query[0];

            if (type == 1) {
                bs.flip(query[1], query[2] + 1);
            } else if (type == 2) {
                sum += 1L * query[1] * bs.cardinality();
            } else {
                results.add(sum);
            }
        }

        long[] ans = new long[results.size()];
        for (int i = 0; i < ans.length; i++) {
            ans[i] = results.get(i);
        }

        return ans;
    }
}
