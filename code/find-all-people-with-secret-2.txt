    vector<vector<pair<int,int>>> graph(n);
    
    vector<int> ans;
    
    for(auto &x: meetings)
    {
        graph[x[0]].push_back({x[1],x[2]});
        graph[x[1]].push_back({x[0],x[2]});
    }
    
    priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>pq;
    
pq.push({0,0});
pq.push({0,firstPerson});
    
vector<bool> visited(n,false);
    
    vector<int> res;
    
while(!pq.empty())
{
    auto cur = pq.top();
    
    pq.pop();
    
    int time = cur.first;
    int person = cur.second;
    
     if(visited[person]) {
            continue;
        }
    
    
    visited[person] = true;
    
    for(auto &x: graph[person])
    {
       if(!visited[x.first] && x.second >= time) 
       {
          pq.push({x.second,x.first});
       }
    }
    
}
    
        for(int i = 0; i < n ; ++i )
        {
        if(visited[i]){
            res.push_back(i);        
        }
        }
    return res;
     
}