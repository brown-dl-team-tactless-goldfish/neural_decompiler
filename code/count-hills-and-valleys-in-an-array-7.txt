class Solution {
public:
    int countHillValley(vector<int>& nums) {
        int n = nums.size(), ans = 0, i = 0;
        for (int i = 1; i < nums.size()-1; i++) {
            int a = INT_MIN, b=INT_MIN, c=INT_MIN;
            while (i < n && nums[i] == nums[i-1]) {
                a = nums[i];
                i++;
            }
            if (a == INT_MIN) a = nums[i-1];
            while ((i+1)<n && nums[i] == nums[i+1]) {
                b = nums[i];
                i++;
            }
            if ((b == INT_MIN) && (i < n)) 
                b = nums[i];
            while ((i+1)< n && nums[i] == nums[i+1]) {
                c = nums[i];
                i++;
            }
            if ((c == INT_MIN) && (i+1 < n)) {
                c = nums[i+1];
            } else break;
            ans += ((b>a) && (b>c)); // Count Hills
            ans += ((b<a) && (b<c)); // Count Valley
        }
        return ans;
    }
};