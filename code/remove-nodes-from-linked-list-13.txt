/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNodes(ListNode* head) {
        int rightMost = 0;
        return recursion(head, rightMost);
    }

    ListNode* recursion(ListNode* head, int& rightMost){
        if(!head) return head;
        auto p = recursion(head->next, rightMost);
        if(head->val < rightMost) 
            return p;
        else{
            head->next = p;
            rightMost = head->val;
            return head;
        }
    }
};