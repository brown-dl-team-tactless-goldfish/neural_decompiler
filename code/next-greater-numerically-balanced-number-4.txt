class Solution {
public:
    int nextBeautifulNumber(int n) {
        if(n==0)
        {
            return 1;
        }
        if(n==1000000)
        {
            return 1224444;
        }
        string g = to_string(n);
        int s = g.size();
        int r = s;
        string tt;
        while(s!=0)
        {
            tt.push_back(r+'0');
            s--;
        }
        int y = stoi(tt);
        if(y<=n)
        {
            
            if(g.size()==6)
            {
                return 1224444;
            }
            else if(g.size()==5)
            {
                return 122333;
            }
            else if(g.size()==4)
            {
                return 14444;
            }
            else if(g.size()==3)
            {
                return 1333;
            }
            else if(g.size()==2)
            {
                return 122;
            }
            else
            {
                return 22;
            }
        }
        int u = 0;
        int ans =INT_MAX;
        while(u<g.size()-u)
        {
            string o;
            int l = g.size()-u;
            int c = l;
            int x = u;
            while(x!=0)
            {
                o.push_back(u+'0');
                x--;
            }
            while(l!=0)
            {
                o.push_back(c+'0');
                l--;
            }
            if(stoi(o)>n)
            {
                ans = min(ans,stoi(o));
            }
            while(next_permutation(o.begin(),o.end()))
            {
                int vvv = stoi(o);
                if(vvv>n)
                {
                    ans = min(ans,vvv);
                }
            }
            u++;
        }
        if(g.size()==6)
        {
            string kk = "122333";
            if(stoi(kk)>n)
            {
                ans = min(ans,stoi(kk));
            }
            while(next_permutation(kk.begin(),kk.end()))
            {
                if(stoi(kk)>n)
                {
                    ans = min(ans,stoi(kk));
                }
            }
        }
        return ans;
    }
};