int countPalindromicSubsequence(char * s){
    int first[26] = {0};
    int last[26] = {0};
    char* temp = s;
    int count = 0;
    int result = 0;
    while(*temp != '\0'){
        if(first[*temp - 'a'] == 0 && *temp != *s){
            first[*temp - 'a'] = count;
        } else if(*temp == *s && count != 0){
            last[*temp - 'a'] = count;
        } else if(first[*temp - 'a'] != 0){
            last[*temp - 'a'] = count;
        }
        count++;
        temp++;
    }
    for(int i = 0; i < 26; i++){
        count = 0;
        if(last[i] != 0){
            int first_index = first[i];
            int last_index = last[i];
            int alphabet[26] = {0};
            for(int j = first_index + 1; j < last_index; j++){
                if(alphabet[(s[j]) - 'a'] == 0){
                    alphabet[(s[j]) - 'a']++;
                    printf("%c\n", s[j]);
                    count++;
                }
            }
        }
        result += count;
    }
    return result;
}