

/**
 * Return an array of arrays of size *returnSize.
 * The sizes of the arrays are returned as *returnColumnSizes array.
 * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().
 */
char** rotateTheBox(char** box, int boxSize, int* boxColSize, int* returnSize, int** returnColumnSizes){
    int m = boxSize ;
    int n = *boxColSize ;
    for(int i = 0; i < m; i++){
        int p = n-1 ;
        for(int j = n-1; j >=0 ; j--){
            if(box[i][j] == '*'){
                p = j-1 ;
                continue ;
            }
            if(box[i][j] == '#'){
                if(p == j){                    
                    p-- ;
                    continue ;
                }
                box[i][j] = '.' ;
                box[i][p] = '#' ;
                p--;
            }
        }
    }
    
    char** ans = malloc(n * sizeof(char*) ) ;
    *returnSize = n ;
    *returnColumnSizes = malloc( n  * sizeof(int) ) ;
    for(int i = 0; i < n; i++){
        ans[i] = malloc( m ) ;
        returnColumnSizes[0][i] = m ;
    }
    for(int i = 0; i < m; i++){
        for(int j = 0; j < n; j++){
            ans[j][m-1-i] = box[i][j] ;
        }
    }
    return ans ;
}