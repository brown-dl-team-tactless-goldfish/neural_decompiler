class Solution:
    def isSubPath(self, head: ListNode, root: TreeNode) -> bool:
        
        dataList = []
        curListNode = head
        while curListNode:
            dataList.append(curListNode.val)
            curListNode = curListNode.next
            
        print ("dataList = ", dataList)
        
        self.res = False
        self.data = []
        def helper(curNode, curList):
            if (curNode == None):
                if (curList not in self.data):
                    self.data.append(curList)
                return
            
            helper(curNode.left, curList+[curNode.val])
            helper(curNode.right, curList+[curNode.val])

                    
        helper(root, [])
        # print ("end self.data = ", self.data)
        # return self.res
        for data in self.data:
            # print ("data = ", data)
            indexes = []
            for i in range(len(data)):
                num = data[i]
                if (num == dataList[0]):
                    indexes.append(i)
            # print ("indexes = ", indexes)
            if (indexes == []):
                continue
            
            tmpLen = len(dataList)
            for idx in indexes:
                if (data[idx:idx+tmpLen] == dataList):
                    return True
                
        return False