/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */

int level(struct TreeNode* root){
    if(root==NULL)
        return 0;
    if(root->left==NULL && root->right==NULL)
        return 1;
    int left = level(root->left);
    int right = level(root->right);
    return fmax(left,right)+1;
}
int level_start(struct TreeNode* root,int start,int *ret,int *slv){
    if(root==NULL) 
        return 0;
    if(root->val==start){
        *ret = level(root)-1;
        return -1;
    }
    if(root->left==NULL && root->right==NULL)
        return 1;
    int left = level_start(root->left,start,ret,slv);
    int right = level_start(root->right,start,ret,slv);
    if(left==-1){
        *slv+=1;
        *ret = fmax(*ret,*slv+right);
        return -1;
    }
    if(right==-1){
        *slv+=1;
        *ret = fmax(*ret,*slv+left);
        return -1;
    }
    return fmax(left,right)+1;
}
int amountOfTime(struct TreeNode* root, int start){
    if(root==NULL)
        return 0;
    if(root->left==NULL && root->right==NULL)
        return 0;
    if(root->val==start)
        return level(root)-1;
    int ans = 0;
    int slv = 0;
    level_start(root,start,&ans,&slv);
    return ans;
}