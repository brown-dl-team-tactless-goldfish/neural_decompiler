class FreqStack {
public:
    FreqStack() {
        
    }
    
    void push(int val) {
        hmap_cnt[val] += 1;
        max_cnt = max(max_cnt, hmap_cnt[val]);
        hmap_loc[hmap_cnt[val]].push_back(val);
    }
    
    int pop() {
        int val{};
        if (!hmap_loc[max_cnt].empty()) {
            val = hmap_loc[max_cnt].back();
            hmap_loc[max_cnt].pop_back();
            hmap_cnt[val] -= 1;
            if (hmap_loc[max_cnt].empty())
                max_cnt -= 1;
        } 
        return val;
    }
private:
    unordered_map<int,vector<int>> hmap_loc{};
    unordered_map<int,int> hmap_cnt{};
    int max_cnt{};
    
};