char*record;
int count;
struct TreeNode* Fill(int depth){
    if(count==strlen(record))
        return NULL;
    int dashCount=0;
    int tmp=count;
    while(record[tmp]=='-'){
        dashCount++;
        tmp++;
    }
    if(depth+1==dashCount){
        struct TreeNode* NewNode=malloc(sizeof(struct TreeNode));
        int digit=record[tmp]-48;
        while(tmp+1<strlen(record) && record[tmp+1]!='-'){
            digit*=10;
            tmp++;
            digit+=record[tmp]-48;
        }
        NewNode->val=digit;
        count=tmp+1;
        NewNode->left=Fill(dashCount);
        NewNode->right=Fill(dashCount);
        return NewNode;
    }
    else
        return NULL;
}

struct TreeNode* recoverFromPreorder(char * traversal){
    count=0;
    record=malloc(sizeof(char)*(strlen(traversal)+1));
    strcpy(record,traversal);
    return Fill(-1);
}