class Solution {
public:
    int maximumsSplicedArray(vector<int>& nums1, vector<int>& nums2) {
        int ans, s1, s2, d1, d2, md1, md2, n = nums1.size();
        vector<int> diff(n, 0);
        for (int i = 0; i < n; i++)
        {
            s1 += nums1[i];
            s2 += nums2[i];
            diff[i] = nums1[i] - nums2[i];
        }
        ans = max(s1, s2);
        md1 = INT_MIN, md2 = INT_MAX, d1 = 0, d2 = 0;
        for (int i = 0; i < n; i++)
        {
            if (d1 + diff[i] < diff[i])
                d1 = diff[i];
            else
                d1 += diff[i];
            md1 = max(md1, d1);
            if (d2 + diff[i] > diff[i])
                d2 = diff[i];
            else
                d2 += diff[i];
            md2 = min(md2, d2);
        }
        ans = max(ans, max(s1 - md2, s2 + md1));
        return ans;
    }
};