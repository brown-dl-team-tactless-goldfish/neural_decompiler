int cmpfunc (const void * a, const void * b) {
   return ( *(int*)a - *(int*)b );
}

int maxWidthOfVerticalArea(int** points, int pointsSize, int* pointsColSize){
    int *arr = (int *)malloc(sizeof(int) * pointsSize);
    
    for(int i=0;i<pointsSize;i++){
        arr[i] = points[i][0];
    }
    
    qsort(arr,pointsSize,sizeof(int),cmpfunc);
    
    int max = 0;
    for(int i=0;i<pointsSize-1;i++){
        arr[i] = arr[i+1] - arr[i];
        if(arr[i] > max) {max = arr[i];}
    }
    return max;
}

/*
1.Get all the X co-ordinates in the new array.
2.Sort the new array using Qsort.
3.Get the difference between corresponding co-ordinates after sorting.
4.Return the maximum difference.

O(1) Space solution : Dont transfer X co-ordinates to new array , instead sort them directly i.e points[i][0] , MergeSort would be optimal.
*/