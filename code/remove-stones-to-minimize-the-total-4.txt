void siftdown(int * heap, int i, int n) {
    int root = i;
    while (true) {
        int child = (root << 1) + 1;
        if (child >= n) break;
        if (child + 1 < n && heap[child] < heap[child + 1]) {
            child += 1;
        }
        if (heap[root] < heap[child]) {
            int t = heap[root];
            heap[root] = heap[child];
            heap[child] = t;

            root = child;
        } else {
            break;
        }
    }
}

int minStoneSum(int* piles, int pilesSize, int k){
    int i;
    for (i = (pilesSize >> 1) - 1; i >= 0; i--) {
        siftdown(piles, i, pilesSize);
    }

    while(k --> 0) {
        piles[0] -= piles[0] >> 1;
        siftdown(piles, 0, pilesSize);
    }

    int sum = 0;
    for(i = 0; i < pilesSize; i++) {
        sum += piles[i];
    }
    return sum;
}