/*
    Assign result to the max value in the array. Then begin iterating through the array and calculate the maximum and minimum product considering every element. If 0 is encountered set max and min products back to 1;
*/

int max (int a , int b, int c) {
    if (a >= b && a >= c)
        return a;
    else if (b >=a && b >= c)
        return b;
    else if (c >= a && c >= b)
        return c;
    return 0;
}

int min (int a, int b ,int c) {
    if (a <= b && a <= c)
        return a;
    else if (b <= a && b <= c)
        return b;
    else if (c <= a && c <= b)
        return c;
    return 0;
}

int maxProduct(int* nums, int numsSize){
    
    if (numsSize == 1)
        return nums[0];
    int result = 0;
    int temp1 = 1;
    int max_pro = 1;
    int min_pro = 1;
    for (int i = 0; i < numsSize; i++) {
        if(nums[i] > result)
            result = nums[i];
    }
    
    for (int i = 0; i < numsSize; i++) {
        if (nums[i] == 0) {
            max_pro = 1;
            min_pro = 1;
            continue;
        }
        temp1 = max_pro*nums[i];
        
        max_pro = max(nums[i]*max_pro, nums[i]*min_pro, nums[i]);
        min_pro = min(temp1, nums[i]*min_pro, nums[i]);
        if (result < max_pro)
            result = max_pro;
    }
    return result;
}