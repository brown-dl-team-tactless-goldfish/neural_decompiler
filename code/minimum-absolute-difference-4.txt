int cmp(const void *a, const void *b)
{
    return *(int *)a - *(int *)b;
}
int** minimumAbsDifference(int* arr, int arrSize, int* returnSize, int** returnColumnSizes){
    qsort(arr, arrSize, sizeof(int), cmp);
    int **result = (int **)malloc(arrSize*sizeof(int *));
    *returnSize = 0;
    int min = INT_MAX;
    for(int i = 1; i < arrSize; i++)
        min = min < arr[i] - arr[i - 1] ? min : arr[i] - arr[i - 1];
    (*returnColumnSizes) = (int *)malloc(arrSize*sizeof(int));
    for(int i = 1; i < arrSize; i++)
        if(arr[i] - arr[i - 1] == min)
        {
            (*returnColumnSizes)[*returnSize] = 2;
            result[*returnSize] = (int *)malloc(2*sizeof(int));
            result[*returnSize][0] = arr[i - 1];
            result[(*returnSize)++][1] = arr[i]; 
        }
    return result;        
}