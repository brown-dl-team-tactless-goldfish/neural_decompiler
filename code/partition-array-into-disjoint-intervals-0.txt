int partitionDisjoint(int* nums, int numsSize){

int pos = 0;
while(pos < numsSize)
{
    int numatpos = nums[pos];

    //max and maxpos are found to calculate the next maximum and its position
    int max = nums[pos];
    int maxpos = pos;

// finding the next maximum

    for(int i= pos+1;i<numsSize;i++)
    {
       if(nums[i] >= numatpos)
       {
           max = nums[i];
           maxpos = i;
           break;
       }
    }

//now we iterate through the array checking if elements reight to the maxpos are greater
//if one of them is small then it means it is not the place to part , so break

    int i;
    for(i=maxpos+1;i<numsSize;i++)
    {
         if(nums[i] < numatpos)
         { 
             pos = maxpos;
             break;
         }
    }
//if all the elemts are greater return the maxpos 
    if(i==numsSize)
    return maxpos;
//if not we dont need to check the numbers that are anyway less than nums[pos], so we make pos to maxpos.
    else
    {
        pos = maxpos;
    }
}
return pos;
}