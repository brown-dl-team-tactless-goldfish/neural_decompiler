class Solution {
public:
  int ans=INT_MAX;
  int delta=INT_MAX;
     void solve(vector<int>toppingCosts,int i,int sum,int target){
            
        if(i==toppingCosts.size()){
          if(abs(target-sum)<delta)
            delta=abs(target-sum);
          ans=min(ans,sum);
          return ;
        }
       solve(toppingCosts,i+1,sum+toppingCosts[i],target);
       solve(toppingCosts,i+1,sum+2*toppingCosts[i],target); 
       solve(toppingCosts,i+1,sum,target);
     }
  
  
  
    int closestCost(vector<int>& baseCosts, vector<int>& toppingCosts, int target) {
        
     for(int i=0;i<baseCosts.size();i++){
       if(target<baseCosts[i]){
         int sum=baseCosts[i];
        if(abs(target-sum)<delta)
            delta=abs(target-sum);
          ans=min(ans,sum);
         //lta=baseCosts[i]-target;
         continue;
       }
       solve(toppingCosts,0,baseCosts[i],target);
       
     }
      return ans;
    }
  
};


