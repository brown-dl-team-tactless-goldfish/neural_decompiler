class Solution {
public:
    int maxScore(vector<int>& nums) {
        n = nums.size();
        vdp = vector(n/2, vector(1<<(n), -1));
        vgcd = vector(n, vector(n,0));
        for(int i=0;i<n;i++) for(int j=0;j<n;j++) vgcd[i][j] = gcd(nums[i], nums[j]);
        return dp(0, 0);
    }
    
    int dp(int k, int state){
        if(k == n/2) return 0;
        if(vdp[k][state] > 0) return vdp[k][state];
        for(int i=0;i<n;i++) for(int j=i+1;j<n;j++){
            int newMask = (1<<i) | (1<<j);
            if((state & newMask) != 0) continue;
            vdp[k][state] = max(vdp[k][state], (k+1)*vgcd[i][j] + dp(k+1, state | newMask));
        }
        return vdp[k][state];
    }
    
    int n;
    vector<vector<int>> vdp;
    vector<vector<int>> vgcd;
};