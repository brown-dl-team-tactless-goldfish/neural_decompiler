class Solution {
public:
    int lengthLongestPath(string input) {
        unordered_map<int,int>map;
        stringstream ss(input);
        string directory;
        map[0]=0;
        int result{0};
        while(getline(ss,directory))
        {
            int level=directory.find_last_of('\t')+1;
            int length=directory.size()-level;
            if(directory.find('.')!=string::npos)
            {
                result=max(result,map[level]+length);
            }
            else
            {
                map[level+1]=map[level]+length+1;
            }
        }
        return result;
    }
};