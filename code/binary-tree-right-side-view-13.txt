/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */


/**
 * Note: The returned array must be malloced, assume caller calls free().
 */

void getTreeHeight(struct TreeNode* root, int* height, int currLevel){
    if(*height < currLevel){
        *height=currLevel;
    }
    
    if(root == NULL){
        return;
    }
    
    //printf("%d\n",level);
    getTreeHeight(root->right, height, currLevel+1);
    getTreeHeight(root->left, height, currLevel+1);
    
    
}


void BFS(struct TreeNode* root, int* ans, int level){
    if(root==NULL){
        return;
    }
    
    BFS(root->left, ans, level+1);
    ans[level]=root->val;
    BFS(root->right, ans, level+1);
    //printf("%d,%d\n", level, root->val);
    
}
int* rightSideView(struct TreeNode* root, int* returnSize){
    *returnSize=0;
    
    //printf("%d",root->right->right->right->val);
    getTreeHeight(root, returnSize, 0);
    
    int* ans=malloc(sizeof(int)*(*returnSize));
    
    BFS(root, ans, 0);
    
    return ans;
}