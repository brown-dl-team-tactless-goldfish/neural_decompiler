typedef struct
{
  int big_slots;
  int medium_slots;
  int small_slots;
} ParkingSystem;


ParkingSystem* parkingSystemCreate(int big, int medium, int small)
{
  ParkingSystem *ps = malloc(sizeof(ParkingSystem));

  ps->big_slots = big;
  ps->medium_slots = medium;
  ps->small_slots = small;

  return ps;
}

bool parkingSystemAddCar(ParkingSystem* obj, int carType)
{
  switch(carType)
  {
    case 1:
    if(obj->big_slots > 0)
    {
      obj->big_slots--;
      return true;
    }break;

    case 2:
    if(obj->medium_slots > 0)
    {
      obj->medium_slots--;
      return true;
    }break;

    case 3:
    if(obj->small_slots > 0)
    {
      obj->small_slots--;
      return true;
    }break;
    
  }
  return false;
}

void parkingSystemFree(ParkingSystem* obj)
{
  free(obj);
}

/**
 * Your ParkingSystem struct will be instantiated and called as such:
 * ParkingSystem* obj = parkingSystemCreate(big, medium, small);
 * bool param_1 = parkingSystemAddCar(obj, carType);
 
 * parkingSystemFree(obj);
*/