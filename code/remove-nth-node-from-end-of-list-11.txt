/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */

struct ListNode* createnode(int v)
{
        struct ListNode *h;
        h=(struct ListNode*)malloc(sizeof(struct ListNode));
        h->val=v;
        h->next=NULL;
        return h;
}
struct ListNode* createlist(int n)
{
        int i,v;
        struct ListNode *h=NULL,*newn,*l;
        printf("enter the elements");
        for(i=0;i<n;i++)
        {
                scanf("%d",&v);
                newn=createnode(v);
                if(!h)
                        h=newn;
                else
                        l->next=newn;
                l=newn;
        }
        return h;
}
void printlist(struct ListNode *h)
{
        while(h)
        {
                printf("%d->",h->val);
                h=h->next;
        }
}
int listsize(struct ListNode *h)
{
        int l=0;
        while(h)
        {
                l++;
                h=h->next;
        }
        return l;
}
struct ListNode* dellastele(struct ListNode *h)
{
        struct ListNode *p=h,*c;
        int l,i;
        l=listsize(h);
        for(i=0;i<l-1;i++)
                p=p->next;
        c=p->next;
        p->next=NULL;
        free(c);
        return h;
}
struct ListNode* removeNthFromEnd(struct ListNode *h,int pos)
{
        int l,i;
        l=listsize(h);
        struct ListNode *p=h,*c;
        if (pos==l)
        {
                h=h->next;
                free(p);
                return h;
        }
        else if(pos==1)
        {
                dellastele(h);
        }


        for (i=0;i<l-pos-1;i++)
        {
                p=p->next;
        }
        c=p->next;
        p->next=c->next;
        free(c);
        return h;
}