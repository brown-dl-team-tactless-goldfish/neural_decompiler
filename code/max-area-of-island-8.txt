void helper(int** grid, int gridSize, int gridColSize, int i, int j, int* total)
{
    grid[i][j] = 0;
    (*total)++;
    
    if((i>0) && grid[i-1][j])
        helper(grid, gridSize, gridColSize, i-1, j, total);
    if((i<gridSize-1) && grid[i+1][j])
        helper(grid, gridSize, gridColSize, i+1, j, total);
    if((j>0) && grid[i][j-1])
        helper(grid, gridSize, gridColSize, i, j-1, total);
    if((j<gridColSize-1) && grid[i][j+1])
        helper(grid, gridSize, gridColSize, i, j+1, total);
}

int maxAreaOfIsland(int** grid, int gridSize, int* gridColSize){
    int i,j;
    int max=0,total=0;
    
    for(i=0;i<gridSize;i++)
    {
        for(j=0;j<gridColSize[0];j++)
        {
            if(grid[i][j]==1)
            {
                total = 0;
                helper(grid,gridSize,gridColSize[0],i,j,&total);
                if(total>max)
                {
                    max = total;
                }
            }
        }
    }
    
    return max;
}
