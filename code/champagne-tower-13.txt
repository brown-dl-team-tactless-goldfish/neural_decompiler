class Solution {
public:
    double champagneTower(int poured, int query_row, int query_glass) {
        if(poured == 0)
            return 0 ;
        vector<double>q ;
        q.push_back(poured) ;
        for(int i = 1; i <= query_row; i++){
            int n = q.size() ;
            vector<double>next(n+1) ; 
            for(int j = 0; j < n; j++)
            {
                double remain = q[j] - 1.0 ;
                if(remain <= 0)
                    continue ;
                else{
                    next[j] +=  remain/2 ;
                    next[j+1] +=  remain/2 ;
                }
            }
            q = next ;
        }
        return (q[query_glass] > 1) ? 1 : q[query_glass] ;
    }
};