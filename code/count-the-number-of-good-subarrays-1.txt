class Solution {
public:
    
    #define ll long long
    long long countGood(vector<int>& nums, int k) {
         ll n = nums.size();
        long long int cmp=0;
        ll int res = 0;
        ll ans= n*(n+2-1)/2;
        unordered_map<ll, ll> mp;
        ll left = 0;
        long long int temp = 0;
        long long int c = 0;
        for (int i = 0; i < n;i++) {
            if (mp[nums[i]] > 0) {
                temp += mp[nums[i]];
            }
            mp[nums[i]]++;
            while (left <= i && temp >= k) {
                if (mp[nums[left]] > 1) {
                    temp -= (mp[nums[left]] - 1);
                }
                mp[nums[left]]--;
                left++;
            }
            res += (i - left + 1);
            c=max(res,c);
        }
         ans =ans -res;
        return ans;

    }
};