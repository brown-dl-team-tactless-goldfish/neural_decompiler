char * convert(char * s, int numRows){
	if (numRows == 1) return s;
	
	int sSize=0; while(s[sSize]) sSize++; //get size of the string
	int max=sSize, insert=0;
	char *ret=(char*)malloc(sizeof(char)*(sSize+1)); //anounce return string
	ret[sSize]='\0';

    insert=start(s, ret, numRows, max, insert); //start()
	insert=medium(s, ret, numRows, max, insert); //medium()
    end(s, ret, numRows, max, insert); //end()

	return ret; //return
}

int start(char *refer, char *str, int n, int max, int insert){ //start()
	int x=0;
	while(x*(2*n-2) < max){
		str[insert] = refer[x*(2*n-2)];
		insert++; x++;
	}
	return insert;
}
int medium(char *refer, char *str, int n, int max, int insert){ //medium()
	int i=1, x=0, y=1;
	while(i != n-1){
        x=0; y=1;
		while((i+x*(2*n-2)) <max || (y*(2*n-2)-i) < max){
			if((i+x*(2*n-2)) < max){
				str[insert] = refer[i+x*(2*n-2)];
				insert++;
			}
			if((y*(2*n-2)-i) < max){
				str[insert] = refer[y*(2*n-2)-i];
				insert++;
			}
			x++; y++;
		}
		i++;
	}
	return insert;
}
void end(char *refer, char *str, int n, int max, int insert){ //end()
	int x=0, i=n-1;
	while(i+x*(2*n-2) < max){
		str[insert] = refer[i+x*(2*n-2)];
		insert++; x++;
	}
}