class Solution {
    int width(int n) {
        if(n == 0) 
            return 1;
        if(n < 0)
            return 1 + width(-n);
        int ans = 0;
        while(n > 0) {
            ans++;
            n /= 10;
        }
        
        return ans;
    }
public:
    vector<int> findColumnWidth(vector<vector<int>>& grid) {
        const size_t M = grid.size();
        const size_t N = grid[0].size();
        vector<int> ans(N);
        for(size_t c = 0; c < N; ++c) {
            ans[c] = 0;
            for(size_t r = 0; r < M; ++r) {
                ans[c] = max(ans[c], width(grid[r][c]));
            }
        }
        return ans;
    }
};