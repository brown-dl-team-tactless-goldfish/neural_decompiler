class Solution
{
public:
    vector<vector<int>> ans;
    int rr = 0, cc = 0;

    void dfs(int r, int c, vector<vector<int>> &land, vector<vector<int>> &vis)
    {
        vis[r][c] = 1;
        int n = land.size(), m = land[0].size();

        int delrow[] = {-1, 0, 1, 0};
        int delcol[] = {0, 1, 0, -1};

        for (int i = 0; i < 4; i++)
        {
            int nr = r + delrow[i];
            int nc = c + delcol[i];

            if (nr >= 0 and nr < n and nc >= 0 and nc < m and !vis[nr][nc] and land[nr][nc])
            {
                dfs(nr, nc, land, vis);
                rr = max(rr, nr), cc = max(cc, nc);
            }
        }
    }

    vector<vector<int>> findFarmland(vector<vector<int>> &land)
    {
        int n = land.size(), m = land[0].size();
        vector<vector<int>> vis(n, vector<int>(m, 0));

        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < m; j++)
            {
                if (!vis[i][j] and land[i][j])
                {
                    vector<int> temp = {i, j};
                    rr = i, cc = j;

                    dfs(i, j, land, vis);

                    temp.push_back(rr);
                    temp.push_back(cc);

                    ans.push_back(temp);
                }
            }
        }

        return ans;
    }
};