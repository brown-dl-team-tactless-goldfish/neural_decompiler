int minSteps(int n){
    /* an array used to store intermediate states*/
    int dp[n + 1];
    memset(dp, 0, (n+1)*sizeof(int));
    /* rule out initial state*/
    if(n == 1) return 0;
    /*the initial state*/
    dp[1] = 0;
    /*compute intermediate states*/
    for(int i = 2; i <= n; i++){
        /* find the lowest steps for each intermediate state*/
        int stp = INT_MAX;
        for(int j = 1; j <= i/2; j++){
            if(i % j == 0){
                int n = dp[j] + i / j; 
                stp = fmin(stp, n);
            }
        }
        dp[i] = stp;
    }
    
    return dp[n];
}