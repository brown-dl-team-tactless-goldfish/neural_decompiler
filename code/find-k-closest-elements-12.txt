struct hashmap
{
    int value;
    int diff;
};

int cmp(const void *a, const void *b)
{
    return *(const int *)a - *(const int *)b;
}

int cmphash(const void *a, const void *b)
{
    return ((struct hashmap *)a)->diff - ((struct hashmap *)b)->diff;
}


int* findClosestElements(int* arr, int arrSize, int k, int x, int* returnSize){
    
   struct hashmap hash[arrSize];
    int *ans=(int*)malloc(sizeof(int)*k);
    
    for(int i=0;i<arrSize;i++)
    {
        hash[i].value=arr[i];
        hash[i].diff=abs(x-arr[i]);
    }
    qsort(hash,arrSize,sizeof(hash[0]),cmphash);
    
    for(int j=0;j<k;j++)
    {
        ans[j]=hash[j].value;
    }
    
    qsort(ans,k,sizeof(int),cmp);
    *returnSize=k;
    return ans;
}