struct mystruct{
    int number;
    UT_hash_handle hh;
};

struct mystruct *t;


struct mystruct *find(int number) {
    struct mystruct *s;
    HASH_FIND_INT(t, &number, s);
    return s;
}


void add(int num){
    struct mystruct *s = (struct mystruct *)malloc(sizeof(struct mystruct));
    if(find(num) == NULL){
        s->number = num;
        HASH_ADD_INT(t, number, s);    
    }    
}

int longestConsecutive(int* nums, int numsSize){
    t = NULL;
    int max = 0;
    if(numsSize == 0)
        return numsSize;
    for(int i = 0; i < numsSize; i++){
        add(nums[i]);
    }
    for(int i = 0; i < numsSize; i++){
        if(find(nums[i] + 1) == NULL){
            int tmp, n;
            n = nums[i];
            tmp = n;
            while(find(n)){
                n -= 1;
            }                                             
            max = ((tmp - n) > max) ? (tmp - n) : max;
        }
    }     
    return max;
}