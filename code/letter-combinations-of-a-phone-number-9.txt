char** letterCombinationsHelper(char *digits, int* returnSize){
    char NumTable[10] = {' ',' ','a','d','g','j','m','p','t','w'};
    int length = 0;
    int digitsNum = *digits-'0';
    if(digitsNum != 7 && digitsNum != 9){
        length = 3;
    }else{
        length = 4;
    }
    int count = 0;
    int i,j,index=0;
    if(*digits != '\0'){
        char **subResult = letterCombinationsHelper(digits+1, &count);
        char **rResult = (char **)malloc(sizeof(char*)* count * length);
        *returnSize = count * length;
        int strLength = strlen(subResult[0]) + 2;
        for(int i=0;i<length;i++){
            for(int j=0;j<count;j++){
                rResult[index] = (char *)malloc(sizeof(char)* strLength);
                rResult[index][0] = NumTable[digitsNum] + i;
                strcpy(&rResult[index][1],subResult[j]);
                rResult[index][strLength-1] = '\0';
                index++;
            }
        }
        for(int j=0;j< count;j++){
            free(subResult[j]);
        }
        free(subResult);
        return rResult;
    }
    *returnSize = 1;
    char **rResult = (char **)malloc(sizeof(char *));
    rResult[0] = (char *)malloc(sizeof(char));
    rResult[0][0] = '\0';
    return rResult;