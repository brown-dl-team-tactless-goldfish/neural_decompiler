for(i=0;i<wordsSize;i++) // Traverse every word
    if(strlen(words[i])==strlen(pattern)){ //execute only if the length of the word is the same as the pattern
        for(j=0;j<26;j++){ 
            record[j]=-1; 
            visited[j]=-1;
        }
        for(j=0;j<strlen(words[i]);j++){ 
            if(record[pattern[j]-97]==-1 && visited[words[i][j]-97]==-1 || record[pattern[j]-97]==words[i][j]-97 && visited[words[i][j]-97]==pattern[j]-97){
                record[pattern[j]-97]=words[i][j]-97;
                visited[words[i][j]-97]=pattern[j]-97;
            }
            else{
                flag=1;
                break;
            }
        }
        if(flag==1)
            flag=0;
        else{
            list=realloc(list,sizeof(char*)*(++count));
            list[count-1]=malloc(sizeof(char)*(strlen(words[i])+1));
            strcpy(list[count-1],words[i]);
        }
    }
*returnSize=count;
return list;