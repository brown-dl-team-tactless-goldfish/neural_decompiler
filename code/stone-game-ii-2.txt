int memo[101][32] = {};
int dfs(vector<int>& dp, int x, int m, int res = INT_MIN) {
  if (x + m * 2 >= dp.size()) return dp[dp.size() - 1] - dp[x - 1];
  if (memo[x][m]) return memo[x][m];
  for (int i = x; i < x + m * 2 && i < dp.size(); ++i)
    res = max(res, dp[i] - (x == 0 ? 0 : dp[x - 1]) - dfs(dp, i + 1, max(m, i - x + 1)));
  return memo[x][m] = res;
}
int stoneGameII(vector<int>& ps) {
  partial_sum(begin(ps), end(ps), begin(ps));
  return (ps[ps.size() - 1] + dfs(ps, 0, 1)) / 2;
}