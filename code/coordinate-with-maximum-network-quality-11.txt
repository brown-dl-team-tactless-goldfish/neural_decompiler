class Solution {
public:
    vector<int> bestCoordinate(vector<vector<int>>& towers, int radius) {

        int n = towers.size();
        int best_total_q = INT_MIN, best_x = -1, best_y = -1;
        int max_x = INT_MIN, max_y = INT_MIN;
        for (auto& tower: towers){
            max_x = max(max_x, tower[0]);
            max_y = max(max_y, tower[1]);
        }
        for (int x = 0; x <= max_x; x++){
            for (int y = 0; y <= max_y; y++){
                
                int total_q = 0;
                for (auto& tower: towers){
                    int nx = tower[0], ny = tower[1], nq = tower[2];
                    double dx = double(nx - x), dy = double(ny - y);
                    double dis = sqrt(dx * dx + dy * dy);
                    if (dis <= radius){
                        int q = (int)((double)nq / (double)(1.0 + dis));
                        total_q += q;
                    }
                }
                if (total_q > best_total_q){
                    best_total_q = total_q;
                    best_x = x, best_y = y;
                }
                else if (total_q == best_total_q){
                    if (x < best_x || (x == best_x && y < best_y)){
                        best_x = x, best_y = y;
                    }
                }                
            }
        }
        
        if (best_total_q == 0) return {0, 0};
        return {best_x, best_y};     
    }
};