 int dp[50001];

int help(vector<int>& piles, int idx)
{
    if(idx >= piles.size())
    {
        return 0;
    }
    
    if(dp[idx] != -1)
    {
        return dp[idx];
    }
    
    int sum = 0, ans = INT_MIN;
    
    for(int i=idx; i< idx+3 && i<piles.size(); i++)
    {
        
        sum += piles[i];
        
        ans = max(ans, sum - help(piles,i+1));
    }
                  
    return dp[idx] = ans;  
    
    return ans;
}
string stoneGameIII(vector<int>& stoneValue) {
    
    memset(dp,-1,sizeof(dp));
    
    int diff = help(stoneValue,0);
    
    if(diff == 0)
    {
        return "Tie";
    }
    
    if(diff > 0)
    {
        return "Alice";
    }
    
    else
    {
        return "Bob";
    }
    
    
}