class Solution {
public:
	int minOperations(vector<int>& nums) {
		 int n=nums.size();
		 set<int> st;
		 for(auto &it: nums) st.insert(it);
		 vector<int> v(st.begin(),st.end());
		 int ans=INT_MAX;
		 for(int i=0;i<v.size();i++){
			  int last=v[i]+n-1;
			  int it1=i;
			  auto it2=lower_bound(v.begin(),v.end(),last);
			  int present;
			  if(it2==v.end() or *(it2)!=(last))
			   present=(it2-v.begin())-it1;
			  else
				 present=(it2-v.begin())-it1+1; 
			  // cout<<present<<" ";
			  ans=min(ans,n-present);
		 }

		return ans;
	}
};