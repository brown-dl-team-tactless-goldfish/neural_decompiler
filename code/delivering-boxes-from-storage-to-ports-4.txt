
using System.Collections.Generic;

public class Solution 
{
    public int BoxDelivering(int[][] boxes, int portsCount, int maxBoxes, int maxWeight) 
    {
        int n = boxes.Length;
        LinkedList<int[]> queue = new LinkedList<int[]>();
        queue.AddLast(new int[2]{-1, 1});

        int left = -1;
        int weight = 0;
        int currentCost = 0;
        for (int i = 0; i < n; i++)
        {
            weight += boxes[i][1];
            while ((i - left) > maxBoxes || weight > maxWeight)
            {
                left++;
                weight -= boxes[left][1];
            }
            while (queue.Count > 0 && queue.First.Value[0] < left)
            {
                queue.RemoveFirst();
            }

            currentCost = queue.First.Value[1] + 1;
            if (i < n - 1 && boxes[i][0] == boxes[i + 1][0])
            {
                currentCost++;
            }
            while (queue.Count > 0 && queue?.Last.Value[1] >= currentCost)
            {
                queue.RemoveLast();
            }
            queue.AddLast(new int[2]{i, currentCost});
        }

        for (int i = 0; i < n - 1; i++)
        {
            if (boxes[i][0] != boxes[i + 1][0])
            {
                currentCost++;
            }
        }
        return currentCost;
    }
}