class Solution {
public:
    int findLeastNumOfUniqueInts(vector<int>& arr, int k) {
        
        //Count all the numbers
        unordered_map<int,int> numCount;
        for (auto& a : arr)
            numCount[a]++;
        
        //Index numbers by counts
        unordered_map<int,vector<int>> countNum;
        for (auto& n : numCount)
            countNum[n.second].push_back(n.first);
        
        //Remove numbers from smallest frequency groups to biggest while possible given k value
        int group = 1;
        while (k >= group){
            if (countNum[group].empty())
                group++;
            else {
                countNum[group].pop_back();
                k -= group;
            }
        }
        
        //Count remaining unique numbers and return
        int ans = 0;
        for (auto& c : countNum)
            ans += c.second.size();
        
        return ans;
    }
};