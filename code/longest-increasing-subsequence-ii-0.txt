class Solution {
    class SegTree {
        static constexpr int t = 100001;
        int seg[200002] = {0};
        
        public:
        void update(int d, int n) {
            d += t;
            seg[d] = n;
            while (d) {
                d >>= 1;
                seg[d] = max(seg[2 * d], seg[2 * d + 1]);
            }
        }
        
        int query(int l, int r) {
            l += t;
            r += t;
            int result = 0;
            while (l < r) {
                if (l & 1)
                    result = max(result, seg[l++]);
                if (r & 1)
                    result = max(result, seg[--r]);
                l >>= 1;
                r >>= 1;
            }
            return result;
        }
    };
    
public:
    static int lengthOfLIS(const vector<int>& nums, const int k) {
        int ret = 0;
        SegTree st;
        for (auto i : nums) {
            int c = st.query(max(i - k, 0), i) + 1;
            ret = max(ret, c);
            st.update(i, c);
        }
        return ret;
    }
};