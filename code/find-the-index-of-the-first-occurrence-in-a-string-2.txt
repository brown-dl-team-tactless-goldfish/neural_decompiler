class Solution(object):
    def strStr(self, haystack, needle):
        """
        :type haystack: str
        :type needle: str
        :rtype: int
        """
        return haystack.find(needle) if needle in haystack else -1

# in C as well
int __compare(char *s, int i, char *p, int nbytes) {
    int j = 0;
    while (nbytes--) {
        if (*(s+i) != *(p+j))
            return -1;
        ++i, ++j;
    }
    return 0;
}
int strStr(char* haystack, char* needle) {
    
    int slen = strlen(haystack);
    int nlen = strlen(needle);
    if (!slen){
        if (!nlen)
            return 0;
        return -1;
    }
    if (!nlen){
        return 0;
    }
    int err = 0;
    for(int i = 0; i < slen; ++i){
        if (haystack[i] == needle[0]){
            err = __compare(haystack, i, needle, nlen);
            if (err)
                continue;
            
            return i;
        }
    }
    
    return -1;
}
