class Solution {
public:
    int minDifficulty(vector<int>& jobDifficulty, int d) {
        
        int N = jobDifficulty.size();
        jobDifficulty.insert(jobDifficulty.begin(),0);
        vector<vector<int>> dp (N+1, vector<int>(d+1, INT_MAX/2));

        dp[0][0] = 0;
        
        for (int i = 1; i <= N; i++)
        {
            for (int k = 1; k <= min(i, d); k++)
            {
                int mx = jobDifficulty[i];
                
                for (int j = i; j >= k; j--)
                {
                    mx = max(mx, jobDifficulty[j]);
                    //dp[i][k] = min(dp[i][k], dp[j-1][k-1] + *max_element(jobDifficulty.begin() + j, jobDifficulty.begin() + i + 1));
                    dp[i][k] = min(dp[i][k], dp[j-1][k-1] + mx);
                }
            }
        }
        
         if (dp[N][d]>=INT_MAX/2) return -1;
        else return dp[N][d];  
    }
};