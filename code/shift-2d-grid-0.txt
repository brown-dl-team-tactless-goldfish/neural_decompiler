int** shiftGrid(int** grid, int gridSize, int* gridColSize, int k, int* returnSize, int** returnColumnSizes) {
    int RowSize = gridSize, ColSize = gridColSize[0], totalSize = RowSize * ColSize, shift = k % totalSize;
    *returnSize = gridSize;
    *returnColumnSizes = gridColSize;
    if(shift == 0) return grid;
    
    int arridx = 0;
    int* arr = (int*) malloc(2 * totalSize * sizeof(int));
    for(int i = 0; i < RowSize; i++) {
        for(int j = 0; j < ColSize; j++) {
            arr[arridx] = grid[i][j];
            arr[arridx + totalSize] = grid[i][j];
            arridx++;
        }
    }
    
    arridx = totalSize - shift;
    for(int i = 0; i < RowSize; i++) {
        for(int j = 0; j < ColSize; j++) {
            grid[i][j] = arr[arridx];
            arridx++;
        }
    }
    free(arr);
    return grid;
}