char* multiply(char* num1, char* num2) {
    
    size_t len1 = strlen(num1);
    size_t len2 = strlen(num2);

    if ((num1[0] == '0' && len1 == 1) || (num2[0] == '0' && len2 == 1)) return "0";

    size_t k = len1 + len2;
    char buff[k + 1];
    memset(buff, '0', sizeof(char) * k);
    buff[k--] = '\0';

    while (len2--) {

        size_t p = k;
        for (size_t len = len1; len--; ) {

            int val = (num1[len] - 48) * (num2[len2] - 48) + buff[p] - 48;
            buff[p--] = (char)(val % 10 + 48);

            size_t q = p;
            while (val > 9) {

                val = val / 10 + buff[q] - 48;
                buff[q--] = (char)(val % 10 + 48);
            }
        }

        k -= 1;
    }

    k = 0;
    while (buff[k] == '0') ++k;

    return strdup(&buff[k]);
}