    public class Solution
    {
        private readonly HashSet<int> _flipped;
        private readonly int _rows;
        private readonly int _cols;
        private readonly Random _rnd;

        public Solution(int rows, int cols)
        {
            _rnd = new Random();
            _flipped = new HashSet<int>();
            _rows = rows;
            _cols = cols;
        }

        public int[] Flip()
        {
            while (true)
            {
                int x = _rnd.Next(0, _rows);
                int y = _rnd.Next(0, _cols);
                int linearIdx = x * _cols + y;
                if (!_flipped.Contains(linearIdx))
                {
                    _flipped.Add(linearIdx);
                    return new[] { x, y };
                }
            }
        }

        public void Reset()
        {
            _flipped.Clear();
        }
    }