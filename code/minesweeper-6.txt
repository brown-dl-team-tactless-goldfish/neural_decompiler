public class Solution 
{
    int[] dx = new int[] {0, 1, 0, -1, 1, 1, -1, -1};
    int[] dy = new int[] {1, 0, -1, 0, 1, -1, 1, -1};
    
    public char[][] UpdateBoard(char[][] board, int[] click) 
    {
        int x = click[0], y = click[1];
        if(board[x][y] == 'M') 
        {
            board[x][y] = 'X';
            return board;
        }
        
        FloodFill(board, x, y);
        return board;
    }
    
    private void FloodFill(char[][] board, int x, int y)
    {
        int r = board.Length, c = board[0].Length;
        if(x < 0 || x >= r || y < 0 || y >= c || board[x][y] != 'E')
            return;
        
        var mineCount = '0';
        for(int i = 0; i < 8; i++)
        {
            int nx = x + dx[i], ny = y + dy[i];
            if(nx >= 0 && nx < r && ny >= 0 && ny < c && board[nx][ny] == 'M')
                mineCount++;
        }
        
        board[x][y] = mineCount == '0' ? 'B' : mineCount;
        if(mineCount == '0')
            for(int i = 0; i < 8; i++)
                FloodFill(board, x + dx[i], y + dy[i]);
    }
}