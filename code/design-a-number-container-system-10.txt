public class NumberContainers 
{
    Dictionary<int, int> indexNumberMap;
    Dictionary<int, SortedSet<int>> numberSortedIndexes;
    public NumberContainers()
    {
        indexNumberMap = new Dictionary<int, int>();
        numberSortedIndexes = new Dictionary<int, SortedSet<int>>();
    }

    public void Change(int index, int number)
    {
        if (indexNumberMap.ContainsKey(index))
            numberSortedIndexes[indexNumberMap[index]].Remove(index);

        indexNumberMap[index] = number;
        numberSortedIndexes.TryAdd(number, new SortedSet<int>());
        numberSortedIndexes[number].Add(index);
    }

    public int Find(int number)
    {
        if (numberSortedIndexes.ContainsKey(number) && numberSortedIndexes[number].Any())
            return numberSortedIndexes[number].Min;
        return -1;
    }
}