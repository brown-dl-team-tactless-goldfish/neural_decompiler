vector<int> threeEqualParts(vector<int>& A) {
        int cnt = 0, i, a, b, c, val = 0;
        for (auto x : A)
            cnt += x;
        if (cnt == 0)
            return {0, 2};
        if (cnt % 3) // number of 1's are not splittable
            return {-1,-1};
        for (i = A.size() - 1; i >= 0; i--) {
            if (A[i]) {
                val++;
                if (val == cnt/3)
                    c = i; // start of 3rd segment
                else if (val == 2 * (cnt/3))
                    b = i; // start of 2nd segment
                else if (val == cnt) {
                    a = i; // start of 1st segment
                    break;
                }
            }
        }
        for (i = 0; i < (int)A.size() - c; i++) {
            if (a+i >= b || b+i >= c) // overlapping regions
                return {-1, -1};
            if (A[c+i] != A[a+i] || A[c+i] != A[b+i]) // mismatch
                return {-1, -1};
        }
        return {a+i-1, b+i};
    }
	```