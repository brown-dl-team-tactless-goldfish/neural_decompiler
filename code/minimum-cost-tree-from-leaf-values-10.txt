class Solution {
public:
    int dp[50][50];
    
    int mctFromLeafValues(vector<int>& arr) {
        int  n = arr.size();
        memset(dp,-1,sizeof(dp));
        
        return mcm(arr, 0, n-1);
        
    }
    
    long long mcm(vector<int>& arr, int i, int j){
        
        if(i>=j)return 0;
        if(dp[i][j] != -1)return dp[i][j];
        long ans = 1e12;
        
        for(int k = i; k<j ; k++){
            
            long c = mcm(arr,i,k) + mcm(arr,k+1,j);
            
            int a = arr[i];
            int b = arr[j];
            
            for(int p = i; p<=k ; p++)a = max(a,arr[p]);
            for(int p = k+1; p<=j; p++)b= max(b, arr[p]);
                        
            ans = min(ans, c + a*b);
        }
        
        return dp[i][j] = ans;
    }
};