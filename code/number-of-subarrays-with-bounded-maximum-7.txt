class Solution {
public:
    int numSubarrayBoundedMax(vector<int>& nums, int left, int right) {
        vector<vector<int>> v;
    vector<int> temp;
    int n = nums.size();
    for (int i = 0; i < n; i++)
    {
        if (nums[i] > right)
        {
            if (temp.size() != 0)
                v.push_back(temp);
            temp.clear();
        }
        else
        {
            temp.push_back(nums[i]);
        }
    }
    if (temp.size() != 0)
    {
        v.push_back(temp);
    }

    int c = 0;
    for (auto ele : v)
    {
        int n = ele.size();
        for (int s = 0; s < n; s++)
        {
            if (ele[s] >= left)
            {
                c = c + n - s;
            }
            else
            {
                for(int i=s+1;i<n;i++)
                {
                    if(ele[i]>=left)
                    {
                        c=c+n-i;
                        break;
                    }
                }
            }
        }
    }
    return c;
    }
};