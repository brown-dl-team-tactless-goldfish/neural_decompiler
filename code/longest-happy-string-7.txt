class Solution {
public:
    string longestDiverseString(int a, int b, int c) {
        string str = "00";
        while (a > 0 || b > 0 || c > 0) {
            char l0 = str[str.length() - 2];
            char l1 = str[str.length() - 1];
            vector<char> cands;
            if (l0 != 'a' || l1 != 'a') {
                cands.push_back('a');
            }
            if (l0 != 'b' || l1 != 'b') {
                cands.push_back('b');
            }
            if (l0 != 'c' || l1 != 'c') {
                cands.push_back('c');
            }
            char cand;
            int count = 0;
            for (char ch : cands) {
                if (ch == 'a' && a > count) {
                    cand = 'a';
                    count = a;
                } else if (ch == 'b' && b > count) {
                    cand = 'b';
                    count = b;
                } else if (ch == 'c' && c > count) {
                    cand = 'c';
                    count = c;
                }
            }
            if (count == 0) {
                break;
            }
            str.push_back(cand);
            if (cand == 'a') {
                a--;
            } else if (cand == 'b') {
                b--;
            } else {
                c--;
            }
        }
        str.erase(0, 2);
        return str;
    }
};