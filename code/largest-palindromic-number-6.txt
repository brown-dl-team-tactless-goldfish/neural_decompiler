class Solution {
public:
    string largestPalindromic(string num) {
        unordered_map<char, int> digcount;
        for(char c:num) {
            digcount[c]++;
        }
        
        string s;
        for(char c = '9'; c >= '0'; c--) {
            int count = digcount[c];
            if (count == 0) continue;
            for (int j = 0; j < count / 2; j++) {
                if (s.size() > 0 || c != '0')
                    s += c;
            }
            if (count % 2 == 1) digcount[c] = 1;
            else digcount[c] = 0;
        }
        string mid = "";
        for(char c = '9'; c >= '0'; c--) {
            int count = digcount[c];
            if (count == 0) continue;
            else {
                mid += c;
                break;
            }
        }
        string rev_s = s;
        reverse(rev_s.begin(), rev_s.end());
        string result = s + mid + rev_s;
        if (result.size() == 0) result = "0";
        return result;
    }
};