
int returnDistance(int x1, int y1, int x2, int y2 ) {
    return abs(x1 - x2) + abs(y1 - y2);
}



int nearestValidPoint(int x, int y, int** points, int pointsSize, int* pointsColSize){
    int validPointIndex[pointsSize];
    int length = 0;
    int indexMin = -1;
    int minDistance = INT_MAX;
    
    
    // find valid points
    for(int i = 0; i < pointsSize; i++) {
        int * testPoints = points[i];
        if (x == testPoints[0] || y == testPoints[1]) {
            validPointIndex[length] = i;
            length++;
        }
    }
    
	// The two loops can be combined to use only 1 loop
    
    // find min distance from valid points
    for(int j = 0; j < length; j++) {
        int * validPoint = points[validPointIndex[j]];
        int dist = returnDistance(x, y, validPoint[0], validPoint[1]);
        
        if (dist < minDistance) {
            indexMin = validPointIndex[j];
            minDistance = dist;
        }
        
    }
    
    
    
    return indexMin;
        
}