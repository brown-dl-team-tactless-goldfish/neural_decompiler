vector<int> res;

unordered_map<int,int> mp;

int mask_word(string st)
{
    int mask = 0;
    
    for(auto x: st)
    {
        mask = mask | 1 << (x-'a');
    }
    
    return mask;
}

vector<int> findNumOfValidWords(vector<string>& words, vector<string>& puzzles) {
    
    
    
    for(auto x: words)
    {
        int tmp = mask_word(x);
        
        mp[tmp]++;
    }
    
    for(auto word : puzzles)
    {
        int mask = mask_word(word), sub_mask = mask, first = (1 <<word[0]-'a'), cur = 0;
        
        while(sub_mask)
        {
            if(sub_mask & first)
            {
                cur += mp[sub_mask];
            }
            
            sub_mask = (sub_mask-1) & mask;
        }
        
        res.push_back(cur);
    }
    
    return res;
    
}