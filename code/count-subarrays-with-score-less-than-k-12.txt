/*
* problem statement:
* https://leetcode.com/problems/count-subarrays-with-score-less-than-k/
*
* long long - both negative and positive integer values
*
* variant:
* ans += i - start + 1, where (i-start+1) represents the number of all possible subarrays
*/


class Solution {
public:
    long long countSubarrays(vector<int>& nums, long long k) {
        long long ans = 0;  /* long long both positive and negative */
        
        long long sum = 0, start = 0;       
        for(std::size_t i = 0; i != nums.size(); ++i)
        {
            sum += nums[i];
            while(sum * (i - start + 1) >= k)
                sum -= nums[start++];
            
            ans += i - start + 1;  /* there are total i - start + 1 subarrays */
           
        }
        return ans;
    }

};