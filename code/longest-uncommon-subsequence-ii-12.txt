    public class Solution
    {
        private bool IsSubsequence(string s, string t)
        {
            if (s.Length > t.Length)
            {
                return false;
            }

            if (s.Length == 0)
            {
                return true;
            }

            int i = 0;
            int j = 0;

            while (true)
            {
                if (i == s.Length)
                {
                    return true;
                }

                if (j == t.Length)
                {
                    return false;
                }

                if (s[i] == t[j])
                {
                    i++;
                    j++;
                    continue;
                }

                j++;
            }
        }

        public int FindLUSlength(string[] strs)
        {
            IDictionary<int, IList<string>> length2Str = new Dictionary<int, IList<string>>();
            foreach (var str in strs)
            {
                if (!length2Str.ContainsKey(str.Length))
                {
                    length2Str[str.Length] = new List<string>();
                }

                length2Str[str.Length].Add(str);
            }

            if (length2Str.Count == 0)
            {
                return -1;
            }

            int[] lengthKeys = length2Str.Keys.ToArray();
            Array.Sort(lengthKeys, (l1, l2) => l2.CompareTo(l1));

            for (int i = 0; i < lengthKeys.Length; i++)
            {
                var strsOfLength = length2Str[lengthKeys[i]];
                IDictionary<string, int> str2Count = new Dictionary<string, int>();
                foreach (var str in strsOfLength)
                {
                    if (!str2Count.ContainsKey(str))
                    {
                        str2Count[str] = 0;
                    }

                    str2Count[str]++;
                }

                foreach (var p in str2Count)
                {
                    if (p.Value == 1)
                    {
                        bool valid = true;
                        for (int j = 0; j < i; j++)
                        {
                            foreach (var longStr in length2Str[lengthKeys[j]])
                            {
                                if (IsSubsequence(p.Key, longStr))
                                {
                                    valid = false;
                                    break;;
                                }
                            }

                            if (!valid)
                            {
                                break;
                            }
                        }

                        if (valid)
                        {
                            return p.Key.Length;
                        }
                    }
                }

            }

            return -1;
        }
    }