// RS Hash Function
unsigned int RSHash(char *str)
{
    unsigned int b = 378551;
    unsigned int a = 63689;
    unsigned int hash = 0;

    while (*str)
    {
        hash = hash * a + (*str++);
        a *= b;
    }

    return (hash & 0x7FFFFFFF);
}

int maxEqualRowsAfterFlips(int** matrix, int matrixSize, int* matrixColSize){
    int m = matrixSize; 
    int n = *matrixColSize;
    char** same = malloc(m * sizeof(char*));
    char** oppsite = malloc(m * sizeof(char*));
    unsigned int* sameHash = malloc(m * sizeof(unsigned int));
    unsigned int* oppsiteHash = malloc(m * sizeof(unsigned int));
    bool* visit = calloc(m, sizeof(bool));
    for(int i = 0; i < m; i++){
        same[i] = malloc((n+1) * sizeof(char));
        oppsite[i] = malloc((n+1) * sizeof(char));
        same[i][n] = '\0';
        oppsite[i][n] = '\0';
        for(int j = 0; j < n; j++){
            same[i][j] = matrix[i][j] + '0';
            oppsite[i][j] = matrix[i][j]^1 + '0';
        }
        sameHash[i] = RSHash(same[i]);
        oppsiteHash[i] = RSHash(oppsite[i]);
    }
    int ans = 1;
    for(int i = 0; i < m; i++){
        int cn = 1;
        visit[i] = true;
        if(ans >= (m-i))
            break;
        for(int j = 1; j < m; j++){
            if(visit[j] || sameHash[i] != sameHash[j]   && sameHash[i] != oppsiteHash[j])
                continue;
            if(sameHash[i] == sameHash[j]   || sameHash[i] == oppsiteHash[j]){
                cn++;
                visit[j] = true;
            }
        }
        ans = fmax(ans, cn);
    }
    free(sameHash);
    free(oppsiteHash);
    free(visit);
    for(int i = 0; i < m; i++){
        free(same[i]);
        free(oppsite[i]);
    }
    free(same);
    free(oppsite);
    return ans;
}