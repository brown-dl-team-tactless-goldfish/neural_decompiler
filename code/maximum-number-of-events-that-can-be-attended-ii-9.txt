class Solution {
public:
    int n;
    int maxValue(vector<vector<int>>& e, int k) {
        sort(e.begin(), e.end());
        n = e.size();
        vector<vector<int>> memo(n + 1, vector<int>(k + 1, -1));
        return dp(memo, e, 0, 0, k);
    }
    int dp(vector<vector<int>>& memo, vector<vector<int>>& e, int idx, int time, int k){
        if(idx == n || k == 0)
            return 0;
        if(time > e[idx][0])
            return dp(memo, e, idx + 1, time, k);
        if(memo[idx][k] != -1)
            return memo[idx][k];
        return memo[idx][k] = max(dp(memo, e, idx + 1, time, k), dp(memo, e, idx + 1, e[idx][1] + 1, k - 1) + e[idx][2]);
    }
};