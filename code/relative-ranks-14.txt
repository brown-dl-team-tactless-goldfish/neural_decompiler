/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
#include <stdio.h>
#include <stdlib.h>

int comp ( const void *pa, const void *pb ) {
    const int *a = *(const int **)pa;
    const int *b = *(const int **)pb;

    if (a[1] < b[1]) return  1;
    if (a[1] > b[1]) return -1;
    return 0;
}

char ** findRelativeRanks(int* score, int scoreSize, int* returnSize){

    int **map = malloc(scoreSize * sizeof(int*));

    for (int i = 0; i < scoreSize; i++) {
        map[i] = malloc(2 * sizeof(int));
        map[i][0] = i;
        map[i][1] = score[i];
    }

    qsort(map, scoreSize, sizeof(*map), comp);

    char** res = malloc(scoreSize * sizeof(char[13]));

    for(int i = 0; i < scoreSize; i++) {
        res[i] = malloc(13 * sizeof(char));
    }

    for(int i = 0; i < scoreSize; i++) {
        char* string = malloc(13 * sizeof(char));

        if (i == 0) {
            string = "Gold Medal";
        } else if (i == 1) {
            string = "Silver Medal";
        } else if (i == 2) {
            string = "Bronze Medal";
        } else {
            sprintf(string, "%i", i + 1);
        }

        res[map[i][0]] = string;
    }

    *returnSize = scoreSize;

    return res;
}