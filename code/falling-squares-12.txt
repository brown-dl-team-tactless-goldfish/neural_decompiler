class Solution {
public:
    vector<int> fallingSquares(vector<vector<int>>& positions) {
        vector<pair<pair<int,int>,int>> a;
        vector<int> ans;
        int m=0;
        for(auto t: positions)
        {
            if(a.empty())
                a.push_back({{t[0],t[0]+t[1]},t[1]});
            else
            {
                int f=0;
                for(int i=a.size()-1;i>=0;i--)
                {
                    int l=a[i].first.first,r=a[i].first.second,h=a[i].second;
                    if(r-l<=0)
                        continue;
                    if(t[0]>=l && t[0]<r)
                    {
                        a[i]={{l,t[0]},h};
                        a.push_back({{t[0],t[0]+t[1]},t[1]+h});
                        if(t[0]+t[1]<r)
                            a.push_back({{t[0]+t[1],r},h});
                        f=1;
                        break;
                    }
                    else if(t[0]+t[1]>l && t[0]+t[1]<=r)
                    {
                        a[i]={{t[0]+t[1],r},h};
                        a.push_back({{t[0],t[0]+t[1]},h+t[1]});
                        f=1;
                        break;
                    }
                    else if(t[0]<=l && t[0]+t[1]>=r)
                    {
                        a[i]={{0,0},h};
                        a.push_back({{t[0],t[0]+t[1]},h+t[1]});
                        f=1;
                    }
                }
                if(f==0)
                    a.push_back({{t[0],t[0]+t[1]},t[1]});
                sort(a.begin(),a.end(),sortt);
            }
            m=max(m,a[a.size()-1].second);
            ans.push_back(m);
        }
        return ans;
    }
    bool static sortt(pair<pair<int,int>,int> a,pair<pair<int,int>,int> b)
    {
        if(a.second<=b.second)
            return true;
        return false;
    }
};