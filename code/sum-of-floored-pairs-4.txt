class Solution {
public:
    int sumOfFlooredPairs(vector<int>& nums) 
    {
     long long mod = 1e9+7;
     long long h[200002]={0};
     int mx=INT_MIN;
     for(auto x: nums)
     {
         h[x]++;
         mx=max(mx,x);
     }
     vector<int> pfx(2*mx+1,0);
     for(int i=1;i<=2*mx;i++)
     {
         pfx[i]=pfx[i-1]+h[i];
     }
     sort(nums.begin(), nums.end());
     long long s = 0;
     for(int i=0;i<nums.size();i++)
     {
         int l=nums[i], r=2*nums[i]-1, fact=1;
         while(l<=mx)
         {
             s=(s+fact*(pfx[r]-pfx[l-1]))%mod;
             l=l+nums[i];
             r=r+nums[i];
             fact++;
         }
     }
        return s;
    }
};