class CombinationIterator {
	private:
	vector<string> cnt;
	string s;
	int len;
	string path="";
public:
	void dfs(string s, int len, string path, int index){
		if(index>s.size()) return;
		if(path.size()==len){
			cnt.push_back(path);
			return;
		}
		for(int i=index;i<s.size();i++){
			path.push_back(s[i]);
			dfs(s,len,path,i+1);
			path.pop_back();
		}

	}


	CombinationIterator(string characters, int combinationLength) {
		//cnt.clear();
		s=characters;
		len=combinationLength;
		dfs(s,len,path,0);
		sort(cnt.rbegin(),cnt.rend());
	}

	string next() {  
		string res=cnt.back();
		cnt.pop_back();
		return res;
	}

	bool hasNext() {
		if(cnt.size()>=1) return true;
		return false;
	}
};