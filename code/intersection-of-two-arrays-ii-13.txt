

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int comp(const void *a, const void *b){
	/* to prevent overflow */
    if(*(int *)a > *(int *)b) return 1;
    else if(*(int *)a < *(int *)b) return -1;
    return 0;
}
int* intersect(int* nums1, int nums1Size, int* nums2, int nums2Size, int* returnSize){
    
    int *ret = (int *)malloc(sizeof(int));
    *returnSize = 0;
    qsort(nums1, nums1Size, sizeof(int), comp);
    qsort(nums2, nums2Size, sizeof(int), comp);
    
    int i = 0, j =0;
    while(i < nums1Size && j < nums2Size){
        
        if(nums1[i] < nums2[j]) i++;
        else if(nums1[i] > nums2[j]) j++;
        else{
            *returnSize = *returnSize + 1;
            ret = realloc(ret, sizeof(int) * (*returnSize));
            ret[*returnSize - 1] = nums1[i];
            i++;
            j++;
        }
    }

    return ret;

}