class Solution 
{
public:
    bool isBoomerang(vector<vector<int>>& p) 
    {
        float a = distance({ p[1][0] - p[0][0], p[1][1] - p[0][1] });
        float b = distance({ p[2][0] - p[1][0], p[2][1] - p[1][1] });
        float c = distance({ p[2][0] - p[0][0], p[2][1] - p[0][1] });
        return a + b > c && a + c > b && b + c > a && triangleArea(a, b, c) > 0;
    }
private:
    float triangleArea(float& a, float& b, float& c)
    {
        float s = (a + b + c) / 2;
        return sqrt(s * (s - a) * (s - b) * (s - c));
    }
    
    float distance(std::vector<int> v)
    {
        return sqrt(v[0] * v[0] + v[1] * v[1]);
    }
};