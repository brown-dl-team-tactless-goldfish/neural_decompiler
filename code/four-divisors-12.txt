class Solution {
public:
    int sumFourDivisors(vector<int>& nums) {
        
        int result = 0;
        int sum;
        unordered_map<int, int> records;
        for (int i = 0; i < nums.size(); i++){
            int value = nums[i];
            if (records.count(value) == 1){
                result += records[value];
                continue;
            }
            
            if (have_four_divisor(value, sum)){
                result += sum;
                records.insert({value, sum});
            }
            else{
                records.insert({value, 0});
            }
        }
        
        return result;
    }
    
    bool have_four_divisor(int value, int &sum){

        int a = 1, b = value, c = -1, d = -1;
        int k = 0;
        
        int sq = (int)sqrt((double)value);
        for (int factor = 2; factor <= sq; factor++){

            if (value % factor == 0){
                int another = value / factor;
                if (another != factor){
                    k = k + 2;
                    if (c == -1 && d == -1){
                        c = factor;
                        d = another;
                    }
                    else{
                        return false;
                    }
                }
                else{
                    return false;
                }
                if (k > 2){
                    return false;
                }
            }
        }
        if (k == 2){
            sum = value + 1 + c + d;
            return true;
        }
        return false;
    }
};