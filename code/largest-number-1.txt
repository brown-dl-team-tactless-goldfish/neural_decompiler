int compare(const void* a, const void* b)
{
    char stra[10];
    char strb[10];
    sprintf(stra, "%d", *(int*)a);
    sprintf(strb, "%d", *(int*)b);
    int len = strlen(stra) + strlen(strb);
    
    for (int i=0; i<len; i++)
    {
        char ca, cb;
        
        if (i < strlen(stra))
            ca = stra[i];
        else
            ca = strb[i - strlen(stra)];
        
        if (i < strlen(strb))
            cb = strb[i];
        else
            cb = stra[i - strlen(strb)];
        
        //printf("%c %c\r\n", ca, cb);
        
        if (cb > ca)
        {
            return 1;
        }
        else if (cb < ca)
        {
            return 0;
        }
    }
    
    return 0;
}

char * largestNumber(int* nums, int numsSize){
    char* ans = (char*)malloc(sizeof(char) * numsSize * 10);
    ans[0] = '\0';
    qsort(nums, numsSize, sizeof(int), compare);
    
    for (int i=0; i<numsSize; i++)
    {
        //printf("%d ", nums[i]);
        char tmp[10];
        sprintf(tmp, "%d", nums[i]);
        strcat(ans, tmp);
    }
    
    if (ans[0] == '0')
        ans[1] = '\0';
    return ans;
}