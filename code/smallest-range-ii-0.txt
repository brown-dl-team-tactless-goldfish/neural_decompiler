#define min(a,b) ((a) < (b) ? (a) : (b))
#define max(a,b) ((a) > (b) ? (a) : (b))
    
int cmpfunc(const void* a, const void* b){
    return *(int*)a - *(int*)b;
}

int smallestRangeII(int* nums, int numsSize, int k){

    qsort(nums, numsSize, sizeof(int), cmpfunc);

    if((nums[numsSize-1] - nums[0]) >= 4*k)
        return nums[numsSize-1] - nums[0] - 2*k;
    
    if((nums[numsSize-1] - nums[0]) <= k)
        return nums[numsSize-1] - nums[0];

    int low;
    int high;
    int ans =  nums[numsSize-1] - nums[0];
    int diff;
    for(int i = 1; i < numsSize; i++){
        low  = min(nums[0]+k, nums[i]-k);
        high = max(nums[i-1] +k, nums[numsSize-1] -k);
        diff = high - low;
        if(diff < ans)
            ans = diff;
    }
           
    return ans;
}