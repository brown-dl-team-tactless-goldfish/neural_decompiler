/*
// Definition for Employee.
class Employee {
public:
    int id;
    int importance;
    vector<int> subordinates;
};
*/

class Solution {
public:
    int getImportance(vector<Employee*> employees, int id) {
        unordered_map<int, vector<int>>Map ;
        for(auto e : employees)
        {
            Map[e->id].push_back(e->importance) ;
            for(int i = 0; i < e->subordinates.size(); i++)
                Map[e->id].push_back(e->subordinates[i]) ;
        }
        
        return DFS(id, Map) ;
    }
    
    int DFS(int id, unordered_map<int, vector<int>>Map){
        auto v = Map[id] ;
        int val = v[0] ;
        for(int i = 1 ; i < v.size(); i++){
            val += DFS(v[i], Map) ;
        }
        return val ;
    }
    
};