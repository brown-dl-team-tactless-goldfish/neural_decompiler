#define check(x) if(x < 0 || x >= size) return;

class Bitset {
    string t;
    int size, cnt;
    char set;
    inline char getflipchar(char c) {
        return c == '1' ? '0' : '1';
    }
public:
    Bitset(int _size) {
        size = _size;
        cnt = 0;
        set = '1';
        t.resize(size, '0');
    }
    // O(1)
    void fix(int idx) {
        check(idx);
        if(t[idx] != set) t[idx] = set, ++cnt;
    }
    // O(1)
    void unfix(int idx) {
        check(idx);
        if(t[idx] == set) t[idx] = getflipchar(set), --cnt;
        
    }
    // O(1)
    void flip() {
        set = getflipchar(set);
        cnt = size - cnt;
    }
    // O(1)
    bool all() {
        return size == cnt;
    }
    // O(1)
    bool one() {
        return cnt > 0;
    }
    // O(1)
    int count() {
        return cnt;
    }
    // O(0.5 * N) in amortized 50% of calls = O(N)
    string toString() {
        if(set == '1') return t;
		// Flip string only if set is not '1' then the string needs to be "1010101111" for "0101010000"
        string s;
        s.reserve(size);
        for(int i = 0; i < size; ++i) s.push_back(getflipchar(t[i]));
        return s;
    }
};