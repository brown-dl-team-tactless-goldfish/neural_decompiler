    int m = pow(10, 9) + 7;
    
    int maxSumRangeQuery(vector<int>& nums, vector<vector<int>>& requests) {
        
        sort(nums.begin(), nums.end()); reverse(nums.begin(), nums.end());
        unordered_map<int, int> mp, gaps; 
        
        for(auto r : requests) mp[r[0]]++, mp[r[1] + 1]--;
        
        int x = 0;
        
        for(int i = 0 ; i < nums.size() ; i++) {
            
            x += mp[i];
            if(x) gaps[x]++;
        }
        
        vector<pair<int, int>> v;
        for(auto e : gaps) v.push_back({e.first, e.second});
        sort(v.begin(), v.end()); reverse(v.begin(), v.end());
        
        int i = 0;  long long res = 0;
        
        for(auto n : v) 
            for(int k = 0 ; k < n.second ; k++) 
                res = (res + ((long long)nums[i++] * n.first) % m) % m;
        
        return res;
    }