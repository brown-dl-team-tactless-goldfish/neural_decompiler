class Solution {
public:
    int maximumGood(vector<vector<int>>& sta) {
        int n = sta.size();
        int sol = 0;
        for(int mask = 0; mask < (1 << n); mask++) {
            
            bool isPossible = true;
            for(int i = 0; i < n; i++) {
                for(int j = 0; j < n; j++) {
                    if(mask & (1 << i)) {
                        if(mask & (1 << j)) {
                            if(sta[i][j] == 2) continue;
                            if(sta[i][j] == 0) {
                                isPossible = false;
                                i = n;
                                break;
                            }
                        }
                        else {
                            if(sta[i][j] == 2) continue;
                            if(sta[i][j] == 1) {
                                isPossible = false;
                                i = n;
                                break;
                            }
                        }
                    }
                   
                }
            }
            if(isPossible) {
                sol = max(sol, __builtin_popcount(mask));
            }
        }
        return sol;
    }
};