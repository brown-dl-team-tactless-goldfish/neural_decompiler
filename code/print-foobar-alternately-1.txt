typedef struct {
    int n;
    int b;
    int p;
} FooBar;

FooBar* fooBarCreate(int n) {
    FooBar* obj = (FooBar*) malloc(sizeof(FooBar));
    obj->n = n;
    obj->b = 0;
    obj->p = 0;
    
    return obj;
}

void foo(FooBar* obj) {
    
    for (int i = 0; i < obj->n; i++) {
        if(i)
            while(obj->b==0) usleep(10);
        obj->b = 0;
        // printFoo() outputs "foo". Do not change or remove this line.
        printFoo();
        obj->p = 1;
    }
}

void bar(FooBar* obj) {
    
    for (int i = 0; i < obj->n; i++) {
        while(obj->p==0) usleep(10);
        obj->p = 0;
        // printBar() outputs "bar". Do not change or remove this line.
        printBar();
        obj->b = 1;
    }
}

void fooBarFree(FooBar* obj) {
    free(obj);
}