int next_pasc_tnum(int prev_tnum, int row, int col)
{
    // next triangle number on row row and column col
    return prev_tnum*(row-col)/(col+1);
}

int pasc_part_sum(int row, int col, int top_floor)
{
    // partial sum of triangle row row until column col
    // stop at first value >= than the top floor, skip first 1
    int num = 1, sum = 0;
    for (int c = 0; c < col; ++c)
    {
        num = next_pasc_tnum(num, row, c);
        if ((sum += num) >= top_floor)
            break;
    }
    
    return sum;
}

int egg_drop_bin_src(int eggs, int floors)
{
    int low = 1, high = floors, mid = 0;
    
    while (low < high)
    {
        mid = low+((high-low)/2);
        if (pasc_part_sum(mid, eggs, floors) < floors)
            low = mid+1;
        else
            high = mid;
    }
    
    return low;
}


#define egg_drop egg_drop_bin_src
int superEggDrop(int eggs, int floors)
{
    return egg_drop(eggs, floors);
}