class Solution {
public:
    int findValidSplit(vector<int>& nums) {
        //int max_=*max_element(nums.begin(), nums.end());
        //vector<int>save(max_+1,-1);
        unordered_map<int,int>save;
        for(int i=0;i<nums.size();i++)
        {
            save[nums[i]]=max(save[nums[i]],i);
            for(int j=2;j*j<=nums[i];j++)
            {
                if(nums[i]%j==0)
                {
                    save[j]=max(save[j],i);
                    save[nums[i]/j]=max(save[nums[i]/j],i);
                }
            }
        }
        int ans=0;
        for(int i=0;i<nums.size();i++)
        {
            int max_=save[nums[i]];
            for(int j=2;j*j<=nums[i];j++)
            {
                if(nums[i]%j==0)
                {
                    max_=max(max_,save[j]);
                    max_=max(max_,save[nums[i]/j]);
                }
            }
            ans=max(ans,max_);
            if(ans==i&&i!=nums.size()-1)return i;
        }
        return -1;
    }
};