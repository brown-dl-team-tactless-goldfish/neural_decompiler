class Solution:
    def smallestDivisor(self, nums: List[int], threshold: int) -> int:
        # print("nums = ", nums)

        def div(n1, n2):
            if (n1 % n2 == 0):
                return n1 // n2
            else:
                return (n1 // n2) + 1

        # for n in nums:
        #     print(div(n, 5))

        def helper(l, r):
            # print("l = ", l, " r = ", r)
            if (l > r):
                return
            elif (l == r):
                return l

            if (l + 1 == r):
                # print("only 1")

                tmpSum = 0
                for n in nums:
                    tmpSum += div(n, l)
                # print("tmpSum == ", tmpSum)
                if (tmpSum <= threshold):
                    return l
                else:
                    return r

            else:

                m = (l + r + 1) // 2
                # print("m = ", m)

                tmpSum = 0
                for n in nums:
                    tmpSum += div(n, m)
                # print("tmpSum == ", tmpSum)

                if (tmpSum <= threshold):
                    return helper(l, m)
                else:
                    return helper(m+1, r)

        res = helper(1, max(nums))
        # print("res = ", res)

        return res