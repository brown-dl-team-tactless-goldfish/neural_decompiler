    Node* flatten(Node* head) {
        dfs(head);
        return head;
    }
    
    Node* dfs(Node* head) {
        if(head == NULL) return NULL;
        Node* cur = head, *nxt = NULL, *res = NULL;
        while(cur) {
            res = cur;
            nxt = cur->next;
            if(cur->child) {
                cur->next = cur->child;
                cur->child->prev = cur;
                
                Node* tail = dfs(cur->child);
                cur->child = NULL;
                tail->next = nxt;

                if(nxt) nxt->prev = tail;
                res = tail;
            }
            cur = nxt;
        }
        return res;
    }    
	
	
    Node* flatten(Node* head) {
        for(Node* cur = head; cur != NULL; cur = cur->next) {
            if(cur->child) {
                Node* nxt = cur->next, *h = cur->child;
                cur->next = h;
                h->prev = cur;
                cur->child = NULL;
                
                while(h->next != NULL) h = h->next;
                
                h->next = nxt;
                if(nxt) nxt->prev = h;
            }
        }
        return head;
    }	
	