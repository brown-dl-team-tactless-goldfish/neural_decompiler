class Solution {
public:
    
    long long max(long long a , long long b)
    {
        if(a > b) return a; 
        else return b; 
    }
    
    long long max(long long a, long long b, long long c)
    {
        long long x = max(a , b); 
        x = max(x , c) ; 
        return x;
    }
    
    long long maxAlternatingSum(vector<int>& nums) {
        long long n = int(nums.size()); 
        long long dp[n][2]; 
        for(long long i = 0 ; i < n ; ++i) {
            dp[i][0] = -1e9;
            dp[i][1] = -1e9; 
        }
        dp[0][0] = 0; 
        dp[0][1] = nums[0]; 
        for(int i = 1; i < n ; ++i){
            dp[i][1] = max(nums[i] , dp[i-1][0] + nums[i] , dp[i-1][1]); 
            dp[i][0] = max(0, dp[i-1][1] - nums[i]  , dp[i-1][0]); 
        }
        long long ans = max(dp[n-1][0] , dp[n-1][1]); 
        return ans; 
    }
};