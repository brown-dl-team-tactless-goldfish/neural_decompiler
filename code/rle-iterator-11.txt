class RLEIterator {
public:
    RLEIterator(vector<int>& A) {
        index = 0, pos = 1, data = A;
    }
    
    int next(int n) {
        while (index < data.size() && pos + n - 1 > data[index])
        {
            n -= data[index] - pos + 1;
            pos = 1;
            index += 2; // if current element does not have the last index, keep going
        }
        
        if (index >= data.size())
        {
            return -1;
        }
        
        int res = data[index + 1];
        pos = pos + n - 1 == data[index] ? 1 : pos + n; // move pos to the next position
        index += pos == 1 ? 2 : 0; 
        return res;
    }
    
private:
    int index, pos; // index at array A, the position in the data[index]
    vector<int> data;
};