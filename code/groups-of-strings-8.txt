public class Solution {
    public int[] GroupStrings(string[] words) {
        Dictionary<int,int> dict = new Dictionary<int,int>();
        for(int i = 0; i < words.Length; i++)
        {
            int mask = 0;
            foreach(char ch in words[i])
                mask = mask | 1<< (ch-'a');
            
            if(dict.ContainsKey(mask))
                dict[mask]++;
            else
                dict.Add(mask, 1);            
        }
        int groups = 0, largest = 0;
        while(dict.Count > 0)
        {
            int mask = dict.Keys.First();
            int size = dfs(mask, dict);
            groups += size > 0 ? 1 : 0;
            largest = Math.Max(largest, size);
        }
        return new int[2] {groups, largest};
    }
    
    private int dfs(int mask, Dictionary<int,int> dict)
    {
        int res = 0;
        if(dict.ContainsKey(mask))
        {
            res += dict[mask];
            dict.Remove(mask);
            for(int i = 0; i < 26; i++)
            {
                res += dfs(mask ^ (1<<i), dict);
                for (int j = i + 1; j < 26; ++j)
                    if (((mask >> i) & 1) != ((mask >> j) & 1))
                        res += dfs(mask ^ (1 << i) ^ (1 << j), dict);
            }
        }
        return res;
    }
}