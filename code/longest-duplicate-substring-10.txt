    public string LongestDupSubstring(string S) {
        if(string.IsNullOrEmpty(S))
            return S;
        int[][] dp=new int[S.Length+1][];
        for(int i=0;i<dp.Length;i++)
            dp[i]=new int[S.Length+1];
        int max=0;
        int start=-1;
        for(int i=1;i<dp.Length;i++)
        {
            for(int j=i+1;j<dp[0].Length;j++)
            {
                if(S[j-1]==S[i-1])
                    dp[i][j]=dp[i-1][j-1]+1;
                else
                    dp[i][j]=0;
                if(dp[i][j]>1&&dp[i][j]>max)
                {
                    max=dp[i][j];
                    start=j-max;
                }
            }
        }
        return start==-1?"":S.Substring(start,max);
    }