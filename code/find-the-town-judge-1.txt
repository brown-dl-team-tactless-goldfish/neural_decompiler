int findJudge(int n, int** trust, int trustSize, int* trustColSize) {
    int retVal = -1;

    int i;

    int Graph[n][2];
    memset(Graph, 0, sizeof(Graph));
    for (i = 0; i < trustSize; ++i) {
        // Graph[n][0]: ai; the person labeled ai trusts the person labeled bi
        ++Graph[trust[i][0] - 1][0];

        // Graph[n][1]: bi; the person labeled ai trusts the person labeled bi
        ++Graph[trust[i][1] - 1][1];
    }

    for (i = 0; i < n; ++i) {
        // The town judge trusts nobody.
        if (Graph[i][0] != 0) {
            continue;
        }

        // Everybody (except for the town judge) trusts the town judge.
        if (Graph[i][1] != n - 1) {
            continue;
        }

        // There is exactly one person that satisfies properties 1 and 2.
        retVal = i + 1;
        break;
    }

    return retVal;
}