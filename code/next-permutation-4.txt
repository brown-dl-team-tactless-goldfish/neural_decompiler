void sort(int *nums, int numsSize) {
    
    int tmp;
    
    for (int i = 1; i < numsSize; i++) {
        for (int j = i; j > 0; j--) {
            if (nums[j] < nums[j - 1]) {
                tmp = nums[j -1];
                nums[j - 1] = nums[j];
                nums[j] = tmp;
            } else {
                break;
            }
        }
    }
}

// Swap the lowest number to next large number if possible
void nextPermutation(int* nums, int numsSize){

    int tmp;
    int min;
    int min_index;
    
    if (numsSize == 1) {
        return;
    }
    
    for (int j = numsSize -2; j >= 0; j--) {
        
        min_index = -1;
        
        for (int i = j + 1; i < numsSize; i++) {
            if (nums[i] > nums[j]) {
                if (min_index == -1 || min > nums[i]) {
                    min = nums[i];
                    min_index = i;
                }
            }
        }
        if (min_index != -1) {
            tmp = nums[min_index];
            nums[min_index] = nums[j];
            nums[j] = tmp;
            
            sort(nums + j + 1, numsSize - j - 1);
            
            return;
        }
    }
    sort(nums, numsSize);
    
}