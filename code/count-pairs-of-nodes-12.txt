class Solution:
    def countPairs(self, n: int, edges: List[List[int]], queries: List[int]) -> List[int]:
        inci = [0]*n
        mp = defaultdict(int)
        for e in edges:
            e[0] -= 1
            e[1] -= 1
            if e[0] > e[1]:
                e[0], e[1] = e[1], e[0]
            inci[e[0]] += 1
            inci[e[1]] += 1
            mp[(e[0], e[1])] += 1
        
        freq = sorted(inci)
        ans = []
        for v in queries: 
            j = len(freq) - 1
            cnt = 0
            for i in range(len(freq)):
                while j >= 0 and freq[j] + freq[i] > v:
                    j -= 1
                cnt += len(freq) - 1 - j
                if (freq[i] * 2 > v):
                    cnt -= 1
            cnt //= 2
            for k, kv in mp.items():
                if inci[k[0]] + inci[k[1]] > v and inci[k[0]] + inci[k[1]] - kv <= v:
                    cnt -= 1
            ans.append(cnt)
        return ans