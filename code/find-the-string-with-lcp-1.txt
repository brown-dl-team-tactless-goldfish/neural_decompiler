// Rust
impl Solution {
    pub fn find_the_string(lcp: Vec<Vec<i32>>) -> String {
        let n = lcp.len();
        let mut data = vec![' '; n];

        let mut c = 'a';
        for i in 0 .. n {
            if data[i] != ' ' { continue }
            if c > 'z' { return String::new() }
            
            data[i] = c;
            c = (c as u8 + 1) as char;

            for k in i + 1 .. n {
                if lcp[i][k] != 0 { data[k] = data[i]; }
            } 
        }

        for k in 0 .. n {
            for i in (0 .. n - k).rev() {
                let mut a = 0;
                if data[i] == data[i + k] {
                    a = 1;
                    if i + k + 1 < n { a += lcp[i + 1][i + k + 1]; }
                }
                if lcp[i][i + k] != a || lcp[i + k][i] != a { return String::new() }
            }
        }

        data.into_iter().collect()
    }
}