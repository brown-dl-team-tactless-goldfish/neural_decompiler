int cmp(void* a,void* b){
    return ((int**)b)[0][0]-((int**)a)[0][0];
}
char* reorganizeString(char* S) {
    int len=strlen(S);
    int** array=(int**)malloc(26*sizeof(int*));
    for(int i=0;i<26;i++){
        array[i]=(int*)calloc(2,sizeof(int));
        array[i][1]=i;
    }
    int max=0;
    int count=0;
    for(int i=0;i<len;i++){
        if(array[S[i]-'a'][0]==0){
            count++;
        }
        array[S[i]-'a'][0]++;
        if(max<array[S[i]-'a'][0]){
            max=array[S[i]-'a'][0];
        }
    }
    if(max-1>len-max){
        return "";
    }
    qsort(array,26,sizeof(array[0]),cmp);
    int index=0;
    S[index++]=array[0][1]+'a';
    array[0][0]--;
    while(index<len){
        int max=0;
        int temp=0;
        for(int i=0;i<count;i++){
            if(array[i][1]!=S[index-1]-'a'&&max<array[i][0]){
                max=array[i][0];
                temp=i;
            }
        }
        array[temp][0]--;
        S[index++]=array[temp][1]+'a';
    }
    free(array);
    return S;
}