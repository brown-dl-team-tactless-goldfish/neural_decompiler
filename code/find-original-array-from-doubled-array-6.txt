class Solution {
public:
    vector<int> findOriginalArray(vector<int>& changed) {
        int n = changed.size();
        
        if (n & 1) {
            return {};
        }
        
        
        map<int, int> mp;
        
        for (auto c : changed) {
            ++mp[c];
        }
        
        if (mp[0] > 0 && (mp[0] & 1)) {
            return {};
        }
        
        vector<int> ans;
        
        for (int i = 0; i < mp[0] / 2; ++i) {
            ans.push_back(0);
        }
        
        mp[0] = 0;
        
        for (auto [k, v] : mp) {
            if (v == 0) {
                continue;
            }
            
            int target = k * 2;
            
            if (mp.find(target) == mp.end() || mp[target] < v) {
                return {};
            }
            
            for (int i = 0; i < v; ++i) {
                ans.push_back(k);
            }
            
            mp[k] -= v;
            mp[target] -= v;
        }
        
        return ans;
    }
};