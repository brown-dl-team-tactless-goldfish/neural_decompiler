class Solution {
public:
    int minChanges(vector<int>& nums, int k) {
        int n = (int)nums.size();
       
        vector<vector<int>>dp(k,vector<int>(1025,n+1)); 
        vector<vector<int>>freq(k,vector<int>(1025));
        vector<vector<int>>numbers(k);
        for(int i = 0;i < n;i++){
            freq[i%k][nums[i]]++;
            numbers[i%k].push_back(nums[i]);
        }
        int mnm = 0;
        for(int i = 0;i <k;i++){
            int total = 0,temp = (n+1);
            for(int j = i;j < n;j += k) total++;
            for(int j = 0;j < 1024;j++){
                if(i == 0) dp[i][j] = total - freq[i][j];
                else{
                    for(int it:numbers[i]){
                        dp[i][j] = min(dp[i][j] , (dp[i-1][j^it] + total - freq[i][it]));
                    }
                    dp[i][j] = min(dp[i][j],(mnm+total));
                }
                temp = min(temp,dp[i][j]);
            }
            mnm = temp;
        }
        return dp[k-1][0];
    }
};