#define findMaxIdx(arr, pos, size)      \
do {                                     \
    int idx = 0;                          \
                                           \
    for (int i = 0; i < (size); i++)   \
    {                                        \
        if ((arr)[i] > (arr)[idx]) {          \
            idx = i;                           \
        }                                       \
    }                                            \
    (pos) = idx;                                  \
} while (0);             

struct TreeNode* insert(int data, struct TreeNode* left, struct TreeNode* right)
{
    struct TreeNode* root = (struct TreeNode*) malloc(sizeof(struct TreeNode));
    
    root->left = left;
    root->right = right;
    root->val = data;
    return root;
}

struct TreeNode* constructMaximumBinaryTree(int* nums, int numsSize)
{
    if (numsSize <= 0)
        return NULL;
    
    int maxPos;
    struct TreeNode *root, *left, *right; 
    findMaxIdx(nums, maxPos, numsSize);
    
    left = constructMaximumBinaryTree(nums, maxPos);
    right = constructMaximumBinaryTree(nums + maxPos + 1, numsSize - maxPos - 1);
    
    root = insert(nums[maxPos], left, right);
    
    return root;
}