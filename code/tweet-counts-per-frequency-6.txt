public class TweetCounts {    
    private Dictionary<string, List<int>> tweets;
    private Dictionary<string, int> deltas;
    public TweetCounts() {        
        this.tweets = new Dictionary<string, List<int>>();
        this.deltas = new Dictionary<string, int>();
        this.deltas.Add("minute", 60);
        this.deltas.Add("hour", 60 * 60);
        this.deltas.Add("day", 60 * 60 * 24);
    }
    
    public void RecordTweet(string tweetName, int time) {
        if (!tweets.ContainsKey(tweetName))
            tweets.Add(tweetName, new List<int>());
        tweets[tweetName].Add(time);
    }
    
    public IList<int> GetTweetCountsPerFrequency(string freq, string tweetName, int startTime, int endTime) {
        int delta = deltas[freq];
        var ans = new List<int>(new int[1 + (endTime - startTime) / delta]);
        foreach (int time in tweets[tweetName])
            if (time >= startTime && time <= endTime)
                ans[(time - startTime) / delta]++;
        return ans;
    }
}

/**
 * Your TweetCounts object will be instantiated and called as such:
 * TweetCounts obj = new TweetCounts();
 * obj.RecordTweet(tweetName,time);
 * IList<int> param_2 = obj.GetTweetCountsPerFrequency(freq,tweetName,startTime,endTime);
 */