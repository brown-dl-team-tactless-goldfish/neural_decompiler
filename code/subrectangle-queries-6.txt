typedef struct { } SubrectangleQueries;

SubrectangleQueries* subrectangleQueriesCreate(int** rectangle, int rectangleSize, int* rectangleColSize) {
    return (void *)rectangle; // Note : This is for memory optimization. If needed, store this as part of SubrectangleQueries,
	// if data pointers are of "different sizes" and/or have "different representations" in your system as they are implementation-dependent.
}

void subrectangleQueriesUpdateSubrectangle(SubrectangleQueries* obj, int row1, int col1, int row2, int col2, int newValue) {
    for (int j = col1 ; j <= col2 || (j = col1, ++row1 <= row2) ; ((int **)obj)[row1][j++] = newValue); // Refer to the above note in the comment.
}

int subrectangleQueriesGetValue(SubrectangleQueries* obj, int row, int col) {
    return ((int **)obj)[row][col]; // Refer to the above note in the comment.
}

void subrectangleQueriesFree(SubrectangleQueries* obj) {
}