int cmp(const void *x, const void *y){
    return *(const int *)x - *(const int *)y;
}

int** minimumAbsDifference(int* arr, int arrSize, int* returnSize, int** returnColumnSizes){
    int n = arrSize, **m = malloc(sizeof(int *[n])), j = -1, *c = *returnColumnSizes = malloc(sizeof(int [n])), d = INT_MAX, *a = arr, *p;
    qsort(arr, n, sizeof(int), cmp);
    for (int i = -1, t ; ++i + 1 < n ; m[i] = malloc(sizeof(int [2])), d > (t = abs(arr[i] - arr[i + 1])) ? d = t : 0);
    for (int i = -1 ; ++i + 1 < n ; abs(a[i] - a[i + 1]) == d ? p = m[++j], p[0] = a[i], p[1] = a[i + 1], c[j] = 2 : 0);
    return *returnSize = j + 1, m;
}