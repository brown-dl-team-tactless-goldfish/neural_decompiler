/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */

int getMinimumValue(struct TreeNode*,int,int);
int compareLeftRight(struct TreeNode*,int,int,int);

int findSecondMinimumValue(struct TreeNode* root) {
    
    int secondMinval = getMinimumValue(root,root->val,root->val);
    if(secondMinval == root->val)
        return -1;
    else
        return secondMinval;
    
}

int getMinimumValue(struct TreeNode* root,int min_val,int actualRoot){
    
    if(root->left != NULL && root->right != NULL){
        int left = getMinimumValue(root->left,root->val,actualRoot);
        int right = getMinimumValue(root->right,root->val,actualRoot);
        int second_minimum_val = compareLeftRight(root,left,right,actualRoot);
        return second_minimum_val;
    }
    else{
        return root->val;
    }
            
   } 
    
int compareLeftRight(struct TreeNode* root, int leftVal,int rightVal,int actualRootVal){
    
 if(root->val == actualRootVal){
    if(root->val == leftVal)
        return rightVal;
    else if(root->val == rightVal)
        return leftVal;
    else{
        if(leftVal < rightVal)
            return leftVal;
        else
            return rightVal;
    }
 }
    else{
        return root->val;
    }
    
}