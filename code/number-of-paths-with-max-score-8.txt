#define ll long long int
#define mod 1000000007
class Solution {
public:
  
    vector<vector<pair<ll,ll>>>dp;
    pair<ll,ll> dfs(int i,int j,vector<string>&board)
    {
        if(i<0 or j<0 or board[i][j]=='X') return {0,0};
        if(board[i][j]=='E') return {0,1};
        if(dp[i][j].first!=-1) return dp[i][j];
        ll res;
        pair<ll,ll> a = dfs(i-1,j,board);
        pair<ll,ll> b = dfs(i,j-1,board);
        pair<ll,ll> c = dfs(i-1,j-1,board);
        res = max(a.first,max(b.first,c.first));
        ll cnt=0;
        if(res==a.first) cnt=(cnt+a.second)%mod;
        if(res==b.first) cnt =(cnt+b.second)%mod;
        if(res==c.first) cnt =(cnt+c.second)%mod;
        if(board[i][j] != 'S')
            res= (res+(board[i][j]-'0'))%mod;
        dp[i][j]={res,cnt};
        return {res,cnt};
        
    }
    vector<int> pathsWithMaxScore(vector<string>& board) {
        dp.resize(board.size(),vector<pair<ll,ll>>(board.size(),{-1,-1}));
        pair<ll,ll> ans = dfs(board.size()-1,board.size()-1,board);
        if(ans.second==0) return {0,0};
        return {(int)(ans.first%mod),(int)(ans.second%mod)};
    }
};