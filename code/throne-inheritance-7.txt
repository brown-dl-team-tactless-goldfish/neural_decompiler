class ThroneInheritance {
public:
    ThroneInheritance(string kingName) : root(kingName){
    }
    
    void birth(string parentName, string childName) {
        g[parentName].push_back(childName);
    }
    
    void death(string name) {
        dead.insert(name);
    }
    
    vector<string> getInheritanceOrder() {
        vector<string> res;
        dfs(root, res);
        return res;
    }
    
    void dfs(const string& p, vector<string>& order){
        if(!dead.count(p)) order.push_back(p);
        for(const auto& child:g[p]) dfs(child, order);
    }
    
    unordered_set<string> dead;
    unordered_map<string, vector<string>> g;
    string root;
};