class Solution {
public:
    int maxResult(vector<int>& nums, int k) {
        //we will use deque to store the indices
        //we calculate the sum from the last elements 
        //we maintain the deque in descending order of the sum value at the indices
        int len=nums.size();
        deque<int> dq;
        long bestSum=0;
        for(int i=len-1;i>=0;i--)
        {
            bestSum= (dq.empty()) ? 0 : nums[dq.front()]; //get the maximum sum from the i+k elements
            nums[i]+=bestSum;
            
            //maintain the deque in descending order
            while(!dq.empty() && nums[i]>nums[dq.back()])
                dq.pop_back();
            
            dq.push_back(i);
            
            //store the indices from i to i+k range only
            while(!dq.empty() && dq.front()>=i+k)
                dq.pop_front();
            
        }
        return nums[0];
    }
};