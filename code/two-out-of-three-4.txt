/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* twoOutOfThree(int* nums1, int nums1Size, int* nums2, int nums2Size, int* nums3, int nums3Size, int* returnSize){
 int *arr = (int*)malloc(sizeof(int) * 100);
int hash0[101]={0};//all these are to make the number visited, where visited=1
int hash1[101]={0};
int hash2[101]={0};
int size=0;

for(int i=0;i<nums1Size;i++)
{
    if(hash0[nums1[i]]==0)
        hash0[nums1[i]]++;
    
}
for(int j=0;j<nums2Size;j++)
{
    if(hash1[nums2[j]]==0)
        hash1[nums2[j]]++;
    
}
for(int k=0;k<nums3Size;k++)
{
    if(hash2[nums3[k]]==0)
        hash2[nums3[k]]++;
    
}
for(int l=0;l<101;l++)
{
    if((hash0[l]+hash1[l]+hash2[l])>=2)//to check if the sum of visited is greater than or equal to 2 for all the three arrays
    {
        arr[size]=l;
        size++;
    }
    
}
* returnSize  = size;
return arr;

}

