class Solution {
public:
    int n,d;
    long long a[100005],b[100005];
    bool ck(long long t,long long k){
        fill(b,b+n,0);
        long long w=0;
        for (int i=0;i<=d;++i)
            w+=a[i];
        int l=0,r=d;
        for (int i=0;i<n;++i){
            if (r<i+d&&i+d<n){
                ++r;w+=a[r];
            }
            if (l<i-d){
                w-=a[l]+b[l];
                ++l;
            }
            if (w<t){
                k-=t-w;
                b[r]+=t-w;
                w=t;
            }
            if (k<0) return false;
        }
        return true;
    }
    long long maxPower(vector<int>& stations, int r, int k) {
        long long mid,ans=0,l=0,rg=(long long)(1e12);
        n=stations.size();
        d=r;
        for (int i=0;i<n;++i) a[i]=stations[i];
        while (l<=rg){
            mid=(l+rg)/2;
            if (ck(mid,k)){
                l=mid+1;ans=mid;
            }else rg=mid-1;
        }
        return ans;
    }
};