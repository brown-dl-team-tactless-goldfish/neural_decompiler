class Solution {
public:
    void transposeMatrix(vector<vector<int>>& mat)
    {
        for (int r = 0; r < mat.size(); ++r) {
            for (int c = r; c < mat[r].size(); ++c) {
                swap(mat[r][c], mat[c][r]);
            }
        }
    }
    void reverseRows(vector<vector<int>>& mat) {
        for (int r = 0; r < mat.size(); ++r) {
            int cs = 0, ce = mat[0].size() - 1;
            while (cs < ce) {
                swap(mat[r][cs++], mat[r][ce--]);
            }
        }
    }
    bool findRotation(vector<vector<int>>& mat, vector<vector<int>>& target) {
        
        // max rotation by 90 degree
        int maxRotation = 4;
        while(maxRotation > 0) {
            if (mat == target) {
                return true;
            }
            // transposing and reversing the rows rotates clockwise by 90 degree
            transposeMatrix(mat);
            reverseRows(mat);
            --maxRotation;
        }
        return false;
    }
};