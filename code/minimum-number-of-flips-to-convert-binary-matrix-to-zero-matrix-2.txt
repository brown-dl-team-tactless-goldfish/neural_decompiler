public:
    int minFlips(vector<vector<int>>& mat) {
        int row = mat.size(), col = mat[0].size();
        int totalNum = row * col;
        int possibleCases = pow(2, totalNum); // each pos could be 0 or 1
        int res = INT_MAX;
        for (int i = 0; i < possibleCases; ++i) {
            int count = 0;
            auto temp = mat;
            for (int j = 0; j < totalNum; ++j) {
                if (i & (1 << j)) {
                    count++;
                    int r = j / col, c = j % col;
                    temp[r][c] ^= 1;
                    if (r > 0)
                        temp[r - 1][c] ^= 1;
                    if (r < row - 1)
                        temp[r + 1][c] ^= 1;
                    if (c > 0)
                        temp[r][c - 1] ^= 1;
                    if (c < col - 1)
                        temp[r][c + 1] ^= 1;
                }
            }
            
            bool hasOne = false;
            for (auto& t : temp) {
                for (auto& n : t) {
                    if (n == 1) {
                        hasOne = true;
                        break;
                    }
                }
            }
                
            if (!hasOne)
                res = min(res, count);
        }
        return res == INT_MAX? -1 : res;
    }
	```