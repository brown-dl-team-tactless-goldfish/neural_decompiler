struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2) {
    int* arr1 = (int*) calloc(100, sizeof(int));
    int* arr2 = (int*) calloc(100, sizeof(int));
    int* arr3 = (int*) calloc(100, sizeof(int));
    int idx1 = 0, idx2 = 0;
    struct ListNode* tmpl1 = l1;
    struct ListNode* tmpl1_;
    struct ListNode* tmpl2 = l2;
    struct ListNode* tmpl2_;
    while(tmpl1) {
        arr1[idx1++] = tmpl1->val;
        if(tmpl1->next == NULL) tmpl1_ = tmpl1;
        tmpl1 = tmpl1->next;
    }
    while(tmpl2) {
        arr2[idx2++] = tmpl2->val;
        if(tmpl2->next == NULL) tmpl2_ = tmpl2;
        tmpl2 = tmpl2->next;
    }
    tmpl1_->next = l2;
    int carry = 0, idx = (idx1 > idx2) ? idx1 : idx2, finalSize = idx + 1;
    bool pulse1 = false;
    idx1--;
    idx2--;
    while(idx1 >= 0 && idx2 >= 0) {
        int tmp = arr1[idx1--] + arr2[idx2--];
        if(pulse1) {
            arr3[idx] = tmp + carry;
            pulse1 = false;
            carry = 0;
        } else {
            arr3[idx] = tmp;
        }
        if(arr3[idx] >= 10) {
            arr3[idx] -= 10;
            carry = 1;
            pulse1 = true;
        }
        idx--;
    }
    if(idx2 >= 0) {
        while(idx2 >= 0) {
            int tmp = arr2[idx2--] + carry;
            if(pulse1) {
                arr3[idx] = tmp;
                pulse1 = false;
                carry = 0;
            } else {
                arr3[idx] = tmp;
            }
            if(arr3[idx] >= 10) {
                arr3[idx] -= 10;
                carry = 1;
                pulse1 = true;
            }
            idx--;
        }
    }
    if(idx1 >= 0) {
        while(idx1 >= 0) {
            int tmp = arr1[idx1--] + carry;
            if(pulse1) {
                arr3[idx] = tmp;
                pulse1 = false;
                carry = 0;
            } else {
                arr3[idx] = tmp;
            }
            if(arr3[idx] >= 10) {
                arr3[idx] -= 10;
                carry = 1;
                pulse1 = true;
            }
            idx--;
        }
    }
    if(carry) arr3[idx] = carry;
    
    struct ListNode* head = l1;
    for(int i = 0; i < finalSize; i++) {
        if(i == 0 && arr3[i] == 0) continue;
        l1->val = arr3[i];
        if(i == finalSize-1) {
            l1->next = NULL;
        } else {
            l1 = l1->next;
        }
    }
    free(arr1);
    free(arr2);
    free(arr3);
    return head;
}