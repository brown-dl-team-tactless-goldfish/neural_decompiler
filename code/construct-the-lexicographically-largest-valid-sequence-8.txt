class Solution {
public:
    unordered_map<int, bool> memo; 
    
    bool dfs(vector<int>& v, int i, int n){
        if(i == v.size())   return true;    
        if(v[i] > 0) return dfs(v, i+1, n);
        
        for(int j = n; j > 0; j--) {
            if(memo[j]) continue;
            if(j > 1) { 
                if(j + i >= v.size() || v[j + i] > 0) continue;
            }
            memo[j] = true;
            v[i] = j;
            if(j > 1) v[j + i] = j;
            if(dfs(v, i + 1, n)) return true;
            v[i] = 0;
            if(j > 1) v[j + i] = 0;
            memo[j] = false;
        }
        return false;
    }
    
    vector<int> constructDistancedSequence(int n) {
        vector<int> vec((2 * n) - 1, 0);
        dfs(vec, 0, n);
        return vec;
    }
};