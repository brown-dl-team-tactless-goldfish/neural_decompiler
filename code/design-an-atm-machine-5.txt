class ATM {
private: 
    vector<long long> banknotesC{0,0,0,0,0};
public:
    //5 denominations: 20, 50, 100, 200, and 500 dollars
    ATM() {
        
    }
    
    void deposit(vector<int> banknotesCount) {
        for(int i = 0; i < 5; i++) {
            banknotesC[i] = banknotesC[i] + banknotesCount[i];
        }
    }
    
    vector<int> withdraw(int amount) {
        vector<int> result;
        
        unsigned long long int b500 = min(banknotesC[4], (long long)amount/500);
        amount -= 500 * b500;
        
        unsigned long long int b200 = min(banknotesC[3], (long long)amount/200);
        amount -= 200 * b200;
     
        unsigned long long int b100 = min(banknotesC[2], (long long)amount/100);
        amount -= 100 * b100;
        
        unsigned long long int b50 = min(banknotesC[1], (long long)amount/50);
        amount -= 50 * b50;
        
        unsigned long long int b20 = min(banknotesC[0], (long long)amount/20);
        amount -= 20 * b20;
        
        if(amount != 0) result.push_back(-1);
        else {
            result.push_back(b20);
            result.push_back(b50);
            result.push_back(b100);
            result.push_back(b200);
            result.push_back(b500);
            
            for(int i = 0; i < 5; i++) {
				banknotesC[i] -= result[i];
            }
        }
        return result;
    }
};

/**
 * Your ATM object will be instantiated and called as such:
 * ATM* obj = new ATM();
 * obj->deposit(banknotesCount);
 * vector<int> param_2 = obj->withdraw(amount);
 */