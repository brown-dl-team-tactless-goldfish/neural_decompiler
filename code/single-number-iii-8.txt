

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* singleNumber(int* nums, int numsSize, int* returnSize)
{
    int res = 0;
    int pos = 0;
    int *unique = malloc(sizeof(int)*2);
    unique[0]=0;
    unique[1]=0;
    for (int i=0; i<numsSize; i++)
    {
        res = nums[i]^res;
    }

    /* now check which bit is set in the result */
    while((res&0x1) == 0)
    {
        res = res>>1;
        pos++;
    }

    /* got the pos now */
    /* lets create a group */
    for(int i = 0; i<numsSize; i++)
    {
        if((nums[i]>>pos)&0x1)
        {
            unique[0] = nums[i]^unique[0];
        }
        else
        {
            unique[1] = unique[1]^nums[i];
        }
    }
    *returnSize = 2;
    return unique;
    

}