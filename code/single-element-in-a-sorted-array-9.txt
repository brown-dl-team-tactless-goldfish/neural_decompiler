int singleNonDuplicate(int* nums, int numsSize){
    
    if(numsSize==1 || nums[0]!=nums[1] ) return nums[0];
    if(nums[numsSize-1]!=nums[numsSize-2]) return nums[numsSize-1];
    int left=0;
    int right=numsSize-1;
    while(left<=right){
        int mid = left + ((right-left)>>1);
        if(mid>=1 && nums[mid]!=nums[mid-1] && nums[mid]!=nums[mid+1]) return nums[mid];
        if((mid%2==1&& nums[mid]==nums[mid-1]) || (mid%2==0 && nums[mid]==nums[mid+1])){
            left=mid+1;
        }else{
            right=mid-1;
        }
    }
    return nums[left];
}