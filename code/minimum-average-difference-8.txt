int minimumAverageDifference(const int * const nums, const int numsLen){
	if (!( numsLen > 0 )){
		return -1;
	}

	int64_t numsSum = 0;
	for (int i = 0; i < numsLen; i += 1){
		numsSum += nums[i];
	}

	struct {
		int idx;
		int val;
	} minAvgDiff = {
		.idx = 0,
		.val = INT_MAX
	};

	{
		int64_t numsPrefixSum = 0;
		for (int i = 0; i < numsLen; i += 1){
			numsPrefixSum += nums[i];

			const int avgDiff = abs(
				//numsPrefix[0, i]Avg - numsSuffix[i + 1, numsLen)Avg
				( numsPrefixSum / (i + 1) ) - (
					(i + 1 < numsLen)? (	//if numsSuffix[i + 1, numsLen) exists
						(numsSum - numsPrefixSum) / ( numsLen - (i + 1) )
					) : (
						0
					)
				)
			);

			if (avgDiff < minAvgDiff.val){
				minAvgDiff.idx = i;
				minAvgDiff.val = avgDiff;
			}
		}
	}

	return minAvgDiff.idx;
}