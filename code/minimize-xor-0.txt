class Solution {
public:
    int minimizeXor(int num1, int num2) {
        int val = __builtin_popcount(num2) , ans = 0;
        vector<int>bit(32);
        int idx = 0;
        while(num1 > 0){
            bit[idx++] = (num1%2);
            num1 >>= 1;
        }
        idx = -1;
        for(int i = 31; i >=0 ; i--){
            if(bit[i]){
                idx = i;
                break;
            }
        }
        for(int i = idx ; i >= 0 and val > 0; i--){
            if(bit[i]){
                ans |= (1<<i);
                val--;
            }
        }
        for(int i = 0 ; i <= idx and val > 0; i++){
            if(bit[i] == 0){
                ans |= (1<<i);
                val--;
            }
        }
        for(int i = idx+1 ; i < 32 and val > 0; i++){
            ans |= (1<<i);
            val--;
        }
        return ans;
        
    }
};