int binarySearch(int* nums, int numsSize, int m, int mid) {
    int count = 0, tmpSum = 0;
    for (int i = 0; i < numsSize; i++) {
        tmpSum += *(nums + i);

        if (tmpSum > mid) {
            count++;
            tmpSum = *(nums + i);
        }
    }
    return ++count;
}

int splitArray(int* nums, int numsSize, int m){
    int left = 0, mid = 0, right = 0, ans = -1;

    for (int i = 0; i < numsSize; i++) {
        left = left > *(nums + i) ? left : *(nums + i);
        right += *(nums + i);
    }

    while (right >= left) {
        mid = (left + right) / 2;
        if (m >= binarySearch(nums, numsSize, m, mid)) {
            ans = mid;
            right = mid - 1;
        }
        else
            left = mid + 1;
    }
    return ans;
}