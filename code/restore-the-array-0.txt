
int numberOfArrays(string s, int k) {
        int n = s.length();
        vector<int> dp(n, 0);
       
        int k1 = k, len = 0;
        while (k1) len++, k1 /= 10;
        vector<long long> pow10(11);
        pow10[0] = 1;
        for (int i = 1; i < 11; i++) pow10[i] = 10 * pow10[i - 1];
        for (int i = 0; i < n; i++) {
            int l = 0;
            long long val = 0;
            for (int j = i; j >= 0 && i - j < len; j--) {
                char c = s[j];
                val = pow10[l++] * (c - '0') + val; 
                if (c == '0') continue;
                if (val > k) break;
                if (j == 0) dp[i] += 1;
                else dp[i] += dp[j - 1];
                dp[i] %= mod;
            }
        }
        return dp[n - 1];
    }


