class Solution {
public:
    int m = 0;
    int minimumFinishTime(vector<vector<int>>& nums, int k, int n) {
        vector<int> dp(n+1,INT_MAX);
        dp[0] = -k; 
        for(int i = 0; i<nums.size();++i){
            int re = nums[i][0]; int t = re;
            dp[1]=min(dp[1],re);
            for(int j = 2; j<=n;++j){
                m=max(j,m);
                if(k+(long long)nums[i][0]<(long long)re*nums[i][1]) break;
                re*=nums[i][1];
                t+=re;
                dp[j] = min(dp[j],t);
            }
        }
        for(int i = 2; i<n+1;++i){
            for(int j = 0;j<min(i,m);++j){
                dp[i] = min(dp[i],k+dp[j]+dp[i-j]);
            }
        }
        return dp[n];
    }
};