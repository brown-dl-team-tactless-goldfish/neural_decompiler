#define li long int
const int MOD=1e9+7;
class Solution {
public:
    int minWastedSpace(vector<int>& packages, vector<vector<int>>& boxes) {
        li ans=LONG_MAX;
        sort(packages.begin(),packages.end());
        for(auto& supplier:boxes){
            if(*max_element(supplier.begin(),supplier.end())<packages.back())
                continue;
            sort(supplier.begin(),supplier.end());
            li temp=0;
            auto curr=packages.begin();
            for(auto& box:supplier){
                auto next=upper_bound(packages.begin(),packages.end(),box);
                temp+=1L*box*(next-curr);
                curr=next;
                if(curr==packages.end() || temp>ans)
                    break;
            }
            ans=min(ans,temp);
        }
        return ans==LONG_MAX?-1:(ans-accumulate(packages.begin(),packages.end(),0L))%MOD;
    }
};