class Solution {
public:
    int minTrioDegree(int n, vector<vector<int>>& edges) {
        vector<vector<int>> adj(n+1);
        vector<vector<bool>> matrix(n+1, vector<bool>(n+1));
        
        for(auto &it: edges) {
            adj[it[0]].push_back(it[1]);
            adj[it[1]].push_back(it[0]);
            matrix[it[0]][it[1]] = true;
            matrix[it[1]][it[0]] = true;
        }
        
        int ans = INT_MAX;
        for(int u = 1; u <= n; u++) {
            for(int i = 0; i < adj[u].size(); i++) {
                for(int j = i+1; j < adj[u].size(); j++) {
                    int v = adj[u][i];
                    int w = adj[u][j];
                    if(matrix[v][w]) {
                        int cnt = adj[u].size() + adj[v].size() + adj[w].size() - 6;
                        ans = min(cnt, ans);
                    }
                }
            }
        }
        
        return ans == INT_MAX ? -1 : ans;
    }
};
