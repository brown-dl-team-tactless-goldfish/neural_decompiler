        int xx=0;
        for(int p=0;p<n;p++)
        { for(int q=0;q<m;q++)
                {
                   if(a[p][q]==1)
                   {
                       xx+=120;
                       if(p+1<n && a[p+1][q]!=0)
                          xx-=30;
                       if(p-1>=0 && a[p-1][q]!=0)
                          xx-=30;


                        if(q+1<m && a[p][q+1]!=0)
                          xx-=30;
                       if(q-1>=0 && a[p][q-1]!=0)
                          xx-=30;
                    }


                    if(a[p][q]==2)
                   {
                       xx+=40;
                       if(p+1<n && a[p+1][q]!=0)
                          xx+=20;
                       if(p-1>=0 && a[p-1][q]!=0)
                          xx+=20;


                        if(q+1<m && a[p][q+1]!=0)
                          xx+=20;
                       if(q-1>=0 && a[p][q-1]!=0)
                          xx+=20;
                    }

          }
        }


   ans=max(ans,xx);
      return;




    }
    if(i>=n)
        return;

    int ni=i;
    int nj=j;

    if(j==m-1)
    {
        nj=0;
        ni=i+1;
    }
   else
   {
       ni=i;
       nj=j+1;
   }

    if(in>0)
    {a[i][j]=1;
    cou(n,m,in-1,ex,ni,nj);
     a[i][j]=-1;
    //in++;
    }

     if(ex>0)
    {a[i][j]=2;
    cou(n,m,in,ex-1,ni,nj);
    a[i][j]=-1;
    //ex++;
    }


    a[i][j]=0;
    cou(n,m,in,ex,ni,nj);
    a[i][j]=-1;





}
int getMaxGridHappiness(int n, int m, int in, int ex)
{
    ans=0;
    for(int i=0;i<10;i++)
        for(int j=0;j<10;j++)
             a[i][j]=-1;



    cou(n,m,in,ex,0,0);

    return ans;
}