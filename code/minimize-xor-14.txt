class Solution {
public:
    int minimizeXor(int num1, int num2) {
        
		//make the smallest changes possible to num1, so that it has the same number of bits as num2
		//change smallest value bits first, so that XOR (differences with num1) is as little as possible
		
        bitset<32> a(num1);
        bitset<32> b(num2);
        if(a.count() == b.count()) return num1;
        else if(a.count() > b.count()){ //if num1 has more bits, change some bits in num1 from 1 to 0, smallest first
            int diff = a.count() - b.count();
            for(int i = 0; i <= 30; i++){
                if(a.test(i)){
                    a.flip(i);
                    diff--;
                }
                if(diff == 0) break;
            }
        }
        else if(a.count() < b.count()){ //if num1 has fewer bits, change some bits in num1 from 0 to 1, smallest first
            int diff = b.count() - a.count();
            for(int i = 0; i <= 30; i++){  
                if(!a.test(i)){
                    a.flip(i);
                    diff--;
                }
                if(diff == 0) break;
            }
        }
        return (int)(a.to_ulong());
    }
};