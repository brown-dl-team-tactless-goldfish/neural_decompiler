class Solution {
public:
    vector<int> fallingSquares(vector<pair<int, int>>& positions) {
        map<int, int> heights;
        heights[INT_MIN] = heights[INT_MAX] = 0;
        
        int maxh = 0;
        vector<int> res;
        for (auto p : positions) {
            int left = p.first, side = p.second, right = left + side;
            auto lt = --heights.upper_bound(left), rt = heights.lower_bound(right);
            int lh = 0, rh = 0;
            for (auto it = lt; it != rt; ) {
                rh = it->second;
                lh = max(lh, it->second);
                if (it == lt) it ++;
                else it = heights.erase(it);
            }
            lh += side;
            heights[left] = lh;
            heights[right] = rh;
            maxh = max(maxh, lh);
            res.push_back(maxh);
        }
        return res; 
    }
};