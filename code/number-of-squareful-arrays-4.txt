public class Solution 
{
    public int NumSquarefulPerms(int[] arr, int p = 0)
    {
        if (p == arr.Length) return 1;
        var result = 0;
        var visited = new HashSet<int>();
        for (var i = p; i < arr.Length; i++) 
        {
            if (p == 0 || IsSquare(arr[i] + arr[p - 1])) 
            {
                if(!visited.Contains(arr[i]))
                {
                    visited.Add(arr[i]);
                    Swap(arr, i, p);
                    result += NumSquarefulPerms(arr, p + 1);
                    Swap(arr, i, p);
                }
            }
        }
        
        return result;
    }
    
    private bool IsSquare(int x)
    {
        int sqrt = (int) Math.Sqrt(x);
        return sqrt * sqrt == x;
    }

    private void Swap(int[] arr, int i, int j)
    {
        var temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }
}