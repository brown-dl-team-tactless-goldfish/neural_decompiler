class Solution {
public:
    int findValidSplit(vector<int>& nums) {
        int n = nums.size();
        vector<int> last(n,-1);
        map<int,int> mp;
        for(int i=n-1;i>=0;i--){
            int ma = i;
            for(int j=2;j*j<=nums[i];j++){
                if(nums[i]%j==0){
                    while(nums[i]%j==0) nums[i]/=j;
                    if(mp.find(j)!=mp.end()) ma = max(ma,mp[j]);
                    else mp[j] = i;
                }
            }    
            if(nums[i]>1){
                if(mp.find(nums[i])!=mp.end()) ma = max(ma,mp[nums[i]]);
                else mp[nums[i]] = i;
            }
            last[i] = ma;
        }
        int prev = last[0];
        if(prev==n-1) return -1;
        for(int i=1;i<n;i++){
            if(last[i]==n-1) break;    
            prev = max(prev,last[i]);
            if(prev==i) return prev;
        }
        return -1;
    }
};