int comp(const void*a,const void*b)
{
    return *(int*)a-*(int*)b;
}
bool hasGroupsSizeX(int* deck, int deckSize) {
    int map[10000]={0};
    for(int i=0;i<deckSize;i++){
        map[deck[i]]++;
    }
    int array[10000]={0};
    int count=0;
    for(int i=0;i<10000;i++){
        if(map[i]!=0){
            if(map[i]==1) return false;
            array[count++]=map[i];
        }
    }
    qsort(array,count,sizeof(int),comp);
    int *tamp=(int*)malloc((array[0]+1)*sizeof(int));
    for(int i=2;i<=array[0];i++){
        if(array[0]%i==0){
            tamp[i]++;
        }
    }
    for(int i=1;i<count;i++){
        int flag=0;
        for(int j=2;j<=array[0];j++){
            if(tamp[j]!=0){
               if(array[i]%j!=0){
                 tamp[j]=0;
               }else{
                  flag=1; 
               }
            }
        }
        if(flag==0){
            return false;
        }
    }
    return true;
}