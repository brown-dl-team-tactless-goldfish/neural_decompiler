    static int equalPairs(const vector<vector<int>>& grid) noexcept {
        // NB. This approach is not 100% correct, as it doesn't handle hash collisions.
        const size_t n = size(grid);
        unordered_map<size_t, int> m;
        // Add each row vector to the map.
        for (const vector<int>& row : grid) {
            size_t hash = 0;
            for (int a : row) hash_combine(hash, a);
            ++m[hash];
        }
        int ans = 0;
        // Compute the hash for the column vector.
        for (size_t c = 0; c < n; ++c) {
            size_t hash = 0;
            for (size_t r = 0; r < n; ++r)
                hash_combine(hash, grid[r][c]);
            
            auto it = m.find(hash);
            if (it != end(m)) ans += it->second;
        }
        return ans;
    }