class Solution {
public:
    #define ll long long int
    int minimumFinishTime(vector<vector<int>>& tires, int changeTime, int numLaps) 
    {
        vector<ll>mn(20,INT_MAX);   //Find minimum time in which continuous(ie with same tire) i laps can be completed
        for(auto &v:tires)
        {
            ll f=v[0],r=v[1],lap=1,t=f,sum=0;
            while(sum<INT_MAX && lap<20)
            {
                sum+=t;
                mn[lap]=min(mn[lap],sum);
                t=t*r;
                lap++;
            }
        }
        vector<ll>dp(numLaps+1,INT_MAX);
        dp[0]=0;
        for(int i=1;i<=numLaps;i++)
        {
            for(int j=1;j<20;j++)
            {
                if(j<=i)
                    dp[i]=min(dp[i],mn[j]+changeTime+dp[i-j]);
            }
        }
        return dp[numLaps]-changeTime;
    }
};