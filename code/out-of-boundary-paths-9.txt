class Solution {
	vector<vector<int>> dir = {{0, -1}, {0, 1}, { -1, 0}, {1, 0}};
	int dp[51][51][51];
    const int mod = 1e9 +7;
    
    int f(int m, int n, int maxMove, int i, int j){
        if (i < 0 || j < 0 || i >= m || j >= n) return 1;
		if (maxMove == 0) return 0;
        if(dp[i][j][maxMove] != -1) return dp[i][j][maxMove];
		int ans = 0;
		for (auto &e : dir) {
			int r = e[0], c = e[1];
				ans = (ans + f(m, n, maxMove - 1, i + r, j + c))% mod;
		}
        dp[i][j][maxMove] = ans;
        dp[i][j][maxMove] %= mod;
		return dp[i][j][maxMove];
    }
public:
	int findPaths(int m, int n, int maxMove, int i, int j) {
        memset(dp, -1, sizeof(dp));
        return f(m, n, maxMove, i, j);
	}
};
