bool buddyStrings(char * A, char * B){
    int i = 0;
    int val1 = 1, val2 = 0;
    int val3 = 0, val4 = 1;
    bool allSame = true;
    char first = A[0];
    bool diff = false;
    int lengthA = 0, lengthB = 0;
    int *charMap = (int *) malloc(sizeof(int) * 300);
    bool repeating = false;
    if(A[i] == '\0' && B[i] == '\0')
    {
        return false;
    }
    
    while(A[i] != '\0' && B[i] != '\0')
    {   
        if(charMap[(int)A[i]] == 1)
        {
            repeating = true;
        }
        charMap[(int)A[i]] = 1;
        
        if(first != A[i])
        {
            allSame = false;
        }
        if(A[i] != B[i])
        {
            if(!diff)
            {
                val1 = A[i];
                val3 = B[i];
            }
            diff = true;
            if(diff)
            {
                val2 = B[i];
                val4 = A[i];
            }
            
        }
        i++;
    }
    if(!diff && repeating)
    {
        return true;
    }
    
    if(A[i] != '\0' && B[i] == '\0')
    {
        return false;
    }
    
    if(A[i] == '\0' && B[i] != '\0')
    {
        return false;
    }
    
    
    if(allSame && !diff)
    {
        return true;
    }
    

    return val1 == val2 && val3 == val4;
}