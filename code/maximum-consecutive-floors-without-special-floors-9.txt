class Solution {
public:
    int maxConsecutive(int bottom, int top, vector<int>& special) {
        set<int> st(special.begin(), special.end());
        if (st.find(bottom) != st.end()) {
            st.insert(bottom - 1);
            bottom -= 1;
        } else {
            st.insert(bottom);
        }
        
        if (st.find(top) != st.end()) {
            st.insert(top + 1);
            top += 1;
        } else {
            st.insert(top);
        }
        
        int ans = 0;
        for (auto it = next(begin(st)); it != st.end(); ++it) {
            auto cur = prev(it);
            
            if (*cur + 1 < *it) {
                if (*it - *cur > ans) {
                    if (*cur != bottom && *it != top) {
                        ans = *it - *cur - 1;
                    } else {
                        ans = *it - *cur;
                    }
                }
            }
        }
        
        return ans;
    }
};