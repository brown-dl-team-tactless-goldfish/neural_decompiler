bool* camelMatch(char** queries, int queriesSize, char* pattern, int* returnSize) {
    if(queries==NULL)
    {
        * returnSize = 0;
        return NULL;
    }
    * returnSize = queriesSize;
    bool *ret = malloc(queriesSize*sizeof(bool));
    for(int i=0;i<queriesSize;i++)
        ret[i]=false;
    int Plen = strlen(pattern);
    int Pidx = 0;
    int queriesidx = 0;
    for(int i=0;i<queriesSize;i++)
    {
        Pidx = 0;
        queriesidx = 0;
        while(queries[i][queriesidx]!=NULL)
        {
            if(Pidx==Plen)
            {
                if(isupper(queries[i][queriesidx]))
                {
                    break;
                }
            }
            if(isupper(pattern[Pidx]))
            {
                if(isupper(queries[i][queriesidx]) && queries[i][queriesidx]!=pattern[Pidx])
                   break;
                if(queries[i][queriesidx]==pattern[Pidx])
                {
                    Pidx++;
                }
            }
            else
            {
                if(queries[i][queriesidx]==pattern[Pidx])
                {
                    Pidx++;
                }
                // else if(isupper(pattern[Pidx-1]))
                // {
                //     break;
                // }    
            }
            queriesidx++;
        }
        if(Pidx==Plen && queries[i][queriesidx]==NULL)
            ret[i]=true;
    }
    return ret;
}