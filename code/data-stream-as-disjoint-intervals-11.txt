class SummaryRanges {
private:
    map<int, int> ranges;
public:
    /** Initialize your data structure here. */
    SummaryRanges() {
        
    }
    
    void addNum(int val) {
        auto it = ranges.lower_bound(val);
        int minT = val, maxT = val;
        if (it != ranges.end() && it->first == val)
            return;
            
        if (it != ranges.end() && it->first == val + 1) {
            maxT = max(maxT, it->second);
            it = ranges.erase(it);
        }
        
        if (it != ranges.begin()) {
            --it;
            if (it->second >= val)
                return;
            if (it->second + 1 == val) {
                minT = min(minT, it->first);
                it = ranges.erase(it);
            }
        }
        
        ranges[minT] = maxT;
    }
    
    vector<vector<int>> getIntervals() {
        vector<vector<int>> ans;
        for (auto v : ranges) {
            ans.push_back(vector<int>{v.first, v.second});
        }
        return ans;
    }
};

/**
 * Your SummaryRanges object will be instantiated and called as such:
 * SummaryRanges* obj = new SummaryRanges();
 * obj->addNum(val);
 * vector<vector<int>> param_2 = obj->getIntervals();
 */