class Solution {
public:
    vector<int> v;
    void dfs(long low, long high, string s, char initiator){
        if(s!=""){
            if(stol(s)>=low && stol(s)<=high){
                v.push_back((int)stol(s));
            }
            if(stol(s)>high){
                return;
            }
            if(s.back()=='9'){
                return;
            }
            char c = s.back();
            c++;
            dfs(low, high, s+c, initiator);
        }
        else{
            dfs(low, high, s+ initiator, initiator);
        }
        
        
    }
    vector<int> sequentialDigits(int low, int high) {
        string s="";
        for(char i='1';i<='9';i++)
            dfs(low, high, "", i);
        sort(v.begin(),v.end());
        return v;
    }
};