class Solution {
public:
    string ans;
    
    void helper(string &s, int l, int r)
    {
        if(r<=l) return;
        unordered_map<char,int> mp;
        for(int i=l;i<=r;i++)
            mp[s[i]] = i;
        
        int temp = l;
        int flag = 0;
        string str = "";
        for(int i=l;i<=r;i++)
        {
            char c = s[i];
            str += c;
            if(!mp.count(c+32) && !mp.count(c-32))
            {
                helper(s,temp,i-1);
                temp = i+1;
                flag = 1;
            }
        }
        
        if(flag && temp<r) helper(s,temp,r);
        if(!flag && r-l+1 > ans.length())
            ans = str;
    }
    
    string longestNiceSubstring(string s) {
        ans = "";
        helper(s,0,s.length()-1);
        return ans;
    }
};