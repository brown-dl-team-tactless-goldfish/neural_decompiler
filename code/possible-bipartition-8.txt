class Solution {
public :
    vector<vector<int>>all;
    int col[(int)2005];
    bool possibleBipartition(int N, vector<vector<int>>& dislikes) {
        all.resize( N + 1 );
        for ( int i = 0 ; i < dislikes.size() ; i ++ )
        {
            all[dislikes[i][0]].push_back(dislikes[i][1]);
            all[dislikes[i][1]].push_back(dislikes[i][0]);
        }
        bool f = 1 ; 
        for( int i = 1 ; i <= N ; i ++ )
        {
            if ( col[i] == 0 )
            {
                f &= solve( i , 1 ) ; 
            }
        }
        return f ;
    }
    bool solve( int n , int c )
    {
        if( col[n] != 0  ) return col[n] == c ;
        if( col[n] == 0 ) col[n] = c ;
        bool f = 1 ; 
        for( int i = 0 ; i < all[n].size() ; i ++ )
        {
               f &= solve(all[n][i] , -c ) ;
        }
        return f ;
    }
};