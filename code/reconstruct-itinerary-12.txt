 class Solution {
public:
    vector<string> findItinerary(vector<vector<string>>& tickets) {
        unordered_map<string, map<string, int>> adj;
        vector<string> path;
        for (auto & e: tickets)
        {
            adj[e[0]][e[1]] ++;
        }
        int n = tickets.size() + 1;
        function<void(const string &)> walk = [&](const string & airport)
        {
            if (path.size() == n) 
            {
                return ;
            }
            for (auto & next : adj[airport])
            {
                if (next.second == 0) {continue;}
                next.second --;
                path.push_back(next.first);
                walk(next.first);
                if (path.size() == n)  {return;}
                path.pop_back();
                next.second ++;
            }
        };
        path.push_back("JFK");
        walk("JFK");

        return path;
    }
};