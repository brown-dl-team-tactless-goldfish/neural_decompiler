Once I figure out how to handle the carry, things become much easier.
		 1  1
	+    0  1
    =    1  0
        -1  0
	=    0  0
	
	     0  1
	+    0  1
    =   -1  0
	= 1  1  0
		
public class Solution {
    public int[] AddNegabinary(int[] arr1, int[] arr2) {
        IList<int> list = new List<int>();
        int l1 = arr1.Length - 1;
        int l2 = arr2.Length - 1;
        int carry = 0;
        while(l1 >= 0 || l2 >= 0 || carry != 0)
        {
            carry += l1 >= 0 ? arr1[l1--] : 0;
            carry += l2 >= 0 ? arr2[l2--] : 0;
            list.Insert(0, (carry+2)%2);
            if(carry == -1)
                carry = 1;
            else if(carry > 1)
                carry = -1;
            else
                carry = 0;
        }
        
        while(list.Count > 1 && list[0] == 0)
            list.RemoveAt(0);
        
        return list.ToArray();
    }
}