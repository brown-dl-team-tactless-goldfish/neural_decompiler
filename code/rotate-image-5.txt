void rotation(unsigned int **pS,
            unsigned int **pD,
            unsigned int row,
            unsigned int col)
{
    unsigned int r, c;
    for (r = 0; r < row; r++)
    {
        for (c = 0; c < col; c++)
        {
            pD[ c ][ row - r -1] = pS[ r ][ c];
        }
    }
}


void rotate(int** matrix, int matrixSize, int* matrixColSize){

int **pDestination;
pDestination = (int**)malloc(matrixSize*sizeof(int*));
for(int i=0;i<matrixSize;i++)
{
    pDestination[i]=(int*)malloc(matrixSize*sizeof(int));
}

int r,c;
int row = matrixSize;
for (r = 0; r < row; r++)
{
    for (c = 0; c < row; c++)
    {
        pDestination[ c ][r] = matrix[ c][ r];
    }
}

rotation(pDestination,matrix,matrixSize,matrixSize);
}