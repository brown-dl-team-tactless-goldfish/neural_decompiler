    Random rnd = new Random();
    int[][] rects;    
    int[] range;
    int totalArea = 0; 
    
    public Solution(int[][] rects) {
        this.rects = rects;
        int area;
        range = new int[rects.Length];
        
        for(int i=0; i<rects.Length; i++)
        {
            area = Math.Abs((rects[i][2]-rects[i][0]+1) * (rects[i][3]-rects[i][1]+1)); 
            totalArea += area;
            range[i] = totalArea;
        }
    }
 
    private int FindRect(int point)
    {
        int i=0;
        int j= range.Length-1;
        int mid;
        int result = j;
        
        while (i<=j)
        {
            mid = i+(j-i)/2;
            if (range[mid] == point) { return mid; }
            
            if (range[mid] < point) { i= mid+1; }
            else { result = mid; j = mid-1; }
        }
        
        return result;
    } 
    
    public int[] Pick() {
       
        int point = rnd.Next(totalArea+1); 
        
        int[] rec = rects[FindRect(point)];
        
        int length = rec[2]-rec[0]+1;
        int height = rec[3]-rec[1]+1;
        
        int x = rec[0] + rnd.Next(length);
        int y = rec[1] + rnd.Next(height);
        
        return new int[] { x, y }; 
    }