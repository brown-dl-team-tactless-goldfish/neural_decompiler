class Solution {
public:
    int longestCycle(vector<int>& edges) {
        int n = edges.size();
        vector<int> visited(n,-1);  // No resion to visit node more than once
        int maxi = -1;
        int c = 0;
        for(int i = 0; i<n; i++)
        {
            int j = i;
            int starting_c = c;
            while (edges[j] != -1 && visited[j] == -1 )
            {
                visited[j] = c++;  // save entry counter
                j =  edges[j];
            }
            if (edges[j] != -1 && visited[j] >= starting_c)  // Completed loop
            {
                if (c-visited[j] > maxi)
                    maxi = c-visited[j];  // save loop diff
            }
        }
        return maxi;
        
    }
};

/*
[3,3,4,2,3]
[-1,4,-1,2,0,4]

*/