public class Solution 
{
    Dictionary<TreeNode, int> dict0  = new Dictionary<TreeNode, int>();
    Dictionary<TreeNode, int> dict1  = new Dictionary<TreeNode, int>();
    public int LongestZigZag(TreeNode root) 
    {
        return root == null ? 0 : new int[] { LongestZigZagRoot(root, 0), 
                                              LongestZigZagRoot(root, 1),
                                              LongestZigZag(root.left),
                                              LongestZigZag(root.right)
                                             }.Max();
    }
    
    private int LongestZigZagRoot(TreeNode root, int dir)
    {
        if(root == null) return 0;
        if(dir == 0)
        {
            if(root.left == null) return 0;
            if(!dict1.ContainsKey(root.left))
               dict1[root.left] =  LongestZigZagRoot(root.left, 1);
            return 1 + dict1[root.left];
        }
        
        if(root.right == null) return 0;
        if(!dict0.ContainsKey(root.right))
               dict0[root.right] =  LongestZigZagRoot(root.right, 0);
        return 1 +dict0[root.right];
    }
}