    int numOfArrays(int n, int m, int k) {
        // dp[n][m][k] = dp[n-1][m][k]* m   // max = m, v[n] <= m
        //             + sum dp[n-1][u][k-1]; // u < m, v[n] = m
        const long long mod = 1e9+7;
        auto vdp = vector(n+1, vector(m+1, vector(k+1,0LL))), vsum = vdp;
        vdp[0][0][0] = 1;
        for(int j=0;j<=m;j++) vsum[0][j][0] = 1;
        for(int i=1;i<=n;i++){
            for(int j=1;j<=m;j++){
                for(int u=1;u<=k;u++){
                    vdp[i][j][u] = (vdp[i-1][j][u]*j + vsum[i-1][j-1][u-1]) % mod;
                    vsum[i][j][u] = (vsum[i][j-1][u] + vdp[i][j][u]) % mod;
                }
            }
        }
        return vsum[n][m][k];
    }