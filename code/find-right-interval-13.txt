vector<int> findRightInterval( vector<vector<int>>& intervals ) {
        map< int, int> hash; // start-point to index map
        for( int i=0; i < intervals.size(); i++ ) {
            hash[ intervals[i][0] ] = i;
        }
        
        vector<int> result;
        map<int, int>::iterator it;
        for( int i=0; i < intervals.size(); i++ ) {
            it = hash.lower_bound( intervals[i][1] );
            if( it == hash.end() ) result.push_back( -1 );
            else result.push_back( (*it).second );
        }
        return result;
    }