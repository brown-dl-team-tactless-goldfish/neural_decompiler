
int waysToMakeFair(int* nums, int numsSize){
    int ans = 0;
    if(numsSize==1)
        return 1;
    int *left = calloc(numsSize,sizeof(int));
    int *right = calloc(numsSize,sizeof(int));
    left[0] = nums[0];
    for(int i=1;i<numsSize;i++){
        left[i] += left[i-1];
        left[i] += (i%2==1)?(-1)*nums[i]:nums[i];
    }
    right[numsSize-1] = ((numsSize-1)%2==0)?nums[numsSize-1]:(-1)*nums[numsSize-1];
    for(int i=numsSize-2;i>=0;i--)
    {
        right[i] += right[i+1];
        right[i] += (i%2==1)?(-1)*nums[i]:nums[i];
    }
    for(int i=0;i<numsSize;i++)
    {
        if(i==0 && right[i+1]==0)
            ans++;
        else if(i==numsSize-1 && left[i-1]==0)
            ans++;
        else if(i>0 && i<numsSize-1&&left[i-1]-right[i+1]==0)
            ans++;
    }
    return ans;
    // for(int i=0;i<numsSize;i++)
    // {
    //     int left = 0;
    //     for(int j=1;i-j>=0;j++)
    //         if(j%2)
    //             left+=nums[i-j];
    //         else
    //             left-=nums[i-j];
    //     int right = 0;
    //     for(int k=1;i+k<numsSize;k++)
    //         if(k%2)
    //             left-=nums[i+k];
    //         else
    //             left+=nums[i+k];
    //     if(left+right==0)
    //         ans++;
    // }
}