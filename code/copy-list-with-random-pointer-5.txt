if (!head)
    return NULL;

struct RandomListNode *list[10000];
int list_index = 0;

/* Create Simple Next copy  and store next pointer*/
while (curr) {
   node = list_node(curr->label);
    if (new_head == NULL) {
        new_head = node;
    } else {
        new_curr->next = node;
    }
    new_curr = node;
    curr = curr->next;
    list[list_index++] = curr;
}

/* Change next and randon */
curr = head;
new_curr = new_head;
while (curr) {
     next = curr->next;
     curr->next = new_curr;
     new_curr->random = curr;
     new_curr = new_curr->next;
     curr = next;
}

/* Change random pointers */
curr = head;
new_curr = new_head;
while (curr) {
    curr->next->random = ((curr->random == NULL) ? NULL:curr->random->next);
    curr = ((curr->next->next == NULL)? NULL:curr->next->next->random);
}

/* Restore list next pointers */
list_index = 0;
curr = head;
while (curr) {
    curr->next = list[list_index++];
    curr = curr->next;
}

return new_head;