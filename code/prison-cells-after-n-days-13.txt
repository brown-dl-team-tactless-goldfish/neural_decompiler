public class Solution {
    public int[] PrisonAfterNDays(int[] cells, int n) {
        
        // store all the seen/visited states 
        HashSet<string> seen = new HashSet<string>();
        int cnt = 0;
        
        int[] nextState = new int[cells.Length];
        while(n > 0)
        {
            nextState = getNextState(cells);
            string state = string.Join("", nextState);
            
            if(seen.Contains(state))
                break;
            
            seen.Add(state);
            
            // only update cells when its state was not seen before
            // the state will be the starting state for the remaining n%k days
            Array.Copy(nextState, cells, nextState.Length);
            
            // count the actaul no. of days that have no duplicated states
            cnt++;
            n--;
        }
        
		// update the state for the remaining n%k days
        n %= cnt;
        while(n > 0)
        {
            cells = getNextState(cells);
            n--;
        }
        
        return cells;
    }
    
    private int[] getNextState(int[] cells)
    {
        int[] res = new int[cells.Length];
        for(int i = 1; i < cells.Length - 1; i++)
        {
            if(cells[i-1] == cells[i+1])
                res[i] = 1;
        }
        return res;
    }
}