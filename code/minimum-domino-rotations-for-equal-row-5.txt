static int rotateCount (int *a, int *b, int size, int target) {
    int i, cnt = 0;
    
    for (i = 0; i < size; i++) {
        if (a[i] == target) continue;
        if (b[i] == target) cnt++;
        else return size;
    }
    
    return (cnt * 2 < size) ? cnt : size - cnt;
}

int minDominoRotations (int* A, int ASize, int* B, int BSize){
	int i, cnt, ret = ASize;

    cnt = rotateCount(A, B, ASize, A[0]);
	if (ret > cnt) ret = cnt;
    cnt = rotateCount(B, A, ASize, B[0]);
	if (ret > cnt) ret = cnt;

	if (A[0] != B[0]) {
        cnt = rotateCount(B, A, ASize, A[0]);
	    if (ret > cnt) ret = cnt;
        cnt = rotateCount(A, B, ASize, B[0]);
	    if (ret > cnt) ret = cnt;
    }

	return ret < ASize ? ret : -1;
}