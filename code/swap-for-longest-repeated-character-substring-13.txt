class Solution {
public:
    int maxRepOpt1(string s) {
        int ret = 1;
        int n = s.size();
        map<char, int> mp;
        for(int i = 0; i < n; i++) {
            char c = s[i];
            mp[c]++;
            int bad = 0;
            int cnt = 1;
            int j;
            for(j = i + 1; j < n; j++) {
                if(s[j] != c) bad++;
                else cnt++;
                
                if(bad == 2) break;
            }
            if(mp[c] - 1 > 0) {
                cnt++;
            }else {
                for(; j < n; j++) {
                    if(s[j] == c) {
                        cnt++;
                        break;
                    }
                }
            }
            ret = max(ret, cnt);
        }
        return ret;
    }
};