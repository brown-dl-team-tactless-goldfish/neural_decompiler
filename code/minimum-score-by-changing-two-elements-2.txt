class Solution {
public:
    int minimizeSum(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        // if(nums.size()==3){return 0;}
        // vector<int>v=nums;
        // int mini=*min_element(nums.begin(), nums.end()), k=2;
        // while(k--){
        //     int maxi=*max_element(nums.begin(), nums.end());
        //     for(int i=0; i<nums.size(); i++){
        //         if(nums[i]==maxi){nums[i]=mini;}
        //     }
        // }
        // int n1=*min_element(nums.begin(), nums.end()), n2=*max_element(nums.begin(), nums.end());
        // int k1=2, maxi1=*max_element(v.begin(), v.end());
        // cout<<maxi1<<endl;
        // while(k1--){
        //     int mini1=*min_element(v.begin(), v.end());
        //     for(int i=0; i<v.size(); i++){
        //         if(v[i]==mini1){v[i]=maxi1;}
        //     }
        // }
        // int nn1=*min_element(v.begin(), v.end()), nn2=*max_element(v.begin(), v.end());
        // cout<<nn2-nn1<<" "<<n2-n1<<endl;
        return min({nums[nums.size()-1]-nums[0], nums[nums.size()-2]-nums[1], nums[nums.size()-1]-nums[2], nums[nums.size()-3]-nums[0]});
    }
};