class Solution {
public:
    int numDecodings(string s) {
        int n = s.length();
        if(n == 0){
            return 0;
        }
        if(n == 1){
            if(s[0] == '0'){
                return 0;
            }else{
                if(s[0] == '*'){
                    return 9;
                }else{
                    return 1;
                }
            }
        }
        int i;
        int m = 1000000007;
        int dp[n+1];
        dp[0] = 1;
        dp[1] = (s[0] != '0')? 1 : 0;
        if(s[0] == '*'){dp[1] += 8;}
        for(i = 2; i <= n; ++i ){
            dp[i] = (s[i-1] != '0') ? dp[i-1]%m : 0;
            if(s[i-1] == '*'){
                dp[i] = (dp[i])%m + (8*dp[i-1])%m;
                dp[i] %= m;
                if(s[i-2] == '*'){
                    dp[i] += (15*dp[i-2])%m;
                }else{
                    int c = s[i-2]-'0';
                    if(c == 1){
                        dp[i] += (9*dp[i-2])%m;
                    }
                    if(c == 2){
                        dp[i] += (6*dp[i-2])%m;
                    }
                }
                dp[i] %= m;
            }else{
                int c = s[i-1]-'0';
                if(s[i-2] == '*'){
                    if(c <= 6){
                        dp[i] += (2*dp[i-2])%m;
                    }else{
                        dp[i] += dp[i-2]%m;
                    }
                }else{
                    int x = (s[i-2] - '0')*10 + (s[i-1]-'0');
                    if(x <= 26 && x >= 10 ){
                        dp[i] += (dp[i-2])%m;
                    }
                }
                dp[i] %= m;
            }
            
            
        }
        return dp[n];
    }
};