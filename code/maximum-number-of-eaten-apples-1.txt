class Solution {
public:
    int eatenApples(vector<int>& apples, vector<int>& days) {
        priority_queue<pair<int,int>> q; 
        int ret = 0;
        int i = 0; 
        for(i = 0;i<apples.size();i++) {
            if(apples[i]!=0) {
                q.push({-(i+days[i]),apples[i]});
            }
            while(q.size()&&(-q.top().first<=i)){
                q.pop();
            }
            if(q.size()) {
                auto x = q.top();
                q.pop();
                x.second--;
                ret++;
                if(x.second> 0) {
                    q.push(x);
                }
            }
        }
        while(q.size()) {
            while(q.size()&&(-q.top().first<=i)) {
                q.pop();
            }
            if(q.empty()) {
                continue; 
            }
            auto x = q.top();
            q.pop();
            int a = -x.first - i; 
            int t = min(a,x.second);
            ret += t; 
            i += t; 
        }
        return ret; 
    }
};