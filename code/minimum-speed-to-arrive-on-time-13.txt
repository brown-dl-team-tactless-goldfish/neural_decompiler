public:
    int minSpeedOnTime(vector<int>& dist, double hour) {
        int left = 1;
        int right = 1e8;

        while (left < right) {
            int middle = (left + right) / 2;
            if (arriveOnTime(dist, hour, middle))
                right = middle;
            else left = middle + 1;
        }

        return right == 1e8 ? -1 : right;
    }
    
private: 
    bool arriveOnTime(vector<int> dist, double hour, int speed) {
        int time = 0;
        for (int i = 0; i < dist.size() - 1; i++) {
            time += dist[i] / speed + ((dist[i] % speed == 0) ? 0 : 1);
        }
        return time + dist[dist.size() - 1] * 1.00 / speed <= hour;
    }