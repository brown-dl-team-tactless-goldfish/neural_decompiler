char * addStrings(char * num1, char * num2){
    int carry = 0;
    int len, index;
    char *sum;
    int len1 = strlen(num1);
    int len2 = strlen(num2);
    
    if (!num1)
        return num2;
    
    if (!num2)
        return num1;
    
    len = len1 > len2 ? len1 + 2 : len2 + 2; //+1 for '\0' and +1 for carry
    index = len - 2; //keep one char space for '\0'
    sum = malloc(len);
    
    while (len1 || len2) {
        if (len1)
            carry += num1[--len1] - '0';
        
        if (len2)
            carry += num2[--len2] - '0';

        sum[index--] = '0' + carry % 10;
        
        carry /= 10;
    }
    
    sum[len - 1] = '\0';

    // add carry if there otherwize first char is not needed.
    if (carry)
        sum[index] = '0' + carry;
    else
        sum++;
    
    return sum;
}