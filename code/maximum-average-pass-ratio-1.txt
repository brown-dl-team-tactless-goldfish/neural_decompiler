using AD3 = array<double, 3> ; // diff, passi, totali
class Solution {
public:
    double maxAverageRatio(vector<vector<int>>& classes, int extraStudents) {
        int n = classes.size() ;
        priority_queue<AD3, vector<AD3>, less<>> pq ;
        for(auto c : classes){
            double p = c[0] ;
            double t = c[1] ;
            pq.push({(p+1)/(t+1) - p/t, p, t}) ;
        }
        for(int i = 0 ; i < extraStudents; i++){
            auto[dr, p, t] = pq.top() ;
            pq.pop() ;
            p += 1 ;
            t += 1 ;
            pq.push({(p+1)/(t+1) - p/t, p, t}) ;
        }
        
        double sum  = 0 ;
        while(!pq.empty())
        {
            auto[dr, p, t] = pq.top() ;
            pq.pop() ;
            sum += p/t ;
        }
        
        return sum / n ;
    }
    
};