class Solution {
public:
    string robotWithString(string s) {
        string res;
        stack<char> stk;
        int pos = 0;
        for(int i = 0; i < 26; i++) {
            char c = i+'a';
            while(!stk.empty() && stk.top() <= c) {
                res += stk.top();
                stk.pop();
            }
            int nxt = string::npos;
            do {
                nxt = s.find_first_of(c, pos);
                if(nxt != string::npos) {
                    for(int i = pos; i < nxt; i++) stk.push(s[i]);
                    res += c;
                    pos = nxt+1;
                }
            } while (nxt != string::npos);
        }
        while(!stk.empty()) {
            res += stk.top();
            stk.pop();
        }
        return res;
    }
};