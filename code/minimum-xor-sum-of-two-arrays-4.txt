class Solution {
public:
    int dp[14][20000];
    int help(int i,vector<int> v1,vector<int> v2,int mask)
    {
        if(i==v1.size()) return 0;
        if(dp[i][mask]!=-1) return dp[i][mask];
        int sum=INT_MAX;
        
        for(int j=0;j<v2.size();j++)
        {
            if((mask & (1<<j) )== 0)
            {
                sum=min(sum,(v1[i]^v2[j])+help(i+1,v1,v2,mask|(1<<j)));
            }
        }
        dp[i][mask]=sum;
        return sum;    
    }
    int minimumXORSum(vector<int>& nums1, vector<int>& nums2) {
        
        for(int i=0;i<14;i++)
            for(int j=0;j<20000;j++)
                dp[i][j]=-1;
        
       return help(0,nums1,nums2,0);
        
    }
};