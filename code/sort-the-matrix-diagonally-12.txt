	vector<vector<int>> diagonalSort(vector<vector<int>>& mat) {
        
        int n = mat.size();
        int m = mat[0].size();
        
        for (int j = m - 1; j >= 0; j--) {
            int _j = j;
            int _i = 0;
            vector<int> temp;
            while (_j < m && _i < n) {
                temp.push_back(mat[_i][_j]);
                _j++;
                _i++;
            }
            sort(temp.begin(), temp.end());
            _j = j;
            _i = 0;
            int c = 0;
            while (_j < m && _i < n) {
                mat[_i][_j] = temp[c];
                c++;
                _j++;
                _i++;
            }
        }
        
        for (int i = 1; i < n; i++) {
            int _j = 0;
            int _i = i;
            vector<int> temp;
            while (_i < n && _j < m) {
                temp.push_back(mat[_i][_j]);
                _i++;
                _j++;
            }
            sort(temp.begin(), temp.end());
            _i = i;
            _j = 0;
            int c = 0;
            while (_i < n && _j < m) {
                mat[_i][_j] = temp[c];
                c++;
                _i++;
                _j++;
            }
        }
        
        return mat;
    }