class Solution {
public:
    vector<vector<int>> rotateGrid(vector<vector<int>>& grid, int k) {
        int m = grid.size(), n = grid[0].size();
        int top = 0, bottom = m-1, left = 0, right = n-1;
        while(top<bottom && left<right)
        {
            int k1 = k;
            int length = 2*(bottom-top+1) + (right-left-1)*2;
            k1 = k1 % length;
            while(k1--)
            {
                int t1 = grid[top][left];
                for(int i=left;i<right;i++)
                {
                    grid[top][i] = grid[top][i+1];
                }
                
                int t2 = grid[bottom][left];
                for(int i=bottom;i>top;i--)
                {
                    grid[i][left] = grid[i-1][left];
                }
                grid[top+1][left]=t1;
                int t3 = grid[bottom][right];
                for(int i=right;i>left;i--)
                {
                    grid[bottom][i] = grid[bottom][i-1];
                }
                grid[bottom][left+1]=t2;
                
                for(int i=top;i<bottom;i++)
                {
                    grid[i][right] = grid[i+1][right];
                }
                grid[bottom-1][right]=t3;
            }
            left++;
            right--;
            top++;
            bottom--;
        }
       return grid; 
    }
};
