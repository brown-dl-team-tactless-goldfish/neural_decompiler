class Solution {
public:
    
    vector<vector<int>> allPathsSourceTarget(vector<vector<int>>& graph) {
        int n = graph.size();
        vector<vector<int>> result;
        queue<vector<int>> que;
        que.push({0});

        while (que.size()){
            vector<int> node = que.front();
            que.pop();
            
            if (node.back() == n-1){
                result.push_back(node);
                continue;
            }
            
            int index = node.back();
            for(auto c: graph[index]){
                vector<int> temp(node.begin(), node.end());
                temp.push_back(c);
                que.push(temp);
            }
        }

        return result;
    }
};