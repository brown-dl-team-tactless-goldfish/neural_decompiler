long long minOperations(int* nums1, int nums1Size, int* nums2, int nums2Size, int k){
    int n = nums1Size ;
    int* tmp = malloc(n *sizeof(int) ) ;  //diff between nums1 and nums2
    long long total = 0;   //sum of diff
    long long posi = 0 ;   //sum of positive diff
    for(int i = 0; i < n; i++){
        tmp[i] = nums1[i] - nums2[i] ;
        total += tmp[i] ;
        if(k > 0){
            if(abs(tmp[i]) % k != 0)
                return -1 ;
        }
        if(tmp[i] > 0)
            posi += (long long)tmp[i] ;
    }
    
    //total have to be 0
    if(total != 0)
        return -1 ;
    //if k == 0, all diff have to be 0
    if(k == 0){
        if(posi != 0)
            return -1 ;
        else
            return  0;        
    }
    free(tmp) ;
    return posi /  k ;
    
}