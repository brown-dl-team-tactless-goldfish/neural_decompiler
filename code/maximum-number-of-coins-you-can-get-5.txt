int partition(int left,int right,int*nums){
    int pivot = nums[right-1];
    int j=left;
    for(int i=left;i<right;i++){
        if(nums[i]<=pivot){
            int temp = nums[i];
            nums[i] = nums[j];
            nums[j++] = temp;
        }
    }
    return j-1;
}
void quickSort(int left,int right,int*nums){
    if(left>=right){return;}
    int mid = partition(left,right,nums);
    quickSort(mid+1,right,nums);
    quickSort(left,mid,nums);
}

int maxCoins(int* piles, int pilesSize){
    int n=pilesSize;
    quickSort(0,pilesSize,piles);
        int i = n-2;
        int j = 0;
        int res = 0;
        while(i>j){
            res+=piles[i];
            j++;
            i-=2;
            
        }
        return res;
    }