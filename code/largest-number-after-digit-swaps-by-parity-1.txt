#include<stdlib.h>

void swap (char* a, char* b) {
    char temp = *a;
    *a = *b;
    *b = temp;
}

int NumberOfDigits (int num) {
    int digitCount = 0;

    while(num > 0) {
        num /= 10;
        digitCount++;
    }

    return digitCount;
}

int largestInteger(int num){
    int i, j, digitCount = NumberOfDigits(num), temp = num;
    char *s = (char*)malloc(sizeof(char) * (digitCount + 1));

    i = digitCount - 1;

    while (temp > 0) {
        int digit = temp % 10;
        s[i--] = digit + '0';
        temp /= 10;
    }

    s[digitCount] = '\0';

    for (i = 0; i < digitCount; i++) {
        for (j = i + 1; j < digitCount; j++) {
            if (s[i] < s[j] && ((s[i] - '0') % 2) == ((s[j] - '0') % 2)) {
                swap(&s[i], &s[j]);
            }
        }
    }

    num = atoi(s);

    return num;
}