class Solution {
public:
    int mod=1e9+7;
    int memo [101][101][101];
    int M,MinProfit,N;
    int dp(int idx,int p,int people, vector<int>& group, vector<int>& profit){
        if (people>N) return 0;
        if (idx==M) return (p>=MinProfit)?1:0;
        if (memo[idx][p][people]!=-1) return memo[idx][p][people];
        long long ans=0;
        //do this idx crime
        ans+=dp(idx+1,min(MinProfit,p+profit[idx]),people+group[idx],group,profit);
        //dont do this idx crime
        ans+=dp(idx+1,p,people,group,profit);
        return memo[idx][p][people]=ans%mod;
    }
    int profitableSchemes(int n, int minProfit, vector<int>& group, vector<int>& profit) {
        ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
        M=group.size();
        N=n;
        MinProfit=minProfit;
        memset(memo,-1,sizeof(memo));
        return dp(0,0,0,group,profit);
    }
};