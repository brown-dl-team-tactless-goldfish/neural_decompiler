class Solution {
public:
    string largestPalindromic(string num) {
        string res;
        unordered_map<char, int> mp;
        for(int i = 0; i < num.size(); i++) mp[num[i]]++;
        for(int i = 9; i >= 0; i--){
            char c = '0' + i;
            if(mp[c] > 1){
                int n = mp[c] / 2;
                int rem = mp[c] % 2;
                mp[c] = rem;
                for(int j = 0; j < n; j++) res.push_back(c);
            }
        }
        if(res.size() > 0 && res[0] == '0') res = "";
        string rev = res;
        reverse(rev.begin(), rev.end());
        for(int i = 9; i >= 0; i--){
            char c = '0' + i;
            if(mp[c] == 1){
                res += c;
                break;
            }
        }
        res += rev;
        if(res.size() == 0) return "0";
        return res;
    }
};