class Solution {
    unordered_map<int,int> m;
    int map_num(int n){
        int s=0, p=1;
        if(n==0) return m[0];
        while(n>0){
            s += m[n%10]*p;
            p *= 10;
            n /= 10;
        }
        return s;
    }
public:
    vector<int> sortJumbled(vector<int>& mapping, vector<int>& nums) {
        int l = mapping.size();
        for(int i=0; i<l; ++i){
            m[i] = mapping[i];
        }
        map<int,vector<int> > mp;
        for(auto& i : nums){
            int t = map_num(i);
            mp[t].push_back(i);
        }
        vector<int> v;
        for(auto& itr : mp){
            vector<int> u = itr.second;
            for(auto& c : u){
                v.push_back(c);
            }
        }
        return v;
    }
};