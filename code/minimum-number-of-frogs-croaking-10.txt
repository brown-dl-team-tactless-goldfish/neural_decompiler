    class Solution {
    public:
        using VI = vector<int>;
        using Map = unordered_map<char, int>;
        int minNumberOfFrogs(string S, string order = "croak", int max = 0) {
            VI cnt(5);
            auto ok = [&]() {
                for (auto i{ 1 }; i < cnt.size(); ++i)
                    if (cnt[i - 1] < cnt[i])
                        return false;
                return true;
            };
            for (auto c: S) {
                if (!ok())
                    return -1;
                ++cnt[order.find(c)];
                if (c == 'k')
                    for (auto pre: string("croa"))
                        max = std::max(max, 1 + cnt[order.find(pre)] - cnt[order.find(c)]);
            }
            return all_of(cnt.begin(), cnt.end(), [&](auto x) { return x == cnt[0]; }) ? max : -1;
        }
    };