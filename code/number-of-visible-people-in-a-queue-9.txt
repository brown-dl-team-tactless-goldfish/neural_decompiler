    vector<int> canSeePersonsCount(vector<int>& heights) {
        // keep a monotonic stack with decreasing height
        // the number of heights that popped up when keeping the stack monotonic is the shorter people between two higher people
        // if the stack is not empty after popping out shorter people, we need to add an extra one to the result
        // which represents we can also see the person higher than the current one
        int size = heights.size();
        vector<int> res(size, 0);
        stack<int> monoStack;
        for (int i = size - 1; i >= 0; i--) {
            int shorter = 0;
            while (monoStack.size() > 0 && heights[i] > monoStack.top()) {
                shorter++;
                monoStack.pop();
            } 
            if (monoStack.size() == 0) {
                res[i] = shorter;
            } else {
                res[i] = shorter + 1;
            }
            monoStack.push(heights[i]);
        }
        return res;
    }