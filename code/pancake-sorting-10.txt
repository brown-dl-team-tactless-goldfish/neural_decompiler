class Solution {
public:
    
    void reverse(int start, int end, vector<int> &arr) {
        int i = start, j = end;
        while(i <= j) {
            swap(arr[i++], arr[j--]);
        }
    }

    
    vector<int> pancakeSort(vector<int>& arr) {
        vector<int> sortedArr = arr;
        sort(sortedArr.begin(), sortedArr.end());
        int n = arr.size();
        
        vector<int> ans;
        
        for(int j = n - 1; j >= 0; j--) {
            if(arr[j] == sortedArr[j]) continue;
            int idx = -1;
            for(int i = 0; i < j; i++) {
                if(arr[i] == sortedArr[j]) {
                    idx = i;
                    break;
                }
            }
            
            ans.push_back(idx + 1);
            ans.push_back(j + 1);
            reverse(0, idx, arr);
            reverse(0, j, arr);
        }
        
        return ans;
    }
};























