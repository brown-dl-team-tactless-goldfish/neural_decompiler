    vector<vector<bool>> v(numCourses,vector<bool>(numCourses,false));
    
    vector<vector<int>> graph(numCourses);
    
    vector<int> indegree(numCourses, 0);
    
    for(auto &x: prerequisites)
    {
        graph[x[0]].push_back(x[1]);
        
        v[x[0]][x[1]] = true;
        
        indegree[x[1]]++;
    }
    
    queue<int> q;
    
    for(int i=0; i<numCourses; i++)
    {
        if(indegree[i] == 0)
        {
            q.push(i);
        }
    }
    
    while(!q.empty())
    {
        auto cur = q.front();
        
        q.pop();
        
        for(auto& adj: graph[cur])
        {
            for(int i=0; i<numCourses; i++)
            {
                if(v[i][cur] == true)
                {
                    v[i][adj] = true;
                }
            }
            
             indegree[adj]--;
            
            
        if(indegree[adj] == 0)
        {
            q.push(adj);
        }
            
       }
     

    }
    
    vector<bool> ans;
    
    for(auto &x: queries)
    {
        ans.push_back(v[x[0]][x[1]]);
    }
    
    return ans;
    
    
}