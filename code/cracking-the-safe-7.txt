    // reverse order
    string crackSafe(int n, int k) {
        int i, total = pow(k, n);
        unordered_map<string, int> record;
        string ans;
        
        ans.assign(n, '0');
        for(i = 1; i < total; ++i) ans += '0' + k - ++record[ans.substr(ans.length() - n + 1, n - 1)];
        
        return ans;
    }
		
    // normal order
    string crackSafe(int n, int k) {
        int i, total = pow(k, n);
        unordered_map<string, int> record;
        string ans;
        
        ans.assign(n, '0' + k - 1);
        for(i = 1; i < total; ++i) ans += '0' + record[ans.substr(ans.length() - n + 1, n - 1)]++;
        
        return ans;
    }