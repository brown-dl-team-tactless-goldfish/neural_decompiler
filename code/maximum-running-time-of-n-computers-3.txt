class Solution {
public:
    long long maxRunTime(int n, vector<int>& arr) {
            int t = arr.size();
            long long sum = 0;
            for(int i=0; i<t; i++)
            {
                sum +=arr[i];    
            }
            long long r = sum/n +1;
            sort(arr.begin(), arr.end());
            long long l = arr[t-n];
            long long ans = 0;
            while(l<r)
            {
                    long long mid = (l+r)/2;
                    int k = t-1;
                    while(k>=0 && arr[k] >= mid)
                    {
                                k--;
                    }
                    int rem = n - (t-1-k);
                    long long curr = 0;
                    while(k>=0 )
                    {
                            curr +=arr[k];
                            k--;
                    }
                    if(rem<=0 || rem*mid <= curr)
                    {
                            ans = max(ans, mid);
                            l = mid+1;
                    }
                    else
                    {
                            r = mid;
                    }
            }
            return ans;
    }
};