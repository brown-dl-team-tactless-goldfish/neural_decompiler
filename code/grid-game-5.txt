class Solution {
public:
    long long gridGame(vector<vector<int>>& grid) {
        int n = grid[0].size();
        vector<vector<long long>> res (2, vector<long long> (n, 0));
        
        for(int i = 0; i < n; i ++) {
            res[0][i] = grid[0][i];
            res[1][i] = grid[1][i];
        }
        
        for(int i = 1; i < n; i ++) {
            res[0][i] += res[0][i - 1];
        }
        for(int i = n - 1; i >= 1; i --) {
            res[1][i - 1] += res[1][i];
        }
        long long result = LLONG_MAX;
        
        for(int i = 0; i < n; i ++) {
            long long n1 = res[0][n - 1] - res[0][i];
            long long n2 = res[1][0] - res[1][i];
            if(n1 > n2) {
                if(n1 < result) result = n1;
            }
            else {
                if(n2 < result) result = n2;
            }
        }
        return result;
    }
};
```*