class Solution {
public:
    using VI = vector<int>;
    int lengthLongestPath(string S, int i=0, int cur=0, VI dir=VI(123), bool file=false, int ans=0) {
        S.push_back('\n');
        for (auto c: S) {
            if (isalpha(c) || isdigit(c) || c == ' ')
                ++cur; // increment current directory length
            else if(c == '\t')
                ++i; // increment current directory index
            else if (c == '.')
                ++cur, file = true; // found a file (also increment current file length)
            else {
                cur = !file ? cur+1 : cur; // +1 for the trailing '/' for each directory
                dir[i] = cur; // i-th directory's current length
                if (file)
                    ans = max(ans, accumulate(dir.begin(), dir.begin() + i+1, 0)); // i+1 for 0..i inclusive
                i = cur = file = 0; // reset for next dir/file to be read
            }
        }
        return ans;
    }
};