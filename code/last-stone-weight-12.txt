void swap(int*a,int*b){
    int mi=*a;
    *a=*b;
    *b=mi;
}
void MaxHeapFixdown(int father,int*s,int num){
    int son=father*2+1;
    while(son<num){
        if(son+1<num&&s[son+1]>s[son])
            son++;
        if(s[father]<s[son])
            swap(&(s[father]),&(s[son]));
        else break;
        father=son;
        son=father*2+1;
    }
}
void CreateMaxHeap(int*s,int num){
    for(int i=num/2-1;i>=0;i--)
        MaxHeapFixdown(i,s,num);
}
int getMax(int* s, int* Size){
    (*Size)--;
    int temp=s[0];
    s[0]=s[*Size];
    MaxHeapFixdown(0,s,*Size);
    return temp;
}
void getIn(int val,int* s, int* Size){
    s[*Size]=val;
    int i=*Size;
    int j=(i-1)/2;
    for(;j>=0&&s[j]<s[i];i=j,j=(i-1)/2){
        swap(&(s[i]),&(s[j]));
    }
    (*Size)++;
}
int lastStoneWeight(int* stones, int stonesSize){
    CreateMaxHeap(stones,stonesSize);
    int x,y;
    while(stonesSize>1){
        x=getMax(stones,&stonesSize);
        y=getMax(stones,&stonesSize);
        if(x!=y)
            getIn(x-y,stones,&stonesSize);
    }
    if(stonesSize==0)
        return 0;
    else
    return stones[0];
}

