typedef struct {
    int num[1001];
} SmallestInfiniteSet;


SmallestInfiniteSet* smallestInfiniteSetCreate() {
    SmallestInfiniteSet *fs;
    fs = malloc(sizeof(SmallestInfiniteSet));
    memset(fs, 0, sizeof(SmallestInfiniteSet));
    return fs;
}

int smallestInfiniteSetPopSmallest(SmallestInfiniteSet* obj) {
        int temp = 0, i = 1;
        for (; i < 1001; i++) {
            if (obj->num[i] == 0) {
                temp = i;
                obj->num[i] = i;
                return temp;
            }
        }
        
        return i;
}

void smallestInfiniteSetAddBack(SmallestInfiniteSet* obj, int num) {
    obj->num[num] = 0;
    return;
}

void smallestInfiniteSetFree(SmallestInfiniteSet* obj) {
    free(obj);
    return;
}
