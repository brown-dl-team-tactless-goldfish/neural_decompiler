/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
 void swap(int *x,int *y)
 {
    int temp=*x;
    *x=*y;
    *y=temp;
 }
 void heapify(int *a,int n,int i)
 {
    int l=2*i+1; 
    int r=2*i+2;
    int largest=i;
    if(l<n && a[l]>a[largest])
    {
        largest=l;
    }
    if(r<n && a[r]>a[largest])
    {
        largest=r;
    }
    if(largest!=i)
    {
        swap(&a[i],&a[largest]);
        heapify(a,n,largest);
    }
 }
 void buildheap(int *a,int n)
 {
    int last=n/2-1;
    while(last>=0)
    {
        heapify(a,n,last);
        last--;
    }
 }
int* sortArray(int* a, int n, int* returnSize)
{
   buildheap(a,n);
   for(int i=n-1;i>=0;i--)
   {
       swap(&a[0],&a[i]);
       heapify(a,i,0);
   }
   *returnSize=n;
   return a;
}