class DetectSquares {
public:
   map<vector<int,int>,int > points;
    
    DetectSquares() {
        points.clear();
    }
    
    void add(vector<int> point) {
        points[point]++;
       
    }
    
    int count(vector<int> point) {
        int ans=0;
       
        for(auto  itr:points){
            
            
            if(itr.first[0]==point[0]){
                int x=point[0];
                int y1=point[1];
                int y2=itr.first[1];
                
           
                
                
                int c1=0,c2=0,c3=0;
                c1=points[itr.first];
                
                if(y2>y1)
                
                {
                 
                c2=points[{x+y2-y1,y1}];
               
                c3=points[{x+y2-y1,y2}];
                
                 ans=ans+c1*c2*c3;
 
                c2=0; c3=0;
                             
                 c2=points[{x-y2+y1,y1}];
                
                 c3=points[{x-y2+y1,y2}];
               
                
                 ans=ans+c1*c2*c3;}
                
                
                else if(y1>y2)
                
                {c2=0; c3=0;
                                
                 c2=points[{x-y2+y1,y1}];
               
                 c3=points[{x-y2+y1,y2}];
              
                
                 ans=ans+c1*c2*c3;
                
                   c2=0; c3=0;
                            
                 c2=points[{x-y1+y2,y2}];
               
                 c3=points[{x-y1+y2,y1}];
               
                
                 ans=ans+c1*c2*c3;}
                
           }
        }
        
        return ans;
    }
};
 
 