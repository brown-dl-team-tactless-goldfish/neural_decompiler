int jobScheduling(vector<int>& startTime, vector<int>& endTime, vector<int>& profit) {
 vector<pp>vec;int len=profit.size();
 for(int i=0;i<len;i++)
     vec.push_back(make_pair(make_pair(startTime[i],endTime[i]),profit[i]));
 sort(vec.begin(),vec.end(),mycompare);
    int dp[len];
    int ans=INT_MIN;
    dp[0]=vec[0].second;
    for(int i=1;i<len;i++)
    {
        dp[i]=max(dp[i-1],vec[i].second);
        for(int j=i-1;j>=0;j--)
        {
            if(vec[j].first.second<=vec[i].first.first)
            {   dp[i]=max(dp[i],dp[j]+vec[i].second); break;}
        }
        ans=max(ans,dp[i]);
    }
    return ans;
}