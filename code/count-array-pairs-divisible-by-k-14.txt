class Solution {
public:
    int mx = 1e5 + 5;
    void update(vector<long long>& divisors, int num) {
		//update divisors of num
        for(int i = 1; i * i <= num; i++) {
            if(num % i == 0) {
                if(i == num / i) divisors[i]++;
                else {
                    divisors[i]++;
                    divisors[num/i]++;
                }
            }
        }
    }
    long long coutPairs(vector<int>& nums, int k) {
        vector<long long> divisors(mx, 0LL);
        long long res = 0LL;
        for(int i = 0; i < nums.size(); i++) {
			//number to be multiplied with num[i] to make it divisible by k
            int r = k / (__gcd(nums[i], k));
			
			//numbers with divisors r
            res += (long long)divisors[r];
			
			//update the divisors of num[i]
            update(divisors, nums[i]);
        }
        return res;
    }
};