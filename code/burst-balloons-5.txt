class Solution {
public:
int maxCoins(vector<int>& nums) {
    if(nums.empty()) return 0;
    int n = nums.size();
    int dp[n][n];
    for(int i = 0; i < n; ++i){
        dp[i][i] = nums[i] * (i > 0 ? nums[i-1] : 1) *(i+1< n ? nums[i+1]:1);
    }
    for(int len = 2; len <= n; ++len){
        for(int i = 0; i + len <= n; ++i){
            int j = i + len - 1;
            int res = INT_MIN;
            for(int k = i; k <= j; ++k){
                int c = (k - 1 >= i ? dp[i][k-1] : 0) + (k + 1 <= j ? dp[k+1][j] : 0) + nums[k]*(i - 1 >= 0 ? nums[i-1] : 1)*(j + 1 < n ? nums[j+1] : 1);
                res = max(res, c);
            }
            dp[i][j] = res;
        }
    }
    return dp[0][n-1];
}
};