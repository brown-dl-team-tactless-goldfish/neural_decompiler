void swap(int* xp, int* yp)
{
    int temp = *xp;
    *xp = *yp;
    *yp = temp;
}
void solve(int *a,int n)
{
    for(int i=0;i<n/2;i++)swap(&a[i],&a[n-1-i]);
}
int* decrypt(int* a, int n, int k, int* t)
{
    int *res=(int*)malloc(sizeof(int)*n);
    memset(res,0,sizeof(int)*n);
    if(k==0)return res;
    if(k<0)solve(a,n);
    int l;
    for(int i=0;i<n;i++)
    {
        int s=0,al=0;
        l=i+1;
        if(i==n-1)l=0;
        for(int j=l;j<n;j++)
        {
            al++;
            s=s+a[j];
            if(al==abs(k))break;
            if(j+1>=n)j=-1;
        }
        res[i]=s;
    }
    if(k<0)solve(res,n);
    *t=n;
    return res;
}