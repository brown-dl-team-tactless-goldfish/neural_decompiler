//
// based on leetcode.com/problems/optimal-division/solution/127534/Optimal-Division/129155
//
// max of (a / b / c / d / e) == (a * c * d * e) / b 
// a/b/c/d/e => a / (b / c / d / e) == a / (b / (c * d * e)) == a * (c * d * e) / b == (a * c * d * e) / b
//

string optimalDivision(vector<int>& nums) 
{
    
    string r; //result
    
    if (nums.size() == 0)
        return r;

    r = to_string(nums[0]);
    
    if (nums.size() == 1)
        return r;
    
    if (nums.size() == 2)
        return r + "/" + to_string(nums[1]);
    
    r += "/(";
    
    for (int i = 1; i < nums.size(); i++)
    {
        r += to_string(nums[i]) + "/";
    }
    
    // replace last '/' with a ')'
    r.pop_back();
    r += ")";
   
    return r;        
}