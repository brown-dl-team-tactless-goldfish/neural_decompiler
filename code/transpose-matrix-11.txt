int** transpose(int** A, int ARowSize, int *AColSizes, int** columnSizes, int* returnSize) {
    int m = ARowSize;
    int n = AColSizes[0];
    
    // Allocate memory
    int*  pool = malloc(m*n*sizeof(int));
    int** ans  = malloc(n*sizeof(int*));
    int*  cols = malloc(n*sizeof(int));
    
    // Init memory
    ans[0]  = pool;
    cols[0] = m;
    for (int i = 1; i < n; ++i) {
        ans[i]  = ans[i - 1] + m;
        cols[i] = m;
    }
    
    // Transpose
    for (int i = 0; i < m; ++i) {
        for (int j = 0; j < n; ++j) {
            ans[j][i] = A[i][j];
        }
    }
    
    // Update return values
    *returnSize  = n;
    *columnSizes = cols;
    
    return ans;
}