    int kthLargestValue(vector<vector<int>>& matrix, int k) {
        const int n = matrix.size(), m = matrix[0].size();
        auto mxor = vector(n+1, vector(m+1, 0));        
        vector<int> vxor;
        for(int i=0;i<n;i++){
            vector<int> vCurrentSum(1,0);
            for(int j=0;j<m;j++){
                vCurrentSum.emplace_back(vCurrentSum.back() ^ matrix[i][j]);
                mxor[i+1][j+1] = mxor[i][j+1] ^ vCurrentSum.back();
                vxor.push_back(mxor[i+1][j+1]);
            }
        }
        sort(vxor.begin(), vxor.end(), greater());
        return vxor[k-1];
    }