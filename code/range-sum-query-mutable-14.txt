class FenWickTree{
    
public:
    vector<int>tree;
    FenWickTree(){};
    FenWickTree(int n)
    {
        tree.resize(n);
        fill(tree.begin(),tree.end(),0);
    }
    
    void update(int i, int val)
    {
        while(i<tree.size())
        {
            tree[i]+= val;
            i+= (i&-i);
        }
    }
    
    int sum(int i)
    {
        int val = 0;
        while(i>0)
        {
            val+= tree[i];
            i-= (i&-i);
        }
        
        return val;
    }      
    
};

class NumArray {
public:
    vector<int>array;
    FenWickTree FenWicktree;
    NumArray(vector<int>& nums) {
        
        int n = nums.size();
        array = nums;
        FenWickTree tree(n+1);
        FenWicktree = tree;
        
        for(int i=0;i<n;i++)
            FenWicktree.update(i+1,nums[i]);
    }
    
    void update(int i, int val) {
        FenWicktree.update(i+1,val-array[i]);
        array[i] = val;
    }
    
    int sumRange(int i, int j) {
        return FenWicktree.sum(j+1) - FenWicktree.sum(i);
    }
};