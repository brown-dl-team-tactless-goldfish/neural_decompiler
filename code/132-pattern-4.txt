/* stack starting from nums[numsSize-1] and grows downward.
    traverse from backward.
   
   If stack not empty, find the element from the stack which is lesser than current element. This meets the condition (a[j] > a[k])
   goto previous element,
   check if the condition satisfies (a[i] < a[k])
   else repeat the process,
   push each element in stack
*/
bool find132pattern(int* nums, int numsSize){
    int  j, k;
    int stk_ele=INT_MIN;
    
    if (numsSize < 3)
        return 0;
    
    /* traversal from last to first */
    j = numsSize-1;
    k = numsSize; /* stack starting from numsSize-1 and grows down */
    while (j>=0) { 
        /* check if a[k] > a[i] ,
           initially this stk element is assigned with the INT_MIN
           This condition will always be false when j is pointing to last element */
        if (stk_ele > nums[j])
            return 1;
        
        /* remove stack elements which are lesser than a[j]
          that is elements which are meeting the problem condition2
           a[j] > a[k] */
        while ((k < numsSize) && (nums[j] > nums[k])){
            stk_ele = nums[k];
            k++;
        }
        k--;
        nums[k] = nums[j]; j--;
    }
    return 0;
}
