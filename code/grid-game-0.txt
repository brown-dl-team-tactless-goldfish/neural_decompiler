long long gridGame(int** grid, int gridSize, int* gridColSize){
    int n = *gridColSize;
    if(n == 1)
        return 0;
    long long* upper = malloc(n * sizeof(long long));
    long long* down = malloc(n * sizeof(long long));
    upper[n-1] = grid[0][n-1];
    for(int i = n-2; i >=0; i--){
        upper[i] = upper[i+1] + grid[0][i];
    }
    down[0] = grid[1][0];
    for(int i = 1; i < n; i++){
        down[i] = down[i-1] + grid[1][i];
    }

    long long ans = upper[1];
    
    for(int i = 1; i < n-1; i++){
        ans = fmin(ans, fmax(upper[i+1], down[i-1]));
    }
    ans = fmin(ans , down[n-2]);
    free(upper);
    free(down);

    return ans;

}