class Solution {
public:
    long long countExcellentPairs(vector<int>& nums, int k) {
        long long ans=0;
        vector<int>cnt(30);
        //unordered_set<int>(nums.begin(),nums.end()) to remove duplicates
        for(auto i:unordered_set<int>(nums.begin(),nums.end())){
            cnt[__builtin_popcount(i)]++;
        }
        for(int i=0;i<30;i++){
            // cause we need to get minimum k set bits when added
            int start=((i>=k)?i:(k-i));
            start=max(start,i);//since anything less than i is already calculated 
            for(int j=start;j<30;j++){
                if(i==j)ans+=cnt[i]*cnt[j];
                else ans+=cnt[i]*cnt[j]*2;
            }
        }
        return ans;
    }
};