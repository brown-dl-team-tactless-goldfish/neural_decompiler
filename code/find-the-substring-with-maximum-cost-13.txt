class Solution {
public:
    int maximumCostSubstring(string s, string chars, vector<int>& vals) {
        // support variables
        int values[123], res = 0, curr = 0;
        // preparing values
        iota(values + 'a', values + 'z' + 1, 1);
        for (int i = 0; i < chars.size(); i++) {
            values[chars[i]] = vals[i];
        }
        // parsing s
        for (char c: s) {
            curr += values[c];
            // case 1: new sequence
            if (curr < 0) curr = 0;
            // case 2: continuing sequence
            else res = max(res, curr);
        }
        return res;
    }
};