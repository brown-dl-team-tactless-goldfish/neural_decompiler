
class Solution {
public:
    long long appealSum(string s) {
        long long ans = 0;
		int n = s.length();
		for (int c = 0; c < 26; c++) {
			char ch = (char)(c + 'a');
			int prev = -1;
			ans += 1LL * n * (n + 1) / 2;
			for (int i = 0; i < n; i++) {
				if (s[i] == ch) {
					int l = i - prev - 1;
					ans -= 1LL * l * (l + 1) / 2;
					prev = i;
				} else if (i == n - 1) {
					int l = n - 1 - prev;
					ans -= 1LL * l * (l + 1) / 2;
				}
			}
		}
		return ans;
    }
};
