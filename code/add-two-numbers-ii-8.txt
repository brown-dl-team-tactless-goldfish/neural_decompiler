/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */


struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2){
    int* l1Stack = (int*)calloc(100, sizeof(int));
    int* l2Stack = (int*)calloc(100, sizeof(int));
    int* l3Stack = (int*)calloc(100, sizeof(int));
    int l1StackIdx = 0, l2StackIdx = 0, l3StackIdx = 0, maxStackIdx = 0;
    int sum = 0, s = 0, a = 0, b = 0, c = 0, i = 0;
    struct ListNode* pL1 = l1;
    struct ListNode* pL2 = l2;
    struct ListNode* ans = (struct ListNode*)calloc(1, sizeof(struct ListNode));;
    struct ListNode* pAns = NULL;
    while (pL1) {
        l1Stack[l1StackIdx++] = pL1->val;
        pL1 = pL1->next;
    }
    while (pL2) {
        l2Stack[l2StackIdx++] = pL2->val;
        pL2 = pL2->next;
    }
    maxStackIdx = l1StackIdx > l2StackIdx ? l1StackIdx : l2StackIdx;    
    for (i = 0; i < maxStackIdx; i++) {
        a = i <= (l1StackIdx - 1) ? l1Stack[l1StackIdx - i - 1] : 0;
        b = i <= (l2StackIdx - 1) ? l2Stack[l2StackIdx - i - 1] : 0;
        sum = a + b + c;
        s = sum % 10;
        c = sum / 10;    
        l3Stack[l3StackIdx++] = s;
    }
    if (c) l3Stack[l3StackIdx++] = c;
    for (i = l3StackIdx - 1; i >= 0; i--) {      
        if (pAns) {
            pAns->next = (struct ListNode*)calloc(1, sizeof(struct ListNode));
            pAns = pAns->next;
        } else {
            pAns = ans;
        }
        pAns->val = l3Stack[i];
        pAns->next = NULL;
    }
    free(l1Stack);
    free(l2Stack);
    free(l3Stack);
    return ans;
}