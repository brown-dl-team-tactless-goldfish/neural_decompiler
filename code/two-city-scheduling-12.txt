/*
    My concept is that count every person's saving (here is A city cost - to B city cost).
    then sort the saving, and count the total cost.
*/

struct Savings{
    int index;       //the i-th person
    int saving;      //person fly to A city cost - to B city cost.
};
int cmpfunc( const void *a ,const void *b)
{
    return (*(struct Savings *)a).saving > (*(struct Savings *)b).saving ? 1 : -1;
}
int twoCitySchedCost(int** costs, int costsSize, int* costsColSize){
    int total=0;
    struct Savings *person=malloc(sizeof(person)*costsSize);
    for(int i=0;i<costsSize;i++)
    {
        person[i].saving=costs[i][1]-costs[i][0];
        person[i].index=i;
    }
    qsort(person,costsSize, sizeof(person[0]),cmpfunc);
    for(int i=0;i<costsSize;i++)
    {
        if(i<costsSize/2)
            total+=costs[person[i].index][1];    //the first half
        else 
            total+=costs[person[i].index][0];    //the second half
    }
    return total;
}
