
bool valide_tree(int number, int* leftChild, int* rightChild, bool *visited)
{
    if(visited[number] == true)
        return false;
    
    visited[number] = true;
    if(leftChild[number] != -1)
        if(!valide_tree(leftChild[number], leftChild, rightChild, visited))
            return false;

    if(rightChild[number] != -1)
        if(!valide_tree(rightChild[number], leftChild, rightChild, visited))
            return false;

    return true;
}

bool validateBinaryTreeNodes(int n, int* leftChild, int leftChildSize, int* rightChild, int rightChildSize){

    int i;
    bool *visited;

    visited = (bool *)malloc(sizeof(bool)*n);
    memset(visited, false, sizeof(bool)*n);

    if(!valide_tree(0, leftChild, rightChild, visited))
        return false;

    for(i=0; i<n; i++)
        if(!visited[i])
            return false;

    return true;
}
