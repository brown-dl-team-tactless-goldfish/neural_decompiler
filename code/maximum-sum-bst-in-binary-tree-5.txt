/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    int maxSum = 0;
    public int MaxSumBST(TreeNode root) {
        Helper(root);
        return maxSum;
    }
    
    private (bool IsBST, int Sum, TreeNode Min, TreeNode Max) Helper(TreeNode node)
    {
        if(node == null) return (true,0,null,null);
        var left = Helper(node.left);
        var right = Helper(node.right);
        bool isValid = false;
        int sum = node.val + left.Sum + right.Sum;
        if(left.IsBST && right.IsBST && (left.Max == null || node.val > left.Max.val) && (right.Min == null || node.val < right.Min.val))
        {
            isValid = true;
            maxSum = Math.Max(maxSum, sum);
        }
        
        return (isValid, sum, left.Min??node, right.Max??node);
    }
}