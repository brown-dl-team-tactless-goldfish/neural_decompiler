class Solution {
public:
    int dp[4009][4009];
    int solve(int sp, int ep, int k)
    {
        if(sp==ep && k==0)
        {
            return 1;
        }
        if(k==0)
        {
            return 0;
        }
        if(dp[sp][k]!=-1)
        {
            return dp[sp][k];
        }
        int l=0;
        l=(l%1000000007+solve(sp+1,ep,k-1)%1000000007)%1000000007;
        int r=0;
        r=(r%1000000007+solve(sp-1,ep,k-1)%1000000007)%1000000007;
        return dp[sp][k]=(l%1000000007+r%1000000007)%1000000007;
    }
    int numberOfWays(int sp, int ep, int k) {
        memset(dp,-1,sizeof(dp));
        return solve(sp+1000,ep+1000,k); //to prevent negative index
    }
};