class Solution 
{
    public:
    int lands=0;
    int m,n;
    void count_islands(vector<vector<int>>& grid,int i,int j)
    {
        if(i<0||j<0||i>=grid.size()||j>=grid[0].size()||grid[i][j]==0)
        {
            return;
        }
        grid[i][j]=0;
        lands++;
        count_islands(grid,i+1,j);
        count_islands(grid,i-1,j);
        count_islands(grid,i,j+1);
        count_islands(grid,i,j-1);
    }
    int number_of_islands(vector<vector<int>> grid)
    {
        int result=0;
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(grid[i][j]==1)
                {
                    count_islands(grid,i,j);
                    result++;
                }
            }
        }
        return result;
    }
    int minDays(vector<vector<int>>& grid) 
    {
        m=grid.size();
        n=grid[0].size();
        int islands=number_of_islands(grid);
        if(islands!=1)
        {
            return 0;
        }
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(grid[i][j]==1)
                {
                    grid[i][j]=0;
                    if(number_of_islands(grid)>1)
                    {
                        return 1;
                    }
                    grid[i][j]=1;
                }
            }
        }
        return 2;
    }
};