struct result{
    int ret;
    int orig;
};

int cmp(void *a, void *b)
{
    struct result *a1 = (struct result *)a;
    struct result *b1 = (struct result *)b;
    
    //return a1->ret - b1->ret;
    if ((a1->ret - b1->ret) > 0) {
        return 1;
    } else if ((a1->ret - b1->ret) == 0) {
        if (a1->orig > b1->orig) {
            return 1;
        }
    }
    
    return -1;
}

int cmp1(int *a, int *b)
{
    return *a - *b;
}

int* findClosestElements(int* arr, int arrSize, int k, int x, int* returnSize){
    struct result a[arrSize];
    for (int i=0; i<arrSize; i++) {
        a[i].ret = abs(arr[i] - x);
        a[i].orig = arr[i];
    }
    qsort(a, arrSize, sizeof(struct result), cmp);
    //for (int i=0; i<arrSize; i++) {
    //    printf("%d %d\n", a[i].ret, a[i].orig);
    //}
    
    int *retval = (int *)malloc(sizeof(int)*k);
    for (int i=0; i<k; i++) {
        retval[i] = a[i].orig;
    }
    qsort(retval, k, sizeof(int), cmp1);
    
    *returnSize = k;
    return retval;
}