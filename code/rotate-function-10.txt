class Solution {
public:
    int maxRotateFunction(vector<int>& A) {
        if(A.empty()){
            return 0;
        }
        int n = A.size();
        vector<long long> sum(A.size());
        sum[0] = A[0];
        for(int i = 1;i<A.size();i++){
            sum[i] = A[i] + sum[i-1];
        }
        int k = -1;
        long long max = 0;
        for(int i = 0;i<A.size();i++) {
            long long tmp = (n-i-1) * sum[i] - (sum.back() - sum[i])*(i+1);
            if(tmp > max) {
                max = tmp; 
                k = i;
            }
        }
        int ans = 0;
        int c = 0;
        for(int i = k+1;i<A.size();i++) {
            ans += A[i] * c++;
        }
        for(int i = 0;i<=k;i++) {
            ans += A[i] * c++;
        }
        return ans; 
    }
};