class Solution 
{
    public:
    int toInt(string t)
    {
        int h=stoi(t.substr(0,2));
        int m=stoi(t.substr(3));
        return h*60+m;
    }
    vector<string> alertNames(vector<string>& keyName, vector<string>& keyTime) 
    {
        vector<string> result;
        unordered_map<string,vector<int>> total;
        for(int i=0;i<keyName.size();i++)
        {
            total[keyName[i]].push_back(toInt(keyTime[i]));
        }
        for(unordered_map<string,vector<int>>::iterator it=total.begin();it!=total.end();it++)
        {
            sort(it->second.begin(),it->second.end());
            for(int i=0;i<(int)it->second.size()-2;i++)
            {
                if(it->second[i+2]-it->second[i]<=60)
                {
                    result.push_back(it->first);
                    break;
                }
            }
        }
        sort(result.begin(),result.end());
        return result;
    }
};