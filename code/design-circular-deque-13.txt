        public class MyCircularDeque
        {
            private int _capacity = 0;
            private LinkedList<int> _internal = new LinkedList<int>();

            public MyCircularDeque(int k)
            {
                this._capacity = k;
            }
            
            public bool InsertFront(int value)
            {
                if (IsFull())
                    return false;

                this._internal.AddFirst(new LinkedListNode<int>(value));

                return true;
            }
            
            public bool InsertLast(int value)
            {
                if (IsFull())
                    return false;

                this._internal.AddLast(new LinkedListNode<int>(value));

                return true;
            }
            
            public bool DeleteFront()
            {
                if (IsEmpty())
                    return false;

                this._internal.RemoveFirst();

                return true;
            }
            
            public bool DeleteLast()
            {
                if (IsEmpty())
                    return false;

                this._internal.RemoveLast();

                return true;
            }
            
            public int GetFront()
            {
                if (IsEmpty())
                    return -1;

                return this._internal.First();
            }
            
            public int GetRear()
            {
                if (IsEmpty())
                    return -1;

                return this._internal.Last();
            }
            
            public bool IsEmpty()
            {
                return this._internal.Count == 0;
            }
            
            public bool IsFull()
            {
                return this._internal.Count == this._capacity;
            }
        }