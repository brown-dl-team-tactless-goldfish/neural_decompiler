/* Uses a linked list with insertion sort to keep track of each integer
 * seen, and deletes it when its match is encountered, so the list once
 * all iteration is performed should just be the one solo integer.
 */

struct listNode {
    struct listNode* next;
    int val;
};


int singleNumber(int* nums, int numsSize){
struct listNode* head=NULL;
struct listNode* ptr;
struct listNode* temp;
int i;
    
for (i=0; i<numsSize; i++) {
    if ((head==NULL) || (head->val > nums[i])) {
        ptr=malloc(sizeof(struct listNode));
        ptr->val = nums[i];
        ptr->next = head;
        head = ptr;
    } else if (nums[i]==head->val) head=head->next;
             else {
                 ptr = head;
                 while ((ptr->next !=NULL) && (ptr->next->val < nums[i]))
                     ptr = ptr->next;
                 if ((ptr->next !=NULL) && (ptr->next->val == nums[i]))
                     ptr->next = ptr->next->next;
                   else {
                         temp=malloc(sizeof(struct listNode));
                         temp->val = nums[i];
                         temp->next = ptr->next;
                         ptr->next = temp;
                   }
             }
}
return head->val;
}
    
    
	