public class Solution {
    public int ClosetTarget(string[] words, string target, int startIndex) {
        int min_dist = Int32.MaxValue;
        for (var i = 0; i < words.Length; i++)
        {
            if (!words[i].Equals(target))
                continue;

            int loc_target_diff = Math.Abs(startIndex - i);

            // Calculate indices difference considering it's a circular array, that's why -> Math.Abs(loc_target_diff - words.Length)
            min_dist = Math.Min(min_dist, Math.Min(loc_target_diff, Math.Abs(loc_target_diff - words.Length)));
        }
        
        return min_dist == Int32.MaxValue ? -1 : min_dist;
    }
}