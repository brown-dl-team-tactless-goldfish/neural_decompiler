class Solution {
public:
    bool canChange(string start, string target) {
        
        std::deque<std::pair<char, int>> dq;
        
        for (int i = 0; i < start.length(); ++i)
        {
            char c = start.at(i);
            if (c != '_')
            {
                dq.push_back({c, i});
            }
        }
        
        for (int i = 0; i < target.length(); ++i)
        {
            char cc = target.at(i);
            
            if (cc != '_')
            {
                if (dq.empty())
                    return false;
                
                auto [c, pos] = dq.front();
                dq.pop_front();
                
                if (c != cc)
                {
                    return false;
                } 
                else if (c == 'L' && pos < i)
                {
                    return false;
                }
                else if (c == 'R' && pos > i)
                {
                    return false;
                }
            }
        }
        return dq.empty();
    }
};