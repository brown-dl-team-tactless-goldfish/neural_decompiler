using PII = pair<int, int> ;
class Solution {
public:
    int minimumVisitedCells(vector<vector<int>>& grid) {
        int m = grid.size() ;
        int n = grid[0].size() ;
        queue<PII>q ;
        q.push({0,0}) ;
        int step = 0 ;
        auto visited = vector<vector<bool>>(m, vector<bool>(n)) ;
        visited[0][0] = true ;
        while(!q.empty()){
            int sz = q.size() ;
            for(int i = 0; i < sz; i++){
                auto [x, y] = q.front() ;
                q.pop() ;
                if(x == m -1 && y == n-1)
                    return step+1 ;
                int d = grid[x][y] ;
                for(int k = d; k >= 1; k--){
                    int xx = x + k;
                    if(xx >= m)
                        continue ;
                    if(visited[xx][y])
                        continue ;
                    q.push({xx, y}) ;
                    visited[xx][y] = true ;
                }
            
                for(int k = d; k >= 0; k--){
                    int yy = y + k;
                    if(yy >= n)
                        continue ;
                    if(visited[x][yy])
                        continue ;
                    q.push({x, yy}) ;
                    visited[x][yy] = true ;
                }
            }
            step++ ;
        }
        return -1 ;
    }
};