int	ft_isprime(int nb)
{
	int	i;

	if (nb < 2)
		return (0);
	i = 2;
	while (i * i <= nb)
	{
		if (nb % i == 0)
			return (0);
		i++;
	}
	return (1);
}

int hammingWeight(uint32_t n) 
{
    int count;
    int i;

    count = 0;
    i = 0;
    while (i < 32)
    {
        if (n & 1 == 1)
            count++;
        n = n >> 1;
        i++;
    }
    return (count);
}

int countPrimeSetBits(int left, int right)
{
    int pos;
    uint32_t save;
    int tmp;
    int count;

    count = 0;
    save = 0;
    pos = left;
    while (pos <= right)
    {
        save = pos;
        tmp = hammingWeight(save);
        if (ft_isprime(tmp))
            count++;
        pos++;
    }
    return(count);
}