class Solution {
public:
    string ans="";
unordered_set<string>vis;
string findLexSmallestString(string s, int a, int b) 
{
	queue<string>q;
	q.push(s);
	vis.insert(s);
	
	while(!q.empty())
	{
		string str = q.front();
		q.pop();
		
		if(ans.length()==0)
		{
			ans=str;
		}
		else if(ans.length()>0 and str < ans)
		{
			ans=str;
		}
		//for the curr string we have the choise for adding a to all odd indices
		string temp="";
		for(int i=0;i<str.length();i++)
		{
			char ch = str[i];
			if((i%2)==0)   //it is even idex
			{
				temp.push_back(ch);
			}
			else if((i%2)!=0)
			{
				int digit1 = str[i]-'0';
				int digit2 = a;
				
				int result = (digit1+digit2)%10;
				char c = result + '0';
				
				temp.push_back(c);
			}
		}
		if(vis.find(temp)==vis.end())
		{
			q.push(temp);
			vis.insert(temp);
		}
		
		//for the curr string we have options to rotate it with b postions
		temp=str;
		rotate(temp.begin(), temp.begin()+temp.length()-b, temp.end());
		if(vis.find(temp)==vis.end())
		{
			q.push(temp);
			vis.insert(temp);
		}
	}
	return ans;
}
};