class Solution {
public:
    int ans = 1e5 + 1;
    
    void solve(int pos,vector<int>&TC , int currCost , int &T ){
        if(abs(currCost - T) < abs(ans-T)) ans = currCost ;
        if(abs(currCost-T) == abs(ans-T)) ans = min(ans,currCost) ;
        
        if(pos >= TC.size() ) return ;
        //pick zero topping 
        solve(pos+1,TC,currCost + TC[pos]*0 ,T) ;
        //pick one topping
        solve(pos+1,TC,currCost + TC[pos],T) ;
        //pick two toppings 
        solve(pos+1,TC,currCost+TC[pos]*2,T) ;
        
    }
    int closestCost(vector<int>& BC, vector<int>& TC, int T) {
        for(auto &currCost : BC) solve(0,TC,currCost,T) ;
        return ans ;
    }
};