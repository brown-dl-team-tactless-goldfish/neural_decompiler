/**
 * Return an array of arrays of size *returnSize.
 * The sizes of the arrays are returned as *columnSizes array.
 * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().
 */
int** imageSmoother(int** M, int MRowSize, int MColSize, int** columnSizes, int* returnSize) {
    int temp1=0,temp2=0;
    *returnSize=MRowSize;
    columnSizes[0]=(int*)malloc(sizeof(int)*MRowSize);
    int** result=(int**)malloc(sizeof(int*)*MRowSize);
    for(int i=0;i<MRowSize;i++)
    {
        result[i]=(int*)malloc(sizeof(int)*MColSize);
        columnSizes[0][i]=MColSize;
        for(int j=0;j<MColSize;j++)
        {
            temp2=0;
            temp1=M[i][j];
            temp2++;
            if(i-1>=0)
            {
                temp1=temp1+M[i-1][j];temp2++;
                if(j-1>=0)
                {temp1=temp1+M[i-1][j-1];temp2++;}
                if(j+1<MColSize)
                {temp1=temp1+M[i-1][j+1];temp2++;}
            }
            if(i+1<MRowSize)
            {
                temp1=temp1+M[i+1][j];temp2++;
                if(j-1>=0)
                {temp1=temp1+M[i+1][j-1];temp2++;}
                if(j+1<MColSize)
                {temp1=temp1+M[i+1][j+1];temp2++;}
            }
            if(j-1>=0)
            {temp1=temp1+M[i][j-1];temp2++;}
            if(j+1<MColSize)
            {temp1=temp1+M[i][j+1];temp2++;}
            result[i][j]=temp1/temp2;
        }
    }
    return result;
}