class Solution {
public:
    int minimumTeachings(int n, vector<vector<int>>& languages, vector<vector<int>>& friendships) {
        int m = languages.size();
        vector<set<int>> lang(m+1);
        for(int i=0; i<languages.size(); i++){
            for(int j=0;j<languages[i].size();j++){
                lang[i+1].insert(languages[i][j]);
            }
        }
        vector<vector<int>> uncommon;
        for(int j=0; j<friendships.size(); j++){
            int u =friendships[j][0], v = friendships[j][1];
            bool cmn = false;
            for(auto k:lang[u]){
                if(lang[v].find(k)!=lang[v].end()){
                    cmn=true;
                    break;
                }
            }
            if(cmn){
                continue;
            }
            uncommon.push_back(friendships[j]);
        }
        
        
        int ans = INT_MAX;
        for(int i=1; i<=n; i++){
            int cnt = 0;
            set<int> s;
            for(int j=0; j<uncommon.size(); j++){
                int u =uncommon[j][0], v = uncommon[j][1];
                if(lang[u].find(i)==lang[u].end()){
                    s.insert(u);
                }
                if(lang[v].find(i)==lang[v].end()){
                    s.insert(v);
                }
                
            }
            ans = min(ans, (int)s.size());
        }
        return ans;
    }
};
