class Solution {
public:
    #define ll long long
    ll mod = 1e9 + 7 ;
    //iterative binary exponentiation !
    ll binaryExp(ll a , ll b){
        ll ans = 1 ;
        while(b){
            if(b&1) ans = (ans%mod * a%mod) % mod ;
            a = ((a%mod)*(a%mod)) % mod ;
            b = b >> 1 ;
        }
        return ans%mod;
    }
    // ll binaryExp(ll a , ll b){
    //     if(b==0) return 1 ;
    //     ll half = binaryExp(a,b/2) ;
    //     if(b&1) return ((half * half)%mod * (a%mod) )% mod ;
    //     return (half*half)%mod ;
    // }
    int minNonZeroProduct(int p) {
        ll maxVal = ((1LL << p) - 1 ); 
        
        //half will be 1 half will be maxVal - 1 and one will be maxVal itself
        return (maxVal % mod) * binaryExp(maxVal-1,maxVal/2)% mod ;
    }
};