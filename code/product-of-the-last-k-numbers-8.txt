class ProductOfNumbers {
public:
    ProductOfNumbers() : A{1} {} // use 1 as a sentinel value
    void add(int x) {
        if (x == 0) {
            A.clear();
            A.push_back(1);
            return;
        }
        A.push_back(A.back() * x);
    }
    int getProduct(int k) {
        int N = A.size();
        if (k >= N) // the "pseudo-value" of 0 exists at index 0
            return 0;
        return A.back() / A[N - 1 - k];
    }
private:
    vector<int> A;
};