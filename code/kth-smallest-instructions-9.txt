int dp[17][17] = {};
class Solution {
    int nCr(int i, int j) {
        if (i == 1 || j == 1)
            return 1;
        return dp[i][j] ? dp[i][j] : dp[i][j] = nCr(i - 1, j) + nCr(i, j - 1);
    }
public:
    string kthSmallestPath(vector<int>& d, int k) {
        int h = d[1], v = d[0], cur = 1, i = 1;
        for (; i <= h; ++i) {
            if (nCr(v + 1, i + 1) > k)
                break;                
            cur = nCr(v + 1, i + 1);
        }
        if (k - cur == 0)
            return string(h - i + 1, 'H') + string(v, 'V') + string(i - 1, 'H');
        return string(h - i, 'H')  + "V" + kthSmallestPath(vector<int>() = {v - 1 , i}, k - cur);
    }
};