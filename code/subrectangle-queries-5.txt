struct SubrectangleQueries{
    int*rectangle;
    int c;
    int r;
};
typedef struct SubrectangleQueries SubrectangleQueries;
SubrectangleQueries* subrectangleQueriesCreate(int** rectangle, int rectangleSize, int* rectangleColSize){
    SubrectangleQueries*ret=(SubrectangleQueries*)malloc(sizeof(SubrectangleQueries));
    ret->c = *rectangleColSize;
    ret->r = rectangleSize;
    ret->rectangle = (int*)malloc(ret->r*(ret->c)*sizeof(int));
    for(int i=0;i<ret->r;i++)
        for(int j=0;j<ret->c;j++)
            *(ret->rectangle+ret->c*i+j)=rectangle[i][j];
    return ret;
}
void subrectangleQueriesUpdateSubrectangle(SubrectangleQueries* obj, int row1, int col1, 
                                           int row2, int col2, int newValue){
    for(int i=row1;i<=row2;i++)
        for(int j=col1;j<=col2;j++)
            *(obj->rectangle+obj->c*i+j)=newValue;
}
int subrectangleQueriesGetValue(SubrectangleQueries* obj, int row, int col){
    return *(obj->rectangle+obj->c*row+col);
}
void subrectangleQueriesFree(SubrectangleQueries* obj){
    free(obj->rectangle);
    free(obj);
}