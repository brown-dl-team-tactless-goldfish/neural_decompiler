class Solution {
    vector<int> g;
    int find(int i) {
        if(g[i] == i) return i;
        g[i] = find(g[i]);
        return g[i];
    }
    
    void merge(int x, int y) {
        x = find(x);
        y = find(y);
        
        g[y] = x;
    }
public:
    vector<bool> areConnected(int n, int threshold, vector<vector<int>>& queries) {
        g.resize(n+1, 0);
        for(int i=1; i<=n; i++) g[i] = i;
        
        for(int k = threshold+1; k * 2 <= n; k++) {
            int cur = k * 2;
            while(cur <= n) {
                merge(k, cur);
                cur += k;
            }
        }
        
        vector<bool> res; 
        for(auto v : queries) {
            res.push_back(find(v[0]) == find(v[1]));
        }
        return res;
    }
};