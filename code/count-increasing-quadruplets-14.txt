class Solution {
public:
	long long countQuadruplets(vector<int>& nums) {
		int n = nums.size();
		vector<vector<int>> leftC(n + 1, vector<int>(n + 1, 0));
		for (int i = 0; i < nums.size(); ++i)
		{
			for (int no = 1; no <= n; ++no)
			{
				if (nums[i] < no)
					leftC[i][no]++;
				if (i > 0)
					leftC[i][no] += leftC[i - 1][no];
			}
		}
		vector<vector<int>> rightC(n + 1, vector<int>(n + 1, 0));
		for (int i = nums.size() - 1; i >= 0; --i)
		{
			for (int no = 1; no <= n; ++no)
			{
				if (nums[i] > no)
					rightC[i][no]++;
				if (i != nums.size() - 1)
					rightC[i][no] += rightC[i + 1][no];
			}
		}
		int j, k;
		long long lc, rc;
		long long ans = 0;
		for (j = 1; j < nums.size() - 2; ++j)
		{
			for (k = nums.size() - 2; k > j ; --k)
			{
				if (nums[j] > nums[k])
				{
					lc = leftC[j][nums[k]];
					rc = rightC[k][nums[j]];
					ans += lc * rc;
				}
			}
		}
		return ans;
	}
};
