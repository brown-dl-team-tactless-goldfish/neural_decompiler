//C Solution:-

int peakIndexInMountainArray(int* arr, int arrSize)
{
    int start = 0, end = arrSize - 1, mid = (start + end) / 2, ans;
    while (start < end)
    {
        if (arr[mid] > arr[mid + 1])
        {
            if (arr[mid] >= arr[mid - 1])
            {
                ans = mid;
                break;
            }
            end = mid;
        }
        else
            start = mid;
        mid = (start + end) / 2;
    }
    return mid;
}

//C++ Solution:-

class Solution {
public:
    int peakIndexInMountainArray(vector<int>& arr)
    {
        int start = 0, end = arr.size() - 1, mid = (start + end) / 2;
        while(start <= end)
        {
            if(arr[mid] > arr[mid + 1])
            {
                if(arr[mid] > arr[mid - 1])
                    return mid;
                
                end = mid;
            }
            else
                start = mid;
            
            mid = (start + end) / 2;
        }

        return mid;
    }
};