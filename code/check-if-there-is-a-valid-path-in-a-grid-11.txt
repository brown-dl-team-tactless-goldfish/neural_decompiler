class Solution {
public:
    bool hasValidPath(vector<vector<int>>& grid) {
        int dx[] = {-1, 1, 0, 0, -1, 0, 0, 1, -1, 0, 0, 1};
        int dy[] = { 0, 0, -1, 1, 0, 1, 1, 0, 0, -1, -1, 0};
        
        int r = 0;
        int c = 0;
        
        int rp = -1;
        int cp = -1;
        
        while (true) {            
            bool found = false;
            for (int i = 0; i <= 1; ++i) {                
                int x = c + dx[(grid[r][c] - 1) * 2 + i];
                int y = r + dy[(grid[r][c] - 1) * 2 + i];
                
                if (x < 0 || x >= grid[0].size() || y < 0 || y >= grid.size() || 
                   (x == cp && y == rp)) {
                    continue;
                } 
                
                for (int j = 0; j <= 1; ++j) {                    
                    int xp = x + dx[(grid[y][x] - 1) * 2 + j];
                    int yp = y + dy[(grid[y][x] - 1) * 2 + j];
                    
                    if (xp == c && yp == r) {                       
                        found = true;
                        rp = r;
                        cp = c;
                        r = y;
                        c = x;               
                        if (r == grid.size() - 1 && c == grid[0].size() - 1) {
                            return true;
                        } 
                        break;
                    }                                
                }
                if (found) {
                    break;
                }
            }
            
            if (!found) {
                break;
            }                    
        }
        
        return r == grid.size() - 1 && c == grid[0].size() - 1;
    }
};