class Solution {
public:
    struct comp{
        bool operator()(const pair<int,int> &a, const pair<int, int> &b){
            if(a.first != b.first){
                return a.first > b.first;
            }
            else{
                return a.second < b.second;
            }
        }
    };
    int hardestWorker(int n, vector<vector<int>>& logs) {
        priority_queue<pair<int,int>, vector<pair<int, int>>, comp> pq;
        int prev=0;
        for(int itr=0; itr<logs.size(); itr++){
            pq.push({logs[itr][1]-prev, logs[itr][0]});
            if(pq.size()>1){
                pq.pop();
            }
            
            prev= logs[itr][1];
        }
        
        return pq.top().second;
    }
};