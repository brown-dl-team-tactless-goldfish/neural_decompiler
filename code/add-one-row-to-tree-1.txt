void dfs(struct TreeNode* root, int val, int depth, int tmp) {
    if(!root) return;
    if(depth - tmp == 1) {
        struct TreeNode* tmpLeft = root->left;
        struct TreeNode* tmpRight = root->right;
        struct TreeNode* newLeft = (struct TreeNode*) malloc(1 * sizeof(struct TreeNode));
        newLeft->val = val;
        root->left = newLeft;
        newLeft->left = tmpLeft;
        newLeft->right = NULL;
        
        struct TreeNode* newRight = (struct TreeNode*) malloc(1 * sizeof(struct TreeNode));
        newRight->val = val;
        root->right = newRight;
        newRight->right = tmpRight;
        newRight->left = NULL;
        return;
    }
    dfs(root->left, val, depth, tmp+1);
    dfs(root->right, val, depth, tmp+1);
}

struct TreeNode* addOneRow(struct TreeNode* root, int val, int depth) {
    if(depth == 1) {
        struct TreeNode* newRoot = (struct TreeNode*) malloc(1 * sizeof(struct TreeNode));
        newRoot->val = val;
        newRoot->left = root;
        newRoot->right = NULL;
        return newRoot;
    }
    dfs(root, val, depth, 1);
    return root;
}