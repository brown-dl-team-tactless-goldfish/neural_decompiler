
```public:
    static bool cmp(vector<int>&v1,vector<int>&v2)
    {
        return v1[1]<v2[1];
    }
    long long maxTaxiEarnings(int nn, vector<vector<int>>& rides) {
        vector<vector<int>>v;
        int n=rides.size();
        for(int i=0;i<rides.size();i++)
        {
            int x=rides[i][1]-rides[i][0]+rides[i][2];
            v.push_back({rides[i][0],rides[i][1],x});
        }
        sort(v.begin(),v.end(),cmp);
        vector<long long int>dp(n);
        dp[0]=v[0][2];
        for(int i=1;i<n;i++)
        {
            int idx=-1;
            int l=0;
            int r=i;
            while(l<=r)
            {
                int mid=(l+r)/2;
                if(v[mid][1]<=v[i][0])
                {
                    idx=mid;
                    l=mid+1;
                }
                else
                {
                    r=mid-1;
                }
            }
            if(idx==-1)
            {
                dp[i]=max(dp[i-1],(long long)v[i][2]);
            }
            else
            {
                dp[i]=max(dp[i-1],dp[idx]+(long long)v[i][2]);
            }
        }
        return dp[n-1];
    }
};