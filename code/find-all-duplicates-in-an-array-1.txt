int* findDuplicates(int* nums, int numsSize, int* returnSize){
	/* Trivial condition:
		1. If nums is NULL
		2. If there is only one element.
		Then there can be no duplicate in the array */
	if( nums == NULL || numsSize < 2) {
		*returnSize = 0;
		return 0;
	}
	/* Let ret be dynamic array */
	int *ret = NULL;
	*returnSize = 0;
	/* Traverse the array */
	for(int i = 0; i < numsSize; i++) {
		/* Each element is used toggle sign of element - 1 index */
		int ti = abs(nums[i]) - 1;
		if(nums[ti] < 0) {
			/* If we encounter negative then we have visited this index */
			*returnSize = *returnSize + 1;
			ret = realloc(ret, sizeof(int) * (*returnSize));
			ret[*returnSize - 1] = abs(nums[i]);
		}else {
			/* Toggle the sign here */
			nums[ti] = -1 * nums[ti];
		}
	}
	return ret;
}
