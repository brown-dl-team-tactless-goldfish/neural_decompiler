class Solution {
public:
    int minSwaps(vector<vector<int>>& grid) {
        int n = grid.size();
        vector<int> a;
        for(int i = 0; i < n; i++) {
            int count = 0;
            if(grid[i][n - 1] == 0) {
                int j = n - 1;
                count++;
                while(j > 0 && grid[i][j] == grid[i][j - 1]) {
                    j--;
                    count++;
                }
            }
            a.emplace_back(count);
        }
        int ans = 0;
        for(int i = 0; i < n; i++) {
            if(a[i] < n - i - 1) {
                int pos = -1;
                for(int j = i + 1; j < n; j++) {
                    if(a[j] >= n - 1 - i) {
                        pos = j;
                        break;
                    }
                }
                if(pos == -1) {
                    return -1;
                }
                int val = a[pos];
                while(pos > i) {
                    a[pos] = a[pos - 1];
                    pos--;
                    ans++;
                }
                a[i] = val;
            }
        }
        return ans;
    }
};