class Solution:
    def diStringMatch(self, S: str) -> List[int]:
        # print("1 S = ", S)

        S = list(S)
        # print("2 S = ", S)

        n = len(S)
        # print("n = ", n)

        num_D = S.count("D")
        num_I = S.count("I")

        # print("num_D = ", num_D)
        # print("num_I = ", num_I)

        target = [i for i in range(n+1)]
        # print("target = ", target)

        while (num_D > 0 or num_I > 0):
            # print("num_I = ", num_I)
            # print("num_D = ", num_D)
            if (num_I > 0):
                idx_first_I = S.index("I")
                tmp = target.pop(0)
                S[idx_first_I] = tmp

                num_I -= 1

            idx_first_D = -1
            if (num_D > 0):
                idx_first_D = S.index("D")
                tmp = target.pop()
                S[idx_first_D] = tmp

                num_D -= 1

        S = S + target
        # print("S = ", S)
        return S