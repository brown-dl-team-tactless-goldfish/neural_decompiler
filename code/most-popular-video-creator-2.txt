public class Solution {
    public IList<IList<string>> MostPopularCreator(string[] c, string[] ids, int[] views) {
        List<IList<string>> res = new();
        Dictionary<string, (string, int)> d = new(); //creator, (id, view)
        Dictionary<string, int> total = new(); //creator, total view count
        
        for(int i = 0; i < ids.Length; i++)
        {
            if(d.ContainsKey(c[i]))
            {
                total[c[i]] += views[i]; //add the total view count of that creator
                if(views[i] > d[c[i]].Item2)
                {
                    d[c[i]] = (ids[i], views[i]); //add the top view count id
                }
                else if(views[i] == d[c[i]].Item2)
                {
                    if(string.Compare(ids[i], d[c[i]].Item1) < 0) //if views are equal, add the smaller id
                        d[c[i]] = (ids[i], views[i]);
                }
            }
            else
            {
                d.Add(c[i], (ids[i], views[i]));
                total.Add(c[i], views[i]);
            }
        }
        
        var stotal = total.OrderByDescending(x => x.Value); //sort to get the highest view count
        
        int prev = stotal.First().Value; //store the highest val
        foreach(var i in stotal)
        {
            int curr = i.Value;
            if(curr < prev) //if view is less, stop the count :P
                break;
            List<string> r = new();
            r.Add(i.Key);
            r.Add(d[i.Key].Item1);
            res.Add(r); //add the values to result
        }
        
        return res;
    }
}