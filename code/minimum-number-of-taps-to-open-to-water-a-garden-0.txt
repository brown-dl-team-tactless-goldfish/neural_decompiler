#define INF 999999
#define and &&
#define or ||

int max(int a, int b)
{
    return (a > b)? a : b;
}

int min(int a, int b)
{
    return (a > b)? b : a;
}

int minTaps(int n, int* old_ranges, int rangesSize)
{
    int i, j;
    int* ranges = (int*)malloc(sizeof(int) * rangesSize);
    for(i = 0; i < rangesSize; i++)
        ranges[i] = old_ranges[i];
    
    for(i = rangesSize - 1; i >= 1; i--)
        for(j = 1; j <= old_ranges[i]; j++)
        {
            if(i - j == -1)
                break;
            ranges[i - j] = max(ranges[i - j], j + old_ranges[i]);
        }
    
    int minJump;
    int* dp = (int*)malloc(sizeof(int) * rangesSize);
    dp[rangesSize - 1] = 0;
    for(i = 0; i < rangesSize - 1; i++)
        dp[i] = INF;
    for(i = rangesSize - 2; i >= 0; i--)
    {
        minJump = INF;
        for(j = 1; j <= ranges[i]; j++)
        {
            if(i + j == rangesSize)
                break;
            minJump = min(minJump, dp[i + j]);
        }
        dp[i] = 1 + minJump;
    }
    return (dp[0] < INF)? dp[0] : -1;
}