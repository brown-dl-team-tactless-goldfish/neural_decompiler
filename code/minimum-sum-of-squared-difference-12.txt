class Solution {
public:
    long long minSumSquareDiff(vector<int>& nums1, vector<int>& nums2, int k1, int k2) {
        map<long long,long long,greater<long long>>mp;
        long long sum=0;
        for(int i=0;i<nums1.size();i++){
            mp[abs(nums1[i]-nums2[i])]++;
            sum+=abs(nums1[i]-nums2[i]);
        }
        long long op=k1+k2,ans=0;
        if(op>=sum)
            return 0;
        // sort(mp.rbegin(),mp.rend());
        while(op>0 && !mp.empty()){
            auto it=mp.begin();
            if(it->second<=op){
                mp[it->first-1]+=it->second;
                op-=it->second;
                mp.erase(it);
            }
            else
            {
                mp[it->first-1]+=op;
                mp[it->first]-=op;
                op=0;
            }
        }
        for(auto i:mp)
            ans+=i.first*i.first*i.second;
        return ans;
    }
};