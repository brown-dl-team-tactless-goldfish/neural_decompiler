class Solution {
public:
    int dp[1002][1002];
    int solve(string &s,int i,int j)
    {   
        if(i>=s.size() || j<0 || j<i) return 0; 
        if(dp[i][j]!=-1) return dp[i][j];
        int ans=INT_MIN;
        if(s[i]==s[j])
        {  
           int res=0;
           if(i==j) res=1;
           else res=2;
           int take=res+solve(s,i+1,j-1);
           ans=max(ans,take);
        }
        else
        {
            int t1=solve(s,i+1,j);
            int t2=solve(s,i,j-1);
            ans=max({ans,t1,t2});
        }
        return dp[i][j]=ans;
    }
    int longestPalindromeSubseq(string s) {
        int n=s.size();
        memset(dp,-1,sizeof(dp));
        return solve(s,0,n-1);
    }
};