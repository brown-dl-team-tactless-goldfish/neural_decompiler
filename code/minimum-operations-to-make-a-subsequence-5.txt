class Solution {
public:
    int minOperations(vector<int>& target, vector<int>& arr) {
        unordered_map<int, int> m;
        for(int i = 0; i < target.size(); ++i) {
            m[target[i]] = i + 1;
        }
        vector<int> newArr;
        for(int i = 0; i < arr.size(); ++i) {
            int n = arr[i];
            if(m[n] > 0){
                newArr.push_back(m[n]);
            }
        }

        vector<int> dp(newArr.size() + 1, INT_MAX);
        int ans = 0;
        for(auto n : newArr) {
            int idx = lower_bound(dp.begin(), dp.end(), n) - dp.begin();
            dp[idx] = n;
            ans = max(ans, idx + 1);
        }
        return target.size() - ans;
    }
};