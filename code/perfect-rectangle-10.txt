class Solution {
public:
    bool isRectangleCover(vector<vector<int>>& recs) {
        int mxcorner[] = {INT_MAX, INT_MAX, INT_MIN, INT_MIN};
        long mxp = 2 * 1e5 + 1, area = 0;
        int pos[] = {0, 1, 0, 3, 2, 1, 2, 3};
        unordered_set<size_t> corners;
        for (auto &r : recs) {
            mxcorner[0] = min(mxcorner[0], r[0]);
            mxcorner[1] = min(mxcorner[1], r[1]);
            mxcorner[2] = max(mxcorner[2], r[2]);
            mxcorner[3] = max(mxcorner[3], r[3]);
            area += (r[2] - r[0]) * (r[3] - r[1]);
            for (int i = 0; i < 8; i += 2) {
                size_t idx = (r[pos[i]] + 1e5) * mxp + r[pos[i + 1]] + 1e5;
                if (corners.count(idx)) corners.erase(idx);
                else corners.emplace(idx);
            }
        }
        for (int i = 0; i < 8; i += 2) {
            size_t idx = (mxcorner[pos[i]] + 1e5) * mxp + mxcorner[pos[i + 1]] + 1e5;
            if (!corners.count(idx)) return false;
        }
        return corners.size() == 4 && 
            ((mxcorner[2] - mxcorner[0]) * (mxcorner[3] - mxcorner[1]) == area);
    }
};