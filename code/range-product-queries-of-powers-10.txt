class Solution {
public:
    vector<int> productQueries(int n, vector<vector<int>>& queries) {
        vector<int> ans, powers;
        ans.reserve(size(queries));
        int p = 1, mod = 1e9 + 7;
        while (n) {
            if (n&1) powers.push_back(p);
            p <<= 1, n >>= 1;
        }
        int m = size(powers);
        vector<vector<long>> dp(m+1, vector<long>(m+1, 1));
        for (int i = 0; i < m; i++) {
            for (int j = i; j < m; j++)
                dp[i+1][j+1] = (dp[i+1][j] * powers[j]) % mod;
        }
        for (auto& q: queries)
            ans.push_back(dp[q[0]+1][q[1]+1]);
        return ans;
    }
};