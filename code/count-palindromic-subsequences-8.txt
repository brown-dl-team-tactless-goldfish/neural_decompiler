
class Solution {
public:
    int countPalindromes(string s) {
        int n = s.length();
        if (n < 5) return 0;
        vector<vector<int>> right(n+1, vector<int>(10, 0));
        vector<vector<int>> left(n+1, vector<int>(10, 0));
        vector<vector<int>> w(n+1, vector<int>(100, 0));
        
        
        for(int i = n-1; i >= 0; --i) {
            auto& v = right[i]; v = right[i+1];
            int x = s[i] - '0';
            v[x]++;
            if (i < (n-1)) {
                w[i] = w[i+1];
                for(int j = 0; j < 10; ++j) {
                     w[i][x*10+j] += right[i + 1][j];
                }
            }
        }
        
        for(int i = 0; i < (n-2); ++i) {
            auto& v = left[i]; if(i>0) v = left[i-1];
            int x = s[i] - '0';
            v[x]++;
        }
        
        
        int64_t ans = 0;
        int p = 1e9 + 7;
        vector<int64_t> v(100, 0);
        int a = s[0]-'0';
        int b = s[1]-'0';
        v[a+b*10] = 1;
        for(int i = 2; i < (n-2); ++i) {
            for(int d = 0; d < 100; ++d) {
                int64_t x = v[d];
                x*= w[i+1][d];
                ans+=x;
                ans%=p;
            }
            int x = s[i] - '0';
            for(int j = 0; j < 10; ++j) {
                v[x*10+j] += left[i - 1][j];
            }
            
        }
        return ans;
    }
};