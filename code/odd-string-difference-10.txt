    static string oddString(const vector<string>& words) {
        unordered_map<string, pair<int, int>> m;
        for (int i = 0; i < size(words); ++i) {
            string sig{words[i]};
            adjacent_difference(begin(sig), end(sig), begin(sig));
            sig[0] = 0;
            auto& p = m[sig];
            if (!p.first++) p.second = i;
        }
        for (auto& [k, p] : m) if (p.first == 1) return words[p.second];
        
        // unreachable
        assert(false);
        return "";
    }