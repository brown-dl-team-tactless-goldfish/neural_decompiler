class Solution {
public:

    int find(string &s, int i, vector<int> &dp) {
        if (i==s.length()) {
            return 0;
        }
        if (dp[i] != -1 ){
            return dp[i];
        }
        int x = s.length();
        if (s[i] == '0') {
            dp[i] = find(s, i+1, dp);
        } else {
            dp[i] = min(x-i, 2 + find(s, i+1, dp));
        }
        return dp[i];
    }
    
    int minimumTime(string s) {
        vector<int> dp(s.length(), -1);
        
        int ans = INT_MAX;
        int numOnes=0;
        for(int i=0; i<s.length(); i++ ){
            if (s[i] == '0') {
                if (numOnes == 0) {
                    ans = min(ans, find(s, i+1, dp));
                } else {
                    ans = min(ans, i+1 + find(s, i+1, dp));
                }
                continue;
            }
            numOnes++;
            ans = min(ans, i+1 + find(s, i+1, dp));
            //cout<<i<<" "<<i+1<<" "<<find(s, i+1, dp)<<endl;
        }
        return ans;
        
    }
};
