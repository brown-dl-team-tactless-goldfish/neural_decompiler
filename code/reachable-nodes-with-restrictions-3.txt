class Solution {
public:
    int reachableNodes(int n, vector<vector<int>>& edges, vector<int>& restricted) {
        vector<vector<int>> adj(n);
        for(auto &x:edges)
        {
            adj[x[0]].push_back(x[1]);
            adj[x[1]].push_back(x[0]);
        }
        set<int> st;
        for(auto &it:restricted)
        {
            st.insert(it);
        }
        if(st.find(0)!=st.end())
        {
            return 0;
        }
        queue<pair<int,int>> q;
        q.push({0,-1});
        int ans=1;
        while(!q.empty())
        {
            pair<int,int> ele=q.front();
            q.pop();
            int node=ele.first;
            int par=ele.second;
            //ans++;
            for(auto &x:adj[node])
            {
                if(st.find(x)!=st.end())
                {
                    continue;
                }
                if(x!=par)
                {
                    q.push({x,node});
                    ans++;
                }
            }
        }
        
        return ans;
    }
};