class Solution {
public:
    int maximumsSplicedArray(vector<int>& nums1, vector<int>& nums2) {
        int n = nums1.size() ;
        int sum1 = accumulate(nums1.begin(), nums1.end(), 0) ;
        int sum2 = accumulate(nums2.begin(), nums2.end(), 0) ;
        vector<int>diff(n) ;
        for(int i = 0; i < n; i++)
            diff[i] = nums1[i] - nums2[i] ;
        int maximum = 0 ;
        int preSum = 0;
        for(int i = 0; i < n; i++){
            preSum += diff[i] ;
            if(preSum < 0)
                preSum = 0 ;
            maximum = max(maximum, preSum) ;
        }
        int ret = sum2 + maximum ;
        
        for(int i = 0; i < n; i++)
            diff[i] = nums2[i] - nums1[i] ;
        maximum = 0 ;
        preSum = 0;
        for(int i = 0; i < n; i++){
            preSum += diff[i] ;
            if(preSum < 0)
                preSum = 0 ;
            maximum = max(maximum, preSum) ;
        }
        ret = max(ret, sum1 + maximum) ;
        return ret ;
    }
};