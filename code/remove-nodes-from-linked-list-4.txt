/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNodes(ListNode* head) {
        ListNode* handle = new ListNode;
        handle->next = head;
        ListNode* ptr = head;
        ListNode* pre = handle;
        int val[100000];
        int rtl[100000];
        int i = 0;
        while (ptr){
            val[i++] = ptr->val;
            ptr = ptr->next;
        }
        int maximum = INT_MIN;
        for (int j = i - 1; j > -1; j--){
            maximum = max(maximum, val[j]);
            rtl[j] = maximum;
        }
        ptr = head;
        i = 0;
        while (ptr){
            if (ptr->val < rtl[i++])
                pre->next = ptr->next;
            else
                pre = ptr;
            ptr = ptr->next;
        }
        return handle->next;
    }
};