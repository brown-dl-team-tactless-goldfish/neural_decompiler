class Solution {
public:
    double helper(int mid , vector<int> &dist){
        int n = dist.size();
        double ans = 0;
        for(int i = 0 ; i < n ; i++){
            if(i==n-1){
                ans += (dist[i]/(1.0*mid));
            }else{
                 ans += ceil(dist[i]/(1.0*mid));
            }
        }
        return ans;
    }
    int minSpeedOnTime(vector<int>& dist, double hour) {
        int low = 1;
        int high = 1e9;
        while(low<=high){
            int mid  = low + (high-low)/2;
            double check = helper(mid,dist);
            
            if(check <= hour){
                high=mid-1;
            }else{
                low=mid+1;
            }
        }
        return low>=1e9?-1:low;      
    }
};