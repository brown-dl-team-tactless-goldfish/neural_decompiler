/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* pancakeSort(int* A, int ASize, int* returnSize){
    if (ASize < 2)
        return A;
    
    int *ret = malloc(4*ASize * sizeof(int));    
    int ret_sz = 0;
    
    for (int i = 1; i < ASize; i++){
        
        int num_more = 0;
        for (int j = 0; j < i; j++)
            num_more += (A[j] > A[i]);
        if (num_more){      //+1 because directions were unclear?
            ret[ret_sz++] = i + 1; 
            ret[ret_sz++] = num_more + 1; 
            ret[ret_sz++] = num_more - 1 + 1;
            ret[ret_sz++] = i + 1;
        }            
    }
    
    *returnSize = ret_sz;
    return ret;
}