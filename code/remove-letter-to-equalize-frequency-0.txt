int cmp(const void* a, const void * b){
    return *(int*)b - *(int*)a;
}
bool equalFrequency(char * word){
    int n = strlen(word);
    int* cn = calloc(26 , sizeof(int));
    for(int i = 0; i < n; i++){
        cn[word[i] - 'a']++;
    }
    qsort(cn, 26, sizeof(int), cmp);
    int end;
    int type = 1;
    for(int i = 1; i < 26; i++ ){
        if(cn[i] == 0){
            end = i-1;
            break;
        }
        if(cn[i] != cn[i-1])
            type++;
    }
    if(type == 1 ){
        if(cn[0] == 1 || cn[1] == 0)
            return true;
        else 
            return false;
    }
    else if(type == 2){
        if((cn[0] - cn[1]) == 1)
            return true;        
        else if(cn[end] == 1 && cn[end] != cn[end-1])
            return true;
        else
            return false;
    }
    else
        return false;
        
}