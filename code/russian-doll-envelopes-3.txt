class Solution {
    static bool compare(vector<int>v1, vector<int>v2) {
        return v1[0] < v2[0] || (v1[0] == v2[0] && v1[1] < v2[1]);
    }
public:
    int maxEnvelopes(vector<vector<int>>& envelopes) {
        
        int n = envelopes.size();
        if (n == 0) return 0;
        
        sort(envelopes.begin(), envelopes.end(), compare);
        
        int LIS[n];
        for (int i = 0; i < n; i++)
            LIS[i] = 1;
        
        int ans = 1;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < i; j++) {
                if (envelopes[i][0] > envelopes[j][0] && envelopes[i][1] > envelopes[j][1])
                    LIS[i] = max(LIS[i], 1+LIS[j]);
            }
            ans = max(ans, LIS[i]);
        }
        
        return ans;
    }
};