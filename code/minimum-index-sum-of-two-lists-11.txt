struct am { char *r; int s; }; 

int cmp(const void *x, const void *y){
    return ((const struct am *)x)->s - ((const struct am *)y)->s;
}

char ** findRestaurant(char ** list1, int list1Size, char ** list2, int list2Size, int* returnSize){
    char **a = malloc(sizeof(char *[1000])), **l1 = list1, **l2 = list2;
    int k = 0, l = 0, n = 0;
    struct am m[1000];    
    for (int i = 0 ; i < list1Size ; i++)
        for (int j = -1 ; ++j < list2Size ; !strcmp(l1[i], l2[j]) ? m[k].r = l1[i], m[k++].s = i + j : 0);
    qsort(m, k, sizeof(struct am), cmp);
    for (l = m[0].s, n = -1 ; ++n < k && m[n].s == l ; a[n] = m[n].r);
    return *returnSize = n, a;
}