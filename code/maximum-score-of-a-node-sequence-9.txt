class Solution {
public:
    int ans = -1;
    // vector<vector<int>> dp;
    // vector<bool> visited;
    int total = 0;
    
    int maximumScore(vector<int>& arr, vector<vector<int>>& ed) {
        int n = arr.size();
        vector<pair<int,int> > gr[n];
        
        for(int i=0;i<ed.size();i++) {
            int src = ed[i][0];
            int dest = ed[i][1];
            gr[src].push_back({arr[dest], dest});
            gr[dest].push_back({arr[src], src});
            
        }
        
        for(int i=0;i<n;i++) {
            sort(gr[i].begin(), gr[i].end());
            reverse(gr[i].begin(), gr[i].end());
        }
        
        for(int i=0;i<ed.size();i++) {
            int nB = ed[i][0];
            int nC = ed[i][1];
            
            int total = arr[nB] + arr[nC];
            
            for(int j=0;j<gr[nB].size() && j<3;j++) {
                for(int k = 0; k<gr[nC].size() && k<3; k++) {
                    int nA = gr[nB][j].second;
                    int nD = gr[nC][k].second;
                    
                    if(nA!=nB && nA!=nC && nA!=nD && nD!=nB && nD!=nC) {
                        int sum = total + arr[nA] + arr[nD];
                        ans = max(ans, sum);
                    }
                }
            }
           
        }
        
        return ans;
    }
};