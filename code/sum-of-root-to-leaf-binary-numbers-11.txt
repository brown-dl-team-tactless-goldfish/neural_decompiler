# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def sumRootToLeaf(self, root: TreeNode) -> int:
        self.res = 0
        
        def helper(curNode, curString):
            if (curNode == None):
                return
            if (curNode.left == None and curNode.right == None):
                curString += str(curNode.val)
                self.res += int(curString, 2)
                return
            elif (curNode.left != None and curNode.right == None):
                helper(curNode.left, curString+str(curNode.val))
            elif (curNode.left == None and curNode.right != None):
                helper(curNode.right, curString+str(curNode.val))
            else:
                helper(curNode.left, curString+str(curNode.val))
                helper(curNode.right, curString+str(curNode.val))
                
        helper(root, "")
        print ("self.res = ", self.res)
        return self.res