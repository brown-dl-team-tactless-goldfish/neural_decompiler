char * largestMerge(char * word1, char * word2){
    int i=0, j, L = strlen(word1) + strlen(word2) + 1;
    char c, *merge = malloc(L * sizeof(char));
    merge[L-1] = '\0';
    while(1) {
        if (*word1 == '\0') {
            while(*word2 != '\0') {
                merge[i++] = *word2;
                ++word2;
            }
            return merge;
        } else if (*word2 == '\0') {
            while(*word1 != '\0') {
                merge[i++] = *word1;
                ++word1;
            }
            return merge;
        } else if (*word1 > *word2) {
            merge[i++] = *word1;
            ++word1;
        } else if (*word1 < *word2) {
            merge[i++] = *word2;
            ++word2;
        } else { // same letter
             c = *word1;
            for (j = 0; word1[j] == word2[j] && word1[j] != '\0'; ++j);
            if (word1[j] > word2[j]) {
                while(*word1 == c) {
                    merge[i++] = *word1;
                    ++word1;
                }  
            } else {
                while(*word2 == c) {
                    merge[i++] = *word2;
                    ++word2;
                }
            }
        }
    }
}