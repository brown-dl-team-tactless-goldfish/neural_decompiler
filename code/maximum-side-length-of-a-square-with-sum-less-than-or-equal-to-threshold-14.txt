class Solution {
private:
    int arr[301][301] = {0};
    int m, n;
    bool check(int c, int threshold) {
        int ans=INT_MAX;
        for(int i=c ; i<=m ; i++){
            for(int j=c ; j<=n ; j++){
                ans = min(ans, arr[i][j]+arr[i-c][j-c]-arr[i-c][j]-arr[i][j-c]);
            }
        }
        return ans<=threshold;
    }    
public:
    int maxSideLength(vector<vector<int>>& mat, int threshold) {
        for(int i=1 ; i<=mat.size() ; i++) {
            for(int j=1 ; j<=mat[0].size() ; j++) {
                arr[i][j] = arr[i][j-1]+mat[i-1][j-1]+arr[i-1][j]-arr[i-1][j-1];
            }
        }
        m=mat.size(), n=mat[0].size();
        int l=0, r=min(m, n), c;
        
        while(l<=r){
            c = (l+r)/2;
            
            if(check(c, threshold)){
                l = c+1; 
            } else {
                r = c-1;
            }
        }
        return l-1;
    }
};