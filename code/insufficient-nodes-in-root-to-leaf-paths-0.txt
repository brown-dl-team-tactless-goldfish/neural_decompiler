/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */

int traverse(struct TreeNode* root, int s, int limit)
{
    if (root == NULL)
        return 1;
    
    if (root->left == NULL && root->right == NULL) {
        int curr_s = root->val + s;
        return curr_s < limit;
    }
    
    int del_left = traverse(root->left, s + root->val, limit);
    int del_right = traverse(root->right, s + root->val, limit);
    
    if (del_left) {
        free(root->left);
        root->left = NULL;    
    }
    
    if (del_right) {
        free(root->right);
        root->right = NULL;
    }
    
    return del_left && del_right;
}


struct TreeNode* sufficientSubset(struct TreeNode* root, int limit)
{
    int del_root = traverse(root, 0, limit);
    if (del_root) {
        free(root);
        return NULL;
    } else {
        return root;
    }
}