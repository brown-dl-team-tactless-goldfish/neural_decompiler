 public IList<IList<int>> FourSum(int[] nums, int target) {
        Array.Sort(nums);
        return  KSum(nums,target,4,0);                
    }
    
    public IList<IList<int>> KSum(int[] nums,long target,int k,int start){
         IList<IList<int>> result=new List<IList<int>>();
                if(k==2){
        int left=start;
        int right=nums.Length-1;
        while(left<right){
            long sum=nums[left]+nums[right];
            if(sum>target){
                right--;
            }
            else if(sum<target){
                left++;
            }
            else
            {
               
                result.Add(new List<int>{nums[left],nums[right]});
                while(left<right && nums[left]==nums[left+1]){
                   left++; 
                }
                 while(left<right && nums[right]==nums[right-1]){
                   right--; 
                }
                left++;
                right--;
                
            }
        }
        }
        else{
            for(int i=start;i<nums.Length+1-k;i++){
                while(i>start && i<nums.Length-1 && nums[i]==nums[i-1]){
                    i++;
                }
               var temp= KSum(nums,target-nums[i],k-1,i+1);
               foreach(var ele in temp){
                   ele.Add(nums[i]);
               }  
                foreach(var ele in temp){
                    result.Add(ele);
                }
               
            }            
        }

         return result;
        
    }