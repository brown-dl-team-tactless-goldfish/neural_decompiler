class Solution {
public:
    int maxEqualFreq(vector<int>& nums) {
        int n=nums.size();
        unordered_map<int,int>map1,map2;
        //unordered_map<int,int>map2;
        //map2 is counting the frequency of map1[i]'s frequency
        int count=INT_MIN;
        for(int i=0;i<n;i++){
            map1[nums[i]]++;
            map2[map1[nums[i]]]++;//counting frequency of frequency
            if(i<n-1&&(map2[map1[nums[i]]]*map1[nums[i]]==(i+1)))
                count=max(count,i+2);
            else if((map2[map1[nums[i]]]*map1[nums[i]]==(i)))
                count=max(count,i+1);
        }
        return count;
        
        
    }
};