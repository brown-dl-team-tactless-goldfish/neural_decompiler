bool Palindrome(char *head, char *tail)
{
	while (head < tail) {
		if (*head != *tail)
			return false;

		++head;
		--tail;
	}

	return true;
}

/**
 * TESTCASES
 *
 * __base__
 * aebcdecba
 * aebcdcba
 *
 * __advanced__
 * cuucu
 * ebcbbececabbacecbbcbe
 * [begin]aguokepatgbnvfqmgmlcupuufxoohdfpgjdmysgvhmvffcnqxjjx
 * qncffvmhvgsymdjgpfdhooxfuupuculmgmqfvnbgtapekouga[end]
 * [begin]pidbliassaqozokmtgahluruufwbjdtayuhbxwoicviygilgzduu
 * dzgligyviciowxbhuyatdjbwfuurulhagtmkozoqassailbdip[end]
 */
bool ValidPalindrome(char *s)
{
	char *head, *tail;

	head = s;
	tail = s + strlen(s) - 1;

	while (head < tail) {
		if (*head != *tail) {
			if (Palindrome(head + 1, tail) ||
			    Palindrome(head, tail - 1))
				return true;
			else
				return false;
			/*return Palindrome(head + 1, tail) ||
				Palindrome(head, tail - 1);*/
		}

		++head;
		--tail;
	}

	return true;
}