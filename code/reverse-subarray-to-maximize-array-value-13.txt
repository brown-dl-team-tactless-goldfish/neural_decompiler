class Solution {
public:
    int maxValueAfterReverse(vector<int>& nums) {
        
        int orig =  0  ;    
        
        
        for(int i   = 0 ;  i <  nums.size() - 1 ; ++i)
        {
               orig += abs( nums[i] - nums[i+1]) ;
        }
        
        
        
       int ans  =  orig ;   
        

        
        
      int first =  INT_MAX ; 
      int second =  INT_MAX ;  
      int third = INT_MIN ;   
      int fourth =  INT_MIN ; 
        
        int n  = nums.size() ;
        
        
       
        //find answer taking ith element as the starting point  
        
        for(int i   =  n - 2  ; i >=1 ;  --i)
        {
            
            
            //finding best possible ending point for starting point i
         
                int prev  =  nums[i-1]  ;
                int cur   = nums[i] ; 
                if(i != n-2 )
                {
                
                 int y1 = (nums[i-1] + nums[i]) - abs(prev - cur) - first  + orig;
                 int y2 = (nums[i-1] - nums[i]) - abs(prev - cur) - second  + orig;
                 int y3 = (nums[i] - nums[i-1]) - abs(prev - cur) + third + orig ;
                 int y4 = -(nums[i-1] + nums[i]) - abs(prev - cur)  + fourth + orig ;   
                 ans =  max(  max(  y4 ,   max(y1  , max(y2,y3) ) )  , ans ) ;  
                }
                first    = min(first  , nums[i] + nums[i+1] + abs(nums[i] - nums[i+1])  )  ; 
                second  = min(second ,   nums[i] - nums[i+1] + abs(nums[i] - nums[i+1]) ) ; 
                third  = max( third ,   nums[i] - nums[i+1] - abs(nums[i] - nums[i+1]) ) ; 
                fourth  = max(fourth,   nums[i] + nums[i+1] - abs(nums[i] - nums[i+1]) ) ;
                
                      
                
                //taking last element as ending point
                ans = max(ans , -abs(prev -cur) + abs(prev - nums[nums.size()-1] + orig) ) ; 
                
     
        }
        
        
        
        //for 0th element as starting point    
        
        
        for(int i  = 1 ;  i  < n- 1 ;  ++i)
        {
              ans = max(ans , -abs(nums[i] -nums[i+1]) + abs(nums[0] - nums[i + 1]) + orig)  ; 
        }
        
    
        
        
        return ans  ; 
        
    }
};
