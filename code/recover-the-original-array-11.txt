class Solution {
public:
    vector<int> recoverArray(vector<int>& arr) {
        int n=(int)arr.size();
        sort(arr.begin(),arr.end());
        multiset<int>mt;
        for(int i=0;i<n;i++){
            mt.insert(arr[i]);
        }
        for(int i=1;i<n;i++){
            int d=arr[i]-arr[0];
            if(d%2==1||d==0){
                continue;
            }
            multiset<int>mt1=mt;
            vector<int>ans;
            for(int j=0;j<n;j++){
                if(!mt1.count(arr[j])){
                    continue;
                }
                if(!mt1.count(arr[j]+d)){
                    break;
                }
                mt1.erase(mt1.find(arr[j]));
                mt1.erase(mt1.find(d+arr[j]));
                ans.push_back(arr[j]+d/2);
            }
            if(mt1.empty()){
                return ans;
            }
        }
        return {};   
    }
};