void find(int* answer, int row, int col, int** mat, int matSize, int* matColSize){
    int top, bottom, left, right;
    if(check == 0){             //if we didn't find the solution yet then get into the recursion
        top = row - 1;          //these variables means each element around the target
        bottom = row + 1;
        left = col - 1;
        right = col + 1;
        if(top < 0 || mat[top][col] < mat[row][col]){                   //check if the target satisfy the condition
            if(bottom >= matSize || mat[bottom][col] < mat[row][col]){
                if(left < 0 || mat[row][left] < mat[row][col]){
                    if(right >= (*matColSize) || mat[row][right] < mat[row][col]){
                        check = 1;                  // if the target is the answer let all recursion shutdown and return the answer
                        answer[0] = row;
                        answer[1] = col;
                        return;
                    }
                }
            }
        }
        
        //if the target not the answer its means there are someone bigger around it
        //and the recursion is start from the left and top
        //so we only need to check the right and bottom
        if(bottom < matSize && mat[bottom][col] > mat[row][col]) find(answer, bottom, col, mat, matSize, matColSize);
        if(right < (*matColSize) && mat[row][right] > mat[row][col]) find(answer, row, right, mat, matSize, matColSize);
    }else return;
}