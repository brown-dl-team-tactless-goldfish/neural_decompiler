int CntChr(char *s, char ch)
{
    int cnt = 0;
    for (int i = 0; s[i] != '\0'; i++) {
        if (s[i] == ch) {
            cnt++;
        }
    }
    return cnt;
}

_Bool IsIpv4(char *IP)
{
    if (CntChr(IP, '.') != 3)
        return 0;
    
    char *pch = strtok(IP, ".");
    int cnt = 0;
    char *pEnd = NULL;
    while (pch != NULL) {
        cnt++;
        int x = strtol(pch, &pEnd, 10);
        if (strlen(pEnd) != 0 || x < 0 || x > 255 ||
            (x == 0 && strlen(pch) != 1) ||
            strlen(pch) > (int)log10(x) + 1) {
            return 0;
        }
        pch = strtok(NULL, ".");
        pEnd = NULL;
    }
    return cnt == 4;
}

_Bool IsIpv6(char *IP)
{
    if (CntChr(IP, ':') != 7)
        return 0;
    
    char *pch = strtok(IP, ":");
    int cnt = 0;
    char *pEnd = NULL;
    while (pch != NULL) {
        cnt++;
        int x = strtol(pch, &pEnd, 16);
        if (strlen(pch) > 4 || strlen(pEnd) != 0 || x < 0 || x > 0xffff) {
            return 0;
        }
        pch = strtok(NULL, ":");
        pEnd = NULL;
    }
    return cnt == 8;
}

char * validIPAddress(char * IP)
{
    _Bool is4 = 0;
    _Bool is6 = 0;
    if (strchr(IP, '.') != NULL) {
        is4 = IsIpv4(IP);
    } else if (strchr(IP, ':') != NULL) {
        is6 = IsIpv6(IP);
    }
    
    return is4 ? "IPv4" : (is6 ? "IPv6" : "Neither");
}