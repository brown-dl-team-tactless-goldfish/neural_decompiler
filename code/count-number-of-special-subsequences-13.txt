class Solution {
public:    
    int mod = 1e9+7;
    
    int countSpecialSubsequences(vector<int>& nums) {
        vector<int> dp[nums.size()];
        for (int i = 0; i < nums.size(); i++)
            dp[i].resize(4, -1);
        
        return dfs(nums, 0, -1, dp);
    }
    
    int dfs(vector<int>& nums, int i, int prev, vector<int> dp[]){
        if (i == nums.size()) return 0;
        
        if (dp[i][prev+1] != -1) return dp[i][prev+1];
        
        int res = dfs(nums, i+1, prev, dp);
        
        if (prev != nums[i]-1 && prev != nums[i])
            return dp[i][prev+1] = res;
        
        if (nums[i] == 2) res++;
        
        return dp[i][prev+1] = (res + dfs(nums, i+1, nums[i], dp))%mod;
    }
};