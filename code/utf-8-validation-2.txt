
int utf8_len(int d)
{
    // returns the number of 1s until the first 0
    int n = 0;
    while ((d & (1 << 7)) != 0) {
        d = d << 1;
        n++;
    }
    return (n > 0) ? n : 1;
}

int check_data_byte(int d)
{
    bool first = (d & (1 << 7)) != 0;
    bool secnd = (d & (1 << 6)) == 0;
    return first && secnd;
}

bool validUtf8(int* data, int dataSize)
{
    int i = 0;
    int j;
    
    while (i < dataSize) {
        int n = utf8_len(data[i]);
        if (check_data_byte(data[i]))
            return false;
        if (n > 4)
            return false;
        for (j = 1; j < n; j++) {
            if ((i + j) == dataSize)
                return false;
            if (!check_data_byte(data[i + j]))
                return false;
        }
        i += n;
    }
    return true;
}