class Solution {
public:
    int minSumOfLengths(vector<int>& arr, int target) {
        int n = arr.size(), i=n-1, j=n-1, ans=INT_MAX, sum=0;
        vector<int> dp(n+1,-1);//dp[i]: the min length of substring in s[i:n]
        //and has sum which equals to target
        while(i>=0)
        {
            sum+=arr[i];
            while (sum>target)
                sum-=arr[j--];
            if (sum==target)
            {
                dp[i] = j-i+1;
                if (dp[i+1] != -1 && dp[i+1] < dp[i]) 
                    dp[i] = dp[i+1];
                if (dp[j+1] != -1)
                    ans = min(ans, j-i+1 + dp[j+1]);
            }
            else
                dp[i] = dp[i+1];
            i--;
        }
        return ans==INT_MAX?-1:ans;
    }
};