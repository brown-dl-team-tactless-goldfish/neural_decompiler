void Swap(int* pA, int* pB)
{
    int tmp = *pA;
    
    *pA = *pB;
    *pB = tmp;
}

void ReverseArray(int* pNums, int start, int numsSize)
{
    int* pResetNums = &pNums[start];
    for(int i = 0; i < (numsSize/2); i++)
    {
        Swap(&pResetNums[i], &pResetNums[numsSize - 1 - i]);
    }
}

int FindPivotIndex(int* pNums, int numsSize)
{
    int tail = numsSize - 1;
    int next = numsSize - 2;
    
    while((next > 0) && (pNums[next + 1] <= pNums[next]))
    {
        next--;
    }
    if(next >= 0)
    {
        while((tail > 0) && (pNums[tail] <= pNums[next]))
        {
            tail--;
        }
    }
    Swap(&pNums[tail], &pNums[next]);
    
    return (tail == next) ? next : (next + 1);
}

void nextPermutation(int* pNums, int numsSize)
{
    if (!pNums || (numsSize <= 1))
    {
        return;
    }
    
    int pivotIndex = FindPivotIndex(pNums, numsSize);
    ReverseArray(pNums, pivotIndex, (numsSize - pivotIndex));
}