#include <string.h>

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
char ** simplifiedFractions(int n, int* returnSize) {
  int maxFractions = (n)*(n-1) / 2;
  int size = sizeof(char*)*maxFractions;
  char **solution = (char**) malloc(size);
  int fractionsFound = 0;
  for(int denominator = 2; denominator <= n; denominator++) {
    char dom[4];
    sprintf(dom, "%d", denominator);
    for(int numerator = 1; numerator < denominator; numerator++) {
      if(1 == gcd(numerator, denominator)) {
        char fraction[4];
        sprintf(fraction, "%d", numerator);
        char slash[] = "/";
        strcat(strcat(fraction, slash), dom);
        solution[fractionsFound++] = &fraction;
      }
    }
  }
  returnSize = fractionsFound;
  //printf(solution[0]);
  return solution;
}

int gcd(int smaller, int larger) {
  while(smaller > 1) {
    int mod = larger % smaller;
    smaller = mod;
    larger = smaller;
  }
  if(smaller == 1) {
    return smaller;
  }
  return larger;
}