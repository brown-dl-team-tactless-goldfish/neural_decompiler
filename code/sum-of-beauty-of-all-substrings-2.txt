	// FOR FREQUENCY OF EACH CHAR 
	vector<int> cnt;
    
	// CALCULATE BEAUTY OF A SUBSTRING
    int beauty() {
        int mn = INT_MAX, mx = INT_MIN;
        for(auto val: cnt) {
            if(val == 0) {
			   // THIS CHAR DOES NOT OCCUR IN THE SUBSTRING
                continue;
            }
            mn = min(mn, val);
            mx = max(mx, val);
        }
        return mx-mn;
    }
    
    int beautySum(string s) {
        int n = s.length();
        int ans = 0;

        for(int i=0; i<n; i++) {
            cnt.assign(26, 0);
            for(int j=i; j<n; j++) {
			    // s[i....j] IS A SUBSTRING, ADD BEAUTY TO THE ANSWER
                int c = s[j] - 'a';
                cnt[c]++;
                ans += beauty();
            }
        }
        return ans;
    }