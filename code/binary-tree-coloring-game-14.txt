	int go(TreeNode *root) {
        if(!root) {
            return 0;
        }
        return 1 + go(root->left) + go(root->right);
    }
    
    int l, r;
    
    void findNode(TreeNode *root, int x) {
        if(!root) {
            return;
        }
        if(root->val == x) {
            l = go(root->left);
            r = go(root->right);
            return;
        }
        findNode(root->left, x);
        findNode(root->right, x);
    }
    
    bool btreeGameWinningMove(TreeNode* root, int n, int x) {
        if(n == 1) {
            return false;
        }
    
        l = r = 0;
		
		// find the root and count the left and right children
        findNode(root, x);
        
		// case 1 and 2 
        if(l > n/2 || r > n/2) {
            return true;
        }
        
		// case 3
        return (l + r + 1) < (n+1)/2;
    }