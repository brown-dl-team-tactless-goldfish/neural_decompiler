Runtime: 25 ms, faster than 17.78% of C online submissions for Construct Binary Tree from Preorder and Inorder Traversal.
Memory Usage: 11.9 MB, less than 49.63% of C online submissions for Construct Binary Tree from Preorder and Inorder Traversal.


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */

int find(int targ, int *inorder, int size)
{
    for(int i = 0;i<size; i++)
    {
        if(inorder[i] == targ)
            return i;
    }
    return -1;
}

typedef struct TreeNode treeNode;
treeNode * dfs(int *preOrder, int preStart, int preEnd,
         int *inOrder, int inStart, int inEnd, int inSize)
{
    if(preStart<0 || preStart > preEnd || inStart > inEnd)
        return NULL;
    
    treeNode * root = calloc(1, sizeof(treeNode));
    root->val = preOrder[preStart];
    int idx = find(root->val, inOrder, inSize);
    int numsLeft = idx - inStart;
    //int numsRight = inEnd - idx;
    root->left = dfs(
        preOrder, preStart+1, preStart + numsLeft,
        inOrder, inStart, idx-1, inSize);
    root->right = dfs(
        preOrder, preStart+numsLeft+1, preEnd,
        inOrder, idx+1, inEnd, inSize );
    return root;
}


struct TreeNode* buildTree(int* preorder, int preorderSize, int* inorder, int inorderSize){
    int map[6000];
    
    return (dfs(preorder, 0,  preorderSize-1, 
       inorder,0, inorderSize-1, inorderSize ) );
}