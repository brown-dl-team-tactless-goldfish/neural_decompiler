	int maxCompatibilitySum(vector<vector<int>>& students, vector<vector<int>>& mentors) {
        int maxScore = 0;
        
        vector<int> studentId, mentorId;
        for (int i = 0; i < students.size(); i++) {
            studentId.push_back(i);
            mentorId.push_back(i);
        }
        
        int n = mentors[0].size();
        int maxSum = 0;
        
        do {
            int sum = 0;
            for (int j = 0; j < mentorId.size(); j++) {
                int cnt = 0;
                for (int k = 0; k < n; k++) {
                    if (mentors[mentorId[j]][k] == students[studentId[j]][k]) {
                        cnt++;
                    }
                }
                sum += cnt;
            }
            if (maxSum < sum) {
                maxSum = sum;
            }
            
        } while (next_permutation(studentId.begin(), studentId.end()));
        
        return maxSum;
    }