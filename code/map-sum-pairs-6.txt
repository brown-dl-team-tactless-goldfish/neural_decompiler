public class TrieNode
{
    public int Val;
    public Dictionary<char,TrieNode> Children;
    
    public TrieNode(){
        Val = 0;
        Children = new Dictionary<char,TrieNode>();
    }
}

public class MapSum {

    public TrieNode root;
    
    /** Initialize your data structure here. */
    public MapSum() {
        
        root = new TrieNode();
    }
    
    public void Insert(string key, int val) {
        
        TrieNode curr = root;
        foreach(char c in key)
        {
            if(!curr.Children.ContainsKey(c))
                curr.Children[c] = new TrieNode();
            curr = curr.Children[c];
        }
        
        curr.Val = val;
    }
    
    public int Sum(string prefix) {
        
        TrieNode curr = root;
        foreach(char c in prefix)
        {
            if(!curr.Children.ContainsKey(c))
                return 0;
            curr = curr.Children[c];
        }  
        
        return GetSumDFS(curr);
    }
    
    private int GetSumDFS(TrieNode node)
    {
        int sum = node.Val;    
        foreach(var kv in node.Children)
            sum += GetSumDFS(kv.Value);
        
        return sum;
    }
}