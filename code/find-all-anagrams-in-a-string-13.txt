

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* findAnagrams(char * s, char * p, int* returnSize){
    int i, idx = 0;
    int len1 = strlen(s);
    int len2 = strlen(p);
    int* buffer = NULL;
    int* result = NULL;
    int count = 0, tempCount = 0;
    
    if(len1<len2)
    {
        * returnSize = 0;
        return NULL;
    }
    
    result = (int*)malloc(len1*sizeof(int));
    
    buffer = (int*)calloc(26,sizeof(int));
    for(i=0;i<len2;i++)
    {
        buffer[p[i]-'a']++;
    }
    count = len2;
    
    for(i=0;i<len2;i++)
    {
        if(buffer[s[i]-'a'] > 0)
            tempCount++;
        buffer[s[i]-'a']--;
    }
    
    // check if find all chars
    if(tempCount == count)
    {
        result[idx++] = 0;
    }
    // start to slide window, check more
    for(i=len2;i<len1;i++)
    {
        // remove the previous one
        buffer[s[i-len2]-'a']++;
        if(buffer[s[i-len2]-'a'] > 0)
            tempCount--;

        // add a new one
        buffer[s[i]-'a']--;
        if(buffer[s[i]-'a']>=0)
            tempCount++;
        
        if(tempCount == count)
        {
            result[idx++] = i - len2 + 1;
        }
    }
    
    free(buffer);
    * returnSize = idx;
    return result;
}