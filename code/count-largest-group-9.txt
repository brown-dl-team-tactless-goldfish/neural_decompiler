class Solution {
private:
    int digitSum(int n){
        int sum = 0;
        while(n >0){
            sum += n%10;
            n/=10;
        }
        return sum;
    }
public:
    int countLargestGroup(int n) {
        unordered_map<int, int> count;
        int mx = 0, ans = 0;
        for(int i = 1; i <n+1;i++){
            count[digitSum(i)]++;
            if(count[digitSum(i)] > mx){ // searching the maximum of number that have equal sum of digit;
                mx = count[digitSum(i)];
            }
        }
        for(auto c : count){
            if(c.second == mx){
                ans++;
            }
        }
        return ans;
        
    }
};