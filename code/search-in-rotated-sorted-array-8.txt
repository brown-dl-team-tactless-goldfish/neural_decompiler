int search(int* nums, int numsSize, int target) {
    int l = 0, r = numsSize -1;

    while (l <= r) {
        int mid = r + (l - r) / 2;

        if (nums[mid] == target) {
            return mid;
        }

        // First identify in which sorted portion our middle
        // index fits in. We do this to discard
        // a complete sorted portion of the array and continue
        // searching in the other portion.

        // left sorted portion?
        if (nums[l] <= nums[mid]) {
            if (target <= nums[mid] && target >= nums[l]) {
                r = mid -1;
            } else {
                l = mid + 1;
            }
        // right sorted portion?
        } else {
            if (target >= nums[mid] && target <= nums[r]) {
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
   }
   return -1;
}