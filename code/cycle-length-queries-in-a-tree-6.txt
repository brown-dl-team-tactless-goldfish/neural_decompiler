class Solution {
public:
    vector<int> cycleLengthQueries(int n, vector<vector<int>>& queries) {
        vector<int> ans;

        vector<int> pa, pb; // parents of a and b (including itself)
        for(auto it: queries) {
            pa.clear();
            pb.clear();

            int a = it[0];
            while(a > 0) {
                pa.push_back(a);
                a /= 2;
            }

            int b = it[1];
            while(b > 0) {
                pb.push_back(b);
                b /= 2;
            }

            reverse(pa.begin(), pa.end());
        
            a = pa.size() - 1; // distance of a
            b = pb.size() - 1; // distance of b

            int d = 0; // lca
            for(int i = 0; i < pa.size(); i++) {
                if(count(pb.begin(), pb.end(), pa[i])) {
                    d = i;
                }
            }

            ans.push_back(a+b-2*d + 1);
        }

        return ans;
    }
};