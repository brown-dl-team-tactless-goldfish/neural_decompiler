    //nothing: 0, digged: -val, undigged: val
    int digArtifacts(int n, vector<vector<int>>& artifacts, vector<vector<int>>& dig) {
        auto vv = vector(n, vector(n, 0));
        for(int k=0;k<artifacts.size();k++) {
            auto& ar = artifacts[k];
            for(int i=ar[0]; i<=ar[2]; i++) for(int j=ar[1];j<=ar[3];j++) vv[i][j] = k+1;
        }
        for(auto& d:dig) vv[d[0]][d[1]] *= -1;
        
        int res = 0;
        for(int i=0;i<n;i++) for(int j=0;j<n;j++)
            if(vv[i][j] != 0) res += dfs(vv, i, j, abs(vv[i][j]), n);                
        return res;
    }
    
    bool dfs(vector<vector<int>>& grid, int i, int j, int val, int n){
        static const vector<pair<int,int>> dirs = {{0,1},{0,-1},{-1,0},{1,0}};
        if(grid[i][j] == val) return false;
        grid[i][j] = 0;
        bool res = true;
        for(auto [di, dj] : dirs){
            int x = i+di, y = j+dj;
            if(x<0 || x==n || y<0 || y==n || abs(grid[x][y]) != val) continue;
            res &= dfs(grid, x, y, val, n);
        }        
        return res;
    }