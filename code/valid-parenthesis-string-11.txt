class Solution {
public:
    bool checkValidString(string s) 
    {
        deque<int> open;
        deque<int> wildcard;
        for(int i = 0; i < s.length(); ++i)
        {
            char c = s[i];
            if(c == '*') wildcard.push_back(i);
            else if(c == '(') open.push_back(i);
            else
            {
                if(open.size()) open.pop_back();
                else if(wildcard.size()) wildcard.pop_front();
                else return false;
            }
        }
        for(int i : open)
        {
            while(wildcard.size() && wildcard.front() < i) wildcard.pop_front();
            if(wildcard.empty()) return false;
            wildcard.pop_front();
        }
        return true;
    }
};