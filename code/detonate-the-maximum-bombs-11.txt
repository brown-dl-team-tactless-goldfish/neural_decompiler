typedef long long int ll ;
class Solution {
public:
    void dfs(int node, vector<vector<int>> &graph, vector<int> &vis, int &c){
        vis[node]= 1;
        c++;
        for(auto x: graph[node]){
            if(vis[x]==-1){
                dfs(x,graph, vis, c);
            }
        }
    }
    
    
    int maximumDetonation(vector<vector<int>>& bombs) {
        int n = bombs.size();
        vector<vector<int>> graph(n);
        for(int i =0;i<n;i++){
            for(int j =i+1;j<n;j++){
                if(i!=j){
                    ll x1 = ll(bombs[i][0]), y1 = ll(bombs[i][1]), r1  = ll(bombs[i][2]);
                    ll x2 = ll(bombs[j][0]), y2 = ll(bombs[j][1]), r2  = ll(bombs[j][2]);
                    ll val = pow((x1-x2),2) + pow((y1-y2),2);
                    if(val <= r1*r1){
                        graph[i].push_back(j);
                    }
                    if(val <= r2*r2){
                        graph[j].push_back(i);
                    }
                }
            }
        }
        int ans = 0;
        for(int i =0;i<n;i++){
            int c = 0;
            vector<int> vis(n,-1);
            dfs(i,graph,vis,c);
            ans = max(ans,c);
            
        }
        
        return ans;
    }
};