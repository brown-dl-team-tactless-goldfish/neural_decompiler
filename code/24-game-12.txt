class Solution {
vector<double> v;
bool flag = false;

void dfs(int n){
    
    if(n == 1){
        if(abs(v[0] - 24) <= 0.0000001){
            flag = true;
        }
        return;
    }
    
    for(int i = 0; i < n; ++i){
        for(int j = i + 1; j < n; ++j){
            double a = v[i];
            double b = v[j];
            
            v[i] = a + b;
            v[j] = v[n-1];
            dfs(n-1);
            
            v[i] = a - b;
            v[j] = v[n-1];
            dfs(n-1);
            
            v[i] = b - a;
            v[j] = v[n-1];
            dfs(n-1);            

            v[i] = a * b;
            v[j] = v[n-1];
            dfs(n-1);            

            if(b != 0){
                v[i] = a / b;
                v[j] = v[n-1];
                dfs(n-1);
            }

            if(a != 0){
                v[i] = b / a;
                v[j] = v[n-1];
                dfs(n-1);
            }
            
            v[i] = a;
            v[j] = b;
        }
    }
}    
    
public:
    bool judgePoint24(vector<int>& nums) {
        v.resize(4, 0.0);
        v[0] = (double) nums[0];
        v[1] = (double) nums[1];
        v[2] = (double) nums[2];
        v[3] = (double) nums[3];
        
        dfs(4);
        return flag;
    }
};