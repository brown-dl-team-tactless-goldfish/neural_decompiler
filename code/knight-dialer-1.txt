class Solution(object):
    def knightDialer(self, n):
        """
        :type n: int
        :rtype: int
        """
        
        if n == 1:
            return 10
        
        self.dialer = [[1,2,3],[4,5,6],[7,8,9], ['*', 0, '#']]
        self.digits = set([0,1,2,3,4,5,6,7,8,9])
        self.dir = [[-2,-1], [-2,1], [-1,-2], [-1,2], [2,1], [2,-1], [1,2], [1,-2]]
        self.mod = 10**9 + 7
        r = 4
        c = 3
        
        dp = [[[0 for _ in range(c)]for _ in range(r)]for _ in range(n)]       
        for i in range(r):
            for j in range(c):
                if self.dialer[i][j] in self.digits:
                    dp[0][i][j] = 1
                    
        
        for k in range(1, n):
            count = 0
            for i in range(r):
                for j in range(c):
                    if self.dialer[i][j] in self.digits:
                        for dx, dy in self.dir:
                            x = i + dx
                            y = j + dy
                            if x>=0 and y>=0 and x<r and y<c:
                                dp[k][i][j]+=dp[k-1][x][y]%self.mod
                                
                    if k == n-1:
                        count+=dp[k][i][j]%self.mod
                            
        return count%self.mod