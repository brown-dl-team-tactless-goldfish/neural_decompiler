#define MOD (long long)(1e+9+7)
#define sz(x) (int)(x).size()
#define pu_b push_back
#define fi first
#define se second
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pii;


using namespace std;
class Fancy {
public:
    vi mul, add, v;
    ll curr_mul, curr_add;
    
    //egcd (extended greatest common divider, suppose gcd(a,b)=1,  which means for some integer x,y
    // ax+by=1
    // egcd(a,b)  returns {x,y} where ax+by=1)
    pii egcd(int a, int b){  // gcd(a,b)= ax+by =1 , ax-1= (-b)y => ( ax-1=0 (mod b) )=> (ax=1)(mod b)
                             //a<b, and gcd(a,b)=1 ,   ( ax = 1 )( mod= b) ==>  ( x= a^(-1) )(mod=b)
                             // (AB=C) (mod=b) => (B=CA^(-1))(mod=b)
	    if(a==0) return {0,1};
        else { pii tmp= egcd(b%a, a); int x=tmp.fi; int y=tmp.se;return { y-(b/a)*x, x };} 
    } 
    
    Fancy() { curr_mul=1; curr_add=0;}
    
    void append(int val) {mul.pu_b(curr_mul); add.pu_b(curr_add);v.pu_b(val);}
    void addAll(int inc) { curr_add= (curr_add+inc)%MOD;}
    void multAll(int m) { curr_mul= (curr_mul*(ll)m)%MOD; curr_add= (curr_add*(ll)m)%MOD;}
    int getIndex(int idx) { //B=A^-1*C
        if(idx>=sz(v)) return -1;
        pii tmp = egcd( mul[idx],MOD); ll Ainv= (ll) tmp.first;
        if(Ainv<0) Ainv+=MOD;
        ll B= (Ainv* curr_mul)%MOD;
        ll b= (curr_add-add[idx]*B)%MOD; if(b<0) b+=MOD;
        return (int) ((B*(ll)v[idx]+b)%MOD);
    }
};