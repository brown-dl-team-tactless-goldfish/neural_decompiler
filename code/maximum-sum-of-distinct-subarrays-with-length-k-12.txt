    public long MaximumSubarraySum(int[] nums, int k)
    {
        long MaxSum = 0;
        long windowSum = 0;
        HashSet<int> windowSet = new HashSet<int>();
        int windowLeftIndex = 0;

        for (int i = 0; i < nums.Length; i++)
        {
            while (windowSet.Contains(nums[i]))
            {
                windowSet.Remove(nums[windowLeftIndex]);
                windowSum -= nums[windowLeftIndex];
                windowLeftIndex++;
            }
            windowSet.Add(nums[i]);
            windowSum += nums[i];
            if (windowSet.Count > k)
            {
                windowSet.Remove(nums[windowLeftIndex]);
                windowSum -= nums[windowLeftIndex];
                windowLeftIndex++;
            }
            if (windowSet.Count == k)
                MaxSum = Math.Max(MaxSum, windowSum);
        }
        return MaxSum;
    }