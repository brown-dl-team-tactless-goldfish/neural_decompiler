public class Solution 
{
    public int MinMalwareSpread(int[][] graph, int[] initial) 
    {
        var infectedNodes = new HashSet<int>(initial);
        var infectedBy = new Dictionary<int, HashSet<int>>();
        
        foreach(int u in initial) 
        {
            if(!infectedBy.ContainsKey(u))
                    infectedBy[u] = new HashSet<int>();
            infectedBy[u].Add(u);
            
            var visitedNodes = new HashSet<int>();
            DFS(graph, infectedNodes, u, visitedNodes);
            foreach(int v in visitedNodes)
            {
                if(!infectedBy.ContainsKey(v))
                    infectedBy[v] = new HashSet<int>();
                infectedBy[v].Add(u);
            }
        }

        var uniqueInfectionCount = new int[graph.Length];
        foreach(var v in infectedBy.Keys)
            if (infectedBy[v].Count == 1)
                uniqueInfectionCount[infectedBy[v].ToList().FirstOrDefault()]++;
        
        return Array.IndexOf(uniqueInfectionCount, uniqueInfectionCount.Max());
    }
    
    public void DFS(int[][] graph, HashSet<int> infectedNodes, int u, HashSet<int> visitedNodes) 
    {
        for (int v = 0; v < graph.Length; v++)
        {
            if (graph[u][v] == 1 && !infectedNodes.Contains(v) && !visitedNodes.Contains(v)) 
            {
                visitedNodes.Add(v);
                DFS(graph, infectedNodes, v, visitedNodes);
            }
        }
    }
}