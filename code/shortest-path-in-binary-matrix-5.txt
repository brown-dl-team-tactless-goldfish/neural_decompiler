g_queue.head = 0;
g_queue.tail = 0;
g_queue.val = (int **)calloc(10000 + 1, sizeof(int *));

if (grid[0][0] != 0)
    return -1;
enqueue(&g_queue, grid, 0, 0, 1);

while(!queue_empty(&g_queue))  {
    int *next = dequeue(&g_queue);
    
    /* check if reach the last via row and col index */
    if ((next[0] == (gridSize-1)) && (next[1] == (gridSize -1))) 
        return next[2];
    
    /* Add adjacents node into queue */
    for (int i = 0; i < 8; i++) {
        int next_adj[2];
        if (adj(grid, next[0], next[1], &next_adj, gridSize, i)) {
            enqueue(&g_queue, grid, next_adj[0], next_adj[1], next[2] + 1);
        }
    }
}

return -1;