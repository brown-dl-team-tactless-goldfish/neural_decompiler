class Solution {
public:
    void sumseq(int i,int j,int sum,vector<int>&nums,vector<int>&v)
    {
        if(i>j)
        {
            v.push_back(sum);
            return;
        }
        sumseq(i+1,j,sum+nums[i],nums,v);
        sumseq(i+1,j,sum,nums,v);
    }
    int minAbsDifference(vector<int>& nums, int goal) 
    {
        vector<int>v1,v2;
        int n=nums.size(),h=n/2,res=INT_MAX;
        sumseq(0,h,0,nums,v1);
        sumseq(h+1,n-1,0,nums,v2);
        sort(v1.begin(),v1.end());
        for(auto &x:v2)
        {
            int k=goal-x;
            auto it=lower_bound(v1.begin(),v1.end(),k);
            if(it!=v1.end())
                res=min(res,abs(k-*(it)));
            if(it!=v1.begin())
            {
                it--;
                res=min(res,abs(k-*(it)));
            }
        }
        return res;
    }
};