int binaryGap(int N){
    
    int maxGap = 0;
    int currGap = 0;
    
    while(N)
    {
        int bit = N%2;
        //if(!currGap && !bit) ; //Do nothing. no 1's has been found yet.
        if(!currGap && bit) currGap ++; //first time we ever found a 1
        else if(currGap && !bit) currGap ++; //we have found a one before but now we found a 0. increment the gap
        else if (currGap && bit) maxGap = (currGap>maxGap)? currGap : maxGap, currGap=1; //we found a second 1. gap is closed. used this 1 as starting point of the next gap
        N>>=1;
    }
    return maxGap;
}