#define min(a,b) \
   ({ __typeof__ (a) _a = (a); \
       __typeof__ (b) _b = (b); \
     _a < _b ? _a : _b; })

int minDominoRotations(int* A, int ASize, int* B, int BSize){
    if (ASize != BSize) return -1;
    const int size = ASize;
    
    int countA0inA = 0; 
    int countB0inA = 0;
    int countA0inB = 0; 
    int countB0inB = 0;
    bool notInA = false;
    bool notInB = false;
    for (int i = 0; i < size; ++i)
    {
        if (A[0] != B[i] && A[0] != A[i]) notInA = true;
        if (B[0] != A[i] && B[0] != B[i]) notInB = true;
        if (notInA && notInB) return -1;
        
        if (A[0] == A[i]) countA0inA++;
        if (A[0] == B[i]) countA0inB++;
        if (B[0] == A[i]) countB0inA++;
        if (B[0] == B[i]) countB0inB++;
    }
   
    int repeatA = countA0inA + countA0inB - size;
    int repeatB = countB0inA + countB0inB - size;
    
    int countA = min(countA0inA, countA0inB) - repeatA;
    int countB = min(countB0inA, countB0inB) - repeatB;

    if (notInA) return countB;
    if (notInB) return countA;

    return min(countA, countB);

}