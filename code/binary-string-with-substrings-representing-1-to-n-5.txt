#define ull unsigned long long

class Solution {
public:
    bool queryString(string S, int N) {
        // Brutal force: from 1 to N, we check if S contains substring of the number's binary representation.
        // Notice we can use bitset to quickly get the binary string of the number staring with '1'.
        for (int n = 1; n <= N; ++n)
        {
            string str = bitset<32>{(ull)n}.to_string();
            int i = 0;
            while (i < str.size() && str[i] == '0')
            {
                ++i;
            }
            
            str = str.substr(i);
            if (S.find(str) == string::npos)
            {
                return false;
            }
        }
        return true;
    }
};