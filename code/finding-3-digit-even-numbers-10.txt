map<int,int>m;
vector<vector<int>>res;
vector<int>v;
void backtrack(int j){
    if(j==3){
        res.push_back(v);
        return;
    }
    else{
        if(j==0){
            for(int i=0;i<9;i=i+2){
                if(m[i]>0){
                    v.push_back(i);
                    m[i]--;
                    backtrack(1);
                    v.pop_back();
                    m[i]++;
                }
            }
        }
        else if(j==1){
            for(int i=0;i<=9;i++){
                if(m[i]>0){
                    v.push_back(i);
                    m[i]--;
                    backtrack(2);
                    v.pop_back();
                    m[i]++;
                }
            }
        }
        else{
            for(int i=1;i<=9;i++){
                if(m[i]>0){
                    v.push_back(i);
                    m[i]--;
                    backtrack(3);
                    v.pop_back();
                    m[i]++;
                }
            }
        }
    }
}
vector<int> findEvenNumbers(vector<int>& digits) {
    for(int x:digits)m[x]++;
    backtrack(0);
    vector<int>ans;
    for(auto v:res){
        ans.push_back(v[2]*100+v[1]*10+v[0]);
    }
    sort(ans.begin(),ans.end());
    return ans;
}