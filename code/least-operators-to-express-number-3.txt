class Solution {
public:
    int leastOpsExpressTarget(int x, int target) {
        vector<int> levels;
        while(target){
            levels.push_back(target%x);
            target /= x;
        }
        int carrybitted=levels.size(), nocarrybitted=0;
        for(int i=levels.size()-1; i>0; --i){
            int carry=min((x-levels[i]-1)*i+carrybitted,(levels[i]+1)*i+nocarrybitted);
            int nocarry=min((x-levels[i])*i+carrybitted,(levels[i])*i+nocarrybitted);
            carrybitted=carry;
            nocarrybitted=nocarry;
        }
        return min(levels[0]*2+nocarrybitted,(x-levels[0])*2+carrybitted)-1;
    }
};