class Solution {
public:
    vector<string> topKFrequent(vector<string>& words, int k) {
        unordered_map<string, int> count;
        priority_queue<pair<int, string>, vector<pair<int, string>>, greater<pair<int, string>>> h;
        vector<string> ans;
        for (string& word : words) count[word]++;
        for (auto& p : count) h.push(pair(-p.second, p.first));
        
        for (int i = 0; i < k; i++) {
           auto [val, str] = h.top();
           h.pop();
           ans.push_back(str);
        }
        
        return ans;
    }
};
