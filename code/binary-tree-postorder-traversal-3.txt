/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* f(struct TreeNode* root, int* len)
{
    if (root==NULL)
    {
        int* temp=NULL;
        *len=0;
        return temp;
    }
    int size_l;
    int size_r;
    int* l=f(root->left, &size_l);
    int* r=f(root->right, &size_r);
    int* res=malloc((size_l+size_r+1)* (sizeof(int)));
    for (int i=0;i<size_l;i++)
    {
        res[i]=l[i];
    }
    for (int i=0;i<size_r;i++)
    {
        res[i+size_l]=r[i];
    }
    res[size_l+size_r]=root->val;
    *len=size_l+size_r+1;
    return res;
}

int* postorderTraversal(struct TreeNode* root, int* returnSize){
    int len=0;
    int* res=f(root, &len);
    *returnSize=len;
    return res;
}