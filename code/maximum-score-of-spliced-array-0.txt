int big(int a, int b){
    return a > b ? a : b;
}

int maximumsSplicedArray(int* nums1, int nums1Size, int* nums2, int nums2Size){
    int front[nums1Size+1];
    front[0] = 0;
    int sum1 = 0;
    int sum2 = 0;
    for (int i = 0 ; i < nums1Size ; i++){
        sum1 += nums1[i];
        sum2 += nums2[i];
        front[i+1] = sum1-sum2;
    }
    int ans = sum1 > sum2 ? sum1 : sum2;
    int back;
    int m = 0;
    int n = 0;
    int max = 0;
    int min = 0;
    int tt;
    for (int i = nums1Size-2 ; i >= 0 ; i--){
        m += nums1[i+1];
        n += nums2[i+1];
        back = m-n;
        if (back > max){
            max = back;
        } else if (back < min){
            min = back;
        }
        tt = big(front[i]+max+sum2, sum1-front[i]-min);
        if (tt > ans){
            ans = tt;
        }
    }
    return ans;
}