class TextEditor {
    
    std::deque<char> left;
    std::deque<char> right;
    
public:
    TextEditor() {
        
    }
    
    void addText(string text) 
    {
        for (char c : text)
        {
            left.push_back(c);
        }
    }
    
    int deleteText(int k) 
    {
        int count = 0;
        
        while (!left.empty() && count < k)
        {
            left.pop_back();
            ++count;
        }
        return count;
    }
    
    string cursorLeft(int k) 
    {
        int count = 0;
        
        while (!left.empty() && count < k)
        {
            char c = left.back();
            right.push_front(c);
            left.pop_back();
            ++count;
        }
        
        return getLeftString();
    }
    
    string cursorRight(int k) 
    {
        int count = 0;
        
        while (!right.empty() && count < k)
        {
            char c = right.front();
            left.push_back(c);
            right.pop_front();
            ++count;
        }
        
        return getLeftString();
    }
    
    string getLeftString()
    {
        if (left.empty())   return "";
        
        int len = std::min(10, static_cast<int>(left.size()));
        string res = "";
        int count = 0;
        
        while (count < len)
        {
            char c = left.back();
            res = c + res;
            right.push_front(c);
            left.pop_back();
            ++count;
        }
        
        while (count > 0)
        {
            char c = right.front();
            left.push_back(c);
            right.pop_front();
            --count;
        }
        return res;
    }
};