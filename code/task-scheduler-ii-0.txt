long long taskSchedulerII(int* tasks, int tasksSize, int space){
    long long ans = 0;
    int n = tasksSize;
    int N = 10 * tasksSize;
    long long** hash = calloc(N, sizeof(long long*));

    for(int i = 0; i < n; i++){
        int val = tasks[i];
        int d = val;
        while(1){
            if(hash[d%N] == NULL){
                ans += 1;
                hash[d%N] = malloc(2 * sizeof(long long));
                hash[d%N][0] = tasks[i];
                hash[d%N][1] = ans;
                break;
            }
            else if(hash[d%N][0] == tasks[i] ){
                ans += 1;
                if(ans >= (hash[d%N][1] + space + 1)){
                    hash[d%N][1] = ans;
                }
                else{
                    hash[d%N][1] += (space + 1);
                    ans = hash[d%N][1] ;
                }
                break;
            }
            else
                d++;
        } 
    }
    for(int i = 0; i < N; i++){
        if(hash[i] != NULL)
            free(hash[i]);
    }
    free(hash);
    return ans;
}