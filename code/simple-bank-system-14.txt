class Bank {
    using LL = long long;
    vector<LL> balance;
    int n;
    
    inline int get_id(int account){
        return account - 1;
    }
    
public:
    Bank(vector<LL>& b): balance(move(b)), n(balance.size()) {
        
    }
    
    bool transfer(int account1, int account2, long long money) {
        if(account1 > n or account2 > n) return false;
        auto &ac1_val = balance[get_id(account1)];
        if(ac1_val < money)
            return false;
        else{
            balance[get_id(account2)] += money;
            ac1_val -= money;
            return true;
        }
    }
    
    bool deposit(int account, long long money) {
        if(account > n) return false;
        balance[get_id(account)] += money;
        return true;
    }
    
    bool withdraw(int account, long long money) {
        if(account > n) return false;
        auto &old_val = balance[get_id(account)];
        if(old_val >= money)
            old_val -= money;
        else
            return false;
        return true;
    }
};