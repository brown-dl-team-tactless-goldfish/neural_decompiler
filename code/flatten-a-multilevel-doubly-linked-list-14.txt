class Solution {
public:
    Node* flatten(Node* head) {

        Node* l = head;
        while (l) {
            if (l->child) {
                Node* c = l->child;
                Node* r = l->next;
                l->next = c;
                c->prev = l;
                l->child = NULL;      //After concatenating the child to left, do not forget to NULL the child
                while (c->next) {
                    c = c->next;
                }
                c->next = r;
                if (r)             //if the child node is emerging from the last node,
                    r->prev = c;   // then there is no next node whose prev->next we are trying to access.
            }
            l = l->next;
        }

        return head;
    }
};