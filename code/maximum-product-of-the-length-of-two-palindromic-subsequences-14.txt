 int palinlen (string &a)
   {
       int i=0;
       int j=a.length()-1;
       while(i<j)
       {
           if(a[i]!=a[j])return 0;
           i++;
           j--;
       }
       return a.length();
   }
    
    
    int helper(string &a,string &b,string &s,int i)
    {
        if(i>=s.length())return palinlen(a)*palinlen(b);
        
        int x=helper(a,b,s,i+1);
        
        a.push_back(s[i]);
        int y=helper(a,b,s,i+1);
        a.pop_back();
        
        b.push_back(s[i]);
        int z=helper(a,b,s,i+1);
        b.pop_back();
        return max(x,max(y,z));
        
    }
    int maxProduct(string s) {
        string a="";
        string b="";
        return helper(a,b,s,0);
    }