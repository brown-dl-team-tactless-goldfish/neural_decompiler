char * longestDiverseString(int a, int b, int c){
    char *out = NULL, prev = 'd';
    int len = a + b + c, idx = 0;
    bool more = true;
    if (!len)
        return "";
    
    out = calloc(a+b+c+1, 1);
    while (more) {
        more = false;
        if (a && a >= b && a >= c) {
            out[idx++] = 'a';
            a--;
                
            if (prev == 'a')
               a *= -1;
            prev = 'a';
            b = abs(b);
            c = abs(c);
            more = true;
        } else if (b && b >= a && b >= c) {
            out[idx++] = 'b';
            b--;
            
            if (prev == 'b')
               b *= -1;
            prev = 'b';
            a = abs(a);
            c = abs(c);
            more = true;
        } else if (c && c >= b && c >= a) {
            out[idx++] = 'c';
            c--;
            
            if (prev == 'c')
               c *= -1;
            prev = 'c';
            a = abs(a);
            b = abs(b);
            more = true;
        }
    }
    
    out[idx] = '\0';
    
    return (out);               
}