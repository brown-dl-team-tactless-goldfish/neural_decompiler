class Solution {
public:
    
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        vector<vector<int>> result(2100);
        queue<pair<TreeNode*, int>> q;
        q.push({root, 1001});
        while(!q.empty()){
            int cur = q.front().second;
            unordered_map<int, vector<int>> temp;
            int sz = q.size();
            while(sz--){
                root = q.front().first; int c = q.front().second;
                q.pop();
                temp[c].push_back(root -> val);
                if(root -> left)
                    q.push({root -> left, c - 1});
                if(root -> right)
                    q.push({root -> right, c + 1});
            }
            for(auto& b: temp)
                sort(b.second.begin(), b.second.end());
            for(auto& a: temp)
                for(auto& b: a.second)
                result[a.first].push_back(b);
        }
        vector<vector<int>> ans;
        for(int i = 0; i < 2100; i++)
            if(result[i].size()){
                ans.push_back(result[i]);
            }
        return ans;
    }
};