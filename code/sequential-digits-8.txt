class Solution {
public:
    vector<int> sequentialDigits(int low, int high) {
        
        string number = "123456789";
        string l = to_string(low);
        int curr = l.size();
        int n = stoi(number.substr(0, curr));
        
        while(n < low)
        {
            string currnum = to_string(n);
            
            if(currnum[currnum.size()-1] == '9')
            {
                n = stoi(number.substr(0, currnum.size()+1));
            }
            else
            {
                for(int i = 0; i < currnum.size(); i++)
                {
                    currnum[i] += 1;
                }
                n = stoi(currnum);
            }
            if(currnum == number) break;
        }
        
        string currnum = to_string(n);
        vector<int> ans;
        while(n <= high && n >= low)
        {
            cout << n << "\n";
            ans.push_back(n);
            
            if(currnum[currnum.size()-1] == '9')
            {
                currnum = number.substr(0, currnum.size()+1);
                n = stoi(currnum);
            }
            
            else
            {
                for(int i = 0; i < currnum.size(); i++)
                {
                    currnum[i] += 1;
                }
                n = stoi(currnum);
            }
            if(currnum == number) break;
        }
        
        if(currnum == number && stoi(currnum) <= high && stoi(currnum) >= low)
        {
            string ss = to_string(ans[ans.size()-1]);
            if(ss != number) ans.push_back(stoi(currnum));
        }
        return ans;
    }
};