class Solution {
    bool isPrime(int n){
        if(n == 1)
            return false ;
        if(n == 2)
            return true ;
        for(int i = 2; i <=sqrt(n); i++){
            if(n % i == 0)
                return false ;
        }
        return true ;
    }
public:
    int diagonalPrime(vector<vector<int>>& nums) {

        int n = nums.size() ;
        set<int>diagNums ;
        for(int i = 0; i < n; i++)
            diagNums.insert(nums[i][i]) ;
    
        for(int i = 0; i < n; i++)
            diagNums.insert(nums[n-1-i][i]) ;
        
        while(diagNums.size() > 0){
            int k = *diagNums.rbegin() ;
            if(isPrime(k))
                return k ;
            else
                diagNums.erase(k) ;
        }
        return 0 ;
    }
};