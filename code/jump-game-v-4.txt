    int maxJumps(vector<int>& a, int d) {
        int N = a.size();
        vector<int> dp(N, 0);
        
        int res = 0;
        for(int i = 0; i < N; i++) {
            res = max(res, dfs(a, i, d, dp));
        }
        return res;
    }
    
    int dfs(vector<int>& a, int i, int d, vector<int>& dp) {
        if(dp[i]) return dp[i];
        
        int res = 1;
        for(int j = i + 1; j <= i + d && j < a.size() && a[i] > a[j]; j++) {
            res = max(res, 1+dfs(a, j, d, dp));
        }
        for(int j = i - 1; j >= i - d && j >= 0 && a[i] > a[j]; j--) {
            res = max(res, 1+dfs(a, j, d, dp));
        }
        dp[i] = res;
        return res;
    }