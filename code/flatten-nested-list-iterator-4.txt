class NestedIterator {
public:
    int i;
    vector<int> B;
    void flatten(vector<NestedInteger> &A) {
        for (int i = 0; i < A.size(); i ++) {
            if (!A[i].isInteger()) {
                flatten(A[i].getList());
            } else {
                B.push_back(A[i].getInteger());
            }
        }
        return;
    }
    NestedIterator(vector<NestedInteger> &nestedList) {
        i = 0;
        B.clear();
        flatten(nestedList);
    }

    int next() {
        return B[i ++];
    }

    bool hasNext() {
        return i < B.size() && i >= 0;
    }
};