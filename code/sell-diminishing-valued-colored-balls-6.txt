    public class Solution
    {
        public int MaxProfit(int[] inventory, int orders)
        {
            long low = 0;
            long high = inventory.Max();
            while (low < high)
            {
                long mid = low + (high - low) / 2;
                long sum = inventory.Sum(x => Math.Max(0, x - mid));
                if (sum <= orders)
                    high = mid;
                else
                    low = mid + 1;
            }

            long mod = (long)Math.Pow(10, 9) + 7;
            long res = 0;
            foreach (int n in inventory)
            {
                if (n > low)
                {
                    res = (res + (low + 1 + n) * (n - low) / 2) % mod;
                    orders -= (int)(n - low);
                }
            }

            res = (res + orders * low) % mod;

            return (int)res;
        }
    }