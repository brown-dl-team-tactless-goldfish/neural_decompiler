class Solution {
public:
    int numSub(string s) {
        
        unordered_map<int,long long> track;
        int cur = 0;
        long long res = 0;
        
        /*
        Idea is to get pairs of continuous 1s
        Example
        0110111011
        Pairs : {11 : 2, 111 : 1}

        For Each pair number of length n , number of substrings are n*(n+1)/2
        why ??

       consider 2

       1 1 11
       
       for n it's 
       n (of 1s) + n-1 of (2s) + .... + 1(ns)
        
        */
        
        for (char c : s) {
            
            if (c == '1') {
                cur++;
                continue;
            } 
            if (cur > 0) {
                track[cur]++;
                cur = 0;
            }
        }
        if (cur > 0) {
            track[cur]++;
        }
        
        for (const pair<int,long long>& p : track) {
            
            long long  n = p.first;
            res += (p.second * (n*(n+1)/2));
        }
        
        return res %1000000007;
        
    }