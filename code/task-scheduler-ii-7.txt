class Solution {
public:
    long long taskSchedulerII(vector<int>& a, int space) {
        
        long long timer  = 0;
        map<long long , long long>lastTime;
        for(auto task : a)
        {
            timer++;
            if(lastTime.find(task)==lastTime.end())
            {
                lastTime[task] = timer;
            }
            else
            {
		    // if we already passed "space" days then no worries
                if( (timer - lastTime[task]) > space)
                {
                    lastTime[task] = timer;
                }
                else
                {
			 // find required days to wait
                    long long reqDays = space - (timer-lastTime[task]) +1;
                    
                    timer += reqDays;
                    
                    lastTime[task] = timer;
                }
            }
        }
        return timer;
    }
};