    in_len = paths.length;
    for (int i = 0; i<in_len;i++)
    {
        curr_path = paths[i];
        path_index = curr_path.indexOf(' ');
        if(path_index< 0)
            continue;
        curr_path = paths[i].substring(0,path_index)+"/";
        files  = paths[i].substring(path_index+1,paths[i].length()).split(" ");
        for(String file : files)
        {
            temp_path = curr_path+file.substring(0,file.indexOf('('));
            temp_cont = file.substring(file.indexOf('(')+1,file.length()-1);
            if(content_path.containsKey(temp_cont))
            {
                content_path.get(temp_cont).add(temp_path);
            }
            else 
            {
             ArrayList<String> p =new ArrayList<String>();
                p.add(temp_path);
                content_path.put(temp_cont,p);
            }
        }
        
    }
     for (Map.Entry<String, List<String>> pair: content_path.entrySet()) 
     {
         if(pair.getValue().size()>1)
             ans.add(pair.getValue());
     }
    
      return ans;
}