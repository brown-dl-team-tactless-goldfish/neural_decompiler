/**
 * Return an array of arrays of size *returnSize.
 * The sizes of the arrays are returned as *returnColumnSizes array.
 * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().
 */
int** matrixReshape(int** mat, int matSize, int* matColSize, int r, int c, int* returnSize, int** returnColumnSizes){
	if(r * c != matSize * matColSize[0]){
		int** ans = malloc(sizeof(int*) * matSize);
		*returnColumnSizes = malloc(sizeof(int) * matSize);
		*returnSize = matSize;
		for(int i = 0; i < matSize ; i++){
			returnColumnSizes[0][i] = matColSize[i];
		}  
		return mat;
	}
	int** ans = malloc(sizeof(int*) * r);
	*returnColumnSizes = malloc(sizeof(int) * r);
	*returnSize = r;
	for(int i = 0; i < r ; i++){
		ans[i] = malloc(sizeof(int) * c);
		returnColumnSizes[0][i] = c;
	}

	int tmp[10000];
	int index = 0;
	for(int i = 0; i < matSize; i++){
		for(int j = 0; j < matColSize[i]; j++){
			tmp[index++] = mat[i][j];
		}
	}

	// for(int i = 0; i < index; i++){
	//     printf("%d ", tmp[i]);
	// }

	for(int i = 0; i < r; i++){
		for(int j = 0; j < c; j++){
			ans[i][j] = tmp[i*c + j];
		}
	}


	return ans;
}