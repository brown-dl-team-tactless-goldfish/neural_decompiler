class Solution {
public:
    int maxPerformance(int n, vector<int>& speed, vector<int>& efficiency, int k) {
        vector<int> ind(n);
        for (int i = 0; i < n; ++i) {
            ind[i] = i;
        }
        sort(ind.begin(), ind.end(), [&efficiency](const int &x, const int &y) {
            return efficiency[x] > efficiency[y];
        });
        long long r = 0, sum = 0;
        multiset<int> s;
        --k;
        for (int i = 0; i < n; ++i) {
            sum += speed[ind[i]];
            r = max(r, sum * efficiency[ind[i]]);
            s.insert(speed[ind[i]]);
            if (s.size() > k) {
                sum -= *s.begin();
                s.erase(s.begin());
            }
        }
        return r % 1000000007;
            
        
    }
};