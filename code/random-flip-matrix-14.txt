public class Solution {
    
    int m;
    int n;
    Random rand = new Random();
    HashSet<int> flipped = new HashSet<int>();

    public Solution(int m, int n) {
        this.m = m;
        this.n = n;
        Reset();
    }
    
    public int[] Flip() {
        var pos = rand.Next(m * n - flipped.Count);
        var offset = 0;
        while (flipped.Count(f => f <= pos + offset) is var offset1 && offset1 > offset) {
            offset = offset1;
        }
        pos += offset;
        flipped.Add(pos);
        return new[] { pos / n, pos % n };
    }
    
    public void Reset() {
        flipped.Clear();
    }
}