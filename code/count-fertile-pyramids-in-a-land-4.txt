class Solution {
public:
    int n, m;
    int helper(vector<vector<int>> A){
        int res = 0;
        for(int i = n - 2; i >= 0; i--){
            for(int j = 1; j < m - 1; j++){
                if(A[i][j])
                    A[i][j] = min({A[i + 1][j - 1], A[i + 1][j], A[i + 1][j + 1]}) + 1, res += A[i][j] - 1;
            }
        }
        return res;
    }
    int countPyramids(vector<vector<int>>& A) {
        n = A.size(), m = A[0].size();
        int res = 0;
        res += helper(A);
        reverse(A.begin(), A.end());
        res += helper(A);
        return res;
    }
};