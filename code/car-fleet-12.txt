class Solution {
public:
    int carFleet(int target, vector<int>& position, vector<int>& speed) {
        if (position.empty())
            return 0;
        vector<pair<int, double>> cars;
        for (int i = 0; i < position.size(); i++) {
            cars.emplace_back(position[i], (double)(target - position[i]) / (1.0 * speed[i]));
        }
        
        sort(cars.begin(), cars.end(), [] (const pair<int,double>& a, const pair<int,double>& b) {
            return a.first < b.first;
        });
        
        stack<pair<int, double>> left;
        for (auto& car : cars)
            left.push(car);
        
        int ans = 0;
        while(!left.empty()) {
            auto last = left.top();
            left.pop();
            if (!left.empty()) {
                 if (left.top().second > last.second) {
                     ans++;
                 } else {
                     left.top().second = last.second;
                 }
            }
        }
        
        return ans + 1;
    }
};