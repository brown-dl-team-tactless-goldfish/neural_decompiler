        public class CustomStack
        {
            private readonly int _capacity;
            private readonly LinkedList<int> _ll;

            public CustomStack(int maxSize)
            {
                _ll = new LinkedList<int>();
                _capacity = maxSize;
            }

            public void Push(int x)
            {
                if (_ll.Count < _capacity)
                {
                    _ll.AddFirst(x);
                }
            }

            public int Pop()
            {
                if (_ll.Count == 0)
                {
                    return -1;
                }

                var res = _ll.First.Value;
                _ll.RemoveFirst();
                return res;
            }

            public void Increment(int k, int val)
            {
                if (_ll.Count == 0)
                {
                    return;
                }

                var curr = _ll.Last;
                int c = 0;
                while (curr != null && c < k)
                {
                    curr.Value += val;
                    curr = curr.Previous;
                    c++;
                }
            }
        }