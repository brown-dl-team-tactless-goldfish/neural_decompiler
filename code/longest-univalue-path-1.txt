#define max(a,b) (a>b?a:b)
int helper(struct TreeNode* root, int* ans)
{
    if(!root) return 0;
    else
    {
        int left = helper(root -> left, ans);
        int right = helper(root -> right, ans);
        int arrowLeft = 0, arrowRight = 0;
        if(root->left != NULL && root -> left -> val == root ->val)
        {
            arrowLeft += left + 1;
        }
        if(root->right != NULL && root -> right -> val == root ->val)
        {
            arrowRight += right + 1;
        }
        *ans = max(*ans, arrowLeft+ arrowRight);
        return (max(arrowLeft, arrowRight));
    }
}

int longestUnivaluePath(struct TreeNode* root) {
    int* ans = malloc(sizeof(int));
    *ans = 0;
    helper(root, ans);
    return (*ans);
}