class Solution {
public:
    long long countGood(vector<int>& nums, int k) {
        unordered_map<int, int> map;
        int start = 0;
        long long res = 0;

        long long cur = 0;
        for(int i=0;i<nums.size();i++) {
            map[nums[i]]++;
            int count = map[nums[i]];
            if(count>=2) {
                cur += count * (count-1)/2 - (count-1)*(count-2)/2;
            }

            while(cur>=k) {
                res += nums.size() - i;
                map[nums[start]]--;
                int temp_count = map[nums[start]];
                if(temp_count>=1) {
                    cur += temp_count * (temp_count-1)/2 - (temp_count+1) * temp_count/2;
                }
                start++;
            }
        }

        return res;
    }
};