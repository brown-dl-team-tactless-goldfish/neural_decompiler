class Solution {
public:
    int MOD = 1e9 + 7 , dp[1001][2001] ;
    int solve(int pos , int fuel , int finish , vector<int>&loc){
        if(dp[pos][fuel] != -1) return dp[pos][fuel] ;
        
        int ans = (pos == finish) ? 1 : 0 ;
        for(int i = 0 ; i < loc.size() ; ++i ){
            if(pos == i) continue ;
            int req = abs(loc[i] - loc[pos]) ;
            if(fuel >= req) ans += solve(i,fuel-req,finish,loc) , ans %= MOD ;
        }
        
        return dp[pos][fuel] = ans ;
        
    }
    int countRoutes(vector<int>& locations, int start, int finish, int fuel) {
        memset(dp,-1,sizeof(dp)) ;
        return solve(start,fuel,finish,locations) % MOD ;
    }
};