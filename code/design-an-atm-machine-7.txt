class ATM {
public:
    map<int,long long> m;
    void deposit(vector<int> arr) {
        m[20]+=arr[0];
        m[50]+=arr[1];    
        m[100]+=arr[2];    
        m[200]+=arr[3];    
        m[500]+=arr[4];    
    }
    
    vector<int> withdraw(int amount) {
        vector <int> arr = {500,200,100,50,20};
        vector <int> ans;
        map <int,int> map_change;
        for(int x : arr){
            if(m[x]>0){
                int c = min(m[x],(long long)amount/x);
                map_change[x]+=c;
                if(c>0){
                    amount-=c*x;
                }                
            }
        }        
        if(amount)return {-1};
        for(auto x : map_change){
            m[x.first]-=x.second;
        }
        for(int x : arr){
            ans.push_back(map_change[x]);
        }
        reverse(ans.begin(),ans.end());
        return ans;
    }
};