class Solution {
public:
    int maximumCostSubstring(string s, string chars, vector<int>& vals) {
        unordered_map<char, int> mp;
        for(int i = 0; i < 26; i++){
            char c = 'a' + i;
            mp[c] = i+1;
        }
        for(int i = 0; i < vals.size(); i++) mp[chars[i]] = vals[i];
        int ans = 0;
        int t = 0;
        for(int i = 0; i < s.size(); i++){
            t += mp[s[i]];
            if(t > 0){
                ans = max(ans, t);
            }
            else t = 0;
        }
        return ans;
    }
};