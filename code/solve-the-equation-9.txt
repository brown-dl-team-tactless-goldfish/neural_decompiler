using System.Text.RegularExpressions;

public class Solution {
    private static int[] Simplify(string value) {
      value = Regex.Replace(value, @"\s+", "");

      var sum1 = Regex
        .Matches(value, @"-?[0-9]*x")
        .OfType<Match>()
        .Select(match => match.Value.TrimEnd('x'))
        .Select(v => v == "" ? 1 : v == "-" ? -1 : int.Parse(v))
        .Sum();

      var sum2 = Regex
        .Matches(value, @"-?[0-9]+(?![0-9x])")
        .OfType<Match>()
        .Select(match => match.Value)
        .Select(v => v == "" ? 1 : v == "-" ? -1 : int.Parse(v))
        .Sum();

      return new int[] { sum1, sum2};
    }

    public string SolveEquation(string equation) {
      var parts = equation.Split('=');

      var left = Simplify(parts[0]);
      var right = Simplify(parts[1]);

      int x = left[0] - right[0];
      int v = right[1] - left[1];

      if (x == 0)
        return (v == 0) ? "Infinite solutions" : "No solution";
      else
        return $"x={(v / x)}";
    }
}