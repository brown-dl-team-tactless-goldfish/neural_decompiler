	public long[] GetDistances(int[] arr) {
        var result = new long[arr.Length];
        var dict = new Dictionary<int, HashSet<int>>(); // key - number, value - set of positions
        
        for (int i=0; i<arr.Length; i++)
            if (!dict.TryAdd(arr[i], new HashSet<int>{i}))
                dict[arr[i]].Add(i);
        
        foreach (var elem in dict) {
            long sum = elem.Value.Sum(s => (long)s);
            var countBefore = 0;
            var lastIndex = 0;
            foreach (var index in elem.Value) {
                sum += (index-lastIndex) * countBefore;
                sum -= (index-lastIndex) * (elem.Value.Count-countBefore);
                result[index] = sum;
                countBefore++;
                lastIndex = index;
            }
        }
        return result;
    }