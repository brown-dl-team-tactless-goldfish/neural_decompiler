    vector<int> nextGreaterElements(vector<int>& nums) {
        stack<int> maxStack;
        int size = nums.size();
        vector<int> res(size);
        // use monotonic increasing stack to solve this problem
        // since it's a loop, iterate the nums from back to front first, then interating again to mimic the loop process
        for (int c = 0; c < 2; c++) {
            for (int i = size - 1; i >= 0; i--) {
                // remove all elements less than or equal to nums[i]
                while (maxStack.size() > 0) {
                    int top = maxStack.top();
                    if (top <= nums[i]) {
                        maxStack.pop();
                    } else {
                        break;
                    }
                }
                if (maxStack.size() == 0) {
                    res[i] = -1;
                } else {
                    res[i] = maxStack.top();
                }
                maxStack.push(nums[i]);
            }
        }
        return res;
    }