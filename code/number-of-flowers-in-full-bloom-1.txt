using PII = pair<int, int> ;
class Solution {
public:
    vector<int> fullBloomFlowers(vector<vector<int>>& flowers, vector<int>& people) {
        unordered_map<int, int>Map ;  //time , in ++, out--
        for(int i = 0; i < flowers.size(); i++){
            int s = flowers[i][0] ;
            int e = flowers[i][1] ;
            Map[s]++ ;
            Map[e+1]-- ;
        }
        vector<PII>TimeToCount( Map.begin(), Map.end() ) ;
        sort( TimeToCount.begin(), TimeToCount.end() ) ;
        vector<PII>TimeToPerson ;
        for(int i = 0; i < people.size(); i++){
            TimeToPerson.push_back({people[i], i}) ;
        }
        
        sort(TimeToPerson.begin(), TimeToPerson.end()) ;
        int sum = 0 ; 
        int idx = 0 ;
        vector<int>rets(people.size()) ;
        for(auto [time, id] : TimeToPerson){
            while(idx < TimeToCount.size() && TimeToCount[idx].first <= time){
                sum += TimeToCount[idx].second ;
                idx++ ;
            }
            rets[id] = sum ;  
        }
        return rets ;
    }
};