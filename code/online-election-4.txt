public class TopVotedCandidate 
{
    List<int> listTime, listWinner;
    public TopVotedCandidate(int[] p, int[] t) 
    {
        int n = p.Length;
        var votes = new List<int[]>();
        for(int i = 0; i < n; i++)
            votes.Add(new int[] {p[i], t[i]});
       
        votes.Sort((x, y) => x[1].CompareTo(y[1]));
        
        var winnerDict = new Dictionary<int, int>();
        listTime = new List<int>(); listWinner = new List<int>();
        int winner = 0, maxCount = 0;
        foreach(var vote in votes)
        {
            if(!winnerDict.ContainsKey(vote[0]))
                winnerDict[vote[0]] = 0;
            winnerDict[vote[0]]++;
            
            if(winnerDict[vote[0]] >= maxCount)
            {
                maxCount = winnerDict[vote[0]];
                winner = vote[0];
                listWinner.Add(vote[0]);
                listTime.Add(vote[1]);
            }
        }
    }
    
    public int Q(int t) 
    {
        var index = listTime.BinarySearch(t);
        if(index < 0) 
        {
            index = ~index;
            index--;
        }
        
        return listWinner[index];
    }
}