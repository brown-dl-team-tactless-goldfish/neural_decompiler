class Solution:
    def spiralMatrix(self, m: int, n: int, head: Optional[ListNode]) -> List[List[int]]:
        res = [[-1 for _ in range(n)] for _ in range(m)]
        left = 0
        top = 0
        right = n - 1
        bottom = m - 1
        node = head
        while(node is not None):
            for c in range(left, right + 1):#go east
                if node is None: break
                res[top][c] = node.val
                node = node.next
            for r in range(top + 1, bottom + 1):#go south 
                if node is None: break
                res[r][right] = node.val
                node = node.next
            for c in range(right - 1, left - 1, -1):#go west
                if node is None: break
                res[bottom][c] = node.val
                node = node.next
            for r in range(bottom - 1, top, -1):#go north
                if node is None: break
                res[r][left] = node.val
                node = node.next
            #constrict borders
            left += 1
            top += 1
            right -= 1
            bottom -= 1
        return res