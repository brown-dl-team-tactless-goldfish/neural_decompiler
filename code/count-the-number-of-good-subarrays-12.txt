public class Solution {
    public long CountGood(int[] nums, int k) {
        long res = 0, pairs = 0, n = nums.Length;
        Dictionary<int, int> d = new();
        for(int i = 0, j = 0; j < n;){
            while(j < n && pairs < k){
                if(!d.ContainsKey(nums[j]))
                    d.Add(nums[j], 0);
                pairs += d[nums[j]];
                d[nums[j]]++;
                j++;
            }
            while(pairs >= k){
                res += n-j+1;
                d[nums[i]]--;
                pairs -= d[nums[i]];
                i++;
            }
        }
        return res;
    }
}