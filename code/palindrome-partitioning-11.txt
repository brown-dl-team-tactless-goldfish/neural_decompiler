class Solution {
public:
    vector<vector<string>> ans;
    void solve(vector<vector<bool>> &pal, int ind, vector<string> &t,string &s){
        if(ind == pal.size()){
            ans.push_back(t); return;
        }
        for(int i = ind; i < s.length(); i++){
            if(pal[ind][i]){
                t.push_back(s.substr(ind,i-ind+1));
                solve(pal,i+1,t,s);
                t.pop_back();
            }
        }
    }

    vector<vector<string>> partition(string s) {
        vector<vector<bool>> pal(s.length(),vector<bool>(s.length(),0));
        for(int i=0;i<s.length();i++){
            pal[i][i] = 1;
        }
        for(int i=1;i<s.length();i++){
            int r = 0;
            int c = i;
            while(c < s.length()){
                if(s[r] == s[c]) pal[r][c] = (r+1) > (c-1) ? 1 : pal[r+1][c-1];
                r++;
                c++;
            }
        }
        // Now we got all palidromes now we have to 
        vector<string> tem;
        solve(pal,0,tem,s);
        return ans;
    }
};