class CombinationIterator {
    vector<string>res;
    int index;
    
    void dfs(string characters, int combinationLength, int l, string curr) {
        if (curr.length() == combinationLength)
            res.push_back(curr);
        
        for (int i = l; i < characters.length(); i++) {
            curr += characters[i];
            dfs(characters, combinationLength, i+1, curr);
            curr.pop_back();
        }
    }
public:
    CombinationIterator(string characters, int combinationLength) {
        int n = characters.length();
        string curr;
        dfs(characters, combinationLength, 0, curr);
        index = 0;
    }
    
    string next() {
        string s = res[index];
        index++;
        return s;
    }
    
    bool hasNext() {
        return index < res.size();
    }
};

/**
 * Your CombinationIterator object will be instantiated and called as such:
 * CombinationIterator* obj = new CombinationIterator(characters, combinationLength);
 * string param_1 = obj->next();
 * bool param_2 = obj->hasNext();
 */