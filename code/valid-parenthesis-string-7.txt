class Solution {
public:
    bool checkValidString(string s) {
      // delta means left_count - right_count
      int delta_high = 0;
      int delta_low = 0;
      for (const auto& c : s) {
        switch (c) {
          case '(':
            ++ delta_high;
            ++ delta_low;
            break;
          case ')':
            -- delta_high;
            -- delta_low;
            break;
          default: // *
            ++ delta_high;
            -- delta_low;
        }
        if (delta_high < 0) {
          return false;
        }
        if (delta_low < 0) {
          delta_low = 0;
        }
      }
      return delta_low == 0;
    }
/*  
private:
    bool _checkValidString0(const std::string& s, int idx, int delta) 
    {
      bool result = false;
      if (delta < 0) {
        return false;
      }
      if (idx >= s.size()) {
        return delta == 0;
      }
      if (s[idx] == '(') {
        result =  _checkValidString0(s, idx + 1, delta + 1);
      } else if (s[idx] == ')') {
        result =  _checkValidString0(s, idx + 1, delta - 1);
      } else { // *
        result =  _checkValidString0(s, idx + 1, delta) ||
                  _checkValidString0(s, idx + 1, delta + 1) ||
                  _checkValidString0(s, idx + 1, delta - 1);
      }
      return result;
    }
*/
};