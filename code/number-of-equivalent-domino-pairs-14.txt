class Solution {
public:
    int numEquivDominoPairs(vector<vector<int>>& dominoes) {
        int count=0;
        map<vector<int>,int>m;
        for(int i=0;i<dominoes.size();i++) {
            vector<int>aux=dominoes[i];
            // sort the pair and store in the hashmap
            if(aux[0]>aux[1]) {
                swap(aux[0],aux[1]);
            }
            m[aux]++;
        }
        for(auto it:m) {
            if(it.second>1) {
                // so if for any domino we've 'n' instances then we can make nC2 equivalent pair from them..
                int n=it.second;
                count+=((n*(n-1))/2);
            }
        }
        return count;
    }
};