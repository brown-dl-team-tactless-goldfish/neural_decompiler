class RangeFreqQuery {
public:
    vector<map<int,int>> st;
    vector<int> arr;
    void buildSt(int v,vector<int>& arr,int l,int r){
        if(l==r){
            map<int,int>m;
            m[arr[l-1]]=1;
            st[v]=m;
        }else{
            int m=(l+r)/2;
            buildSt(2*v,arr,l,m);
             buildSt(2*v+1,arr,m+1,r);
            for(auto i:st[2*v]){
             st[v][i.first]+=i.second;
            }
              for(auto i:st[2*v+1]){
             st[v][i.first]+=i.second;
            }
        }
    }
    RangeFreqQuery(vector<int>& arr) {
        this->arr=arr;
        st=vector<map<int,int>>(400005);
        buildSt(1,arr, 1,arr.size());
    }
    
    int findAns(int v,int l,int r,int a,int b,int val){
        if(a>b)return 0;
        if(l==a&& r==b){
          return st[v][val]; 
        }
        int m=(l+r)/2;
        return findAns(2*v,l,m,a,min(m,b),val)+findAns(2*v+1,m+1,r,max(a,m+1),b,val);
    }
    
    int query(int left, int right, int value) {
        // return st[20][value];
      return  findAns(1,1,arr.size(),left+1,right+1,value);
    }
};

/**
 * Your RangeFreqQuery object will be instantiated and called as such:
 * RangeFreqQuery* obj = new RangeFreqQuery(arr);
 * int param_1 = obj->query(left,right,value);
 */