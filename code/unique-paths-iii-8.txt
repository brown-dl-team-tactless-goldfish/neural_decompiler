int sum=0;

if(grid[row][col]==2&&cur_points==target_points+1){
	
	
	visited[row][col]=0;
	return 1;
}
else{
	if (col>0&&visited[row][col-1]==0&&grid[row][col-1]!=-1){
		
		visited[row][col-1]=1;
		sum+=re(grid,visited,row,col-1,len,width,target_points,cur_points+1);
		visited[row][col-1]=0;
	}
	
	if (col<len-1&&visited[row][col+1]==0&&grid[row][col+1]!=-1){
		
		visited[row][col+1]=1;
		sum+=re(grid,visited,row,col+1,len,width,target_points, cur_points+1);
		visited[row][col+1]=0;
	}
	
	if (row>0&&visited[row-1][col]==0&&grid[row-1][col]!=-1){
		
		visited[row-1][col]=1;
		sum+=re(grid,visited,row-1,col,len,width, target_points,cur_points+1);
		visited[row-1][col]=0;
	}
	
	if (row<width-1&&visited[row+1][col]==0&&grid[row+1][col]!=-1){
		
		visited[row+1][col]=1;
		sum+=re(grid,visited,row+1,col,len,width, target_points, cur_points+1);
		visited[row+1][col]=0;
	}
	
}

return sum;