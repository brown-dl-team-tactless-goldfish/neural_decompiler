/**
 * Return an array of size *returnSize.
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* findDiagonalOrder(int** matrix, int matrixRowSize, int matrixColSize, int* returnSize) {
    *returnSize=0;
    if(matrixColSize==NULL){
        return NULL;
    } 
    int *ret=(int*)calloc(matrixRowSize*matrixColSize,sizeof(int));
    
    if(matrixRowSize==1||matrixColSize==1){
        for(int h=0;h<matrixRowSize;h++){
            for(int k=0;k<matrixColSize;k++){
                ret[(*returnSize)++]=matrix[h][k];
            }
        }
        return ret;
    }
    int i=0;
    int j=0;
    int flag=0;
    while(i!=matrixRowSize-1||j!=matrixColSize-1){
        ret[(*returnSize)++]=matrix[i][j];
        if(i==matrixRowSize-1){
            j++;
        }
        else if(j==matrixColSize-1){
            i++;
        }
        else if(i==0){
            j++;
        }
        else if(j==0){
            i++;
        }
        if(flag==0&&(i!=matrixRowSize-1||j!=matrixColSize-1)){
             do{
                ret[(*returnSize)++]=matrix[i][j];
                i++;
                j--;
            }while(j!=0&&i!=matrixRowSize-1);
            flag=1;
        }
        else if(flag==1&&(i!=matrixRowSize-1||j!=matrixColSize-1)){
            do{
                ret[(*returnSize)++]=matrix[i][j];
                i--;
                j++;
            }while(i!=0&&j!=matrixColSize-1);
            flag=0;
        }
    }
    ret[(*returnSize)++]=matrix[i][j];
    return ret;
}