int dp[501][501];
int solve(string &s,string &t,int n,int m){
    if(n==0 || m==0) return dp[n][m] = 0;
    if(dp[n][m]!=-1) return dp[n][m];
    if(s[n-1]==t[m-1]){
        return dp[n][m] = 1+solve(s,t,n-1,m-1);
    }else{
        return dp[n][m] = max(solve(s,t,n-1,m),solve(s,t,n,m-1));
    }
}
int minInsertions(string s) {
    int n = s.size();
    memset(dp,-1,sizeof(dp));
    string t = s;
    reverse(t.begin(),t.end());
    int c = solve(s,t,s.size(),t.size());
    return (n-c);
}