#define MIN(a, b) ((a) < (b)) ? (a) : (b)

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* distributeCandies(int candies, int num_people, int* returnSize){
    int x = floor((-1.0 + sqrt(1.0 + 8 * (long)candies)) / 2.0);
    int remainCandies = candies - (1 + x) * x / 2;
    
    int* result = (int*)calloc(num_people, sizeof(int));
    *returnSize = num_people;
    
    int fullCircles = x / num_people;
    int circleRemain = x % num_people;
    if (fullCircles > 0) {
        for (int i = 0; i < num_people; ++i) {
            result[i] = (2 * (i + 1) + (fullCircles - 1) * num_people) * fullCircles / 2;
        }    
    }
    int v = fullCircles * num_people + 1;
    for (int i = 0; i < circleRemain; ++i) {
        result[i] += v;
        v++;
    }
    int i = circleRemain;
    while (remainCandies > 0) {
        result[i] += MIN(v, remainCandies);
        remainCandies -= v;
        v++;
        i = (i + 1) % num_people;
    }
    
    return result;
}