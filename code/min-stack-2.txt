typedef struct {
    int *array;
    int top;
    int min;
} MinStack;

/** initialize your data structure here. */
MinStack* minStackCreate(int maxSize) {
    MinStack * stack = (MinStack *)malloc(sizeof(MinStack));
    stack->array = (int*)malloc(sizeof(int)*maxSize);
    stack->top = -1;
    stack-> min = INT_MAX;
    return stack;
}

void minStackPush(MinStack* obj, int x) {
    
    if(obj->top==-1)    /*stack is empty*/
         obj->min = obj->array[++obj->top] = x;
    
    else if(x > obj->min)
        obj->array[++obj->top] = x;
    
    else    /*push the second smallest into stack then push x into stack*/
    {
        obj->array[++obj->top] = obj->min;
        obj->array[++obj->top] = x;
        obj->min = x;
    }
}

void minStackPop(MinStack* obj) {
    if(obj->array[obj->top] <= obj->min)
    {
        if(obj->top == 0)   /*only one element remains*/
        {
            obj->top--;
            obj->min = INT_MAX;
        }
        else
        {
            obj->min = obj->array[obj->top-1];
            obj->top -= 2;
        }
    }
    else
        obj->top--;
}

int minStackTop(MinStack* obj) {
    return obj->array[obj->top];   
}

int minStackGetMin(MinStack* obj) {
    return obj->min;
}

void minStackFree(MinStack* obj) {
    free(obj);
}