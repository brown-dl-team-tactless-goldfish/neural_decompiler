public class Solution {
    public bool StrongPasswordCheckerII(string password) {
        if(password.Length<8)
            return false;

        HashSet<char> small =  new HashSet<char>(){
            'q','w','e','r','t','y','u','i','o','p','a','s','d','f','g','h','j','k','l','z','x','c','v','b','n','m'
        };
        HashSet<char> large = new(){
            'Q','Y','W','E','R','T','Y','U','I','O','P','A','S','D','F','G','H','J','K','L','Z','X','C','V','B','N','M'
        };
        HashSet<char> nums = new(){
            '1','2','3','4','5','6','7','8','9','0'
        };
        HashSet<char> special = new HashSet<char>(){
            '!','@','#','
```,'%','^','&','*','(',')','-','+'
        };

        bool isSmall=small.Contains(password[0]),isLarge=large.Contains(password[0]),isNum=nums.Contains(password[0]), isSpecial=special.Contains(password[0]);

        for(int i=1; i<password.Length; i++){
            char c = password[i];

            if(password[i-1] == c){
                return false;
            }

            if(small.Contains(c)){
                isSmall = true;
            }

            if(large.Contains(c)){
                isLarge = true;
            }

            if(nums.Contains(c)){
                isNum = true;
            }

            if(special.Contains(c)){
                isSpecial = true;
            }
        }

        return isSmall && isLarge && isNum && isSpecial;

    }
}