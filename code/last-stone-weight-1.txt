int lastStoneWeight(int* stones, int stonesSize){
int weights[1000];
int i;
int stone_ptr = 999;
int stone1, stone2;
for (i=0; i<1000; i++) weights[i]=0;
for (i=0; i<stonesSize; i++) weights[stones[i]-1]++;
while (weights[stone_ptr]==0) stone_ptr--;
    
while (stone_ptr>=0) {
    // Get stone 1
    stone1 = stone_ptr + 1;
    weights[stone_ptr]--;
    if (weights[stone_ptr]==0)
        while ((stone_ptr>=0) && (weights[stone_ptr]==0)) stone_ptr--;
    if (stone_ptr<0) return stone1; // if there's no second stone, we're done
    // Get stone 2
    stone2 = stone_ptr + 1;
    weights[stone_ptr]--;
    if (weights[stone_ptr]==0)
        while ((stone_ptr>=0) && (weights[stone_ptr]==0)) stone_ptr--;
    // If we've only got two stones, same size, we're also done
    if ((stone_ptr<0) && (stone1==stone2)) return 0;
    stone1 = stone1 - stone2; // Smash them, with remains going into stone1
    if (stone1!=0) weights[stone1-1]++;
    if ((stone1-1) > stone_ptr) stone_ptr = stone1-1;
}
    
return 0; // But we will never actually get here...
}