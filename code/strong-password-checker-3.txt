int strongPasswordChecker(char * password){
    int lower, upper, digit;
    int extra, repeat, repeat_over, zero, one, two, zot, over, letter, i;
    lower = upper = digit = 1;
    extra = repeat = repeat_over = zero = one = two = zot = over = letter = i = 0;

    for (i=0; i<strlen(password); i++) {
        if (letter == password[i]) {
            repeat++;
        } else {
            if ((repeat+1)/3 > 0) {
                extra += (repeat+1)/3;
                repeat_over += (repeat+1)/3 - 1;
                if ((repeat+1)%3 == 0)
                    zero++;
                else if ((repeat+1)%3 == 1)
                    one++;
                else
                    two++;
            }
            repeat = 0;
            letter = password[i];
        }

        if (lower == 1 || upper == 1 || digit == 1) {
            if (letter >= 'a' && letter <= 'z') {
                lower = 0;
            } else if (letter >= 'A' && letter <= 'Z') {
                upper = 0;
            } else if (letter >= '0' && letter <= '9') {
                digit = 0;
            }
        }
    }

    if (repeat>1) {
        extra += (repeat+1)/3;
        repeat_over += (repeat+1)/3 - 1;
        if ((repeat+1)%3 == 0)
            zero++;
        else if ((repeat+1)%3 == 1)
            one++;
        else
            two++;
    }
    if (extra <= (6-i)) {
        if (lower+upper+digit > (6-i)) 
            extra=lower+upper+digit;
        else
            extra=6-i;
    } else if (i>20) {
        over = i-20;
        while (over > 0 && (zero > 0 || one > 0 || two > 0 || (repeat_over > 0 && over > 2))) {
            if (zero > 0) {
                over--;
                zero--;
            } else if (one > 0 && over > 1) {
                over -= 2;
                one--;
                extra++;
            } else if (two > 0 && over > 2) {
                over -= 3;
                two--;
                extra+=2;
            } else if (repeat_over > 0 && over > 2) {
                over -= 3;
                repeat_over--;
                extra+=2;
            } else {
                break;
            }
        }

        zot = zero+one+two;
        if (zot + repeat_over < lower+upper+digit) {
            over += (lower+upper+digit-zot-repeat_over);
        }
        extra += over;
    }
    return extra;
}