class Solution {
public:
    array<int, 26> count(string &s) {
        array<int, 26> bar = {0};
        for (char c : s) {
            bar[c - 'a']++;
        }
        return bar;
    }
    
    bool subset(string &a, array<int, 26> &freq) {
        array<int, 26> bar = count(a);
        for (int i = 0; i < freq.size(); i++) {
            if (bar[i] < freq[i]) {
                return false;
            }
        }
        return true;
    }
    
    vector<string> wordSubsets(vector<string>& a, vector<string>& b) {
        array<int, 26> freq = {0};
        for (int i = 0; i < b.size(); i++) {
            array<int, 26> bar = count(b[i]);
            for (int i = 0; i < freq.size(); i++) {
                freq[i] = max(bar[i], freq[i]);
            }
        }
        
        vector<string> res;
        for (int i = 0; i < a.size(); i++) {
            if (subset(a[i], freq)) {
                res.push_back(a[i]);
            }
        }
        
        return res;
    }
};