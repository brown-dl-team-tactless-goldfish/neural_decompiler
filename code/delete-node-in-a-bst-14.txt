/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */

struct TreeNode *inorderSuccessor(struct TreeNode* root){
    struct TreeNode* curr=root;
    while(curr&&curr->left!=NULL) curr=curr->left;
    return curr;
}
struct TreeNode* deleteNode(struct TreeNode* root, int key){
    if(root==NULL) return root;     //Base case
    if(key<(root->val)) root->left=deleteNode(root->left,key);
    else if(key>(root->val)) root->right=deleteNode(root->right,key);
    else{
        //node with one or no child
        if(root->left==NULL){
            struct TreeNode *temp=root->right;
            free(root);
            return temp;
        }
        if(root->right==NULL){
            struct TreeNode *temp=root->left;
            free(root);
            return temp;
        }
        //for node with 2 kids find inorder successor and delete it
        else{
            struct TreeNode *temp=inorderSuccessor(root->right);
            root->val=temp->val;
            root->right=deleteNode(root->right, temp->val);
        }
    }
    return root;
}