class Solution {
public:
    #define mod 1000000007
    long long giveres(int pos,int len,int choto, vector<vector<long long>>&dp,string &s){
        if(pos==len)
            return 1ll;
        long long &ret = dp[pos][choto];
        if(ret!=-1)
            return ret;
        ret = 0;
        if(s[pos-1]=='D'){
            for(int i = 1;i<=choto;i++){
                ret += giveres(pos+1,len,i-1,dp,s);
                if(ret>=mod)
                    ret%=-mod;
            }
        }
        else {
            for(int i = 1;i<=len-pos-choto;i++){
                ret += giveres(pos+1,len,i-1+choto,dp,s);
                if(ret>=mod)
                    ret %= mod;
            }
        }
        return ret;
    }
    
    int numPermsDISequence(string S) {
        int len = S.size();
        vector<vector<long long>>dp(len+5,vector<long long>(len+5,-1));
        long long ans = 0;
        for(int i = 1;i<=len+1;i++){
            ans += giveres(1,len+1,i-1,dp,S);
            if(ans >= mod)
                ans %= mod;
        }
        return ans;
    }
};