class Solution {
public:
    string abbreviateProduct(int left, int right) {
        string ans = convert(left);
        for (int i = left + 1; i <= right; i++)
            ans = prod(ans, i);
        int p = ans.find('.');
        int q = ans.find('e');
        if (q > 10)
            ans = ans.substr(0, 5) + "..." + ans.substr(q - 5);
        return ans;
    }
    
private: 
    string prod(string a, int i)
    {
        string b = convert(i);
        int p = a.find('e'), q = b.find('e');
        int c = stoi(a.substr(p + 1)) + stoi(b.substr(q + 1));
        a = a.substr(0, p);
        b = b.substr(0, q);
        p = a.find('.');
        if (p == -1)
        {
            long long a1 = stoll(a.substr(0, p)), b1 = stoll(b), c1 = a1 * b1;
            while (c1 % 10 == 0)
            {
                c++;
                c1 /= 10;
            }
            string cs = to_string(c1);
            if (cs.length() > 12)
            {
                string cs1 = cs.substr(0, 12);
                string cs2 = cs.substr(cs.length() - 12);
                cs = cs1 + "..." + cs2;
            }
            return (cs + "e" + to_string(c));
        }
        else
        {
            long long a1 = stoll(a.substr(0, p)), b1 = stoll(b), c1 = a1 * b1;
            p = a.find_last_of('.');
            long long a2 = stoll(a.substr(p + 1)), c2 = a2 * b1;
            while (c2 % 10 == 0)
            {
                c++;
                c2 /= 10;
            }
            while (c1 % 10 == 0)
                c1 /= 10;
            string cs1 = to_string(c1);
            if (cs1.length() >= 12)
                cs1 = cs1.substr(0, 12);
            string cs2 = to_string(c2);
            if (cs2.length() >= 12)
                cs2 = cs2.substr(cs2.length() - 12);
            else
                cs2 = string(12 - cs2.length(), '0') + cs2;
            string cs = cs1 + "..." + cs2;
            return (cs + "e" + to_string(c));
        }
    }
    
    string convert(int i)
    {
        int c = 0;
        while (i % 10 == 0)
        {
            i /= 10;
            c++;
        }
        string s = to_string(i) + "e" + to_string(c);
        return s;
    }
};