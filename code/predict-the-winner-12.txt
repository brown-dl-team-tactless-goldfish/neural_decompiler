class Solution {
public:
    bool PredictTheWinner(vector<int>& nums) {
        if(nums.size()% 2 == 0) return true;
        int n = nums.size();
        vector<vector<int>> dp(n, vector<int>(n, 0));
        for(int i = 0; i < n; i++) {
            dp[i][i] = nums[i];
            for(int j = i-1; j >= 0; j--) {
                int a = j+1 < n && i-1 >= 0 ? dp[j+1][i-1] : 0;
                int b = j+2 < n ? dp[j+2][i] : 0;
                int c = i-2 >= 0 ? dp[j][i-2] : 0;
                dp[j][i] = max(nums[i]+min(a,c), nums[j]+min(a,b));
            }
        }
        return 2*dp[0][n-1] >= accumulate(nums.begin(), nums.end(), 0);  //profit of player1 should be greater than equal to half of the sum of array 
    }
};```