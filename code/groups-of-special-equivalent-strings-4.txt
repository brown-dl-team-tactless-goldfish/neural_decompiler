class Solution:
    def numSpecialEquivGroups(self, A: List[str]) -> int:
        # print("A = ", A)

        def helper(str_ori):
            # print("str_ori = ", str_ori)

            str_new = ""
            str_odd = ""
            str_even = ""
            for idx in range(len(str_ori)):
                if (idx % 2 == 1):
                    str_even += str_ori[idx]
                else:
                    str_odd += str_ori[idx]

            # print("str_odd = ", str_odd)
            # print("str_even = ", str_even)

            str_new = sorted(str_odd) + sorted(str_even)

            # print("str_new = ", str_new)

            return str_new

        str_sorts = []
        res = 0
        for str_ele in A:
            str_tmp = helper(str_ele)
            if (str_tmp not in str_sorts):
                str_sorts.append(str_tmp)
                res += 1
        # print("end str_sorts = ", str_sorts)
        # print("res = ", res)

        return res