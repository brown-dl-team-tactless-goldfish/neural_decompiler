class Solution {
public:
    int unhappyFriends(int n, vector<vector<int>>& preferences, vector<vector<int>>& pairs) {
        int ret = 0 ;
        unordered_map<int, int>match ; //mathch
        vector<vector<int>>score(n, vector<int>(n)) ;
        for(auto p : pairs){
            match[p[0]] = p[1] ;
            match[p[1]] = p[0] ;
        }
        for(int i = 0; i < n; i++){
            for(int j = 0 ; j <n-1; j++){
                int nxt = preferences[i][j] ;
                score[i][nxt] = n-j ;
            }
        }

        for(int x = 0; x < n; x++){
            int y = match[x] ;
            for(int j =0; j < n-1; j++){
                if(preferences[x][j] == y)
                    break ;
                int u = preferences[x][j] ;
                int v= match[u] ;
                if(score[u][x] > score[u][v]){
                    ret ++;
                    break ;
                }                    
            }

        }
        return ret ;
    }
};