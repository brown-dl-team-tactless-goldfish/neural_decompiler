class Solution {
public:
    int maxSumDivThree(vector<int>& arr) {
        int n = arr.size();
        
        vector<vector<int>> dp(n+1, vector<int>(3, 0));
        dp[0][0] = 0;
        dp[0][1] = INT_MIN;
        dp[0][2] = INT_MIN;
        
        for(int i=1;i<=n;++i){
            int idx0 = 3 - (arr[i-1]%3) - 3;
            idx0 = (idx0<0?3+idx0:idx0);
            int idx1 = 3 - (arr[i-1]%3) - 2;
            idx1 = (idx1<0?3+idx1:idx1);
            int idx2 = 3 - (arr[i-1]%3) - 1;
            idx2 = (idx2<0?3+idx2:idx2);
            
            dp[i][0] = max(dp[i-1][0], arr[i-1] + dp[i-1][idx0]);
            dp[i][1] = max(dp[i-1][1], arr[i-1] + dp[i-1][idx1]);
            dp[i][2] = max(dp[i-1][2], arr[i-1] + dp[i-1][idx2]);
        }
        return dp[n][0];
    }
};