typedef struct node{
    int u,l;
}map;

bool isLower(char c){
    return c >='a' && c <='z';
}
int max(int a,int b){
    return a > b ? a : b;
}

int longestPalindrome(char * s){
    map* hash[26];
    int count=0,odd=0,add=0;
    for(int i=0;i<26;i++){
        hash[i]=(map*)calloc(1,sizeof(map));
    }
    for(int i=0;s[i]!='\0';i++){
        if(isLower(s[i]))
            hash[s[i]-'a']->l++;
        else 
            hash[s[i]-'A']->u++;
    }
    for(int i=0;i<26;i++){
       count+=hash[i]->l+hash[i]->u;
        if(hash[i]->l & 1)
            odd+=1;
        if(hash[i]->u & 1)
            odd+=1;
    }
    if(odd > 0)
        return count-odd+1;
    else 
        return count;
}