int maxProduct(int* nums, int numsSize) {
int* p1=(int*)malloc(sizeof(int)*(numsSize));
int* p2=(int*)malloc(sizeof(int)*(numsSize));
if(numsSize==1)
	return nums[0];
if(nums[0]>0){
	p1[0]=nums[0];
	p2[0]=0;
}
else if (nums[0]<0){
	p1[0]=0;
	p2[0]=nums[0];
}
else{
	p1[0]=0;
	p2[0]=0;
}
int i,max=-2147483648;
for(i=1;i<numsSize;i++){
	if(nums[i]>0){
		if(p1[i-1]>0)
			p1[i]=p1[i-1]*nums[i];
		else
			p1[i]=nums[i];
		if(p2[i-1]<0)
			p2[i]=p2[i-1]*nums[i];
		else
			p2[i]=0;
	}
	else if(nums[i]<0){
		if(p2[i-1]<0)
			p1[i]=p2[i-1]*nums[i];
		else
			p1[i]=0;
		if(p1[i-1]>0)
			p2[i]=p1[i-1]*nums[i];
		else
			p2[i]=nums[i];
	}
	else{
		p1[i]=0;
		p2[i]=0;
	}
}

for(i=0;i<numsSize;i++)
    if(p1[i]>max)
		max=p1[i];
return max;