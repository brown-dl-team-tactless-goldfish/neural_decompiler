class Solution {
public:
    vector<int> smallestTrimmedNumbers(vector<string>& nums, vector<vector<int>>& queries) {
        int m = nums[0].size() ;
        int n = nums.size() ;
        vector<vector<int>>dp(m+1, vector<int>(n)) ;
        for(int i = 0; i < n; i++)
            dp[0][i] = i ;
        for(int i = 1; i <= m; i++)
        {
            vector<vector<int>>buckets(10) ;
            for(int j = 0; j < n; j++)
            {
                int idx = dp[i-1][j] ;
                buckets[nums[idx][m-i] - '0'].push_back(idx) ;
            }
            int j = 0 ;
            for(int b = 0; b < 10; b++)
            {
                for(auto& idx : buckets[b]){
                    dp[i][j] = idx ;
                    j++ ;
                }
            }
        }

        vector<int>ret ;
        for(auto& q : queries)
        {
            ret.push_back(dp[q[1]][q[0]-1]) ;
        }
        return ret ;
    }
};