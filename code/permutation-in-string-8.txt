bool checkRest(int x, int *freqTable, int len, char *s2) {
    int i = 0;
    while (i < len) {
        if (freqTable[s2[x] - 97] > 0) {
            freqTable[s2[x] - 97] -= 1;
            i += 1;
            x += 1;
            //printf("%d\n",freqTable[s2[x] - 97]);
            //printf("test");
        }
        else {
            return false;
        }
    }
    return true;
}

void populate (int length, char *s1, int *freqTable) {
        for (int i = 0; i < length; i += 1) {
            freqTable[s1[i] - 97] = 0;
        }
        for (int i = 0; i < length; i += 1) {
        freqTable[(s1[i] - 97)] += 1;
    }
}
bool checkInclusion(char * s1, char * s2){
    int freqTable[26] = {0};
    int s1Length = strlen(s1);
    int s2Length = strlen(s2);
    populate(s1Length, s1, freqTable);
    for (int i = 0; i <= (s2Length - s1Length); i += 1) {
        if (freqTable[s2[i] - 97] > 0) {
            if (checkRest(i, freqTable, s1Length, s2) == true) {
                return true;
            }
            else {
                populate(s1Length, s1, freqTable);
            }
        }
    }
    return false;
}