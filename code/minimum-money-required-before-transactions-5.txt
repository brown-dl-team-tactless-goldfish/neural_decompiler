class Solution {
public:
    long long minimumMoney(vector<vector<int>>& transactions) {
        vector<vector<int>> v1, v2;
        for (auto& t : transactions)
        {
            if (t[0] > t[1])
                v1.push_back(t);
            else
                v2.push_back(t);
        }
        sort(v1.begin(), v1.end(), [](const vector<int>& a, const vector<int>& b) {
            return ((a[1] == b[1]) ? a[0] > b[0] : a[1] < b[1]);
        });
        long long cand1 = 0, cand2 = 0, ans = 0;
        for (int i = 0; i < v1.size(); i++)
        {
            auto t = v1[i];
            cand1 += t[0];
            ans = max(ans, cand1);
            cand1 -= t[1];
        }
        for (int j = 0; j < v2.size(); j++)
        {
            auto t = v2[j];
            cand2 = max(cand2, (long long)t[0]);
        }
        ans = max(ans, cand1 + cand2);
        return ans;
    }
};