void dfs(int curr,vector<vector<int>>& G,vector<int> &vis)
{
  
    if(vis[curr]==1)
       return;
    vis[curr]=1;
    int i;
    for(i=0;i<G.size();i++)
    {
      
        if(G[curr][i]&&vis[i]==0)
            dfs(i,G,vis);
    }
}
int minMalwareSpread(vector<vector<int>>& G, vector<int>& initial) {
        int n=G.size();
    int i,j,ans=0,idx=-1;
    sort(initial.begin(),initial.end());
    for(i=0;i<initial.size();i++)
    {
        vector<int> vis(n,0);
        int remove=initial[i];//removing
        vis[remove]=1;//marking the removed so that it does not get visited 
        for(j=0;j<initial.size();j++)
        {
            if(vis[initial[j]]==0)
        dfs(initial[j],G,vis);
            
        }
        
        int c=0;
        for(auto x:vis)
        {
            c+=x;
        }
        if(ans<(n-c+1))
        {
            ans=n-c+1;
            idx=remove;
        }
        
    }
    return idx;
}