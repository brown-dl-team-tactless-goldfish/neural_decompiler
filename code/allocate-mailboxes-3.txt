class Solution {
public:
    int minDistance(vector<int>& houses, int k) {
        init(houses);
        auto dp = vector(n+1, vector(k+1, 10000000));
        dp[0] = vector(k+1, 0);
        for(int i=0; i<n; i++){
            for(int j=1;j<=k;j++){
                for(int u=0;u<=i;u++){
                    dp[i+1][j] = min(dp[i+1][j], vv[u][i] + dp[u][j-1]);
                }
            }
        }
        return dp[n][k];
    }
    
    void init(vector<int>& houses){
        sort(houses.begin(), houses.end());
        n = houses.size();
        vv = vector(n, vector(n, 0));
        for(int len = 2; len <= n; len++){
            for(int i=0;i+len-1<n;i++){
                int j = i+len-1;
                vv[i][j] = houses[j] - houses[i] + vv[i+1][j-1];
            }
        }
    }
    
    vector<vector<int>> vv; // vv[i][j] is the min sum distance of house [i, j] where there is one mailbox 
    int n;
};