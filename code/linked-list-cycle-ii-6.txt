/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode *detectCycle(struct ListNode *head) {
    if (head == 0) return 0;
    struct ListNode* n1 = head;
    struct ListNode* n2 = head;
    // must be longer than 2 nodes
    if (head -> next == 0 || head ->next ->next== 0)return 0;
    n1 = n1->next;
    n2 = n2->next->next;
    // n1, n2 not meet and n2 does not meet the end;
    while (n1 != n2 && n2 != 0) {
        n1 = n1->next;
        if (n2->next != 0) {
            n2 = n2->next->next;
        } else {
            return 0;
        }
    }
    if (n2 == 0)return 0;
    
    n1 = head;
    while (n1 != n2) {
        n1 = n1->next;
        n2 = n2->next;
    }
    return n1;
}