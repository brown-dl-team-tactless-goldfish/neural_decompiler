void help(char **grid, int x, int y, int row, int col) {
    
    
    grid[x][y] = '0';
    
    
    if(x - 1 >= 0 && grid[x-1][y] == '1')
        help(grid,x-1,y,row,col);
    
    if(x + 1 < row && grid[x+1][y] == '1')
        help(grid,x+1,y,row, col);
    
    if(y - 1 >= 0 && grid[x][y-1] == '1')
        help(grid,x,y-1,row,col);
    
    if(y+1 < col && grid[x][y+1] == '1')
        help(grid,x,y+1,row,col);
}

int numIslands(char** grid, int gridSize, int* gridColSize){
    
    int row = gridSize;
    int col = *gridColSize;
    
    
    int ans = 0;
    
    
    for(int i = 0; i < row; i++) {
    
        for(int j = 0; j < col; j++) {
            
            if(grid[i][j] == '1') {
            
                    
            help(grid,i,j,row,col);
            ans++;
            }
        }
        
    }//end of outer loop
    
    return ans;

}