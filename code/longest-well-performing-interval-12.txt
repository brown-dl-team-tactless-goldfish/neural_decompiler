class Solution {
public:
    int longestWPI(vector<int>& nums) {
       unordered_map<int,int>mp;
      int count=0;
      int ans=0;
      
      for(int i=0;i<nums.size();i++){
        if(nums[i]>8)
          count++;
        else
          count--;
        
        if(count>0)
          ans=i+1;
        else{
          if(mp.find(count-1)!=mp.end())
            ans=max(ans,i-mp[count-1]);
        }
        
         if(mp.find(count)==mp.end())
           mp[count]=i;
        
        /* only updating map if similar count doesn't exist , if it exist already in map then don't update it for new index (to keep the length of interval max as possible)
        */
        
      }
      return ans;
    }
};