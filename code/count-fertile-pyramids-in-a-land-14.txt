class Solution {
public:
    int countPyramids(vector<vector<int>>& grid) {
        for(int i=0;i<grid.size();i++)
        {
            for(int j=0;j<grid[0].size();j++)
            {
                if(grid[i][j]==1 && j-1>=0)
                {
                    grid[i][j]=1+grid[i][j-1];
                }
            }
        }
        int ans = 0;
        for(int i=0;i<grid.size();i++)
        {
            for(int j=0;j<grid[0].size();j++)
            {
               if(grid[i][j]!=0)
               {
                   int curr = j+1;
                   int rr=3;
                   int prev=1;
                   for(int k=i+1;k<grid.size() && curr<grid[0].size();k++)
                   {
                       int s1 = grid[k][curr];
                       if(curr-rr>=0)
                       {
                           s1-=grid[k][curr-rr];
                       }
                       if(s1-prev==2)
                       {
                           ans++;
                       }
                       else
                       {
                           break;
                       }
                       curr+=1;
                       rr+=2;
                       prev+=2;
                   }
               }
            }
        }
        for(int i=grid.size()-1;i>=0;i--)
        {
            for(int j=0;j<grid[0].size();j++)
            {
               if(grid[i][j]!=0)
               {
                   int curr = j+1;
                   int rr=3;
                   int prev=1;
                   for(int k=i-1;k>=0 && curr<grid[0].size();k--)
                   {
                       int s1 = grid[k][curr];
                       if(curr-rr>=0)
                       {
                           s1-=grid[k][curr-rr];
                       }
                       if(s1-prev==2)
                       {
                           ans++;
                       }
                       else
                       {
                           break;
                       }
                       curr+=1;
                       rr+=2;
                       prev+=2;
                   }
               }
            }
        }
        return ans;
    }
};