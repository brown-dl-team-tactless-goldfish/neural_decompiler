#include <stdint.h>

typedef struct RationalNumber {
  uint64_t n, d;  // numerator and denominator
} rat_t;

rat_t rat_new(const char*);

bool isRationalEqual(const char* S, const char* T) {
  rat_t s = rat_new(S), t = rat_new(T);
  return s.d * t.n == t.d * s.n;
}

rat_t rat_new(const char* s) {
  rat_t r = {.n = 0, .d = 1};

  // IntegerPart
  while ('0' <= *s && *s <= '9') {
    r.n = r.n * 10 + *s - '0';
    s++;
  }

  if (*s++ != '.') return r;

  // NonRepeatingFloatingPart
  while ('0' <= *s && *s <= '9') {
    r.n = r.n * 10 + *s - '0';
    r.d *= 10;
    s++;
  }
  if (*s++ != '(') return r;

  // RepeatingFloatingPart
  uint64_t d = 1, n = 0;
  while ('0' <= *s && *s <= '9') {
    n = n * 10 + *s - '0';
    d *= 10;
    s++;
  }

  if (*s != ')') return r;
  d--;
  r.n = r.n * d + n;
  r.d *= d;
  return r;
}
