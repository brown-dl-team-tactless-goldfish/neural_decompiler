class Solution {
public:
    using LL = long long;
    long long totalCost(vector<int>& costs, int K, int candidates) {
        priority_queue<int, vector<int>, greater<>> left, right;
        int i=0, j = costs.size()-1, n = costs.size();
        LL ret = 0;
        for(int k=0; k<K; k++) {
            while(i<=j && left.size()<candidates) left.push(costs[i++]);
            while(i<=j && right.size()<candidates) right.push(costs[j--]);

            if(!right.size() || (left.size() && left.top()<= right.top())) {
                ret += left.top();
                left.pop();
            } else {
                ret += right.top();
                right.pop();
            }
        }
        return ret;
    }
};