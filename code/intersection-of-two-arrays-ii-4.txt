

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */

int cmp(const void *a,const void *b){
    return *(int*)a-*(int*)b;
}
int* intersect(int* nums1, int nums1Size, int* nums2, int nums2Size, int* returnSize){
    qsort(nums1,nums1Size,sizeof(int),cmp);
    qsort(nums2,nums2Size,sizeof(int),cmp);
    int index=0;
    int p1=0,p2=0;

    while(p1<nums1Size && p2<nums2Size){
        if(nums1[p1]>nums2[p2]){
            p2+=1;
        }else if(nums1[p1]<nums2[p2]){
            p1+=1;
        }else{
            nums1[index++]=nums1[p1];
            p1+=1;
            p2+=1;
        }

    }
    *returnSize=index;
    return nums1;
}