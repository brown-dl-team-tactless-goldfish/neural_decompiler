int* powerfulIntegers(int x, int y, int bound, int* returnSize) {
        int *ret=malloc(sizeof(int)*(bound+1)),i,j,index=0,xindex=1,yindex=1,count=0;
        int *ans=calloc(bound+1,sizeof(int));
        int xtmp[30]={0},ytmp[30]={0};
        xtmp[0]=1;
        ytmp[0]=1;
        int xval=x,yval=y;
        if(x!=1)
        while(xval<bound)
        {
            xtmp[xindex++]=xval;
            xval*=x;          
        }

        if(y!=1)
        while(yval<bound)
        {
            ytmp[yindex++]=yval;
            yval*=y;          
        }
        
        for(i=0;(xtmp[i]+ytmp[j])<=bound&&i<xindex;i++)
        {
            
            for(j=0;(xtmp[i]+ytmp[j])<=bound&&j<yindex;j++)
            {
                ans[xtmp[i]+ytmp[j]]++;
                if(ans[xtmp[i]+ytmp[j]]==1)
                {
                    ret[index++]=xtmp[i]+ytmp[j];
                    count++;
                }
            }
            j=0;
        }
    
    *returnSize=count;
    return ret;
}