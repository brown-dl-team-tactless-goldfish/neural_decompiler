class Solution {
    vector<int>res;
    void dfs(int N, int K, string s, int i) {
        if (s.length() == N) {
            int m = stoi(s);
            if (find(res.begin(), res.end(), m) == res.end())
                res.push_back(m);
            return;
        }
        
        s += to_string(i);
        if (i-K >= 0)
            dfs(N, K, s, i-K);
        if (i+K <= 9)
            dfs(N, K, s, i+K);
    }
public:
    vector<int> numsSameConsecDiff(int N, int K) {
        
        string s;
        if (N == 1) {
            for (int i = 0; i <= 9; i++)
                res.push_back(i);
            return res;
        }
        
        for (int i = 1; i <= 9; i++)
            dfs(N, K, "", i);
        return res;
    }
};