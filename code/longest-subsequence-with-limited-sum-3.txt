int compare(const void *a, const void *b) {
    const int *aa = a;
    const int *bb = b;
    return (*aa > *bb) - (*aa < *bb); // to avoid overflow
}

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* answerQueries(int* nums, int numsSize, int* queries, int queriesSize, int* returnSize){

    qsort(nums,numsSize,sizeof(int),compare);

    int * ret = (int*)malloc(sizeof(int)*queriesSize);
    (*returnSize) = queriesSize;

    int i, j;
    int temp_sum, temp_len;

    for (i = 0; i < queriesSize; i++){
        temp_sum = 0;
        temp_len = 0;
        for (j = 0; j< numsSize; j++){
            
        // printf("%d\n",nums[j]);
            if (nums[j] + temp_sum <= queries[i]){
                temp_sum+= nums[j];
                temp_len++;
            }
        }
        ret[i] = temp_len;
        
    }

    return ret;
}