class Solution {
public:
    
    vector<int> findPeakGrid(vector<vector<int>>&A) {
        int m = A.size();
        int n = A[0].size();
        int dx[] = {0,-1,0,1};
        int dy[] = {-1,0,1,0};
        int l = 0;
        int r = m - 1;
        while(l < r)
        {
            int mid = (l + r) / 2;
            int max1 = *max_element(A[mid].begin(),A[mid].end());
            int max2 = *max_element(A[mid + 1].begin(),A[mid + 1].end());
            if(max1 > max2)
                r = mid;
            else
                l = mid + 1;
        }
        int max_elem = INT_MIN;
        vector<int>index;
        for(int i = 0; i < n; i++)
        {
            if(max_elem < A[l][i])
            {
                max_elem = A[l][i];
                index = {l,i};
            }
        }
        return index;
       
        
    }
};