class Solution {
public:
    vector<int> smallestTrimmedNumbers(vector<string>& nums, vector<vector<int>>& queries) {
        int n = queries.size(), m = nums.size(), k = nums[0].length();
        for (int i = 0; i < n; i++)
            queries[i].push_back(i);
        sort(queries.begin(), queries.end(), cmp);
        vector<pair<string, int>> ns(m);
        for (int j = 0; j < m; j++)
            ns[j] = {"", j};
        vector<int> ans(n);
        for (int i = 0; i < n; i++)
        {
            if (ns[0].first.length() < queries[i][1])
            {
                for (int j = 0; j < m; j++)
                    ns[j].first = nums[ns[j].second].substr(k - queries[i][1], queries[i][1]);
                sort(ns.begin(), ns.end());
            }
            ans[queries[i][2]] = ns[queries[i][0] - 1].second;
        }
        return ans;
    }
    
private: 
    static bool cmp(vector<int>& a, vector<int>& b)
    {
        if (a[1] == b[1])
            return (a[0] < b[0]);
        return (a[1] < b[1]);
    }
};