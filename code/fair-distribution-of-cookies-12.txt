class Solution {
public:
    int distributeCookies(vector<int>& cookies, int k) {
        vector<int> cnt(k, 0);
        int ans = INT_MAX;
        dfs(cookies, cnt, 0, ans);
        return ans;
    }

private: 
    void dfs(vector<int>& cookies, vector<int>& cnt, int i, int& ans)
    {
        int n = cookies.size(), m = cnt.size();
        if (i == n)
        {
            ans = min(ans, *max_element(cnt.begin(), cnt.end()));
            return;
        }
        for (int j = 0; j < m; j++)
        {
            cnt[j] += cookies[i];
            dfs(cookies, cnt, i + 1, ans);
            cnt[j] -= cookies[i];
        }
    }
};