class Solution {
public:
    const int dx[4] = {-1,0,1,0} ;
    const int dy[4] = {0,1,0,-1} ;
    int r , c , ans = 0 ;
    int solve(int i , int j ,vector<vector<int>> &grid){
        if(!grid[i][j]) return 0 ;
        
        int old = grid[i][j] ;
        grid[i][j] = 0 ;
        
        int res = 0 ;
        for(int itr = 0 ; itr < 4 ; ++itr ){
            int ii = i + dx[itr] , jj = j + dy[itr] ;
            if(ii >= 0 and jj >= 0  and ii < r and jj < c) res = max(res,old + solve(ii,jj,grid)) ;
        }
        
        grid[i][j] = old ;
        return res ;
    }
    
    int getMaximumGold(vector<vector<int>>& grid) {
        r = grid.size() , c = grid[0].size() ;
        
        for(int i = 0 ; i < r ; ++i ){
            for(int j = 0 ; j < c; ++j ){
                if(!grid[i][j]) continue ;
                ans = max(ans,solve(i,j,grid)) ;
            }
        }
        
        return ans ;
        
    }
};