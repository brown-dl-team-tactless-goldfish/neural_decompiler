int maxProfit(vector<int>& prices) {
    int n=prices.size();
    int dp[n];
    int maxRight=prices[n-1];
    int minLeft=prices[0];
    for(int i=0;i<n;i++){
        dp[i]=0;
    }
    for(int i=n-2;i>=0;i--){
        if(maxRight < prices[i]){
            maxRight=prices[i];
        }
        dp[i]=max(dp[i+1],maxRight-prices[i]);
    }
    for(int i=1;i<n;i++){
        if(minLeft > prices[i]){
            minLeft = prices[i];  
        }
        dp[i]=max(dp[i-1],dp[i]+(prices[i]-minLeft));
    }
    return dp[n-1];
}