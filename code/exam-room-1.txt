public class ExamRoom {

    private SortedSet<int> seats;
    private int N;
    
    public ExamRoom(int n) {
        
        seats = new SortedSet<int>();
        N = n;
    }
    
    // O(n + logn)
    public int Seat() {
        
        if(seats.Count == 0)
        {
            seats.Add(0);
            return 0;
        }
        else
        {
            int maxDistance = seats.First();
            int prev = -1, res = 0;
            foreach(var curr in seats)
            {
			    // case1 & case 2
                int currDistance = prev == -1? curr : (curr - prev) / 2;
                if(currDistance > maxDistance)
                {
                    maxDistance = currDistance;
                    res = prev + maxDistance;
                }
                prev = curr;
            }
            
			// case 3
            if(N - 1 - prev > maxDistance)
                res = N - 1;
            
            seats.Add(res);
            return res;
        }
    }
    
    // log(n)
    public void Leave(int p) {
        
        seats.Remove(p);
    }
}