int* cmp(const void* a, const void* b){
    return *(int*)a - *(int*)b;
}
int BinarySearch(int* arr, int n, int val){
    int left = 0, right = n-1;
    int mid;
    while(left < right){
        mid = right - (right - left)/2 ;
        if(arr[mid] <= val)
            left = mid;
        else
            right = mid -1;
    }
    if(arr[left] <= val)
        return left+1;
    else
        return 0;
}
int* answerQueries(int* nums, int numsSize, int* queries, int queriesSize, int* returnSize){
    qsort(nums, numsSize, sizeof(int), cmp);
    int* preSum = malloc(numsSize * sizeof(int));
    preSum[0] = nums[0];
    for(int i = 1; i < numsSize; i++){
        preSum[i] = preSum[i-1] + nums[i];
    }
    int* ans = malloc(queriesSize * sizeof(int));
    for(int i = 0; i < queriesSize; i++){
        ans[i] =  BinarySearch(preSum, numsSize, queries[i]);   
    }
    *returnSize = queriesSize;
    return ans;
}