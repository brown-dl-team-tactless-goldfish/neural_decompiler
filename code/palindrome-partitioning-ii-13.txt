class Solution {
public:
    int minCut(string s) {
        int n = s.size() ;

        vector<vector<bool>>isPalin(n, vector<bool>(n)) ;
        //len = 1
        for(int i = 0; i < n; i++)
            isPalin[i][i] = true ;
        //len = 2 
        for(int i = 0; i < n-1; i++){
            if(s[i] == s[i+1])
                isPalin[i][i+1] = true ;
        }
        for(int len = 3; len <= n; len++){
            for(int i = 0; i <= n-len; i++){
                int j = i+len-1 ;
                if(s[i] == s[j])
                    isPalin[i][j] = isPalin[i+1][j-1] ;
            }
        }
        
        if(isPalin[0][n-1])
            return 0 ;
        
        vector<int>dp(n+1, INT_MAX/2) ;
        dp[0] = 0 ;
        for(int i = 0; i < n; i++){
            if(isPalin[0][i]){
                dp[i+1] = 1 ;
                continue ;
            }
            for(int j = 1; j < n; j++){
                if(isPalin[j][i]){
                    dp[i+1] = min(dp[i+1], dp[j] + 1) ;
                }
            }
        }
        return dp[n] - 1 ;
    }
};