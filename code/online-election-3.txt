
class TopVotedCandidate {
    vector<pair<int, int>> lead;  //timestamp, id
    
public:
    TopVotedCandidate(vector<int>& persons, vector<int>& times) {
        unordered_map<int, int> mp;
        int leader = -1, maxi = 0;
        
        for (int i = 0; i < persons.size(); i++) {
            int id = persons[i], t = times[i];
            const int c = mp[id] +1;
            mp[id] = c;
            
            if (c >= maxi) {
                if (id != leader) {
                    leader = id;
                    lead.push_back({t, id});
                }
                
                if (c > maxi) maxi = c;
            }
        }
    }
    
    int q(int t) {
        int lo = 1, hi = lead.size();
        while (lo < hi) {
            int mi = lo + (hi - lo) / 2;
            if (lead[mi].first <= t)
                lo = mi + 1;
            else
                hi = mi;
        }

        return lead[lo - 1].second;
    }
};
