#define SIZE 12000
void function(int *map, int num, char* s){
    int len=strlen(s);
    for(int i=0;i<len;i++){
        map[s[i]-'a']-=num;
    }
}
char* originalDigits(char* s) {
    int *map=(int*)calloc(26,sizeof(int));
    int len=strlen(s);
    for(int i=0;i<len;i++){
        map[s[i]-'a']++;
    }
    char *array[]={
        "zero",
        "one",
        "two",
        "three",
        "four",
        "five",
        "six",
        "seven",
        "eight",
        "nine",
    };
    char *ret=(char*)malloc(SIZE*sizeof(char));
    int count=0;
    int *nums=(int*)calloc(10,sizeof(int));
    nums[0]=map['z'-'a'];
    function(map,nums[0],array[0]);
    nums[2]=map['w'-'a'];
    function(map,nums[2],array[2]);
    nums[4]=map['u'-'a'];
    function(map,nums[4],array[4]);
    nums[6]=map['x'-'a'];
    function(map,nums[6],array[6]);
    nums[8]=map['g'-'a'];
    function(map,nums[8],array[8]);
    nums[1]=map['o'-'a'];
    function(map,nums[1],array[1]);
    nums[3]=map['t'-'a'];
    function(map,nums[3],array[3]);
    nums[5]=map['f'-'a'];
    function(map,nums[5],array[5]);
    nums[7]=map['s'-'a'];
    function(map,nums[7],array[7]);
    nums[9]=map['i'-'a'];
    function(map,nums[9],array[9]);
    for(int i=0;i<10;i++){
        for(int j=0;j<nums[i];j++){
             ret[count++]=i+'0';
        }
    }
    ret[count++]='\0';
    return ret;
}