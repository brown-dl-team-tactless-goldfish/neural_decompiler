bool isValidSerialization(char * preorder){
    // initialize a char array, this is our stack (size is number of nodes in input)
    int idx = 1; // tracks value of head
    char *cur = preorder;
    while(*cur) if (*cur++ == ',') idx++;

    if (idx == 1) return(*preorder=='#');
    
	// create array large enough to hold all values
    char *arr = malloc(idx);
    
	// iterate over the string again, this time pushing/pulling to stack
    cur = preorder;
    idx = 0;
    while (*cur){
	    // push 0 or # to stack
        arr[idx] = '0';
        while (*cur && *cur != ',')
            if (*cur++=='#') arr[idx] = '#';
		
		// if we have pushed two # in a row, pop three values and push a #
        while (idx >= 1 && arr[idx]=='#' && arr[idx-1]=='#'){
            arr[idx] = NULL;
            arr[idx-1] = NULL;
            idx -= 2;
            if (idx < 0) return false;
            arr[idx] = '#';
        }
        if (!*cur) break;
        cur++;
        idx++;
    }
    
	// at the end, we should have a single node in our stack with value #
    return (idx==0 && arr[idx] == '#');
}