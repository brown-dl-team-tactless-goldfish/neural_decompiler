char * removeKdigits(char * num, int k){
    int len = strlen(num);
    int *prev = (int*) malloc(len * sizeof(int));
    int *next = (int*) malloc(len * sizeof(int));
    
    for (int i = 0; i < len; i++){
        prev[i] = i - 1;
        next[i] = i + 1;
    }
    int i = 0;
    while (k > 0) {
        if (next[i] == len || num[next[i]] < num[i]) {
            k--;
            num[i] = '-';
            if (prev[i] != -1) next[prev[i]] = next[i];
            if (next[i] != len) prev[next[i]] = prev[i];
            
            if (prev[i] != -1) {
                i = prev[i];
            }
        } else {
            i = next[i];    
        }

    }
    
    free(prev);
    free(next);
    
    int j = 0;
    for (int i = 0 ; i < len; i++) {
        if (num[i] != '-') {
            num[j++] = num[i];
        }
    }
    num[j] = '\0';
	// remove leading zeros and pass case "0"/0
    while (num[0] == '0' && strlen(num) > 1) {
        num++;
        j--;
    }
    if (j == 0) {
        return "0";
    }
    
    return num;
}