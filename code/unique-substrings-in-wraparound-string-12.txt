class Solution {
public:
    int findSubstringInWraproundString(string p) {
        //this what infinetly wrap around means
        //string s="abcdefghijklmnopqrstuvwxyz..abcdefghijklmnopqrstuvwxyz..abcdefghijklmnopqrstuvwxyz"
        int n=p.length();
        vector<int>dp(26,0);
        
        int cnt=1;
        for(int i=0;i<n;i++){
            //p[i]-p[i-1] means ____za_____
            if(i>0 && (p[i-1]-p[i]==25 || p[i]-p[i-1]==1)){ 
               cnt++;
            }
            else{
               cnt=1;
               
            }
             dp[p[i]-'a']=max(cnt,dp[p[i]-'a']);;
        }
        
        int ans=0;
        for(auto k:dp){
            ans+=k;
        }
        return ans;
    }
};