class Solution {
public:
    static bool cmp(pair<string, int> p1, pair<string, int> p2){
        if(p1.second == p2.second)
            return p1.first < p2.first;
        return p1.second > p2.second;
    }
    vector<vector<string>> mostPopularCreator(vector<string>& creators, vector<string>& ids, vector<int>& views) {
        unordered_map<string, long long> mp1;
        unordered_map<string, vector<pair<string, int>>> mp2;
        
        for(int i = 0; i < creators.size(); i++){
            if(mp1.find(creators[i]) == mp1.end())
                mp1[creators[i]] = views[i];
            else
                mp1[creators[i]] += views[i];
        }
        
        for(int i = 0; i < creators.size(); i++){
            mp2[creators[i]].push_back({ids[i], views[i]});
        }
        
        long long m = 0;
        for(auto it = mp1.begin(); it != mp1.end(); it++){
            if(m < it->second)
                m = it->second;
            // m = max(m, it->second);
        }
        
        
        vector<vector<string>> ans;
        
        for(auto it = mp1.begin(); it != mp1.end(); it++){
            if(it->second == m){
                sort(mp2[it->first].begin(), mp2[it->first].end(), cmp);
                vector<string> tmp;
                tmp.push_back(it->first);
                tmp.push_back(mp2[it->first][0].first);
                ans.push_back(tmp);
            }
        }
        return ans;
        
    }
};