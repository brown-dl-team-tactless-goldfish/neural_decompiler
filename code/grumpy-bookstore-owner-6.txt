int maxSatisfied(vector<int>& nums, vector<int>& grumpy, int k) {
    int n = nums.size();
    if(k>=n){
        return accumulate(nums.begin(),nums.end(),0);
    }
    int i = 0,j = 0,x = 0,y = -1,ind = 0;
    while(j<n){
        if(grumpy[j]==1){
            x+=nums[j];
        }
        if(j-i+1<k) j++;
        else if(j-i+1==k){
            if(y<x){
                y = x;
                ind = j-k+1;
            }
            if(grumpy[i]==1){
                x-=nums[i];
            }
            i++;
            j++;
        }
    }
    for(int i=ind;i<ind+k;i++){
        if(grumpy[i]==1){
            grumpy[i] = 0;
        }
    }
    int c = 0;
    for(int i=0;i<n;i++){
        if(grumpy[i]==0){
            c+=nums[i];
        }
    }
    return c;
}