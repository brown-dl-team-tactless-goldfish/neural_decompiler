class Solution {
public:
    int minWastedSpace(vector<int>& P, vector<vector<int>>& B) {
        long res = LONG_MAX, mod = 1e9+7, sum = accumulate(begin(P), end(P), 0l);
        sort(begin(P), end(P));

        for(auto & e : B) {
            sort(begin(e), end(e));
            if(e[e.size()-1] < P[P.size()-1]) continue;
            long pos = 0, sz = 0;
            for(auto s : e) {
                auto it = upper_bound(begin(P), end(P), s);
                long cur_p = it == end(P) ? P.size() : it-begin(P), cnt = cur_p -pos, bsum = cnt*s;
                sz += bsum;
                if(it == end(P)) break;
                pos = cur_p;
            }
            res = min(res, sz);
        }
        return res == LONG_MAX ? -1 : (res-sum)%mod;
    }
};