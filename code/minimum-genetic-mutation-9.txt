class Solution {
public:
    int helper(string start, string& end, vector<string>& bank, int visisted) {
        if (start == end) return 0;
        int res = INT_MAX;
        for (int i = 0; i < bank.size(); ++ i) {
            if (visisted & (1 << i)) continue;
            int check = 0;
            for (int j = 0; j < start.size(); ++ j) {
                if (start[j] != bank[i][j]) {
                    ++ check;
                    if (check == 2) break;
                }
            }
            if (check == 1) {
                int temp = helper(bank[i], end, bank, visisted | (1 << i));
                if (temp != -1) res = min(res, temp + 1);
            }
        }
        if (res == INT_MAX) res = -1;
        return res;
    }
    
    int minMutation(string start, string end, vector<string>& bank) {
        return helper(start, end, bank, 0);
    }
};