int* minOperations(char *boxes, int* returnSize)
{
    int boxCount = strlen(boxes), dataSize = sizeof(int) * boxCount;
    
    int *answerPointer = alloca(dataSize);    // Working stack space for the answer in progress
    int *writePointer = answerPointer;        // A pointer to the answer for the current box
    int *returnHeapSpace = malloc(dataSize);  // Place for the final answer
    
    int *ballCount = alloca(dataSize); // An integer representation of boxes (the number of balls in each box)
    *returnSize = boxCount;  // The answer will be the same count as the question

    // Count operations from left to right
    for(int count = 0, operations = 0; boxCount--;) 
    {
        // Record the number of operaitons counted
        *writePointer++ = operations;

        // Add any balls in this box
        // Record the ball count as an integer so it doesn't have to be converted twice
        count += *ballCount++ = *boxes++ - '0';

        // Add an operation for each ball on the left of this box
        operations += count;
    }

    // Count operations from left to right
    for(int count = 0, operations = 0; writePointer > answerPointer;)
    {
        // Add the number of operaitons counted
        *--writePointer += operations;
        
        // Add any balls in this box, use the integer stored before instead of the slow char on the heap
        count += *--ballCount;

        // Add an operation for each ball on the right of this box
        operations += count;
    }

    // Copy the answer from the stack space to heap space and return the pointer
    memcpy(returnHeapSpace, answerPointer, dataSize);
    return returnHeapSpace;
}