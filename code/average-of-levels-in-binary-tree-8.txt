int depth(struct TreeNode *root)
{
	if (root == NULL)
		return 0;

	int left = 1 + depth(root->left);
	int right = 1 + depth(root->right);

	return left > right ? left : right;
}

void help(struct TreeNode *root, double *res, int *count, int *rSize, int i)
{
	if (root == NULL)
		return;

	res[i] +=  root->val;
	count[i]++;

	help(root->left, res, count, rSize, i + 1);
	help(root->right, res, count, rSize, i + 1);
}

double *averageOfLevels(struct TreeNode *root, int *returnSize)
{
	int size = depth(root);
	*returnSize = size;
	double *res = calloc(size, sizeof(double));
	int *count = calloc(size, sizeof(int));

	help(root, res, count, returnSize, 0);

	for (int i = 0; i < size; i++)
		res[i] /= count[i];

	return res;
}