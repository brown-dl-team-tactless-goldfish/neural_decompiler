class Solution {
public:
    const int _ = [](){
        ios::sync_with_stdio(false);
        cin.tie(nullptr);
        cout.tie(nullptr);
        return 0;
    }();
    int minDays(vector<int>& bloomDay, int m, int k) {
        if(m*k > bloomDay.size()){
            return -1;
        }
        vector<int> tmp = bloomDay; 
        sort(tmp.begin(),tmp.end());
        int l = m*k - 1; 
        int r = tmp.size();
        while(l<r){
            int mid = (l+r)/2;
            int t = tmp[mid];
            int bouquets = 0;
            int n = 0;
            for(int i = 0;i<bloomDay.size();i++){
                if(bloomDay[i]<=t){
                    n++;
                } else {
                    n = 0;
                }
                if(n == k){
                    bouquets++;
                    n = 0;
                }
            }
            if(bouquets>=m){
                r = mid;
            } else {
                l = mid+1; 
            }
        }
        return tmp[l];
    }
};