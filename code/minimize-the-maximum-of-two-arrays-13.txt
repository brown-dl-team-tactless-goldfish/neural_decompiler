class Solution {
public:
    int minimizeSet(int divisor1, int divisor2, int uniqueCnt1, int uniqueCnt2) {
        long long st = 1, end = 9999999999, ans = 0;
        while(st<=end){
            long long mid = (st + end)/2;
            long long d1 = mid - mid/divisor1;
            long long lm = ((long long)divisor1*(long long)divisor2)/__gcd((long long)divisor1,(long long)divisor2);
            long long num = (mid/divisor2-(mid)/lm);
            int mn = min((int)uniqueCnt1,(int)num);
            long long d2 = mid - uniqueCnt1 - (mid/divisor2) + mn;
            if(d1>=uniqueCnt1&&d2>=uniqueCnt2){
                end = mid-1;
                ans = mid;
            }
            else{
                st = mid + 1;
            }
        }
        return ans;
    }
};