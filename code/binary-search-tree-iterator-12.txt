typedef struct {
    
} BSTIterator;

struct TreeNode *cur;
struct TreeNode *mos;
int n=-1,f=0;

void BST(struct TreeNode* root){

while( cur!= NULL ){
	mos = cur->left;
	if(mos!=NULL){
		while( mos->right != NULL && mos->right != cur)
			mos = mos->right;

		if(mos->right == NULL){
			mos->right = cur;
			cur = cur->left;
			continue;
		}
		else
			mos->right = NULL;
	}
	n = cur->val;
	cur = cur->right;
	return;
}
n = -1;
}

BSTIterator* bSTIteratorCreate(struct TreeNode* root) {
    if(root == NULL) return 0;
    cur = root;
    return NULL;
}

int bSTIteratorNext(struct TreeNode* root) {
    if(f==1){
        f=0;
        return n;
    }
    BST(root);
    return n;
}

bool bSTIteratorHasNext(struct TreeNode* root) {
    if(f==0){
        BST(root);
        f = 1;
    }
    
    if(n!=-1)
        return true;
    
    return false;
}

void bSTIteratorFree(BSTIterator* obj) {
    cur = NULL;
    mos = NULL;
    n=-1;f=0;
}