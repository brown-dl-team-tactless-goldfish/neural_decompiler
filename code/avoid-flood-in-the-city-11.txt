    vector<int> avoidFlood(vector<int>& rains) {
        unordered_map<int,int> full_days; // lakeno -> day of first occurence
       set<int> dry_days; // dry days 
        vector<int> result;
        for(int i =0;i < rains.size();++i){
            if(rains[i] == 0){
                dry_days.insert(i);
                result.push_back(1);
            } else{
                if(full_days.find(rains[i]) != full_days.end()){
                    auto it = dry_days.upper_bound(full_days[rains[i]]);
                    if(it == dry_days.end()){
                        return {};
                    } else{
                        result[*it] = rains[i];
                        dry_days.erase(*it);
                    }
                    
                }
                full_days[rains[i]] = i;
                result.push_back(-1);
            }
            
        }
        
        return result;

    }