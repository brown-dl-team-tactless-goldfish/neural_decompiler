class Solution {
public:
    int maxDiff(int num) {
        string s1 = to_string(num), s2 = s1;
        size_t pos = s1.find_first_not_of('9');
        if (pos != string::npos)
            replace(s1.begin(), s1.end(), (const char)s1[pos], '9');
			
        pos = s2.find_first_not_of(s2[0]);
        if (pos == string::npos || s2[0] != '1') {
            replace(s2.begin(), s2.end(), (const char)s2[0], '1');
        } else if (s2[0] == '1') {
            auto it = find_if(s2.begin(), s2.end(), [](const char c) { return c > '1'; });
            if (it != s2.end()) {
                replace(s2.begin(), s2.end(), (const char)*it, '0');
            }
        }
        return stoi(s1) - stoi(s2);
    }
};