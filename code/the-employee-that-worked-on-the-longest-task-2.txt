#define min(x,y) (((x) < (y))?(x):(y))
int hardestWorker(int n, int** logs, int logsSize, int* logsColSize){
    int minId = logs[0][0];            //1 <= logs.length <= 500, So there will always be 1 task
    int maxTime = logs[0][1];       //initialize maxTime with first task value
    for(int task=1; task<logsSize; task++){
        if( maxTime < logs[task][1] - logs[task-1][1] ){    //Check for next task time; if it more than maxTime
            maxTime = logs[task][1] - logs[task-1][1];      //update maxTime
            minId = logs[task][0];
        } else if(maxTime == logs[task][1] - logs[task-1][1]){  //If there is a tie between two or more employees, 
            minId = min(logs[task][0], minId);                           //update the minId.
        }
    }
    return minId;
}