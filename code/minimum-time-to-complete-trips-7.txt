typedef int32_t   s32;
typedef uint64_t  u64;
typedef uintptr_t umm;

inline static u64 countTrips(s32 *time, umm timeLength, u64 totalTime) {
    u64 trips = 0;
    
    while (timeLength--) {
        trips += totalTime / *time;
        time++;
    }

    return trips;
}

u64 minimumTime(s32 *time, umm timeLength, s32 totalTrips) {
    u64 left  = 1;
    u64 right = (u64)1 << 56;

    while (left < right) {
        u64 center = left + (right - left)/2; // prevent overflow
        u64 trips  = countTrips(time, timeLength, center);

        if (trips < totalTrips) {
            left  = center + 1;
        } else {
            right = center;
        }
    }

    return left;
}