class Solution {
public:
    long dist(vector<int> a,vector<int> b){
        return (a[0]-b[0])*(a[0]-b[0])+(a[1]-b[1])*(a[1]-b[1]);
    }
    bool validSquare(vector<int>& p1, vector<int>& p2, vector<int>& p3, vector<int>& p4) {
        vector<vector<int>> v={p1,p2,p3,p4};
        vector<long> vv;
     
        for(int i=0;i<4;i++)
            for(int j=i+1;j<4;j++){
                    vv.push_back(dist(v[i],v[j]));
        }
      sort(vv.begin(),vv.end());   
   
      if(vv[0]!=vv[1] or vv[0]!=vv[2] or vv[0]!=vv[3]) return false;
        
      return (vv[0]!=vv[4] and vv[0]!=vv[5] and vv[4]==vv[5]);
      
    }
};