const int N = 100010;

typedef long long LL;

class Solution {
    LL f[N][4][2] = {};
public:
    long long numberOfWays(string s) {
        int n = s.size();
        
        f[0][0][0] = 1, f[0][0][1] = 1;
        for (int i = 1; i <= n; ++ i)
        {
            for (int j = 0; j <= 3; ++ j) // One caveat is that j need to start from 0 to piggy back the initial state
                                          // since there is assumption that f[i][0][k] = 1, namely, if no bld is selected, we think is one valid way.
            {
                if (s[i - 1] == '0')
                    f[i][j][0] += j ? f[i-1][j-1][1] : 0;
                else
                    f[i][j][1] += j ? f[i-1][j-1][0] : 0;
                f[i][j][0] += f[i-1][j][0];
                f[i][j][1] += f[i-1][j][1];
            }
        }
    
        return f[n][3][0] + f[n][3][1];
    }
};