/* O(M+N), 20221216
*/
typedef struct {
    char name[31];
    int count;
    UT_hash_handle hh;
} WordHash;

#define WORD1_DUPLICATED 1000

int countWords(char ** words1, int words1Size, char ** words2, int words2Size){
    int ans = 0;

    WordHash* h = NULL;/* dont use global */
    WordHash* d = NULL;
    for(int i = 0; i < words1Size; i++){
        HASH_FIND_STR(h, words1[i], d);
        if(d){
            d->count = WORD1_DUPLICATED; /* record the for duplicate case in word1 */
        }
        else{
            WordHash* p = (WordHash*)calloc(1, sizeof(WordHash));
            strcpy(p->name, words1[i]);
            p->count = 1;
            HASH_ADD_STR(h, name, p);         
        }
    }
    for(int i = 0; i < words2Size; i++){
        HASH_FIND_STR(h, words2[i], d);
        if(d){
            d->count++;
            if(d->count == 2)
                ans++;
            else if(d->count == 3)
                ans--;
        }
    }    
    return ans;
}