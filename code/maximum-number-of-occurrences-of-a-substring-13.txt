class Solution {
public:
    int maxFreq(string s, int maxLetters, int minSize, int maxSize) {
        int n = s.size();
        unordered_map<char, int>countmp;
        unordered_map<string, int> ocrnc;
        int left = 0, right = 0, ans = 0;
        for(int i = 0; i < minSize-1; i++)
        {
            countmp[s[i]]++;
            right++;
        }
        while(right<n)
        {
            countmp[s[right]]++;
            int charcnt = right-left+1;
            //cout<<countmp.size()<<endl;
            if(countmp.size() <= maxLetters && charcnt >= minSize && charcnt <= maxSize)
            {
                ocrnc[s.substr(left,charcnt)]++;
                //cout<< s.substr(left,charcnt) << endl;
            }
            countmp[s[left]]--;
            //cout<<s[left]<<countmp[s[left]]<<endl;
            if(countmp[s[left]] == 0)
            {
                countmp.erase(s[left]);
            }
            left++;
            right++;
        }
        for(auto &[fst,snd] : ocrnc)
        {
            //cout << fst << snd << endl;
            ans = max(ans,snd);
        }
        return ans;
    }
};