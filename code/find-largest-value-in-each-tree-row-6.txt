void fun(struct TreeNode * root,int * arr,int h);
int depth(struct TreeNode * root);
int* largestValues(struct TreeNode* root, int* returnSize)
{

   int h= depth(root);
   int * arr=(int*)malloc(sizeof(int)*h);
   int j=h-1,temp;
    
   for(int i=0;i<h;i++)
   {
       arr[i]=INT_MIN;
   }
    
   fun(root,arr,h);
   *returnSize=h;
    
   for(int i=0;j>i;j--,i++)
   {
       temp=arr[i];
       arr[i]=arr[j];
       arr[j]=temp;
   }
    
   return arr;  
}

int depth(struct TreeNode * root)
{
    
    int l,r;
    
    if(!root)
        return 0;
    
    l=depth(root->left);
    r=depth(root->right);
    
    return l>r?l+1:r+1;
    
    
}
void fun(struct TreeNode * root,int * arr,int h)
{
    if(!root)
        return; 
    if(root->val>arr[h-1])
    {
        arr[h-1]=root->val;
    }
    fun(root->left,arr,h-1);
    fun(root->right,arr,h-1);
}