    int nthSuperUglyNumber(int n, vector<int>& primes) {
        if(n == 1) return 1;
        vector<int> res = {1};
        auto cmp = [&](auto& a, auto& b) {
            return primes[a[0]]*res[a[1]] > primes[b[0]]*res[b[1]];
        };
        
        priority_queue<vector<int>, vector<vector<int>>, decltype(cmp)> pq(cmp);
        
        for(int i = 0; i < primes.size(); i++) pq.push({i, 0});
        
        n--;
        while(!pq.empty()) {
            auto t = pq.top();
            pq.pop();
            int cur = primes[t[0]]*res[t[1]];
            if(cur > res.back()) {
                if(--n == 0) return cur;
                res.push_back(cur);
            }
            pq.push({t[0], t[1]+1});
        }
        return -1;
    }