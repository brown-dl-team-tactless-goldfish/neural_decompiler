public class Solution
{
    public int[] GardenNoAdj(int N, int[][] paths)
    {
        var colors = new int[N];
        var neighbours = Init(N, paths);
        for (int x = 0; x < N; x++)
        {
            SetColor(colors, neighbours, x);
        }
        return colors;
    }

    private Dictionary<int, List<int>> Init(int N, int[][] paths)
    {
        var neighbours = Enumerable.Range(0, N).ToDictionary(i => i, i => new List<int>());
        foreach (var path in paths)
        {
            neighbours[path[0] - 1].Add(path[1] - 1);
            neighbours[path[1] - 1].Add(path[0] - 1);
        }
        return neighbours;
    }

    private void SetColor(int[] colors, Dictionary<int, List<int>> neighbours, int x)
    {
        var usedColors = new bool[5];
        foreach (var y in neighbours[x])
        {
            usedColors[colors[y]] = true;
        }
        for (int c = 1; c < 5; c++)
        {
            if (!usedColors[c])
            {
                colors[x] = c;
            }
        }
    }
}