    int eatenApples(vector<int>& apples, vector<int>& days) {
        priority_queue<pair<int,int>> q; //rot day, n
        int res = 0, day = 0;
        while(!q.empty() || day < days.size()){
            if(day < days.size()){
                if(apples[day] > 0) q.push(pair{-day - days[day], apples[day]});
            }
            while(!q.empty()){
                auto [rotday, n] = q.top(); q.pop();
                if(-rotday <= day || n == 0) continue;
                res++;
                if(n>1) q.push(pair{rotday, n-1});
                break;
            }
            day++;
        }
        return res;
    }