/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
class info{
    public:
    bool isBST;
    int minVal,maxVal,sum;
    info(){
        isBST=false;
        minVal=INT_MAX,maxVal=INT_MIN,sum=0;
    }
};

int ans;

info help(TreeNode *root){
    info cur;
    if(!root){
        cur.isBST=true;
        return cur;
    }
    info lf=help(root->left);
    info rt=help(root->right);
    cur.isBST=(lf.isBST && rt.isBST && lf.maxVal<root->val && rt.minVal>root->val);
    cur.sum=root->val+lf.sum+rt.sum;
    cur.minVal=min({root->val,lf.minVal,rt.minVal});
    cur.maxVal=max({root->val,lf.maxVal,rt.maxVal});
    if(cur.isBST) ans=max(ans,cur.sum);
    return cur;
}

int maxSumBST(TreeNode *root) { 
    ans=0;
    info tmp=help(root);
    return ans;
}
};