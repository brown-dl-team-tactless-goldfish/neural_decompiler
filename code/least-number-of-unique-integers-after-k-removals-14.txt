class Solution {
public:
    int findLeastNumOfUniqueInts(vector<int>& arr, int k) {
        
        // count the freq of each value
        unordered_map<int,int>freq;
        for(int & val : arr)
            freq[val]++;
        
        // count freq of each freq and unique values
        map<int,int>track;
        int unique = 0;
        for(auto &iter : freq)
        {
            unique++;
            track[iter.second]++;
        }

        
        // loop over freq of freq for k>0 and count the deleted unique values
        int deleted = 0;
        int total;
        for(auto &iter : track)
        {
            if(k>0)
            {
                total = iter.first*iter.second;
                if(total>k)
                {
                    deleted += k/iter.first;
                    k = 0;                    
                }
                else
                {
                    k-=total;
                    deleted += iter.second;
                }
            }
            else break;
        }
        
        // least unique => unique - deleted
        return unique - deleted;
    }
};