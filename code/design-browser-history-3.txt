


typedef struct {
    char *url[200000];
    int step;
    int index;
} BrowserHistory;


BrowserHistory* browserHistoryCreate(char * homepage) {
    BrowserHistory *his = (BrowserHistory *)malloc(sizeof(BrowserHistory));
    his->url[0] = homepage;
    his->step=0;
    his->index=0;
    return his;
}

void browserHistoryVisit(BrowserHistory* obj, char * url) {
    obj->index=obj->step;
    obj->index++;
    obj->step++;
    obj->url[obj->index] = url;
    printf("done %d",obj->index);
}

char * browserHistoryBack(BrowserHistory* obj, int steps) {
  if((obj->step-steps)>0)
  {
      obj->step = obj->step-steps;
      printf("B1%s ",obj->url[obj->step]);
      return obj->url[obj->step];
  }
    obj->step=0;
    printf("B%s ",obj->url[0]);
    return obj->url[0];
}

char * browserHistoryForward(BrowserHistory* obj, int steps) {
    // if(obj->step==obj->index)
    //     return ;
    if((obj->step+steps)<obj->index)
    {
        obj->step = obj->step+steps;
        printf("F1%s ",obj->url[obj->step]);
        return obj->url[obj->step];
    }
    obj->step = obj->index;
    printf("F%s ",obj->url[obj->step]);
    return (obj->url[obj->step]);
    
}

void browserHistoryFree(BrowserHistory* obj) {
    free(obj);
}

/**
 * Your BrowserHistory struct will be instantiated and called as such:
 * BrowserHistory* obj = browserHistoryCreate(homepage);
 * browserHistoryVisit(obj, url);
 
 * char * param_2 = browserHistoryBack(obj, steps);
 
 * char * param_3 = browserHistoryForward(obj, steps);
 
 * browserHistoryFree(obj);
*/