    public int DestroyTargets(int[] nums, int space) 
    {
        //Divide by counter   -    Frequency counter - Min Value
        Dictionary<int, int[]> diff = new Dictionary<int, int[]>();
        foreach (int num in nums)
        {
            int counterReminder = num % space; 
            if (diff.ContainsKey(counterReminder))
            {
                diff[counterReminder][0]++;
                diff[counterReminder][1] = Math.Min(num, diff[counterReminder][1]);
            }
            else
            {
                diff.Add(counterReminder, new int[] {1,num});
            }
        }

        int resultValue = nums[0];
        int resultCounter = 1;

        foreach (int[] values in diff.Values)
        {
            if (values[0] > resultCounter || (values[0] == resultCounter && values[1] < resultValue))
            {
                resultCounter = values[0];
                resultValue = values[1];
            }
        }
        return resultValue;
    }