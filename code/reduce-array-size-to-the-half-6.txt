int cmp(const void* a, const void* b)
{
    return(*(int*)a - *(int*)b);
}

int minSetSize(int* arr, int arrSize)
{
    qsort(arr, arrSize, sizeof(int), cmp);  // sorting
    int count = 1;
    int freq[arrSize], k = 0;
    
    for(int i=0;i<arrSize-1;++i)
    {
        if(arr[i]==arr[i+1])
            count++;                      // count the frequency of each element.
        else
        {
            freq[k++] = count;
            count = 1;
        }
    }
    
    freq[k++] = count;
    count = 0;
    qsort(freq, k, sizeof(int), cmp);
    int min = 0, size = arrSize/2;
    for(int i=k-1;i>=0;--i)
    {
        if(min<size)
        {
            min += freq[i];   // add the maximum frequency to min until the sum get equal to half of arrSize (i.e size)
            count++;
        }
        else
            break;
    }
    
    return count;
}