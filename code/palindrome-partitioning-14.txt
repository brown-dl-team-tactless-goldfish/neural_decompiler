class Solution {
public:
    vector<vector<string>> partition(string s) {
        vector<string> temp;
        vector<vector<string>> res;
        helper(s,temp,res,0);
        
        return res;
    }
    
    void helper(string& s,vector<string>& temp,vector<vector<string>>& res,int idx){
        if(idx == s.length()){
            res.push_back(temp);
            return;
        }
        string curr = "";
        for(int i = idx;i < s.length(); i++){
            curr.push_back(s[i]);
            if(isPalindrome(curr)){
                temp.push_back(curr);
                helper(s,temp,res,i+1);
                temp.pop_back();
            }
        }
    }
    
    bool isPalindrome(string curr){
        int l = 0, r = curr.length()-1;
        
        while(l < r){
            if(curr[l++] != curr[r--])
                return false;
        }
        
        return true;
    }
};