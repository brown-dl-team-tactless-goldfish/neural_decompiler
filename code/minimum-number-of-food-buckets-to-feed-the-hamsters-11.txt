class Solution {
public:
    int minimumBuckets(string s) {
        vector<int> h;
        
        for(int i = 0; i < s.size(); i ++){
            if(s[i] == 'H') h.push_back(i);
        }
        
        // edge case 1 house
        if(h.size() == 1) return (s.size() > 1) ? 1 : -1;
        
        int cnt = 0;
        
        for(int i = 1; i < h.size(); i ++){
            if(h[i] != -1 && h[i - 1] != -1 && h[i] - h[i - 1] == 2) {
                cnt += 1;
                h[i] = h[i - 1] = -1;
            }
        }
        
        for(int i = 0; i < h.size(); i ++){
            if(h[i] == -1) continue;
            
            bool cond1 = h[i] >= 1 && s[h[i] - 1] == '.';
            bool cond2 = h[i] + 1 < s.size() && s[h[i] + 1] == '.';
            
            if(cond1 || cond2) cnt += 1;
            else return -1;
        }
        
        return cnt;
    }
};