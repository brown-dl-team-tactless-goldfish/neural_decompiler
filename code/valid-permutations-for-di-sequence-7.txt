class Solution {
public:
    int mod = 1e9+7;
    int dfs(vector<vector<int>> &dp,vector<bool> &vis,string &s,int in,int n,int last){
        if(in>=s.size()) return 1;
        if(dp[in][last]!=-1) return dp[in][last];
        if(s[in]=='D'){  
            long re = 0;
            for(int i = 0; i<last; ++i){
                if(vis[i]==1) continue;
                vis[i] = 1;
                int k = dfs(dp,vis,s,in+1,n,i);
                vis[i]=0;
                re = (re + k)%mod;
            }
            return dp[in][last] = (int)re;
        }
        else{
            long re = 0;
            for(int i = last+1; i<=s.size(); ++i){
                if(vis[i]==1) continue;
                vis[i] = 1;
                int k = dfs(dp,vis,s,in+1,n,i);
                vis[i]=0;
                re = (re + k)%mod;
            }
            return dp[in][last] = (int)re;
        }
    }
    int numPermsDISequence(string s) {
        int n = s.size(), i = 0; 
        long re = 0;
        vector<vector<int>> dp(n+2,vector<int>(n+2,-1));
        vector<bool> vis(n+1,0);
        
        if(s[0]=='D') i++; 
        for(;i<=n;i++){
            vis[i] = 1;
            re = (re + dfs(dp,vis,s,0,n,i))%mod;
            vis[i] = 0;
        }
        return (int)re;
    }
};