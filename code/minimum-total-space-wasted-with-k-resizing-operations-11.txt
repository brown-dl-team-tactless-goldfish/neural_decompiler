class Solution {
public:
    int minSpaceWastedKResizing(vector<int>& nums, int k) {
        int n = nums.size();                
        vector<vector<int>> dp(n, vector<int> (k + 1, INT_MAX));
        for (int i = 0; i < n; ++i) {
            for (int j = 0; j <= k; ++j) {
                int mx = 0, sum = 0;
                for (int l = i; l >= 0; --l) {
                    sum += nums[l];
                    mx = max(mx, nums[l]);
                    if (i == 0 || j == 0)
                        dp[i][j] = mx * (i - l + 1) - sum;
                    else if (l == 0)
                        dp[i][j] = min(dp[i][j], mx * (i - l + 1) - sum);
                    else
                        dp[i][j] = min(dp[i][j], mx * (i - l + 1) - sum + dp[l - 1][j - 1]);
                }
            }
        }
        return dp[n - 1][k];
    }
};