int countDistinctIntegers(int* nums, int numsSize){
    int n = numsSize ;
    int N = 10 * n ;
    int ans = 0 ;
    int** hash = calloc( N, sizeof(int*) ) ;
    for(int i = 0; i < n; i++){
        int d = nums[i] ;
        while(1){
            if(hash[d % N] == NULL){
                ans++ ;
                hash[d % N] = malloc( sizeof(int) ) ;
                hash[d % N][0] = nums[i] ;
                break ;
            }
            else if( hash[d % N][0] == nums[i] )
                break ;
            else
                d++ ;
        }
        int new = 0;
        int val = nums[i] ;
        while(val){
            new = new * 10 + val % 10 ;
            val /= 10 ;
        }
        d = new ;
        while(1){
            if(hash[d % N] == NULL){
                ans++ ;
                hash[d % N] = malloc( sizeof(int) ) ;
                hash[d % N][0] = new ;
                break ;
            }
            else if( hash[d % N][0] == new )
                break ;
            else
                d++ ;
        }        
    }
    for(int i = 0; i < N; i++){
        if(hash[i]) 
            free(hash[i]) ;
    }
    free( hash ) ;
    return ans ;
}