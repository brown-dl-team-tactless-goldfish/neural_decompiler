class Solution {
public:
    #define ll long long int 
    int maximumTop(vector<int>& a, int k) {
        int n = a.size();
        if(n == 1 && k %2!= 0)
            return -1 ; 
        if(n == 1 && k %2== 0)
            return a[0];
        if(k == 0)
            return a[0];
        
       
        priority_queue<ll>pq;
        if(k == n)
        {
            for(int i = 0 ; i < n-1 ; i++)
                pq.push(a[i]);
            return pq.top();
        }
         reverse(a.begin(),a.end());
        if(n-(k-1) >= 2){
        for(int i = 0 ; i < k-1 ; i++)
        {
            ll p = a.back();
            pq.push(p);
            a.pop_back();
        }
             reverse(a.begin(),a.end());
            if(pq.size()>0){
            ll top  = pq.top(); 
            if(a[1] > top)
                return a[1];
            else
                return top ;
            }
            else
            {
                return a[1];
            }
                
        }
    
        reverse(a.begin(),a.end());
        for(int i = 0 ; i < n;i++)
        {
            pq.push(a[i]);
        } 
         return pq.top();
        
    }
};