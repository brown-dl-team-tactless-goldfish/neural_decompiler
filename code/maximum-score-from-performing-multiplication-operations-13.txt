class Solution {
public:
    int dp[1001][1001] ;
    int solve(int left , int right , vector<int>& nums, vector<int>& muls , int id ){
        if(id >= muls.size()) return 0 ;
        if(dp[left][id] != -1) return dp[left][id] ;
        
        int op1 = nums[left]*muls[id] + solve(left + 1 ,right , nums,muls,id+1) ;
        int op2 = nums[right]*muls[id] + solve(left,right-1,nums,muls,id+1);
        
        return dp[left][id] = max({op1,op2});
    }
    int maximumScore(vector<int>& nums, vector<int>& muls) {
        memset(dp,-1,sizeof(dp)) ;
        return solve(0,nums.size()-1,nums,muls,0) ;
        
    }
};