/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */

void DFS(struct TreeNode *root, int *leaves, int **index) {
    if (root == NULL)
        return;
    if (root->left == NULL && root->right == NULL) 
        leaves[(**index)++] = root->val;   
    DFS(root->left, leaves, index);
    DFS(root->right, leaves, index);
    return;
}

bool leafSimilar(struct TreeNode* root1, struct TreeNode* root2){
    // int *leaves1 = (int *)malloc(100 * sizeof(int));
    // int *leaves2 = (int *)malloc(100 * sizeof(int));
    int leaves1[100], leaves2[100];
    int index1 = 0, index2 = 0;
    int *index = &index1;
    DFS(root1, leaves1, &index);
    index = &index2;
    DFS(root2, leaves2, &index);
    if (index1 != index2)
        return false;
    for (int i = 0; i < *index; i++) 
        if (leaves1[i] != leaves2[i])
            return false;
    return true;
}