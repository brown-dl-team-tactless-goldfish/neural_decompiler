using PII = pair<long , long> ;
class Solution {
public:
    int nthSuperUglyNumber(int n, vector<int>& primes) {
        int k = primes.size() ;
        vector<int>p(k, 0) ;
        vector<int>ret({1}) ;
        priority_queue<PII, vector<PII>, greater<>>pq ;
        for(int i = 0; i < k; i++){
            pq.push({ret[p[i]] * primes[i], i}) ;
            p[i]++ ;
        }
        
        for(int r = 1 ; r < n; r++){
            int cur = pq.top().first ;
            ret.push_back(cur) ;
            while(pq.size() && cur == pq.top().first){
                int i = pq.top().second ;
                pq.pop() ;                
                pq.push({(long long)ret[p[i]] * primes[i] ,i}) ;
                p[i]++ ;
            }
        }
        
        return ret.back() ;
    }
};