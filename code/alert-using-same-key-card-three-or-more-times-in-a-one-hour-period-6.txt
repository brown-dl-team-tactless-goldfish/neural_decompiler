class Solution {
public:
    vector<string> alertNames(vector<string>& keyName, vector<string>& keyTime) {
        unordered_map<string,int>m;
        unordered_map<int,string>index;
        int count=0;
        for(int i=0;i<keyName.size();i++)
        {
            if(m.find(keyName[i])==m.end())
            {
                m[keyName[i]]=count;
                index[count]=keyName[i];
                count++;
            }
        }
        vector<vector<int>>log(count);
        for(int i=0;i<keyName.size();i++)
        {       //yaha par time convert kar de;
                string first,second;
                first+=keyTime[i][0];
                first+=keyTime[i][1];
               // cout<<first<<":";
                second+=keyTime[i][3];
                second+=keyTime[i][4];
                int hour=stoi(first);
                hour=hour*60;
                int minute=stoi(second);
               // cout<<minute<<endl;
                hour=hour+minute;
              //  cout<<"Hour(in minutes):"<<hour<<endl;
                log[m[keyName[i]]].push_back(hour);
        }
        vector<string>ans;
        for(int i=0;i<log.size();i++)
        {
            sort(log[i].begin(),log[i].end());
            int count=0;
            for(int j=0;j<log[i].size()-1;j++)
            {
                for(int k=j+1;k<log[i].size();k++)
                {
                    if(log[i][k]-log[i][j]<=60)
                    {
                        count++;
                        if(count>=2) break;
                    }
                    else 
                    {
                        count=0;
                        break;
                    }
                }
                if(count>=2) 
                {
                    ans.push_back(index[i]);
                    break;
                }
            }
        }
        sort(ans.begin(),ans.end());
        return ans;
    }
};