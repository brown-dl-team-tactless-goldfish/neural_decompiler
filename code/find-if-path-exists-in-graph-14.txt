class Solution {
public:
    bool validPath(int n, vector<vector<int>>& edges, int source, int destination) {
        const int NODES = 2e5 + 9;
        vector<int> graph[NODES];
        for (auto &x: graph)    x.clear();
        for (auto &e: edges) {
            graph[e[0]].push_back(e[1]);
            graph[e[1]].push_back(e[0]);
        }
        vector<bool> vis(NODES, false);
        auto dfs = [&] (auto &&dfs, int u, int par) -> bool {
            vis[u] = true;
            if (u == destination) return true;
            for (int v: graph[u]) {
                if (v == par || vis[v]) continue;
                if (dfs(dfs, v, u)) return true;
            }
            return false;
        };
        return dfs(dfs, source, -1);
    }
};