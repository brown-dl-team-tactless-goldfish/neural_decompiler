int find(int *arr, int x){
    if(arr[x]==x)return x;
    return arr[x] = find(arr,arr[x]);
}
void Union(int *ar,int x, int y,int *ex){
    int xx=find(ar,x);
    int yy=find(ar,y);
    if(xx!=yy){
        ar[yy]=xx;
    }
    else{
        *ex+=1;
    }
}

int makeConnected(int n, int** con, int conS, int* conCS){
    int extra = 0;
    int need = 0;
    int *arr = malloc(sizeof(int)*n);
    int i;
    for(i=0;i<n;i++)arr[i]=i;
    for(i=0;i<conS;i++){
        Union(arr,con[i][0],con[i][1],&extra);
    }
    for(i=0;i<n;i++){
        if(arr[i]==i)need++;
    }
    // for(i=0;i<conS;i++){
    //     printf("%d",arr[i]);
    // }
    //printf("\n");
    need-=1;
    //printf("ex = %d need =%d\n",extra,need);
    if(extra>=need){
        return need;
    }
    return -1;
}


