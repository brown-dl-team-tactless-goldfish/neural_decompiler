#define LAND (1)
#define WATER (0)

class Solution {
public:
    int numEnclaves(vector<vector<int>> &grid) {
        rows = grid.size();
        cols = grid[0].size();

        for (int r = 0; r < rows; ++r) {
            dfs(grid, r, 0);
            dfs(grid, r, cols - 1);
        }

        for (int c = 0; c < cols; ++c) {
            dfs(grid, 0, c);
            dfs(grid, rows - 1, c);
        }

        int answer = 0;
        for (int r = 0; r < rows; ++r) {
            for (int c = 0; c < cols; ++c) {
                if (grid[r][c] == LAND) {
                    ++answer;
                }
            }
        }

        return answer;
    }
private:
    int rows;
    int cols;

    void dfs(vector<vector<int>> &grid, int r, int c) {
        if (r < 0 || rows <= r || c < 0 || cols <= c || grid[r][c] != LAND) {
            return;
        }

        grid[r][c] = 0;
        dfs(grid, r - 1, c);
        dfs(grid, r + 1, c);
        dfs(grid, r, c - 1);
        dfs(grid, r, c + 1);
    }
};