class Solution {
public:
    int minimizeArrayValue(vector<int>& nums) {
        long long left = 0;
        long long right = 0;
        for(int ele: nums) {
            right = max(right, (long long)ele);
        }
        right+=1;

        std::function<bool(long long)> func = [&](long long mid) {
            if(nums[0] > mid) {
                return false;
            }
            long long pre = nums[0];
            for(int i=1;i<nums.size();i++) {
                if(mid<pre) {
                    return false;
                }

                long long dif = mid - pre;
                long long cur = nums[i] - dif;
                if(cur>mid) {
                    return false;
                }
                pre = cur;
            }

            return true;
        };


        while(left < right) {
            long long mid = left + (right-left)/2;

            bool check = func(mid);
            if(check) {
                right = mid;
            }else {
                left = mid+1;
            }
        }

        return left;
    }
};