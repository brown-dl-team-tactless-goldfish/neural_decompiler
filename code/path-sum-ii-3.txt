void input(struct TreeNode* root, int targetSum, int* returnSize, int** returnColumnSizes, int** ans, int* number, int point, int now){
    if (root == NULL){
        return;
    }
    now += root->val;
    if (now == targetSum){
        if (root->left == NULL && root->right == NULL){
            ans[*returnSize] = malloc(sizeof(int)*(point+1));
            for (int i = 0 ; i < point ; i++){
                ans[*returnSize][i] = number[i];
            }
            ans[*returnSize][point] = root->val;
            (*returnColumnSizes)[*returnSize] = point+1;
            *returnSize += 1;
            return;
        }
    }
    number[point] = root->val;
    point++;
    input(root->left, targetSum, returnSize, returnColumnSizes, ans, number, point, now);
    input(root->right, targetSum, returnSize, returnColumnSizes, ans, number, point, now);
    return;
}

int** pathSum(struct TreeNode* root, int targetSum, int* returnSize, int** returnColumnSizes){
    int** ans = malloc(sizeof(int*)*300);
    (*returnColumnSizes) = malloc(sizeof(int)*300);
    *returnSize = 0;
    int number[5001];
    
    input(root, targetSum, returnSize, returnColumnSizes, ans, number, 0, 0);
    
    ans = realloc(ans,sizeof(int*)*(*returnSize));
    (*returnColumnSizes) = realloc((*returnColumnSizes),sizeof(int)*(*returnSize));
    return ans;
}