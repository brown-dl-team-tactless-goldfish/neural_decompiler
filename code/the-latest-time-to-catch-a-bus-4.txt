class Solution {
public:
    int latestTimeCatchTheBus(vector<int> &buses, vector<int> &passengers, int capacity)
{
    sort(buses.begin(), buses.end());
    sort(passengers.begin(), passengers.end());

    unordered_map<int, int> mp;

    for (int i : passengers)
        mp[i]++;

    int i = 0, j = 0, c = 0;
    while (j < buses.size() - 1)
    {
        while (i < passengers.size() && passengers[i] <= buses[j] && c < capacity)
        {
            i++;
            c++;
        }
        j++;
        c= 0;
    }

    int n = passengers.size();

    if (capacity > n - i)
    {
        int val1 = buses[j];
        while (mp.count(val1) == 1)
            val1--;
        return val1;
    }
    else
    {
        i = i + capacity - 1;
        int val1 = passengers[i];
        int val2 = buses[j];

        while (mp.count(val1) == 1 || val1 > val2)
            val1--;

        return val1;
    }
}
};