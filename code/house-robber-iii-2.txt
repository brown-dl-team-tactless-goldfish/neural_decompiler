//#define DBG(arg...) printf(arg)
#define DBG(arg...) 


#define MAX(a,b) \
   ({ __typeof__ (a) _a = (a); \
       __typeof__ (b) _b = (b); \
     _a > _b ? _a : _b; })

typedef struct __rob__ {
    int rob;
    int no_rob;
}st_rob;

st_rob rob_null = {0, 0};
st_rob max(struct TreeNode* root) {
    if (!root ) return rob_null;
    
    st_rob left, right;
    st_rob ret;
    
    left =  max(root->left);
    right = max(root->right);
    
    ret.rob = root->val + left.no_rob + right.no_rob;
    ret.no_rob = MAX(left.no_rob, left.rob) +MAX(right.no_rob, right.rob);
    
    DBG("Node %d Ret {rob %d, no_rob %d}", root->val, ret.rob, ret.no_rob);
    
    return ret;
    
}
int rob(struct TreeNode* root){
    st_rob ret;
    ret = max(root);
    return MAX(ret.rob, ret.no_rob);
}
