/**
 * Note: The returned array must be malloced, assume caller calls free().
 */

int cmp(const void *a, const void *b) {
  if (*(int *)a < *(int *)b)
    return -1;
  if (*(int *)a > *(int *)b)
    return 1;
  return 0;
}

int *intersect(int *nums1, int nums1Size, int *nums2, int nums2Size,
               int *returnSize) {
  int *ret;
  int ind = 0;

  if (nums1Size > nums2Size) {
    ret = (int *)malloc(nums1Size * sizeof(int));
  } else {
    ret = (int *)malloc(nums2Size * sizeof(int));
  }

  qsort(nums1, nums1Size, sizeof(int), cmp);
  qsort(nums2, nums2Size, sizeof(int), cmp);

  int i = 0, j = 0;

  while (i < nums1Size && j < nums2Size) {
    if (nums1[i] < nums2[j])
      ++i;
    else if (nums2[j] < nums1[i])
      ++j;
    else {
      ret[ind++] = nums1[i];
      ++i;
      ++j;
    }
  }

  ret = realloc(ret, ind * sizeof(int));
  *returnSize = ind;
  return ret;
}