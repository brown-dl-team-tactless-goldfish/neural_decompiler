/* My Analysis
 *  Time Complexity: O(n)
 *  Space Complexity: O(1)
 */
char * breakPalindrome(char * palindrome){
    char* pRetVal = "";

    int len = strlen(palindrome);
    // There is no way to replace a single character
    if (len == 1)
    {
        return pRetVal;
    }

    int head = 0;
    int tail = len - 1;
    while (head < tail)
    {
        // replace first to lexicographically smallest
        if (*(palindrome+head) != 'a')
        {
            *(palindrome+head) = 'a';
            break;
        }
        ++head;
        --tail;
    }
    // update last character to lexicographically smallest
    if (head >= tail)
    {
        *(palindrome + len - 1) = 'b';
    }
    pRetVal = palindrome;

    return pRetVal;
}