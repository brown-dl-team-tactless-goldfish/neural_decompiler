class Solution {
public:
	vector<double> sampleStats(vector<int>& count) {    
		double mini;
		double maxi;
		int n=count.size();
		for(int i=0;i<n;i++){
			if(count[i]!=0){
				mini=i;
				break;
			}
		}     
		for(int i=n-1;i>=0;i--){
			if(count[i]!=0){
				maxi=i;
				break;
			}
		}
		double mod;
		int cur=0;
		double tol=0;
		int num=0;
		for(int i=0;i<n;i++){
			tol+=i*count[i];
			num+=count[i];
			if(count[i]>cur){
				cur=count[i];
				mod=i; 
			} 
		}       
		double med;
		double ave=tol/num;        
		int start=0;
		int end=n-1;
		while(start<end-1){
			while(count[start]==0){
				start++;
			}
			while(count[end]==0){
				end--;
			}
			if(count[start]<count[end]){
				count[end]-=count[start];
				count[start]=0;          
				start++;
			}
			else{
				count[start]-=count[end];
				count[end]=0;
				if(count[start]==0){
					start++;
				}           
				end--;
			}
		} 
		med=((double)count[start]+(double)count[end])/2.0;
		if(count[start]>count[end]){
			med=start;
		}
		if(count[end]>count[start]){
			med=end;
		}
		if(count[start]==count[end]){
			med=(double)(start+end)/2.0;
		}

		vector<double> ans{mini,maxi,ave,med,mod};
		return ans; 
	}
};