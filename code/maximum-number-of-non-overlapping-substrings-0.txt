class Solution {
public:
    vector<string> maxNumOfSubstrings(string s) {
        const int n = s.length();
        vector<int> left(26, -1), right(26);
        for (int i = 0; i < n; ++i) {
            const int c = s[i] - 'a';
            if (left[c] < 0) left[c] = i;
            right[c] = i;
        }
        vector<string> r;
        for (int i = 0, last = -1; i < n; ++i) {
            const int c = s[i] - 'a';
            if (left[c] != i) continue;
            int end = i;
            for (int j = i; j <= end; ++j) {
                const int x = s[j] - 'a';
                if (left[x] < i) {
                    end = -1;
                }
                else {
                    end = max(end, right[x]);
                } 
            }
            if (end >= 0) {
                if (last >= i) {
                    r.pop_back();
                }
                r.push_back(s.substr(i, end - i + 1));
                last = end;
            }
        }
        return r;
        
    }
};