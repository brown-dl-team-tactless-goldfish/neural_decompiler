class Solution {
public:
  bool circularArrayLoop(vector<int>& nums) {
    if(nums.size() == 1) return false;
    vector<int>vis(nums.size(),0);
    
    for(int i = 0, wave = 0, n = nums.size(); i != n; i++)
      if(vis[i] == 0){
      wave++;
      int id = i;
        
      while(true){ 
        vis[id] = wave;
        int new_id;
        if(nums[id] < 0){
          new_id = id + nums[id];
          if(new_id < 0) new_id = n - (-new_id)%n;
        }else new_id = (id + nums[id])%n;
        
        if(id == new_id) break;
        if(vis[new_id] == 0) {id = new_id; continue;}
        if(vis[new_id] != wave) break;
        
        int sign = (nums[new_id] < 0 ? -1 : 1), stop = new_id;
        id = new_id; 
        do{
          if(nums[id] < 0){
            if(sign == 1) goto mark;
            new_id = id + nums[id];
            if(new_id < 0) new_id = n - (-new_id)%n;
          }else {
            if(sign == -1) goto mark;
            new_id = (id + nums[id])%n;
          }
          if(id == new_id) goto mark;
          id = new_id;
        }while(id != stop);
        return true;
        
        mark:;
        break;
      }
      
    }
    return false;
        
  }
};
