class Solution {
public:
    string abbreviateProduct(int left, int right) {
        long long t1=1;  // 5 digits, <100000
        long long t2=0;  // 5+6 digits, <100000000000
        // t1,t2 ... t3
        unsigned long long e=0;
        int i;
        // very small
        for(i=right; i>=left; i--) {
            //cout<<i<<endl;
            t1*=i;
            while(t1%10==0) {
                t1/=10;
                e++;
            }
            if(t1>=1000000000000ll) // >=12 digits 
                break;
        }
        string ret;
        
        if(i!=left-1) {// bigger
            t2 = t1;
            t1 %=10000000000ll;
            while(t2>=1000000000000ll)
                t2/=10;
            for(i--; i>=left; i--) {
                t1*=i;
                while(t1%10==0) {
                    e++;
                    t1/=10;
                }
                t2*=i;
                t1%=10000000000ll;
                while(t2>=1000000000000ll)
                    t2/=10;
            }
        }
        
        if(t2==0) {
            if(t1<10000000000ll) {
                ret = to_string(t1)+"e"+to_string(e);
            } else {
                t2 = t1;
                while(t2>=100000000000ll)
                    t2 /=10;
            }
        }
        
        if(t2>0) {
            while(t2>=100000)
                t2/=10;
            t1 %=100000; 
            ret = to_string(t2)+"...";
            if(t1<10)
                ret += "0000";
            else if(t1<100)
                ret += "000";
            else if(t1<1000)
                ret += "00";
            else if(t1<10000)
                ret += "0";
            
            ret = ret+to_string(t1)+"e"+to_string(e);
        }
        
        return ret;
    }
};