

void inoder_traverse(void **arr, int size, int *idx, struct TreeNode *root)
{
        if (!root)
                return;

        inoder_traverse(arr, 10000, idx, root->left);
        
        arr[*idx] = root;
        (*idx)++;
        
        inoder_traverse(arr, 10000, idx, root->right);
}

struct TreeNode *create_balanced_bst(void **arr, int low, int high)
{
        if (low > high)
                return NULL;

        int mid = low + (high - low) / 2;
        struct TreeNode *nd = arr[mid];
        nd->left = create_balanced_bst(arr, low, mid - 1);
        nd->right = create_balanced_bst(arr, mid + 1, high);

        return nd;
}

struct TreeNode* balanceBST(struct TreeNode* root)
{
        void **arr = malloc(sizeof(void *) * 10000);
        int cnt = 0;

        inoder_traverse(arr, 10000, &cnt, root);
		root = create_balanced_bst(arr, 0, cnt - 1);
		
		free(arr);
        return root;
}