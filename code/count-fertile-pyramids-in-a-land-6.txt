class Solution {
public:
    int count(vector<vector<int>> grid)
    {
        int m=grid.size(),n=grid[0].size(),ans=0;
        for(int i=1;i<m;i++)
        {
            for(int j=1;j<n-1;j++)
            {
                if(grid[i][j]&&grid[i-1][j])
                {
                    grid[i][j]=min(grid[i-1][j-1],grid[i-1][j+1])+1;
                    ans+=grid[i][j]-1;
                }
            }
        }
        return ans;
    }
    int countPyramids(vector<vector<int>>& grid)
    {
        int ans=0;
        ans=count(grid); //for inverse
        reverse(grid.begin(),grid.end());
        ans+=count(grid);//for normal pyramid
        return ans;
        
    }
};
//if you like the solution plz upvote.