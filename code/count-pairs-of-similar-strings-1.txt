int C(int a, int b){
    if(a<2) return 0;
    return a*(a-1)/2;
}

int cmp(const void *a, const void *b){ return (*(int*)a - *(int*)b); }

int similarPairs(char ** words, int wordsSize){
    int* cnt = (int*)calloc(wordsSize, sizeof(int));
    for(int i = 0; i < wordsSize; i++){
        int len = strlen(words[i]);
        for(int j = 0; j < len; j++){
            cnt[i] |= (1 << (words[i][j] - 'a'));
        }
    }
    qsort(cnt, wordsSize, sizeof(int), cmp);
    int similarCnt = 1, ans = 0;
    for(int i = 1; i < wordsSize; i++){
        if(cnt[i] == cnt[i-1])
            similarCnt++;
        else {
            ans += C(similarCnt, 2);
            similarCnt = 1;
        }
        if(i == (wordsSize - 1)){
            ans += C(similarCnt, 2);
        }
    }
    return ans;
}