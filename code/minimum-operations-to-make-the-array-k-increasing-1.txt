class Solution {
public:
  int find_lis(vector<int> &a){
    vector<int> p(a.size()), b = {0};
    int u, v;

    for(int i = 1; i != a.size(); i++) {
      if (a[b.back()] <= a[i]) {
          p[i] = b.back();
          b.push_back(i);
          continue;
      }

      for(u = 0, v = b.size() - 1; u < v;){
        int c = (u + v)>>1;
        a[b[c]] <= a[i] ? u = c + 1 : v = c;
      }

      if(a[i] < a[b[u]]){
        if(u > 0) p[i] = b[u-1];
        b[u] = i;
      }   
    }
    
    return b.size();
  }
  
  
  int kIncreasing(vector<int>& arr, int k) {
    int ans = 0;
    vector<int> temp;
    for(int i = 0; i != k; i++){
      for(int j = i; j < arr.size(); j+=k) temp.push_back(arr[j]);
      ans += temp.size() - find_lis(temp);
      temp.clear();
    }
   
    return ans;
  }
};