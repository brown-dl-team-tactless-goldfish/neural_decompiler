struct ListNode* mergeTwoLists(struct ListNode* list1, struct ListNode* list2){

    if(list1 == NULL && list2 == NULL){
        return NULL;
    }
    
    if(list1 == NULL){
        return list2;
    }
    
    if(list2 == NULL){
        return list1;
    }
    
    struct ListNode * main = (struct ListNode*)malloc(sizeof(struct ListNode));
    struct ListNode * trav1 = list1;
    struct ListNode * trav2 = list2;
    struct ListNode * tMain = main;
    main->val = -1;
    main->next = NULL;
    
    while(trav1 != NULL && trav2 != NULL){
        if(trav1->val<=trav2->val){
            tMain->next = trav1;
            tMain = tMain->next;
            trav1 = trav1->next;
        }else{
            tMain->next = trav2;
            tMain = tMain->next;
            trav2 = trav2->next;
        }
    }
    
    while(trav1 != NULL){
        tMain->next = trav1;
        tMain = tMain->next;
        trav1 = trav1->next;
    }
    
    while(trav2 != NULL){
        tMain->next = trav2;
        tMain = tMain->next;
        trav2 = trav2->next;
    }
    
    return main->next;
}

struct ListNode* mergeKLists(struct ListNode** lists, int listsSize){
    
    if(listsSize == 0){
        return NULL;
    }
    
    if(listsSize == 1){
        return lists[0];
    }
    
    struct ListNode * result = mergeTwoLists(lists[0],lists[1]);
    int i;
    for(i=2;i<listsSize;i++){
        result = mergeTwoLists(result,lists[i]);
    }
    
    return result;
}