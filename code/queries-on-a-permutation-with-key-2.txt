

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */

void rotate(int *arr, int ind, int *rem) {
    
     int temp;
     temp = arr[ind];
     
     for(int i=ind; i > 0 ; i--) {
         arr[i] = arr[i-1];
         rem[arr[i]] = i;
         
     }
    arr[0] = temp;
    rem[arr[0]] = 0;
    
}


int* processQueries(int* queries, int queriesSize, int m, int* returnSize){
    
    int *ans;
    int *rem;
    int *arr;
    int curr;
    ans = malloc(sizeof(int)*queriesSize);
    rem = malloc(sizeof(int)*(m+1));
    arr = malloc(sizeof(int)*m);
                 
    for(int i=1; i<= m; i++) {
        
        rem[i] = i-1;
        arr[i-1] = i;
    }
    
    *returnSize = queriesSize;
    for(int i=0; i<queriesSize; i++) {
        
        curr = rem[queries[i]];
        ans[i] = curr - 0;
        rotate(arr,curr - 0,rem);
        
    }//end of loop
    
    free(rem);
    free(arr);
                 
    return ans;
}