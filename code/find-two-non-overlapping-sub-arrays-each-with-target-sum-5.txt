	int n=arr.size(),i,key=0,count=0;
    vector<pair<int,int>> intervals;
    map<int,int> presum;
    presum[0]=-1;
    presum[arr[0]]=0;
    key = arr[0];
    
    for(i=1;i<n;i++) {
        key = key+arr[i];
        presum[key]=i;
    }
    
    key=0;
    int lsize=0,rsize=0,best=INT_MAX,minlen=INT_MAX;
    
   for(i=0;i<n;i++){
       key+=arr[i];
       if(presum.find(key-target) != presum.end()) {
           best = min(best, i-presum[key-target]);
       }
       
       if(presum.find(key+target) != presum.end() && best<INT_MAX) {
           minlen = min(minlen, best+presum[key+target]-i);
       }
   }
    
    
    if(minlen==INT_MAX)
        return -1;
    return minlen;