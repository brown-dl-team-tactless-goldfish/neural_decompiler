class Solution {
public:
    vector<int>pre;
    vector<int>sum;
    int n ;
    bool check(int mid , int mxcost)
    {
        bool f = false;
        //int c = 0 ;
        //cout<<"mid"<<mid<<endl;
        int s = sum[mid] - sum[0];
        if(s <= mxcost)
            f = true;
        //cout<<"s"<<s<<endl;
       // int j = 0 ;
        for(int i = mid + 1 , j = 1; i <= n ;i++,j++  )
        {
            int p = sum[i] - sum[j];
            if(p <= mxcost)
                f = true;
            
        }
        return f;
    }
    int equalSubstring(string s, string t, int mxcost) {
         n = s.size();
        int l = 0 ; 
        int h = s.size();
        pre.resize(n , 0 );
        for(int i = 0 ; i < n ;i++)
        {
            pre[i] = abs(s[i] - t[i]);
        }
        sum.resize(n+1,0);
        sum[1] = pre[0];
        for(int i = 1 ;i < n ;i++)
        {
            sum[i+1] = sum[i] + pre[i];
        }
         //for(auto i : sum)
            // cout<<i<<" ";
        int ans = 0 ;
        
        while(l <= h)
        {
            int mid = l + (h-l)/2 ;
            if(check(mid , mxcost) == true )
            {
                ans = mid ;
                l = mid  + 1;
            }
            else 
                h = mid - 1;
        }
        
        return ans;
    }
};