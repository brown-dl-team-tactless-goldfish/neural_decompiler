class Solution {
public:
    int mod = 1e9 + 7;
    vector<int> dp;
    int f(int i, string &s, int k)
    {
        if(i >= s.size())
            return 1;
        if(s[i] == '0')
            return 0;
        if(dp[i] != -1)
            return dp[i];
        long long ways = 0;
        int l = to_string(k).size();
        for(int len = 1; len + i <= s.size(); len++)
        {
            if(len > l)
                break;
            long long num = stoll(s.substr(i, len));
            if(num >= 1 && num <= k)
                ways += f(i + len, s, k);
            ways %= mod;
        }
        dp[i] = ways % mod;
        return dp[i];
    }
    int numberOfArrays(string s, int k) {
        dp = vector<int> (s.size() + 1, -1);
        return f(0, s, k);
    }
};