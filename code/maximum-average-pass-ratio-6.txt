class Solution {
public:
    double solve(int pass, int total){
        double a1=(pass+1)/(double)(total+1);
        double a2=(pass)/(double)total;
        return a1-a2;
    }
    double maxAverageRatio(vector<vector<int>>& classes, int extraStudents) {
        int n=classes.size();
        priority_queue< pair<double,pair<int,int>>, vector<pair<double,pair<int,int>>>>pq;
        for(int i=0;i<n;i++){
            double k=solve(classes[i][0],classes[i][1]);
            pq.push({k,{classes[i][0],classes[i][1]}});
        }
        while(extraStudents--){
            auto p=pq.top();
            pq.pop();
            int c1=p.second.first+1;
            int c2=p.second.second+1;
            double k=solve(c1,c2);
            pq.push({k,{c1,c2}});
            
        }
        double res=0;
        while(!pq.empty()){
            auto p=pq.top();
            pq.pop();
            int c1=p.second.first;
            int c2=p.second.second;
            res+=c1/(double)c2;
        }
        double ans=res/(double)n;
        return ans;
    }
};