class Solution {
public:
    long long dividePlayers(vector<int>& skill) {
        long long chemistry = 0;
        sort(begin(skill),end(skill)); // sort the skill array, we'll match the first with the last and keep on this process cuz we must have to match the lowest skill with the maximum skill. It's obvious no need to explain
        int n = skill.size(), req = skill.front() + skill.back(); //req = required skill for each time & i.e the sum of skill of all the player should be equal
        for(int i=0; i<n/2; ++i){
            if(skill[i] + skill[n-i-1] != req) return -1; // if the chosen team doesn't match with required skill then return -1
            chemistry += skill[i] * 1ll * skill[n-i-1];
        }
        return chemistry;
    }
};