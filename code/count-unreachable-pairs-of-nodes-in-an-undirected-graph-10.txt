class Solution {
public:
    vector<int> g[100005];
    int cnt, vis[100005];
    void dfs(int u) {
        vis[u] = 1;
        cnt++;
        for(auto v: g[u]) {
            if(!vis[v]) dfs(v);
        }
    }
    long long countPairs(int n, vector<vector<int>>& edges) {
        for(auto x: edges) {
            g[x[0]].push_back(x[1]);
            g[x[1]].push_back(x[0]);
        }
        vector<int> v;
        for(int i=0; i<n; i++) {
            if(!vis[i]) {
                cnt = 0;
                dfs(i);
                v.push_back(cnt);
            }
        }
        long long ans = 0;
        while(!v.empty()) {
            int x = v.back();
            v.pop_back();
            n -= x;
            ans += 1ll * n * x;
        }
        return ans;
    }
};