class Solution {
public:
    int closestCost(vector<int>& baseCosts, vector<int>& toppingCosts, int target) {
        int n = baseCosts.size(),m=toppingCosts.size();
        for(int i = 0 ;i < m;i++){
            toppingCosts.push_back(toppingCosts[i]);
        }
        vector<int>sum;int mxm = pow(2,(2*m));
        for(int i = 0;i < mxm;i++){
            int val = 0;
            for(int j = 0;(1<<j)<=i;j++){
                if((i&(1<<j))) val+=toppingCosts[j];
            }
            sum.push_back(val);
        }
        int ans = 10000000;
        for(int i = 0 ;i < n;i++){
            for(int j = 0;j < sum.size();j++){
                int val = baseCosts[i] + sum[j];
                if(abs(target-val) < ans){
                    ans = abs(target-val);
                }
            }
        }
        vector<int>num;
        for(int i = 0 ;i < n;i++){
            for(int j = 0;j < sum.size();j++){
                int val = baseCosts[i] + sum[j];
                if(abs(target-val) == ans){
                    num.push_back(val);
                }
            }
        }
        sort(num.begin(),num.end());
        return num[0];
    }
};