class Solution {
public:
    int concatenatedBinary(int n) {
        int mod = 1000000007;
        int res = 0;
        for (int i = 1; i <= n; ++i)
        {
            string s = bitset<32>(i).to_string(); // convert n to binary string
            int j = 0;
            while (s[j] == '0')
            {
                ++j; // find the first '1'
            }
            
            while (j < 32)
            {
                res = (res * 2) % mod; // move the result from 1 to n - 1 to higher bit
                ++j;
            }
            
            res = (res + i) % mod; // add n
        }
        
        return res;
    }
};