

int evalRPN(char ** tokens, int tokensSize){
    int stackSize=-1;
    int* stack=malloc(sizeof(int)*tokensSize);
    
    for(int i=0; i<tokensSize; i++){
        
        char* token=tokens[i];
        int tokenlen=strlen(token);
        
        if(token[0] != '+' && (token[0] != '-' || tokenlen != 1) && token[0] != '*' && token[0] != '/'){ //if token='-' need to evaulate,'-11' need to push into stack
            stack[++stackSize]=atoi(token);
            //printf("%d\n",stack[stackSize]);
        }else{
            
            long int nums1=stack[stackSize-1];
            long int nums2=stack[stackSize];
            long int sum=0;
        
            
           // printf("%d,%d\n",nums1,nums2);
            switch(token[0]){
                case '+':
                    sum=nums1+nums2;
                    break;
                case '-':
                    sum=nums1-nums2;
                    break;
                case '*':
                    sum=nums1*nums2;
                    break;
                default:
                    sum=nums1/nums2;
                    break;
                    
            }
            stack[--stackSize]=sum;
            //printf("%d,%d\n",stackSize,sum);
        }
    }
    return stack[0];
}