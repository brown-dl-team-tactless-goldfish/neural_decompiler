int totalHammingDistance(int* nums, int numsSize) {
    int ret=0;
    int temp=0;
    for(int i=0;i<32;i++){
        temp=0;
        for(int j=0;j<numsSize;j++){
            if((nums[j]&1)==1){temp++;}
            nums[j]=nums[j]>>1;
        }
        ret=ret+temp*(numsSize-temp);
    }
    return ret;
}
// Time Limit Exceeded
/*int  HammingDistance(int num1,int num2){
    int ret=0;
    while(num1!=0&&num2!=0){
        if((num1&1)!=(num2&1)){
            ret++;
        }
        num1=num1>>1;
        num2=num2>>1;
    }
    while(num1!=0){
        if((num1&1)==1){
            ret++;
        }
        num1=num1>>1;
    }
    while(num2!=0){
        if((num2&1)==1){
            ret++;
        }
        num2=num2>>1;
    }
    return ret;
}
int totalHammingDistance(int* nums, int numsSize) {
    int ret=0;
    for(int i=0;i<numsSize-1;i++){
        for(int j=i+1;j<numsSize;j++){
            ret=ret+HammingDistance(nums[i],nums[j]);
        }
    }
    return ret;
}*/