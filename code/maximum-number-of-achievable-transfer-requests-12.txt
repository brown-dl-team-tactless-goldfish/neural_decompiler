    int maximumRequests(int n, vector<vector<int>>& requests) {
        int ans = 0 , k = requests.size() , R = 1<<k;

        for(int i=1;i<R;i++){
            int *A = (int*) calloc(n,sizeof(int));
            int cur_ans = 0;
            for(int r=0;r<k;r++){
                if( int(i>>r) & 1 ){ // Checking if r`th bit of i is set 
                    A[requests[r][0]]++;
                    A[requests[r][1]]--;
                    cur_ans++;
                }
            }
            int x;
            for(x=0;x<n;x++)
                if(A[x]!=0) // Voilation of indegree and outdegree
                    break;
            if(x==n) // For all indegree and outdegree is cancel each other
                ans = max(ans,cur_ans);
        }
        return ans;
    }
