class Solution {
    vector<int> vis;
    vector<vector<int> > gr;
    int n;
public:
    int dfs(int i,int j){
        vis[i]=1;
        int ans=1;
        for(int v=0;v<n;v++){
            if(!vis[v] && gr[i][v] && v!=j){
                ans+=dfs(v,j);
            }
        }
        return ans;
    }
    int minMalwareSpread(vector<vector<int>>& graph, vector<int>& initial) {
        n=graph.size();
        gr=graph;
        int ans=0,ma=100000;
        vis.resize(n);
        for(auto i:initial){
            int u=i;
            int tot=0;
            for(int i=0;i<n;i++){
                vis[i]=0;
            }
            for(int i=0;i<n;i++){
                vis[i]=0;
            }
            for(auto a:initial){
                if(a!=u && !vis[a]){  
                    tot+=dfs(a,u);
                }
            }
            //cout<<tot<<" "<<u<<"\n";
            if(ma>tot){
                ma=tot;
                ans=u;
            }
            if(ma==tot){
                ans=min(ans,u);
            }
        }
        return ans;
    }
};