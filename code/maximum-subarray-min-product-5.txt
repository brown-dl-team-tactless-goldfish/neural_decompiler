class Solution {
public:
    int maxSumMinProduct(vector<int>& nums) {
        int mod = 1000000007;
        nums.push_back(0);
        long long res = 0;
        int n = nums.size();
        vector<long long> prefix_sum(n,0);
        prefix_sum[0] = nums[0];
        for(int i = 1; i < n ; ++i) prefix_sum[i] = (nums[i] + prefix_sum[i-1]);
        stack<long long> idx_stk;
        for(int i = 0; i < n ; ++i){
            while(idx_stk.size()>0 && nums[i] < nums[idx_stk.top()]){
                int start = idx_stk.top();idx_stk.pop();
                if(!idx_stk.empty()){
                    int back = idx_stk.top();
                    res = max(res,(prefix_sum[i-1]-prefix_sum[back] )*nums[start]) ;
                }
                else res = max(res,(prefix_sum[i-1])*nums[start]);
            }
            idx_stk.push(i);
        }
        nums.pop_back();
        return res % mod;
    }
};