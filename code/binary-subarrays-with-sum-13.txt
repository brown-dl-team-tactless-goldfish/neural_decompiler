public class Solution
{
    public int NumSubarraysWithSum(int[] nums, int k)
    {
        if (nums.Length == 0)
        {
            return 0;
        }

        int res = 0;
        int left = 0;
        int right = 0;

        if (k > 0)
        {
            int sum = 0;

            for (left = 0; left < nums.Length; left++)
            {
                if (nums[left] == 0)
                {
                    continue;
                }

                right = Math.Max(right, left);

                while (true)
                {
                    if (right == nums.Length)
                    {
                        break;
                    }

                    if (nums[right] == 1)
                    {
                        sum++;
                    }

                    if (sum == k)
                    {
                        break;
                    }

                    right++;
                }

                if (right != nums.Length)
                {

                    int leftMost = left - 1;
                    int rightMost = right + 1;

                    int leftLength = 1;
                    int rightLength = 1;

                    while (leftMost >= 0 && nums[leftMost] == 0)
                    {
                        leftMost--;
                        leftLength++;
                    }

                    while (rightMost < nums.Length && nums[rightMost] == 0)
                    {
                        rightMost++;
                        rightLength++;
                    }

                    res += (leftLength * rightLength);
                    right++;
                }

                sum--;
                sum = Math.Max(0, sum);
            }

            return res;
        }

        while (left != nums.Length)
        {
            if (nums[left] == 1)
            {
                left++;
                continue;
            }

            right = Math.Max(right, left);
            if (right == nums.Length - 1 || nums[right + 1] == 1)
            {
                int length = right - left + 1;
                res += (1 + length) * length / 2;
                left = right + 1;
                continue;
            }

            right++;
        }


        return res;
    }
}