class TopVotedCandidate {
public:
    vector<int> per;
    vector<int> times;
    TopVotedCandidate(vector<int>& persons, vector<int>& times) {
        this->times =times;
        unordered_map<int,int> mp;
        int mx_element = -1, mx = -1;
        for(auto i:persons)
        {
            mp[i]++;
            if(mp[i]>=mx)
            {
                mx = mp[i];
                mx_element = i;
            }
            per.push_back(mx_element);
        }
    }
    
    int q(int t) {
        auto idx = upper_bound(times.begin(), times.end(), t) - times.begin();
        idx--;
        return per[idx];
    }
};