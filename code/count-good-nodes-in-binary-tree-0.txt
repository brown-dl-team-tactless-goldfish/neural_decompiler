/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */

// We need something to call recursively that can carry along 
// the highest val seen in the path
int goodNodeElement(struct TreeNode* root, int maxval){
    if (root==NULL) return 0;
    // If this node has a higher value, update that for all subsequent
    // checks up the tree
    if (root->val > maxval) maxval = root->val;
    // If this node is ok (its val at least as high as maxval) return
    // it AND any results of its children
    if (root->val >= maxval)
        return 1 + goodNodeElement(root->left,maxval) +
               goodNodeElement(root->right,maxval);
    // Otherwise, no, but check the children
    return goodNodeElement(root->left,maxval) +
               goodNodeElement(root->right,maxval);
}


int goodNodes(struct TreeNode* root){
   if (root==NULL) return 0;
    else return goodNodeElement(root,root->val);
}