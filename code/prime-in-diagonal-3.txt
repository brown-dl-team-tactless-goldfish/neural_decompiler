public class Solution {
    public int DiagonalPrime(int[][] nums) {
        int max = 0, res = 0;
        
        for(int i = 0; i < nums.Length; i++)
        {
            for(int j = 0; j < nums[0].Length; j++)
            {
                if(i == j || j == nums.Length - i - 1)
                {
                    max = IsPrime(nums[i][j]); //Returns num if prime. Else, returns 0
                    res = Math.Max(res, max);
                }
            }
        }
        
        return res;
    }
    
    private int IsPrime(int n)
    {
        if(n == 0 || n == 1)
            return 0;
        if(n == 2)
            return n;
        
        for(int i = 2; i <= (int)Math.Sqrt(n); i++)
        {
            if(n % i == 0)
                return 0;
        }
        
        return n;
    }
}