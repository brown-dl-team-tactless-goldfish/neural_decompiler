//F0 = 0 * nums[0] + 1 * nums[1] + ... + (n - 1) * nums[n - 1].
//F1 = F0 - sum + n*nums[0]
//F2 = F1 - sum + n*nums[1]
int maxRotateFunction(int* nums, int numsSize){
    int sum = 0;
    for(int i = 0; i < numsSize; i++){
        sum += nums[i];
    }
    int max = 0, temp;
    //F0
    for(int i = 0; i < numsSize; i++){
        max += i*nums[i];
    }
    temp = max;
    //Fn1 ~ Fn-1
    for(int i = 1; i < numsSize; i++){
        temp = temp - sum + numsSize*nums[i-1];
        max = fmax(max, temp);
    }
    return max;
}