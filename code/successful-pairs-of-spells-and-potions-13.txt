class Solution {
public:
    vector<int> successfulPairs(vector<int>& spells, vector<int>& portions, long long success) {
        int n = spells.size();
        int m = portions.size();

        sort(portions.begin() , portions.end());
        vector<int> res;
        
        for(int i = 0 ; i < n ; i++){
            int low = 0,high = m - 1;
            while(low <= high){
                int mid = (low + high)/2;
                long n1 = portions[mid];
                long n2 = spells[i];
                if(n1*n2 < success){
                    low = mid + 1;
                }else{
                    high = mid - 1;
                }
            }
            res.emplace_back(m - low);
        }
        return res;
    }
};