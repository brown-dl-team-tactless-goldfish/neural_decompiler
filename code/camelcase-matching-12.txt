class Solution {
public:
    bool small_difference(string& parent, string &s) {
        int i = 0, n = parent.length(), caps = 0;
        for(char c:parent) 
            if(c >= 'A' and c <= 'Z') 
                caps++;
        
        for(char c:s) {
            while(i < n and parent[i] != c) i++;
            if(i == n) return false;
            if(c >= 'A' and c <= 'Z') caps--;
            i++;
        }
        
        if(caps != 0) return false;
        return true;
    }
    
    vector<bool> camelMatch(vector<string>& queries, string pattern) {
        vector<bool> ans;
        for(auto &query:queries) {
            ans.push_back(small_difference(query,pattern));
        }
        
        return ans;
    }
};