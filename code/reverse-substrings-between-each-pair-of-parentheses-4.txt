#include <ctype.h>
char * reverseParentheses(char * s){

    struct stack{
        char e[3000];
        int peek;
        
    }stck;
    
    stck.peek=-1;

    int i;
    
    char rev[3000];
    int s_rev=0;
    

    for (i=0;i<strlen(s);i++){
        
        if (stck.peek==-1||s[i]=='('){
            stck.e[++stck.peek]=s[i];
        }else if (s[i]==')'){
            while (stck.e[stck.peek]!='('){
                rev[s_rev]=stck.e[stck.peek];
                stck.e[stck.peek]='\0';
                s_rev++;
                stck.peek--;
                
            }
            stck.e[stck.peek]='\0';
            stck.peek--;
            for (int j=0;j<s_rev;j++){
                stck.e[++stck.peek]=rev[j];
            }
            s_rev=0;
            rev[0]=0;
        }else{
            stck.e[++stck.peek]=s[i];
        }

     
  
    }   
    
    // if we encouter ( or alphabet letter we push it to the stack
    // else if we encouter ) we will loop from right of the stack
    // and append each letter until we hit )
    //and reverse the stack
	
    stck.e[++stck.peek]='\0';
    char *res=malloc(strlen(stck.e)+1);
    strcpy(res,stck.e);
    
    return res;
}