class Solution {
    int dp[100][100][100];
public:
    int removeBoxes(vector<int>& boxes) {
        int n=boxes.size();
        memset(dp,-1,sizeof(dp));
        return answer(boxes,0,n-1,0);
    }
    int answer(vector<int> &box,int i,int j,int k){
        if(i>j)return 0;
        if(dp[i][j][k]!=-1)return dp[i][j][k];
        for(;i+1<=j and box[i+1]==box[i];i++,k++);
        int ans=(k+1)*(k+1)+answer(box,i+1,j,0);
        for(int m=i+1;m<=j;m++)
            if(box[m]==box[i])
                ans=max(ans,(answer(box,i+1,m-1,0)+answer(box,m,j,k+1)));
        return dp[i][j][k]=ans;
    }
};