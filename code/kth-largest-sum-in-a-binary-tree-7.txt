/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    List<long> list = new();
    
    public long KthLargestLevelSum(TreeNode root, int k) {
        BFS(root);
        list.Sort();
        list.Reverse();
        return list.Count < k ? -1 : list[k - 1];
    }
    
    private void BFS(TreeNode root)
    {
        Queue<TreeNode> q = new();
        q.Enqueue(root);
        
        while(q.Any())
        {
            int size = q.Count;
            long sum = 0;
            
            for(int i = 0; i < size; i++)
            {
                var cur = q.Dequeue();
                sum += cur.val;
                if(cur.left != null)
                    q.Enqueue(cur.left);
                if(cur.right != null)
                    q.Enqueue(cur.right);
            }
            list.Add(sum);
        }
    }
}