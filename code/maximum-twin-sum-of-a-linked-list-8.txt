/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
int find(struct ListNode *head){
    if(!head){return 0;}
    return 1+find(head->next);
}
int pairSum(struct ListNode* head){
    if(find(head)==2){return head->val+head->next->val;}
    int x=find(head)/2;
    struct ListNode *temp=head,*prev,*fast;
    for(int i=0;i<x;i++){
        prev=temp;
        temp=temp->next;
    }prev->next=NULL;
    fast=temp->next;
    prev=temp;
    prev->next=NULL;
    while(fast->next){
        prev=fast;
        fast=fast->next;
        prev->next=temp;
        temp=prev;
    }fast->next=prev;
    int max=0;
    while(head){
        if(head->val+fast->val>=max){max=head->val+fast->val;}
        head=head->next;fast=fast->next;
    }
    return max;
}