class Solution {
    bool ok( int a , int b , int c )
    {
        if( a == b && b == c )
            return 1 ;
        if( b-a == c-b && c-b == 1 )
            return 1 ;
        return 0 ;
    }
public:
    bool validPartition(vector<int>& A ) {
        int N = A.size();
        if( N == 2 )
            return A[0] == A[1] ;
        if( N == 3 )
            return ok( A[0] , A[1] , A[2] );
			
        int t[N+1];
        memset( t ,0 , sizeof t );
		
        t[0] = 1 ;
        t[1] = 0 ;
        t[2] = A[1] == A[0] ;
        t[3] = ok( A[0] , A[1] , A[2] ) ;
		
        for( int i = 4 ; i <= N ; i++ )
        {
            int a = i-1 ;
            t[i] |= A[a] == A[a-1] && t[a-1] ;
            t[i] |= ok( A[a-2] , A[a-1] , A[a] ) && t[a-2] ;
        }
        return t[N] ;        
    }
};