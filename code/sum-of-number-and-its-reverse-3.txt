class Solution {
public:
    bool isReverse(pair<int, int> a) { 
        int one = a.first;
        int two = a.second;
        if (two < one) {
            swap(one, two);
        }
        
        auto actualNum = to_string(two);
        auto newNum = to_string(one);
        while (newNum.size() < actualNum.size()) {
            newNum = "0" + newNum;
        }
        
        int n = newNum.size();
        for (int i = 0; i < (n / 2); i++) {
            swap(newNum[i], newNum[n - 1 - i]);
        }
        
        if (newNum == actualNum) {
            return true;
        }
        
        return false;
    }
    
    bool sumOfNumberAndReverse(int num) {
        auto s = to_string(num);
        for (int i = 0; i <= (num / 2); i++) {
            pair<int, int> c = {i, num - i};
            if (isReverse(c)) {
                // cout << to_string(i) << " " << to_string(num - i) << endl;
                return true;
            }
        }
        
        return false;
    }
};