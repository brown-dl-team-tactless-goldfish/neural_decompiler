void checkSum(struct TreeNode* root, int ** out, int * temp, int sum, int target, int * count, int idx, int ** colSize)
{
    if(root == NULL) return;
    sum += root->val;
    temp[idx++] = root->val;
    if(root->left == NULL && root->right == NULL)
        if(target == sum)
        {
            memcpy(out[*count], temp, idx * sizeof(int));
            (*colSize)[*count] = idx;
            (*count)++;
            return;
        }
        else return;
    else
    {
        checkSum(root->left, out, temp, sum, target, count, idx, colSize);
        checkSum(root->right, out, temp, sum, target, count, idx, colSize);
    }
}
int** pathSum(struct TreeNode* root, int targetSum, int* returnSize, int** returnColumnSizes){
    int ** result = (int **)malloc(500*sizeof(int *));
    int * temp = (int *)malloc(1000*sizeof(int));
    for(int i = 0; i < 500; i++)
    {
        result[i] = (int *)malloc(1000*sizeof(int));
        (*returnColumnSizes) = (int *)malloc(1000*sizeof(int));
    }
    int count = 0;
    checkSum(root, result, temp, 0, targetSum, &count, 0, returnColumnSizes);
    *returnSize = count;
    return result;
}