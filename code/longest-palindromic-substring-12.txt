char * longestPalindrome(char * s){
    int n = strlen(s), size = 1, start = 0;
    bool dp[n][n];
    memset(dp, 0, sizeof(dp));
    for (int i = 0; i < n; i++) dp[i][i] = true;
    for (int i = 0; i < n-1; i++) {
        if (s[i] == s[i+1]) {
            dp[i][i+1] = true;
            size = 2;
            start = i;
        }
    }
    for (int len = 3; len <= n; len++) {
        for (int i = 0; i <= n-len; i++) {
            int j = i+len-1;
            if (s[i] == s[j] && dp[i+1][j-1]) {
                size = len;
                start = i;
                dp[i][j] = true;
            }
        }
    }
    char *result = calloc(size+1, sizeof(char));
    strncpy(result, s+start, size);
    return result;
}