class Solution {
public:
    long long maximumSubarraySum(vector<int>& nums, int k) {
        long long sum=0,temp=0;
        int i=0,j=0;
        unordered_map<int,int> m;
        while(j < nums.size()){
            m[nums[j]]++;
            temp += nums[j];
            if(j-i+1 < k) j++;
            else if(j-i+1 == k){
                if(m.size() == k) sum=max(sum,temp);
                m[nums[i]]--;
                temp -= nums[i];
                if(m[nums[i]] == 0) m.erase(nums[i]);
                i++,j++;
            }
        }
        return sum;
    }
};