class Solution {
public:
    int maximizeGreatness(vector<int>& nums) {
        // nums = [5,1,4,0,5,5]
        // sort = [0,1,4,5,5,5]
        // ans = 3
        
        // nums= [42,8,75,28,35,21,13,21]
        // sort= [8,13,21,21,28,35,42,75]
        // ans= 6

        
        vector<int> x = nums;
        int c = 0;
        int n = nums.size();
        sort(x.begin(), x.end());//Sorting the array

        auto search = upper_bound(x.begin(), x.end(), x[0]);//Next Greater 
        //We start checking from the next greater element
        if (search != x.end()) {//Element not found
            int b = search - x.begin();
            int a = 0;

            while (a < n && b < n) {
                while (b < n && x[a] == x[b]) //Since we require strictly greater so we keep moving to the next element when both in comparsion are equal
                    b++;
                
                if (b >= n) {//Range Excedded
                    break;
                }
                if (x[a] > x[b]) {//Invalid 
                    break;
                }
                c++;
                a++;
                b++;
            }
        }
        return c;
    }
};