int findSmallest(char *c, int len, int start, int min) {
    int ci = -1, cval = 256;
    for(int i = start; i < len; i++)
        if(c[i] > min && c[i] < cval) {
            ci = i;
            cval = c[i];
        }
    return ci;
}

int findLargest(char *c, int len, int start, int max) {
    int ci = -1, cval = -1;
    for(int i = start; i < len; i++)
        if(c[i] < max && c[i] > cval) {
            ci = i;
            cval = c[i];
        }
    return ci;
}

void swap(char *c, int a, int b) {
    if(a == b) return;
    c[a] ^= c[b];
    c[b] ^= c[a];
    c[a] ^= c[b];
}

char * sortString(char *c){
    int len = strlen(c);
    swap(c, 0, findSmallest(c, len, 0, -1));
    int i = 1, si = -1, mem = c[0];
    while(i < len - 1){
        while((si = findSmallest(c, len, i, mem)) > -1) {
            swap(c, i, si);
            mem = c[i];
            i++;
        }
        mem = 256;
        if(i >= len) break;
        while((si = findLargest(c, len, i, mem)) > -1) {
            swap(c, i, si);
            mem = c[i];
            i++;
        }
        mem = -1;
    }

    return c;
}