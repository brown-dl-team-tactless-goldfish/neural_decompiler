class Solution {
public:
    typedef long long ll;
    int dfs(int node, vector<int>& vis, vector<int> adj[]) {
        vis[node] = 1;
        int ans = 1;
        for(auto it : adj[node]) {
            if(!vis[it])
                ans += dfs(it, vis, adj);
        }
        return ans;
    }
    long long countPairs(int n, vector<vector<int>>& edges) {
        vector<int> adj[n];
        for(auto it : edges) {
            adj[it[0]].push_back(it[1]);
            adj[it[1]].push_back(it[0]);
        }
        vector<int> vis(n, 0);
        vector<int> arr;
        for(int i = 0; i < n; i++) {
            if(!vis[i]) {
                int x = dfs(i, vis, adj);
                arr.push_back(x);
            }
        }
        ll ans = (ll)(n) * (ll)(n - 1) / 2;
        for(auto it : arr)
            ans -= ((ll)(it) * (ll)(it - 1) / 2);
        return ans;
    }
};