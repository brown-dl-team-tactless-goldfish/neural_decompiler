int findPeakElement(int* nums, int numsSize) {
    if(numsSize==1||nums[0]>nums[1]){
        return 0;
    }
    if(nums[numsSize-1]>nums[numsSize-2]){
        return numsSize-1;
    }
    int start=0;
    int end=numsSize;
    int index=(end+start)/2;
    while(nums[index]<nums[index-1]||nums[index]<nums[index+1]){
        if(nums[index]<nums[index-1]){
            end=index;
        }else if(nums[index]<nums[index+1]){
            start=index+1;
        }
        index=(end+start)/2;
    }
    return index;
}
// method 1: O(n)
// int findPeakElement(int* nums, int numsSize) {
//     if(numsSize==1||nums[0]>nums[1]){
//         return 0;
//     }
//     if(nums[numsSize-1]>nums[numsSize-2]){
//         return numsSize-1;
//     }
//     for(int i=1;i<numsSize-1;i++){
//         if(nums[i]>nums[i-1]&&nums[i]>nums[i+1]){
//             return i;
//         }
//     }
//     return -1;
// }