class Solution {
public:
    vector<vector<int>> spiralMatrix(int m, int n, ListNode* head) {
        vector<vector<int>>ans(m,vector<int>(n,-1));
        int top=0,bottom=m-1,left=0,right=n-1;
        while(head && top<=bottom && left<=right) {
            // fill the top portion of the spiral
            for(int i=left;i<=right;i++) {
                if(head) {
                    ans[top][i]=head->val;
                    head=head->next;
                }
                else {
                    break;
                }
            }
            top++;
            if(top>bottom) {
                break;
            }
            // fill the right portion of the spiral
            for(int i=top;i<=bottom;i++) {
                if(head) {
                    ans[i][right]=head->val;
                    head=head->next;
                }
                else {
                    break;
                }
            }
            right--;
            if(left>right) {
                break;
            }
            // fill the bottom portion of the spiral
            for(int i=right;i>=left;i--) {
                if(head) {
                    ans[bottom][i]=head->val;
                    head=head->next;
                }
                else {
                    break;
                }
            }
            bottom--;
            if(top>bottom) {
                break;
            }
            // fill the left portion of the spiral
            for(int i=bottom;i>=top;i--) {
                if(head) {
                    ans[i][left]=head->val;
                    head=head->next;
                }
                else {
                    break;
                }
            }
            left++;
            if(left>bottom) {
                break;
            }
        }
        return ans;
    }
};