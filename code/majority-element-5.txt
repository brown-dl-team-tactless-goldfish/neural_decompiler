int size=71;
int maxCount=0;
int max=0;
HashTable *hash=malloc(sizeof(HashTable)*size);
for(int i=0;i<size;i++){
    //hash[i]->head = (HashNode*)malloc(sizeof(HashNode));
    hash[i].head=NULL;
}

for (int i=0;i<numsSize;i++){
    int key=abs(nums[i]%size);
    if(hash[key].head==NULL){
        HashNode *temp=malloc(sizeof(HashNode));
        temp->key=nums[i];
        temp->count=1;
        temp->next=NULL;
        if(temp->count>maxCount){
            maxCount=temp->count;
            max=temp->key;
        }
        hash[key].head=temp;
        
    }
    else{
        HashNode *temp;
        temp=hash[key].head;
        int found=0;
        while(temp !=NULL){
            if(temp->key==nums[i]){
                found=1;
                temp->count++;
                if(temp->count>maxCount){
                    maxCount=temp->count;
                    max=temp->key;
                }
                break;
            }
            temp=temp->next;

        }
        if(!found){
            HashNode *t=malloc(sizeof(HashNode));
            t->key=nums[i];
            t->count=1;
            t->next=hash[key].head;
            hash[key].head=t;
            if(t->count>maxCount){
                maxCount=t->count;
                max=t->key;
            }
        }
    }
    
}
return max;