class Solution {
public:
  int maximumMinutes(vector<vector<int>>& grid) {
    int y = grid.size(), x = grid[0].size(); 
    queue<pair<int,int>> q;
    
    for(int i = 0; i != y; i++)
      for(int j = 0; j != x; j++)
        if     (grid[i][j] == 2) grid[i][j] = -1;
        else if(grid[i][j] == 1) q.push({i,j});
        else grid[i][j] = 100000;
    
    y--, x--;
    while(!q.empty()){
      auto[i, j] = q.front(); q.pop();
      
      int next = grid[i][j] + 1;
      if(i      && grid[i-1][j] != -1 && grid[i-1][j] > next) grid[i-1][j] = next, q.push({i-1,j});
      if(i != y && grid[i+1][j] != -1 && grid[i+1][j] > next) grid[i+1][j] = next, q.push({i+1,j});
      
      if(j      && grid[i][j-1] != -1 && grid[i][j-1] > next) grid[i][j-1] = next, q.push({i,j-1});
      if(j != x && grid[i][j+1] != -1 && grid[i][j+1] > next) grid[i][j+1] = next, q.push({i,j+1});
    }
    
    int answer = INT_MAX;
    vector<vector<int>>vis(y+1, vector<int>(x+1,0));
    q.push({0,0});
      
    for(int step = 1; !q.empty(); step++)
      for(int n = q.size(); n; n--){
        auto[i,j] = q.front(); q.pop(); 
        
        if(i == y && j == x) {
          if(grid[y][x] == 100000) return 1000000000;
          if(grid[y][x] < step) continue;
          answer = min(answer, grid[y][x] - step);
          continue;
        }
        if(vis[i][j] || grid[i][j] <= step) continue;
        vis[i][j] = 1;
        
        if(i      && !vis[i-1][j] && grid[i-1][j] != -1 ) q.push({i-1,j});
        if(i != y && !vis[i+1][j] && grid[i+1][j] != -1 ) q.push({i+1,j});
      
        if(j      && !vis[i][j-1] && grid[i][j-1] != -1 ) q.push({i,j-1});
        if(j != x && !vis[i][j+1] && grid[i][j+1] != -1 ) q.push({i,j+1});
      }
  
    if(answer == INT_MAX) return -1;
 
    queue<pair<int,int>> nq;
    while(true){
    
      vis.clear();
      vis.resize(y+1, vector<int>(x+1,0));
      q.push({0,0});
      
      for(int step = answer + 2; !q.empty(); step++)
        for(int n = q.size(); n; n--){
          auto[i,j] = q.front(); q.pop(); 
        
          if(i == y && j == x) {answer++; goto mark;}
        
          if(vis[i][j] || grid[i][j] <= step) continue;
          vis[i][j] = 1;
        
          if(i      && !vis[i-1][j] && grid[i-1][j] != -1 ) q.push({i-1,j});
          if(i != y && !vis[i+1][j] && grid[i+1][j] != -1 ) q.push({i+1,j});
      
          if(j      && !vis[i][j-1] && grid[i][j-1] != -1 ) q.push({i,j-1});
          if(j != x && !vis[i][j+1] && grid[i][j+1] != -1 ) q.push({i,j+1});
      }
      break;
      mark:;
      q = nq;
    }
    
    return answer - 1;
  }
};