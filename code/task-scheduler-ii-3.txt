class Solution
{
public:
    long long taskSchedulerII(vector<int> &tasks, int space)
    {
        map<long long, long long> mp;
        long long n = tasks.size(), ans = n, c = 0;
        vector<long long> vec(tasks.size());
        for (int i = 0; i < tasks.size(); i++)
        {
            if (mp.find(tasks[i]) == mp.end())
            {
                mp[tasks[i]] = i;
                c++;
                vec[i] = c;
            }
            else
            {
                c++;
                long long time = c - vec[mp[tasks[i]]] - 1;
                long long t = max(0LL, space - time);
                c += t;
                vec[i] = c;
                mp[tasks[i]] = i;
            }
        }
        return vec[tasks.size() - 1];
    }
};