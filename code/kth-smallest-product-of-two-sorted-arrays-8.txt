int ub(int* a, int l, int r, long long x){
    int m;
    while (l <= r){
        m = (l+r)/2;
        if (a[m] <= x) l = m+1;
        else r = m-1;
    }
    
    return l;
}

long long kthSmallestProduct(int* a, int n, int* b, int m, long long k){
    long long r = (long long)(1e10), l = -r, x, c;
    
    int i;
    
    while (l <= r){
        x = (l+r)/2;
        
        c = 0;
        for (i = 0; i < n; i++){
            if (a[i] > 0) c += ub(b, 0, m-1, x/a[i] - (x<0 && x%a[i]));
            else if (a[i] < 0) c += m - ub(b, 0, m-1, x/a[i] - !(x<0 && x%a[i]));
            else if (x >= 0) c += m;
            
            if (c > k-1) break;
        }
        
        if (c <= k-1) l = x+1;
        else r = x-1;
    }
    
    return l;
}