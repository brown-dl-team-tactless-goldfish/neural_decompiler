int intersectionSizeTwo(vector<vector<int>>& intervals) {
        sort(intervals.begin(), intervals.end(), [](const auto & lhs, const auto & rhs){
            return lhs[1] < rhs[1];
        });
        
        set<int> s;
        
        
        
        int small = intervals[0][1]-1;
        int big = intervals[0][1];
        s.insert(small);
        s.insert(big);
        
        for(int i=1;i<intervals.size(); i++){
            if(intervals[i][0] <= small && intervals[i][1] >= big)
                continue;
            else if(intervals[i][0] > big){
                small = intervals[i][1]-1;
                big = intervals[i][1];
                s.insert(small);
                s.insert(big);
            }
            else if(intervals[i][0] > small){
                if(big!= intervals[i][1]){
                    small = big;
                    big = intervals[i][1];
                    s.insert(big);
                }
                else{
                    small = intervals[i][0];
                    s.insert(small);
                }
            }
            
        }
        
        return s.size();
    }