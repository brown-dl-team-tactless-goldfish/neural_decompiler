public:
    int maxEqualFreq(vector<int>& nums) {
        unordered_map<int,int> m;
        unordered_map<int,int> mm;
        int ret = 1;
        m[nums[0]]++;
        mm[1]++;
        for(int i = 1;i<nums.size();i++){
            int count = m[nums[i]];
            m[nums[i]]++;
            mm[count]--;
            if(mm[count] == 0){
                mm.erase(count);
            }
            mm.erase(0);
            mm[m[nums[i]]]++;
            if(mm.size() == 2){
                vector<pair<int,int>> tmp;
                for(auto& x:mm){
                    tmp.push_back(x);
                }
                sort(tmp.begin(),tmp.end());
                if(tmp[1].first - tmp[0].first == 1&&(tmp[1].second == 1)){
                    ret = i + 1;
                }
                if(tmp[0].first == 1 && tmp[0].second == 1){
                    ret = i + 1;
                }
            }
            else if(mm.size() == 1){
                vector<pair<int,int>> tmp;
                for(auto& x:mm){
                    tmp.push_back(x);
                }
                if(m.size()==1)
                ret = i + 1;
                if(tmp[0].first == 1){
                    ret = i + 1;
                }
            }
        }
        return ret;
    }
};