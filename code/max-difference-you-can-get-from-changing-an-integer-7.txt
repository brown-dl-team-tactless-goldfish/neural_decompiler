class Solution {
public:
int maxDiff(int num) {
    string s=to_string(num);
    int c=s.size();
    char x;
	//Finding the first occurence of integer other than '9'
    if(s[0]=='9'){
        int i=0;
        while(i<c){
            if(s[i]!='9') break;
            else i++;
        }
		//Found at index 'i'
        x=s[i];
		//Replace all occurences of x with '9'
        for(int j=0; j<c; j++){
            if(s[j]==x){
                s[j]='9';
            }
        }
    }else{
        x=s[0];
		//Replace all occurences of x with '9'
        for(int j=0; j<c; j++){
            if(s[j]==x){
                s[j]='9';
            }
        }
    }
    
    int a=0;
    for(int j=0; j<c; j++){
        a=10*a+(s[j]-'0');
    }
    
    string t=to_string(num);
    char y;
	//Finding the first occurence of integer other than '1'
    if(t[0]=='1'){
        int i=0;
        while(i<c){
            if(t[i]!='1' && t[i]!='0') break;
            else i++;
        }
		//Found at index 'i'
        y=t[i];
		//Replace all occurences of y with '0', in this replacement starting index will never get 0 value
        for(int j=0; j<c; j++){
            if(t[j]==y){
                t[j]='0';
            }
        }
    }else{
        y=t[0];
		//Replace all occurences of y with '1'
        for(int j=0; j<c; j++){
            if(t[j]==y){
                t[j]='1';
            }
        }
    }
  
    int b=0;
    for(int j=0; j<c; j++){
        b=10*b+(t[j]-'0');
    }  
    return a-b;
}
};