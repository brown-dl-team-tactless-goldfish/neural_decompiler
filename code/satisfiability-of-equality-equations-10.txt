class Solution {
public:
    static bool cmp(string &a,string &b){
        if(a[1]=='='&&b[1]=='!')
            return true;
        return false;
    }
    void makepair(int &s,vector<int> &p,vector<int> &sz){
        p[s] = s;
        sz[s]= 1;
    }
    int find1(int &u,vector<int> &p){
        if(u==p[u])return u;
        return p[u] = find1(p[u],p);
    }
    void union1(int &u,int &v,vector<int> &p,vector<int> &s){
        int a = find1(u,p);
        int b = find1(v,p);
        if(a!=b){
            if(s[a]<s[b])swap(a,b);
            p[b] = a;
            s[a] += s[b];
        }
    }
    bool equationsPossible(vector<string>& v) {
        vector<int> p(26);
        vector<int> s(26);
        sort(v.begin(),v.end(),cmp);
        // for(auto &i: v)cout<<i<<" ";
        for(int i = 0; i < 26; i++){
            makepair(i,p,s);
        }
        int a,b,c;
        for(auto &i: v){
            a = i[0]-'a';
            b = i[1];
            c = i[3]-'a';
            if(b=='='){
                union1(a,c,p,s);
            }else{
                if(find1(a,p)==find1(c,p))return false;
            }
        }
        return true;
    }
};