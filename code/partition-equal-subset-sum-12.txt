public class Solution {
    public bool CanPartition(int[] nums) {
        
        if(nums == null || nums.Length == 0)
            return false;
        
        int sum = 0;
        foreach(var num in nums)
            sum += num;
        
        if(sum % 2 != 0)
            return false;
        
        int halfSum = sum / 2;
        // dp[j]: is there a subset whose elements can sum up to j
        bool[] dp = new bool[halfSum + 1];
        dp[0] = true;
        foreach(var num in nums)
        {
            for(int j = halfSum; j >= num; j--)
            {
                // dp[j] can be true, if
                // case 1: there is already a subset whose elements can sum up to j
                // case 2: there is already a subset whose elements can sum up to j - num
                dp[j] = dp[j] || dp[j - num];
            }
        }
        
        return dp[halfSum];
    }
}