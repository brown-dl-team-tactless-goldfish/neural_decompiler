public class Solution 
{
    public int MinDistance(int[] houses, int k) 
    {
        Array.Sort(houses);
        int[,] costs = new int[100, 100];
        for (int i = 0; i < houses.Length; i++)
            for (int j = 0; j < houses.Length; j++)
                for (int t = i; t <= j; t++)
                    costs[i, j] += Math.Abs(houses[(i + j) / 2] - houses[t]);
        return MinDistance(houses, k, 0, new int[100, 100], costs);
    }
    
    int MinDistance(int[] houses, int k, int i, int[,] memo, int[,] costs)
    {
        if (k == 0 && i == houses.Length) return 0;
        if (k == 0 || i == houses.Length) return 1000000;
        if (memo[k, i] != 0) return memo[k, i];
        int ans = 1000000;
        for (int j = i; j < houses.Length; j++)
            ans = Math.Min(ans, costs[i, j] + MinDistance(houses, k-1, j + 1, memo, costs));
        return memo[k, i] = ans;
    }
}