class Solution {
public:
    vector<long long> kthPalindrome(vector<int>& queries, int intLength) {
        vector<long long>ans;
        
        int n=queries.size();
        
        int k=(intLength+1)/2;
        
        for(int i=0; i<n; i++)
        {
            
            int tot=pow(10,k)-pow(10,k-1);
            if(queries[i]>tot)
                ans.push_back(-1);
            else
            {
                
                long long int str=pow(10,k-1)-1+queries[i];
                string a=to_string(str);
                string b=" ";
                
                if(intLength%2==1)
                {
                    //cout<<a<<endl;
                    b=a.substr(0,a.size()-1);
                }
                else
                {
                    b=a;
                }
                reverse(a.begin(),a.end());
                
                b+=a;
                
                long long p=stol(b);
                ans.push_back(p);
            }
        }
        
        return ans;
    }
};