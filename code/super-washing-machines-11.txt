    public class Solution
    {
        public int FindMinMoves(int[] machines)
        {
            checked
            {
                int[] sums = new int[machines.Length];
                int sum = 0;
                for (int i = 0; i < machines.Length; i++)
                {
                    sum += machines[i];
                    sums[i] = sum;
                }

                if (sum % machines.Length != 0)
                {
                    return -1;
                }

                int res = 0;
                int target = sum / machines.Length;

                for (int i = 0; i < machines.Length; i++)
                {
                    int left = sums[i] - machines[i];
                    int right = sums[sums.Length - 1] - sums[i];

                    int leftDiff = left - target * i;
                    int rightDiff = right - target * (sums.Length - (i + 1));
                    int transitivePart = 0;

                    if (((long)leftDiff * rightDiff) < 0)
                    {
                        transitivePart = Math.Max(leftDiff, rightDiff);
                    }

                    if (machines[i] < target)
                    {
                        res = Math.Max(res, transitivePart);
                    }
                    else
                    {
                        res = Math.Max(res, transitivePart + machines[i] - target);
                    }
                }

                return res;
            }
        }
    }