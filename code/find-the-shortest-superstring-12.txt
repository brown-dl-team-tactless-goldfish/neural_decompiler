class Solution {
public:
    string ans;
    int giveres(int mask,int last,int len,vector<vector<int>>&dp,vector<vector<int>>&pp,vector<string>& A){
        
        if(mask==(1<<len)-1)
            return 0;
        int &ret = dp[mask][last];
        if(ret!=-1)
            return ret;
        ret = 1e9;
        for(int i = 0;i<len;i++){
            if((mask&(1<<i))==0){
                int xx = giveres(mask|(1<<i),i,len,dp,pp,A)+A[i].size()-pp[last][i];
               // cout<<last<<" "<<xx<<endl;
                ret = min(ret,xx);  
            }
        }
        return ret;
    }
    
    
        void print(int mask,int last,int len,vector<vector<int>>&dp,vector<vector<int>>&pp,vector<string>& A){
        
        if(mask==(1<<len)-1)
            return;
        int &ret = dp[mask][last];
        for(int i = 0;i<len;i++){
            if((mask&(1<<i))==0){
                if(giveres(mask|(1<<i),i,len,dp,pp,A)+A[i].size()-pp[last][i]==ret){
                    ans += A[i].substr(pp[last][i],A[i].size()-pp[last][i]);
                    print(mask|(1<<i),i,len,dp,pp,A);
                    return ;
                }
            }
        }
        
    }
    
    string shortestSuperstring(vector<string>& A) {
        int len = A.size();
        vector<vector<int>>pp(len+1,vector<int>(len+1));vector<int>flag(len+1);
        for(int i = 0;i<len;i++){
            for(int j = 0;j<len;j++){
                if(i==j)
                    continue;
                int ln1 = A[i].size();
                int ln2 = A[j].size();
                string jk;
                for(int k = 0;k<ln2;k++){
                    jk += A[j][k];
                    if(k+1>ln1)
                        break;
                    if(jk==A[i].substr(ln1 - k - 1,k+1)){
                        if(k+1==ln2){
                            flag[j] = 1;
                            break;
                        }
                        pp[i][j] = k+1;
                    }
                }
            }
        }
        
        int mask = 0;
        for(int i = 0;i<len;i++){
            if(flag[i])
                mask = mask | (1<<i);
        }
        
        vector<vector<int>>dp(1<<len,vector<int>(len+1,-1));
        giveres(mask,len,len,dp,pp,A);
        print(mask,len,len,dp,pp,A);
        return ans;
    }
};