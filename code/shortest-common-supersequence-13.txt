class Solution {
public:
    string shortestCommonSupersequence(string str1, string str2) {
        
        // first find the lcs of str1 and str2
        vector<vector<int>> dp (str1.size()+1, vector<int>(str2.size()+1,0));
        
        for(int i=1; i<=str1.size(); i++){
            for(int j=1; j<=str2.size(); j++){
                if(str1[i-1]==str2[j-1]){
                    dp[i][j] = 1+dp[i-1][j-1];
                }else{
                    dp[i][j] = max(dp[i-1][j], dp[i][j-1]);
                }
            }
        }
        
        
        string s = "";
        int i=str1.size();
        int j = str2.size();
        while( i>0 and j>0){
            if(str1[i-1]==str2[j-1]){
                s+=str1[i-1];
                i--;
                j--;
            }else if(dp[i-1][j]>dp[i][j-1]){
                i--;
            }else{
                j--;
            }
        }
        
        reverse(s.begin(),s.end());
        
        i=0;
        j=0;
        string res = "";
        for(char c : s){
            while(c!=str1[i]){
                res+=str1[i];
                i++;
            }
            while(c!=str2[j]){
                res+=str2[j];
                j++;
            }
            res+= c;
            i++;
            j++;
            
        }
        res+= str1.substr(i) + str2.substr(j);
        return res;
        
    }
    
};