class Solution {
// lcs is used in comment as longest common subsequence
public:
    int longestCommonSubsequence(string text1, string text2) {
        int n = text1.size(), m = text2.size(); // size of both strings 
        if(!n || !m) return 0; //base case if any of given strings are empty then no common subsequence can be obtained
// now we create a 2d dp & initialize all values to zero means then length of lcs is zero
         vector<vector<int>> dp(n+1,vector<int>(m+1,0)); 
        
        for(int i=0;i<=n;i++){
            for(int j=0;j<=m;j++){
                if(i==0 || j==0) dp[i][j]=0; // base case 
// if the last two character macth then then lcs value till now will be dp[i-1][j-1]+1           
                else if(text1[i-1]== text2[j-1])
                    dp[i][j] =  dp[i-1][j-1]+1;

                else 
                    dp[i][j] =  max(dp[i-1][j], dp[i][j-1]);
            }
        }
        //return maximum lcs
        return dp[n][m];
    }
};