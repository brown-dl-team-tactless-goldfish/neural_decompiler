typedef struct {
    int big;
    int medium;
    int small;
    int bigRem;
    int mediumRem;
    int smallRem;
} ParkingSystem;


ParkingSystem* parkingSystemCreate(int big, int medium, int small) {
    ParkingSystem *new = (ParkingSystem *)malloc(sizeof(ParkingSystem));
    new->big=big;
    new->bigRem = big;
    new->medium = medium;
    new->mediumRem = medium;
    new->small = small;
    new->smallRem = small;
    return new;
}

bool parkingSystemAddCar(ParkingSystem* obj, int carType) {
  if(carType==1 && obj->bigRem>0)
  {
      obj->bigRem--;
      return true;
  }
  else if(carType==2 && obj->mediumRem>0)
  {
      obj->mediumRem--;
      return true;
  }
  else if(carType==3 && obj->smallRem>0)
  {
      obj->smallRem--;
      return true;
  }
    else
    {
        return false;
    }
}

void parkingSystemFree(ParkingSystem* obj) {
    free(obj);
}

/**
 * Your ParkingSystem struct will be instantiated and called as such:
 * ParkingSystem* obj = parkingSystemCreate(big, medium, small);
 * bool param_1 = parkingSystemAddCar(obj, carType);
 
 * parkingSystemFree(obj);
*/