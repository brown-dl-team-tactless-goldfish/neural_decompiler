char * complexNumberMultiply(char * a, char * b){

    int real1, img1, real2, img2, real_out, img_out;

    char *output = malloc(sizeof(char) * 20);
    memset(output, '\0', 20);
    
	/* Extract first real component */
    char *token1 = strtok(a, "+");
    sscanf(token1, "%d", &real1);
    
	/* Extract first imaginary component */
    token1 = strtok(NULL, "i");
    sscanf(token1, "%d", &img1);
    
	/* Extract second real component */
    char *token2 = strtok(b, "+");
    sscanf(token2, "%d", &real2);
    
	/* Extract second imaginary component */
    token2 = strtok(NULL, "i");
    sscanf(token2, "%d", &img2);
    
	/* Calculate the real part of the complex multiplication */
    real_out = (real1 * real2) - (img1 * img2);
	
	/* Calculate the imaginary part of the complex multiplication */
    img_out = (real1 * img2) + (real2 * img1);

    /* Format the output */
    int idx = sprintf(output, "%d", real_out);
    output[idx++] = '+';
    idx += sprintf(output + idx, "%d", img_out);
    output[idx++] = 'i';

    return output;
}