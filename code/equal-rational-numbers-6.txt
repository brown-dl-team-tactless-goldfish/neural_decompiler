class Solution {
public:
    bool isRationalEqual(string S, string T) {
	int i = 0, j = 0;
	bool point = false;
	while (i<S.size() && j<T.size())
	{
		char c = S[i];
		char d = T[j];
		if (c == d&&c!='(')
		{
			
			i++;
			j++;
			continue;
		}
		else if (c == '(' || d == '(')
		{
			if (c == '(')
			{
				i++;
				string tmp;
				while (i<S.size() && S[i] != ')')
					tmp.push_back(S[i++]);
				i++;
				int ori = 0;
				int len = tmp.size();
				while (j<T.size() && T[j] != '(')
				{
					if (T[j++] == tmp[ori%len])
					{
						ori++;

					}
					else return false;


				}
				ori %= len;
				if (j<T.size() && T[j++] == '(')
				{
					
					string tmp1;
					while (j<T.size() && T[j] != ')')
						tmp1.push_back(T[j++]);

					j++;
					int pos = 0;
					while (pos<tmp1.size())
					{

						if (tmp1[pos++] != tmp[ori%len]) return false;

						ori++;



					}
					if (pos == tmp1.size()) return true;


				}
				else return false;




			}
			else
			{
				j++;
				string tmp;
				while (j<T.size() && T[j] != ')')
					tmp.push_back(T[j++]);
				j++;
				int ori = 0;
				int len = tmp.size();
				while (i<S.size() && S[i] != '(')
				{
					if (S[i++] == tmp[ori%len])
					{
						ori++;

					}
					else return false;


				}
				ori %= len;
				if (i<S.size() && S[i++] == '(')
				{
					string tmp1;
					while (i<S.size() && S[i] != ')')
						tmp1.push_back(S[i++]);

					i++;
					int pos = 0;
					while (pos<tmp1.size())
					{

						if (tmp1[pos++] != tmp[ori%len]) return false;

						ori++;



					}
					if (pos == tmp1.size()) return true;



				}

			}





		}
		else {
			if (c == d + 1 || d == c + 1)
			{

				if (c == d + 1)
				{
					j++;
					if (T[j] == '.') j++;
					bool flag = false;
					while (j < T.size())
					{
						if (T[j] == '9') {
							j++; continue;
						}

						else if (T[j] == '(')
						{
							j++;
							while (j < T.size() && T[j] != ')')
								if (T[j++] != '9') return false;

							return true;
						}
						
                        else return false;

					}
					 
                    return false;

				}
				else
				{

					i++;
					if (S[i] == '.') i++;
					 
					while (i < S.size())
					{
						if (S[i] == '9') {
							i++; continue;
						}

						else if (S[i] == '(')
						{
							i++;
							while (i< S.size() && S[i] != ')')
								if (S[i++] != '9') return false;

							return true;
						}

                         else return false;
					}


                     return false;

				}





			}
            else return false;
		}

	}
    if(i<S.size()&&S[i]=='.') i++;
    if(j<T.size()&&T[j]=='.') j++;
        
    if(S[i]=='(')
    {
       				i++;
							while (i< S.size() && S[i] != ')')
								if (S[i++] != '0') return false;

							return true;
        
    }
     if (T[j] == '(')
						{
							j++;
							while (j < T.size() && T[j] != ')')
								if (T[j++] != '0') return false;

							return true;
						}   
	return i==S.size()&&j==T.size();
}
};