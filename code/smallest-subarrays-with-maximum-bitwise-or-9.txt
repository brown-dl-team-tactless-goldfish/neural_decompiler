class Solution {
public:
    vector<int> smallestSubarrays(vector<int>& a) {
        int x= 0 ;int ans=0; 
        int n = a.size() ; 
        vector<int>res(n) ; 
        vector<int>maxxor(n) ; 
        for(int i = n-1 ; i >=0 ; i--){
            x  = x |  a[i] ; 
            ans = max(ans , x) ;
            maxxor[i] = ans ; 
        }
        
       vector<vector<int>>mp(31) ; 
        
        for(int i = 0 ; i < n ; i++){
           for(int j = 31 ; j >= 0 ; j-- ){
               int bit = ((a[i] >> j) & 1) ; 
               if(bit){
                   mp[j].push_back(i);
               }
           }   
        }
        
        for(int i = 0 ; i < n ; i++){
            int len = 1 ; 
            for(int j = 0 ; j <= 31 ; j++){
                
                int bit = (maxxor[i] >> j) & 1 ; 
                
                if(bit){
             auto it = lower_bound(mp[j].begin(),mp[j].end() , i );
              int length = (*it) - i + 1;
              len = max( length , len );
                }
            }
            res[i] = len ; 
        }
        return res;
    }
};