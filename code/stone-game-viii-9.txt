class Solution {
public:
int stoneGameVIII(vector<int>& ar) {
    int n = ar.size();
    for(int i=1;i<n;i++) ar[i]+=ar[i-1];
    int** dp = new int*[2];
    // dp[0][i]-> toAdd=false and ar[i]~ar[n-1] given
    // dp[1][i]-> toAdd=true and ar[i]~ar[n-1] given
    dp[0] = new int[2](),dp[1] = new int[2]();
    dp[0][1] = 0, dp[1][1] = 0;
    int minChoice=-ar[n-1],maxChoice=ar[n-1];
    for (int i = n - 2; i >= 0; i--) {
        dp[0][0] = (1 << 30), dp[1][0] = -(1 << 30);
        dp[1][0]=max(dp[1][0],maxChoice),dp[0][0]=min(dp[0][0],minChoice);
        maxChoice=max(maxChoice,ar[i]+dp[0][0]),minChoice=min(minChoice,-ar[i]+dp[1][0]);
        //  slide
        dp[0][1]=dp[0][0],dp[1][1]=dp[1][0];
    }
    return dp[1][0];
}
};