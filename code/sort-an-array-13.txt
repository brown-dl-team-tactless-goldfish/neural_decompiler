void swap(int *a, int *b){
    int t = *a;
    *a = *b;
    *b = t;
}
void MaxHeapify(int *a,int i,int n){
    int l = (i+1)*2-1;
    int r = (i+1)*2;
    int largest=i;
    if (l<n){
        largest =(a[l]>a[i])?l: i;
    }
    if(r<n){
        if(a[r]>a[largest]){
            largest = r;
        }
    }
    if (largest!=i)
    {
        swap(&a[i],&a[largest]);
        MaxHeapify(a,largest,n);
    }
}
int* sortArray(int* a, int numsSize, int* returnSize){
    for(int i=((numsSize+1)/2)-1;i>=0;i--){
        MaxHeapify(a,i,numsSize);
    }
    for(int i=0; i<numsSize; i++){
        swap(&a[0],&a[numsSize-i-1]); 
        MaxHeapify(a,0,numsSize-i-1);
    }

    *returnSize = numsSize;
    return a;
}
