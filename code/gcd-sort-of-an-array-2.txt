vector<int> parent;

vector<int> factor(int n)
{
    vector<int> v;
    
    for(int i=2; i<= sqrt(n); i++)
    {
        if(n%i == 0)
        {
            v.push_back(i);
            v.push_back(n/i);
        }
    }
    
    return v;
}

int find(int x)
{
    if(parent[x] == x)
    {
        return x;
    }
    
    return parent[x] = find(parent[x]);
}

bool gcdSort(vector<int>& nums)
{
    int maxi = *max_element(nums.begin(), nums.end());
    
    parent.resize(maxi+1, 0);
    
    for(int i=0; i<maxi+1; i++)
    {
        parent[i] = i;
    }
    
    vector<int> temp(nums.begin(), nums.end());
    
    for(int i=0; i<nums.size(); i++)
    {
        for(auto &it: factor(nums[i]))
        {
            int x = find(nums[i]);
            
            int y = find(it);
            
            if(x != y)
            {
                parent[x] = y;
            }
        }
    }
    
    sort(temp.begin(),temp.end());
    
    for(int i=0; i<temp.size(); i++)
    {
        int a = find(temp[i]);
        int b = find(nums[i]);
        
        if(a != b)
        {
            return false;
        }
        
    }
    
    return true;
    
}