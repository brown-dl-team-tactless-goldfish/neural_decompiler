class Solution {
public:
    
    bool isPalindrome(string s){
        if(s.size() == 1) return true;
        string tmp = s;
        reverse(tmp.begin(),tmp.end());
        return tmp == s;
    }
    
    int maxProduct(string s) {
           int n = s.size();
           map<int,int> mp;
           for(int mask=1; mask < (1<<n); mask++){
                string subseq;
                for(int i=0; i<n; i++){
                    if((mask & 1<<i))
                        subseq += s[i];
                }
                
                 if(isPalindrome(subseq)){
                     mp[mask] = subseq.size();
                 }
           }
           
            int ans = INT_MIN;
         
         for(auto it1 = mp.begin(); it1 != mp.end(); it1++){
             for(auto it2 = mp.begin(); it2 != mp.end(); it2++){
                 if( (it1->first & it2->first) == 0){
                     ans = max(ans, it1->second * it2->second);
                 }
             }
         }
        
          return ans;
        
    }
};