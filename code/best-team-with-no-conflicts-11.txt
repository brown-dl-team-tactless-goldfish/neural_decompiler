    int bestTeamScore(vector<int>& scores, vector<int>& ages) {
        int n = scores.size();
        // [1] sort
        vector<int> indice(n, 0);
        for (int i = 0; i < n; i++) indice[i] = i;
        auto cmp = [&] (const int a, const int b) {
            if (ages[a] > ages[b]) return false;
            else if (ages[a] == ages[b] && scores[a] > scores[b]) return false;
            return true;
        };
        sort(indice.begin(), indice.end(), cmp);
        
        // [2] maximum sum increasing subsequence
        vector<int> dp(n, 0);
        int res = 0;
        for (int i = 0; i < n; i++) {
            dp[i] = scores[indice[i]];
            for (int j = 0; j < i; j++) {
                if (scores[indice[j]] <= scores[indice[i]])
                    dp[i] = max(dp[i], dp[j] + scores[indice[i]]);
            }
            res = max(res, dp[i]);
        }
        return res;
    }