bool backtrack(int idx, int *ms, int size, int *sides, int len) {
    if(idx == size) return true; 
    
    for(int i = 0; i < 4; i++) {
        if(sides[i] + ms[idx] <= len) {         
            sides[i] += ms[idx];                
            if(backtrack(idx + 1, ms, size, sides, len))
                return true;
            
            sides[i] -= ms[idx];
        }
    }
    return false;
}

int cmp(const void *a, const void *b) {
    return *(int *)b - *(int *)a;
}

bool makesquare(int* matchsticks, int matchsticksSize){
    int perimeter = 0;
    for(int i = 0; i < matchsticksSize; i++)
        perimeter += matchsticks[i];
    
    int len = perimeter / 4;  
    int *sides = calloc(sizeof(int), 4);
    if(len * 4 != perimeter) return false;
    
    qsort(matchsticks, matchsticksSize, sizeof(int), cmp);
    
    return backtrack(0, matchsticks, matchsticksSize, sides, len);
}