class TextEditor {
public:
    TextEditor() {
        s.push_back('#');
        cp = s.begin();
    }
    
    void addText(string text) {
        for (char c : text)
        {
            s.insert(next(cp), c);
            cp ++ ;
        }
    }
    
    int deleteText(int k) {
        int ans = 0;
        auto sb = s.begin();
        while (cp != sb && k -- )
        {
            s.erase(cp--);
            ans ++ ;
        }
        return ans;
    }
    
    string cursorLeft(int k) {
        while (cp != s.begin() && k -- )
            cp -- ;
        string ans = "";
        auto it = cp;
        for (int i = 0; it != s.begin() && i < 10; it -- , i ++)
            ans.push_back(*it);
        reverse(ans.begin(), ans.end());
        return ans;
    }
    
    string cursorRight(int k) {
        while (cp != prev(s.end()) && k -- )
            cp ++ ;
        string ans = "";
        auto it = cp;
        for (int i = 0; it != s.begin() && i < 10; it -- , i ++)
            ans.push_back(*it);
        reverse(ans.begin(), ans.end());
        return ans;
    }
    list<char> s;
    list<char>::iterator cp;
    
};

/**
 * Your TextEditor object will be instantiated and called as such:
 * TextEditor* obj = new TextEditor();
 * obj->addText(text);
 * int param_2 = obj->deleteText(k);
 * string param_3 = obj->cursorLeft(k);
 * string param_4 = obj->cursorRight(k);
 */