class Encrypter {
public:
    string charmap[26];
    unordered_map<string,int> decrypts;
    
    Encrypter(vector<char>& keys, vector<string>& values, vector<string>& words) {
        decrypts.clear();
        for(int i=0;i<26;i++){
            charmap[i] = "";
        }
        
        for(int i=0;i<keys.size();i++){
            charmap[keys[i]-'a'] = values[i];
        }
        
        for(auto word : words){
            string ans =encrypt(word);
            if(ans.length()>0)
                decrypts[ans]++;
        }
    }
    
    string encrypt(string word1) {
        string ans = "";
        for(auto c : word1){
            if(charmap[c-'a'].length()>0){
                ans+=charmap[c-'a'];
            }else return "";
        }
        return ans;
    }
    
    int decrypt(string word2) {
		if(decrypts.find(word2)==decrypts.end())return 0;
        return decrypts[word2];
    }
};

/**
 * Your Encrypter object will be instantiated and called as such:
 * Encrypter* obj = new Encrypter(keys, values, dictionary);
 * string param_1 = obj->encrypt(word1);
 * int param_2 = obj->decrypt(word2);
 */