/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */
int dfs(struct TreeNode* root) {
	if (NULL == root) return 0;
	return root->val + dfs(root->right) + dfs(root->left);
}

// return the sum of the tree root
int product(struct TreeNode *root, unsigned long long *max, int sum) {
	if (max == NULL || root == NULL) return 0;

    // local_sum is the sum of ths tree rooted by *root
    int local_sum = root->val;
	local_sum += product(root->left, max, sum);
	local_sum += product(root->right, max, sum);
    
    // another_sum will be the sum of other nodes not in this tree.
    int another_sum = sum - local_sum;
    unsigned long long product = (unsigned long long) local_sum * (unsigned long long) another_sum;
    if (product > *max) *max = product;
    return local_sum;
}


int maxProduct(struct TreeNode* root){
	if (NULL == root) return NULL;
	unsigned long long max = 0;
    int sum = dfs(root);
	product(root, &max, sum);
	return max % (1000000007);
}