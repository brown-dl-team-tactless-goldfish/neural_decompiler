class Solution {
public:
    int maxConsecutive(int bottom, int top, vector<int>& special) {
        sort(special.begin() , special.end()); 
        int n = special.size(); 
        int ans = 0 ;
        ans = max(ans , max(special[0] - bottom , top - special[n-1])); //why not -1? because you include the top/bottom floor if it's not in the special array 
        for(int i=1;i<n;i++){
            ans = max(ans , special[i]-special[i-1]-1); //no floor in special can be included hence the -1 
        }
        return ans; 
    }
};
