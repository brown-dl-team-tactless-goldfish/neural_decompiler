int backtrack(int src, int *nums, int size);
int memo[2501];
int lengthOfLIS(int* nums, int numsSize){
    
    int i;
    int max=0;
    int temp;
    memset(memo,0,sizeof(memo));
    for (i=0; i < numsSize; i++)
    {
        temp = backtrack(i,nums,numsSize);
        if (temp > max)
            max = temp;
    }
    return max;
    
}

int backtrack(int src, int *nums, int size)
{
    
    int i;
    int max=0;
    int temp;
    if (src+1 > size-1)
    {
        return memo[src]=1;
    }
    if (memo[src]!=0)
        return memo[src];
    
    for (i=src+1; i < size; i++)
    {
        if (nums[src] < nums[i])
        {
            temp=backtrack(i,nums,size);
            if (temp > max)
            {
                max=temp;
            }
        }
        
    }
    return memo[src]=max+1;
}