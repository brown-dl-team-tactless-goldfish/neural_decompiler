class Solution {
public:
    unordered_map<int, int>mp;
    void precompute(){
        mp[1] = 0;
        mp[2] = 1;
        mp[3] = 7;
    }
    
    // this is the function which uses memoization.
    int solve(int n){
        if(mp.find(n) == mp.end()){
            if(!(n&1)){
                mp[n] = solve(n/2)+1;
            }else{
                // okay so we need to solve for the value 3*x + 1;
                mp[n] = solve(3*n+1) + 1;
            }
        }
        return mp[n];
    }
    int getKth(int lo, int hi, int k) {
        precompute();
        vector<pair<int, int>>arr(hi-lo+1);
        for(int i = 0; i<(int)arr.size(); i++){
            arr[i]  = {solve(i+lo), i+lo};
        }
        sort(arr.begin(), arr.end());
        return arr[k-1].second;
    }
};