/**
 * Return an array of arrays of size *returnSize.
 * The sizes of the arrays are returned as *columnSizes array.
 * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().
 */
int** allPathsSourceTarget(int** graph, int graphRowSize, int *graphColSizes, int** columnSizes, int* returnSize) {
    *returnSize=0;
    int **retArray=(int**)malloc(7000*sizeof(int*));
    columnSizes[0]=(int*)calloc(7000,sizeof(int));
    retArray[0]=(int*)calloc(16,sizeof(int));
    int *count=(int*)calloc(7000,sizeof(int));
    retArray[(*returnSize)++][count[0]++]=0;
    
    for(int i=0;i<(*returnSize);i++){
        while(graphColSizes[retArray[i][count[i]-1]]!=0){
            retArray[i][count[i]]=graph[retArray[i][count[i]-1]][0];
            
            for(int j=1;j<graphColSizes[retArray[i][count[i]-1]]&&count[i]!=0;j++){
                retArray[(*returnSize)]=(int*)calloc(16,sizeof(int));
                for(int k=0;k<count[i];k++){
                    retArray[(*returnSize)][k]=retArray[i][k];
                    count[*returnSize]=k+1;
                }
                retArray[(*returnSize)][count[*returnSize]++]=graph[retArray[i][count[i]-1]][j];
                (*returnSize)++;
            }
            count[i]++;
        }
        columnSizes[0][i]=count[i];
    }
    return retArray;
}