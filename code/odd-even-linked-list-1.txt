/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */


struct ListNode* oddEvenList(struct ListNode* head){
struct ListNode* tail;
struct ListNode* tail_end;
struct ListNode* head_end;
if (head==NULL) return NULL;
if (head->next == NULL) return head;
tail = head->next;
tail_end = tail;
head_end = head;
while ((head_end->next != NULL) && (head_end->next->next != NULL)) {
    head_end->next = head_end->next->next;
    head_end = head_end->next;
    if (tail_end->next != NULL)
      if (tail_end->next->next != NULL) {
          tail_end->next = tail_end->next->next;
          tail_end = tail_end->next;
      } else tail_end->next = NULL;
}
head_end->next = tail;
return head;
}