int bestClosingTime(const char * const customers){
    const int customersLen = strlen(customers);
    
    int sumOfY = 0;
    for (int i = 0; i < customersLen; i += 1){
        if ('Y' == customers[i]){
            sumOfY += 1;
        }
    }
    
    struct {
        int closeHour;
        int penalty;
    } minPenalty = {
        .closeHour = 0,
        .penalty = sumOfY
    };
    
    int prefixSumOfN = 0, prefixSumOfY = 0;
    for (int curCloseHour = 1; curCloseHour <= customersLen; curCloseHour += 1){
        switch (customers[curCloseHour - 1]){
        case 'N':
            prefixSumOfN += 1;
         
            break;
        case 'Y':
            prefixSumOfY += 1;
           
            break;
        }
        
        const int curPenalty = prefixSumOfN + (sumOfY - prefixSumOfY);
        
        if (curPenalty < minPenalty.penalty){
            minPenalty.closeHour = curCloseHour;
            minPenalty.penalty = curPenalty;
        }
    }
    
    return minPenalty.closeHour;
}