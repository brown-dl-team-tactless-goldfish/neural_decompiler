typedef struct {
  int arr[100000];
  int total, idx;
} BSTIterator;


void travel(struct TreeNode* root, BSTIterator* obj){
  if(root == NULL) return;
  travel(root->left, obj);
  obj->arr[obj->total++] = root->val;
  travel(root->right, obj);
}

BSTIterator* bSTIteratorCreate(struct TreeNode* root) {
  BSTIterator* temp = (BSTIterator*)malloc(sizeof(BSTIterator));
  temp->total = 0;
  temp->idx = 0;
  travel(root, temp);
  return temp;
}

int bSTIteratorNext(BSTIterator* obj) {
  obj->idx++;
  return obj->arr[obj->idx - 1];
}

bool bSTIteratorHasNext(BSTIterator* obj) {
  return obj->idx < obj->total;
}

void bSTIteratorFree(BSTIterator* obj) {
  free(obj);
}