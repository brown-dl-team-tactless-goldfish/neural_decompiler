class Solution {
public:
    TreeNode* recoverFromPreorder(string traversal) {
        auto l = traversal.begin(), r = traversal.end();
        
        function<TreeNode*(int)> recover = [&](int lv) {
            auto i = l;
            while (i < r && *i == '-') ++i;
            if (i - l != lv) {
                return static_cast<TreeNode*>(nullptr);
            }
        
            l = i;
            TreeNode* root = new TreeNode(0);
            while (l < r && isdigit(*l)) {
                root->val = root->val * 10 + *l - '0';
                ++l;
            }

            root->left  = recover(lv + 1);
            root->right = recover(lv + 1);
            return root;
        };
        
        return recover(0);
    }
};