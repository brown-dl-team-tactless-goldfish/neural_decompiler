int meet(vector<string>& D,vector<int>& f,const string& s){
        int res=0;
        int n=s.size();
        bool match=true;
        for(int i=0;i<n;++i){
            int d=s[i]-'0';
            int c=0;
            bool has=false;
            for(string si:D){
                int i=stoi(si);
                if(i<d)
                    c++;
                else{
                    if(i==d)
                        has=true;
                    break;
                }
            }
            res+=c*f[n-i-1];
            if(!has){
                match=false;
                break;
            }
        }
        if(match)
            res++;
        return res;
    }
public:
    int atMostNGivenDigitSet(vector<string>& D, int N) {
        string s=to_string(N);
        int n=s.size();
        vector<int> f(n,1);
        int m=D.size();
        int res=0;
        for(int i=1;i<n;++i){
            f[i]=f[i-1]*m;
            res+=f[i];
        }
        res+=meet(D,f,s);
        return res;
    }

// do upvote if you find it helpful