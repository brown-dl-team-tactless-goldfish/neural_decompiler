class Solution {
public:
    int unhappyFriends(int n, vector<vector<int>>& p,vector<vector<int>>& pairs)
    {
         vector<vector<int> >map(n+1,vector<int>(n+1,0));
         for(int i=0;i<p.size();i++)
         {
             for(int j=0;j<p[i].size();j++)
             {
                 map[i][p[i][j]]=n-j;
             }
         }
         
        int size=pairs.size();
        for(int i=0;i<size;i++)
        {
            pairs.push_back({pairs[i][1],pairs[i][0]});
        }
        
        vector<int>happy(n+1,1);
        
        for(int i=0;i<pairs.size()-1;i++)
        {
            for(int j=i+1;j<pairs.size();j++)
            {
                      
                int x=pairs[i][0];
                int y=pairs[i][1];
                int u=pairs[j][0];
                int v=pairs[j][1];
            
                if(map[x][u]>map[x][y]&&map[u][x]>map[u][v])
                {
                    happy[x]=0;
                    happy[u]=0;
                }
            }
        }
        int count=0;
        for(int i=0;i<=n;i++)
        {
            if(happy[i]==0)
            {
                count++;
            }
        }
        return count;
        
        
    }
};