class Solution {
public:
    vector<vector<int>> dp;
    Solution(){
        dp.push_back({0,1});
        for(int n = 2;n<=16;n++){
            int h = 1 << (n-1);
            dp.push_back({});
            for(int i = dp[n-2].size()-1;i>=0;i--){
                dp[n-1].push_back(h + dp[n-2][i]);
            }
            for(int i = 0;i<dp[n-2].size();i++){
                dp[n-1].push_back(dp[n-2][i]);
            }
        }
        
    }
    vector<int> circularPermutation(int n, int start) {
        vector<int> ret;
        int s = 0;
        while(dp[n-1][s]!=start){
            s++;
        }
        for(int i = s;i<dp[n-1].size();i++){
            ret.push_back(dp[n-1][i]);
        }
        for(int i = 0;i<s;i++){
            ret.push_back(dp[n-1][i]);
        }
        return ret;
    }
};