class Solution {
public:
    int find(vector<vector<int>>&nums,int val,int l,int r)
    {
        int index=-1;
        while(l<=r)
        {
            int mid=(l+r)/2;
            if(nums[mid][1]<val)
            {
                index=mid;
                l=mid+1;
            }
            else
            {
                r=mid-1;
            }
        }
        return index;
    }
    int maxValue(vector<vector<int>>& nums, int K) 
    {
        int n=nums.size();
        int ans=0;
        sort(nums.begin(),nums.end(),[&](auto &a,auto &b){return a[1]<b[1];});
        vector<vector<int>>dp(n+1,vector<int>(K+1,0));
        ans=dp[0][1]=nums[0][2];
        for(int i=1;i<n;i++)
        {
            for(int k=1;k<=min(i+1,K);k++)
            {
                dp[i][k]=max(dp[i-1][k],nums[i][2]);
                int j=find(nums,nums[i][0],0,i-1);
                if(j!=-1)
                {
                    dp[i][k]=max(dp[i][k],nums[i][2]+dp[j][k-1]);
                }
                ans=max(ans,dp[i][k]);
            }
        }
        return ans;
    }
};