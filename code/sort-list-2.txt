class Solution {
public:
    ListNode* GetMid(ListNode* head)
    {
       ListNode* slow = head;
        ListNode* fast = head->next;
        
        while(fast!= NULL && fast->next != NULL)
        {
            slow = slow->next;
            fast = fast->next->next;
        }
        return slow;
    }
    
    ListNode* mergeListLL(ListNode* a, ListNode* b){
        if(a == NULL)
            return b;
        if(b == NULL)
            return a;
        ListNode * c;
        
        if(a->val < b->val)
        {
            c = a;
            c->next = mergeListLL(a->next,b);
        }
        else
        {
            c = b;
            c->next = mergeListLL(a,b->next);
        }
        
        return c;
        
    }
    ListNode* sortList(ListNode* head) {
        
        if(head == NULL || head->next == NULL)
            return head;
        
        ListNode* mid = GetMid(head);
        ListNode* a = head;
        ListNode * b = mid->next;
        mid->next = NULL;
        
        a = sortList(a);
        b = sortList(b);
        
        return mergeListLL(a,b);
    }
};