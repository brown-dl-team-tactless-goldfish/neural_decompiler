int getLucky(char * s, int k){

    char c = "";
    int n = strlen(s);
    int count = 0, aux = 0;
    
    // First transformation done here.
    for(int i = 0; i < n; i++){
        c = s[i];
        aux = c - 'a' + 1; // We store the position in aux. Because c - 'a' gives the position
        // starting on 0 (a = 0, b = 1, c = 2...), and we want the real position, so we +1
        
        if(aux > 9){ // If aux greater than 10, we split it in two digits and we sum the first
            count += aux % 10;
            aux /= 10;  
        }
        count += aux; // We always sum, the total digit or the second digit if aux > 9
    } 
    
    for(int i = 0; i < k-1; i++){ // We loop as many times as transformations needed.
        // Because we made in the last loop 1st transformation, we loop k-1 times.
        aux = count;
        count = 0;
        while(aux > 0){ // We divide the num in the sum of its digits every time we iterate through the loop
            count += aux % 10;
            aux /= 10;
        }
    }
    
    return count;
}