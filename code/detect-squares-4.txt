class DetectSquares {
public:
    vector<vector<int>> nums;
    int mp[2001][2001] = {0};
    DetectSquares() {
        nums = vector<vector<int>>(1001);
    }
    
    void add(vector<int> point) {
        nums[point[1]].push_back(point[0]);
        mp[point[0]][point[1]]++;
    }
    
    int count(vector<int> p) {
        int re = 0, i = p[0], j = p[1];  // point1 {i,j}
        for(int k = 0; k<nums[j].size();++k){
            int r = nums[j][k];  // point2 {r,j}
            int d = abs(r-i);
            if(d==0) continue;
            int a = i, b = j+d;   // possible point3 {a,b}
            int x = r, y = j+d;   // possible point4 {x,y}
            if(a>=0 && b>=0 && x>=0 && y>=0) re+= mp[a][b]*mp[r][y];
            a = i, b = j-d;    // possible point3 {a,b}
            x = r, y = j-d;   // possible point4 {x,y}
            if(a>=0 && b>=0 && x>=0 && y>=0) re+= mp[a][b]*mp[x][y];
        }
        return re;
    }
};