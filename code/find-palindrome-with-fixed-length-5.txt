    vector<long long> kthPalindrome(vector<int>& queries, int intLength) {
        bool isOdd = intLength % 2;
        int len = intLength / 2 + isOdd;
        int start = pow(10, len-1);
        int maxN = pow(10, len) - start;
        
        
        vector<long long> res;
        for(auto x:queries){
            if(x > maxN) {
                res.push_back(-1);
                continue;
            }
            int y = start + x-1;
            auto s = to_string(y);
            auto t = s;
            reverse(t.begin(), t.end());
            if(isOdd) s.pop_back();
            auto z = stoll(s+t);
            res.push_back(z);
        }
        return res;
    }