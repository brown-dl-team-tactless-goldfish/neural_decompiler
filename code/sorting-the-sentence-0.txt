typedef struct data{
    int location;
    int begin;
    int end;
}data;

int cmpfunc(const void* a, const void* b){
    data A = *(data*)a;
    data B = *(data*)b;
    return A.location - B.location;
}
char * sortSentence(char * s){
    int n = strlen(s);
    data* table = malloc(10 * sizeof(data));

    int size_t = 0;
    int begin = 0;
    for(int i = 0; i < n; i++){
        if(s[i] >= '1' && s[i] <='9'){
            table[size_t].location = s[i] - '0';
            table[size_t].begin = begin;
            table[size_t].end = i-1;
            begin = i + 2;
            size_t++;
        }    
    }
    qsort(table, size_t, sizeof(data), cmpfunc);
    char* ans = malloc(n * sizeof(char));
    int a_idx = 0;
    for(int i = 0; i < size_t; i++){
        int len = table[i].end - table[i].begin + 1;
        strncpy(&ans[a_idx], &s[table[i].begin], len);
        if(i < size_t-1)
            ans[a_idx + len] = ' ';
        else
            ans[a_idx + len] = '\0';
        a_idx += (len + 1);
    }
    return ans;
}