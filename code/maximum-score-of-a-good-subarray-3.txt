using LL = long long ;
class Solution {
public:
    int maximumScore(vector<int>& nums, int k) {
        int ret = 0 ;
        int n = nums.size() ;
        int left = k -1, right = k + 1 ;
        LL sum = nums[k] ;
        int minVal = nums[k] ;
        while(left >= 0 || right < n){
            if(left >= 0 && nums[left] >= minVal){
                sum += nums[left] ;
                left-- ;
            }
            else if(right < n && nums[right] >= minVal){
                sum += nums[right] ;
                right++ ;
            }
            else{
                ret = max(ret, minVal*(right - left - 1)) ;
                if(left >= 0 && right < n)
                    minVal = max(nums[left], nums[right]) ;
                else if(left >= 0)
                    minVal = nums[left] ;
                else
                    minVal = nums[right] ;
            }
        }
        ret = max(ret, minVal * (right -left -1)) ;
        return ret ;
    }
};