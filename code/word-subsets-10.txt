class Solution {
    unordered_map<char, int> count(string s) {
        unordered_map<char, int> m;
        for(char c : s) m[c]++;
        return m;
    }
    
public:
    vector<string> wordSubsets(vector<string>& words1, vector<string>& words2) {
        unordered_map<char, int> mxfr;
        
        for(string s : words2) {
            unordered_map<char, int> fr = count(s);
            for(char c : s) mxfr[c] = max(mxfr[c], fr[c]);
        }
        
        vector<string> ans;
        for(string s : words1) {
            unordered_map<char, int> temp = mxfr;
            for(char c : s) {
                if(temp.find(c) == temp.end()) continue;
                temp[c]--;
                if(!temp[c]) temp.erase(c);
            }
            if(!temp.size()) ans.push_back(s);
        }
        
        return ans;
    }
};