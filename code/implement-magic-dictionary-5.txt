class MagicDictionary {
    unordered_set<string>words;
public:
    /** Initialize your data structure here. */
    MagicDictionary() {
        
    }
    
    /** Build a dictionary through a list of words */
    void buildDict(vector<string> dict) {
        for (int i = 0; i < dict.size(); i++)
            words.insert(dict[i]);
    }
    
    /** Returns if there is any word in the trie that equals to the given word after modifying exactly one character */
    bool search(string word) {
        for (int i = 0; i < word.size(); i++) {
            int c = word[i];
            for (char ch = 'a'; ch < 'z'; ch++) {
                if (ch == c) continue;
                word[i] = ch;
                if (words.find(word) != words.end()) return true;
            }
            word[i] = c;
        }
        
        return false;
    }
};