typedef long long ll;
int dp[1001][2];
int hist[1001][26];
const int mod = 1e9+7;

static const auto init = []{
    cin.tie(nullptr);
    ios::sync_with_stdio(false);
    return false;
}();

class Solution {
public:
    int numWays(vector<string>& words, string target) {
        int n = words[0].size(), k = target.size();
        memset(hist, 0, sizeof(hist));
        memset(dp, 0, sizeof(dp));
        dp[0][0] = 1;
        for (auto &s : words) {
            for (int i = 0; i < n; ++i) { ++hist[i][s[i]-'a']; }
        }
        for (int j = 1; j <= k; ++j) {
            long long prefsum = 0;
            for (int i = j; i <= n; ++i) {
                prefsum = (prefsum + dp[i-1][(j-1)%2]) % mod;
                if (hist[i-1][target[j-1]-'a'] == 0) {dp[i][j%2] = 0; continue;}
                dp[i][j%2] = (prefsum*hist[i-1][target[j-1]-'a']) % mod;
            }
        }

        int res = 0;
        for (int i = k; i <= n; ++i) {
            res = (res + dp[i][k%2]) % mod;
        }
        return res;


    }
};