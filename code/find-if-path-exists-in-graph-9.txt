class Solution {
public:
    bool validPath(int n, vector<vector<int>>& edges, int source, int destination) {
        unordered_map<int, vector<int>>mp;
        for (int i = 0; i < edges.size(); i++) {
            mp[edges[i][0]].push_back(edges[i][1]);
            mp[edges[i][1]].push_back(edges[i][0]);
        }
        
        vector<int>visited(n, false);
        queue<int>q;
        q.push(source);
        
        while (!q.empty()) {
            int size = q.size();
            
            for (int i = 0; i < size; i++) {
                int node = q.front();
                q.pop();
                
                if (node == destination)
                    return true;
  
                visited[node] = true;
                for (auto s: mp[node]) {
                    if (!visited[s])
                        q.push(s);        
                }
            }
        }
        
        return false;
    }