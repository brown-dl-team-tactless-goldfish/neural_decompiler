int lis(vector<int>nums)
{
    int n=nums.size();
    vector<int>dp(n+1,INT_MAX);
    dp[0]=INT_MIN;
    for(int i=0;i<n;i++)
    {
        int idx=upper_bound(dp.begin(),dp.end(),nums[i])-dp.begin();
        if(dp[idx]>nums[i]&&dp[idx-1]<=nums[i])
        {
            dp[idx]=nums[i];
        }
    }
    int res=0;
    for(int i=n;i>=0;i--)
    {
        if(dp[i]!=INT_MAX)
        {
            res=i;
            break;
        }
    }
    return res;
}
int kIncreasing(vector<int>& arr, int k) {
    int ans=0;
    for(int i=0;i<k;i++)
    {
        vector<int>nums;
        for(int j=i;j<arr.size();j+=k)
        {
            nums.push_back(arr[j]);
        }
        ans+=nums.size()-lis(nums);
    
        
    }
    return ans;
}