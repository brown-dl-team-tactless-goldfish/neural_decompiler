mergesort(horizontalCuts,0,horizontalCutsSize-1);
mergesort(verticalCuts,0,verticalCutsSize-1);
long long int maxh=horizontalCuts[0],maxw=verticalCuts[0];
for(int i=1;i<horizontalCutsSize;i++)
{
    if((long long int)(horizontalCuts[i]-horizontalCuts[i-1])>maxh)
    {
        maxh=(long long int)(horizontalCuts[i]-horizontalCuts[i-1]);
    }
}
if((long long int)(h-horizontalCuts[horizontalCutsSize-1])>maxh)
{
    maxh=(long long int)(h-horizontalCuts[horizontalCutsSize-1]);
}
for(int i=1;i<verticalCutsSize;i++)
{
    if((long long int)(verticalCuts[i]-verticalCuts[i-1])>maxw)
    {
        maxw=(long long int)(verticalCuts[i]-verticalCuts[i-1]);
    }
}
if((long long int)(w-verticalCuts[verticalCutsSize-1])>maxw)
{
    maxw=(long long int)(w-verticalCuts[verticalCutsSize-1]);
}
return (maxh*maxw)%1000000007;