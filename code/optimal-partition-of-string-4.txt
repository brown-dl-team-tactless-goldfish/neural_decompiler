int partitionString(char * s){
    int* char_table = malloc(sizeof(int)*26);
    for(int ptr=0; ptr < 26; ptr++){char_table[ptr]= -1;}
    int index_previous = 0;
    int return_total_strings =0;
    for(int ptr=0; ptr < strlen(s); ptr++){
        //condtion to check duplicacy and first time entry
        if(char_table[s[ptr] - 'a'] == -1 || char_table[s[ptr] - 'a'] < index_previous){}
        else{
             return_total_strings++;
             index_previous =ptr;
        }
        //we will popluate with the current index 
        char_table[s[ptr] - 'a'] = ptr;
    } 
    free(char_table);
    //since the count satrts at end of the string last sting will be left out
    //hence we increment it by 1 before returning it
    return return_total_strings+1;
}