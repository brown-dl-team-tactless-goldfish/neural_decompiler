bool validateBinaryTreeNodes(int n, vector<int>& leftChild, vector<int>& rightChild) {
    
    unordered_map<int, bool>m;
    
    for (int i = 0; i < n; i++) {
        if (leftChild[i] != -1) {
            if (m.find(leftChild[i]) != m.end())
                return false;
            m[leftChild[i]] = true;
        }
    }
    
    for (int i = 0; i < n; i++) {
        if (rightChild[i] != -1) {
            if (m.find(rightChild[i]) != m.end())
                return false;
            m[rightChild[i]] = true;
        }
    }
    
    int root = 0;
    for (int i = 0; i < n; i++)
        root ^= i;
    for (auto it = m.begin(); it != m.end(); it++)
        root = root ^ it->first;
    
    if (n != 1 && leftChild[root] == -1 && rightChild[root] == -1)
        return false;
    
    if (m.size() != n-1)
        return false;
    
    return true;
}