class Solution {
public:
    int maxPalindromes(string s, int k) {
        int n = s.size() ;
        if(n == 1)
            return 1 ;
        vector<vector<bool>>isPalin(n, vector<bool>(n)) ;
        //len = 1
        for(int i = 0; i < n; i++)
            isPalin[i][i] = true ;
        //len = 2 
        for(int i = 0; i < n-1; i++){
            if(s[i] == s[i+1])
                isPalin[i][i+1] = true ;
        }
        for(int len = 3; len <= n; len++){
            for(int i = 0; i <= n-len; i++){
                int j = i+len-1 ;
                if(s[i] == s[j])
                    isPalin[i][j] = isPalin[i+1][j-1] ;
            }
        }
        
        vector<int>dp(n+1) ;
        for(int i = k-1; i < n; i++){
            dp[i+1] = dp[i] ;
            for(int j = i-k+1; j >= 0; j--){
                if(isPalin[j][i]){
                    dp[i+1] = max(dp[i+1], dp[j] + 1) ;
                    break ;
                }
            }
        }
        return dp[n] ;
    }
};