int maxResult (int* nums, int numsSize, int k) {
    int i, head, tail;
    int queue[100001] = {0};
    
	// init queue by nums[0] index "0"
    queue[0] = 0;
    head = 0;
    tail = 1;
    
    for (i = 1; i < numsSize; i++) {
		// move head if exceeding "k", at most once, use "if" instead of "while"
        if (i - queue[head] > k) {
            head++;
        }
		
		// add monotonic queue head (with max value) to nums[i]
        nums[i] += nums[queue[head]];
        
		// find the corresponding place to add new nums[i] as tail
        while (tail > head && nums[i] >= nums[queue[tail-1]]) {
            tail--;
        }
        queue[tail++] = i;
    }
    
    return nums[numsSize-1];
}