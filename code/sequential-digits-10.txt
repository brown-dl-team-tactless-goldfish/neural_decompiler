public class Solution 
{
    public IList<int> SequentialDigits(int low, int high) 
    {
        var result = new List<int>();
        var allSeqNumbers = GetSeqNumbers(10);
        foreach(var num in allSeqNumbers)
            if(num >= low && num <= high)
                result.Add(num);
        
        result.Sort();
        return result;
        
    }
    
    List<int> GetSeqNumbers(int digits)
    {
        HashSet<int> result = new HashSet<int>();
        if(digits == 1)
        {
            for(int i = 0; i < 10; i++)
                result.Add(i);
            return result.ToList();
        }
        
        var rest = GetSeqNumbers(digits - 1);
        foreach(var num in rest)
        {
            result.Add(num);
            if(num % 10 < 9)
                result.Add(num * 10 + (num % 10) + 1);
        }
        
        return result.ToList();
    }
}