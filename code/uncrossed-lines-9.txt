class Solution {
    int n,m;
    vector<int> a,b;
    int dp[505][505];
    
public:
    int maxUncrossedLines(vector<int>& A, vector<int>& B) {
        n = A.size();
        m = B.size();
        a = A;
        b = B;
        memset(dp,-1,sizeof dp);
        return solve(0,0);
    }
    
    int solve(int aIdx, int bIdx) {
        if(aIdx >= n || bIdx >= m) return 0;        
        int ans = 0;
        int &res = dp[aIdx][bIdx];
        if(res != -1) return res;
        
        if(a[aIdx] == b[bIdx]) {
            ans = max(ans, 1 + solve(aIdx+1, bIdx+1));
        }
        ans = max(ans,solve(aIdx+1, bIdx));
        ans = max(ans,solve(aIdx, bIdx + 1));

        return res = ans;
    }
};