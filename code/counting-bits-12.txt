/**
 * Return an array of size *returnSize.
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* countBits(int num, int* returnSize) {
    *returnSize=num+1;
    int* ret=(int*)malloc(sizeof(int)*(num+1));
    ret[0]=0;
    int i=1;
    int count=1;
    while(i<=num){
        for(int j=0;j<count;j++){
            ret[i++]=ret[j]+1;
            if(i>num){return ret;}
        }
        count=i;
    }
    return ret;
    
}
/*int countBitsFunction(int n){
    int ret=0;
    while(n!=0){
        if(n&1==1){ret++;}
        n=n>>1;
    }
    return ret;
}
int* countBits(int num, int* returnSize) {
    int* ret=(int*)malloc(sizeof(int)*(num+1));
    for(int i=0;i<=num;i++){
        ret[i]=countBitsFunction(i);
    }
    * returnSize=num+1;
    return ret;
}*/