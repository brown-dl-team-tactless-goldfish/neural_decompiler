char * entityParser(char * text){
    int rptr = 0;
    int wptr = -1;
    int textLen = strlen(text);
    const char *markers[] = { 
            "&quot;"  , "\"",
            "&apos;"  , "\'",
            "&amp;"   , "&",
            "&gt;"    , ">",
            "&lt;"    , "<",
            "&frasl;" , "/" 
    };  
    
    while (rptr < textLen) {
        if (text[rptr] != '&') {
            text[++wptr] = text[rptr];
            rptr++;
            continue;
        } else {
            int i;
            for (i = 0; i < sizeof(markers)/sizeof(markers[0]); i+=2) {
                int m_len = strlen(markers[i]);
                if ((textLen - rptr - 1) >= ( m_len - 1)) {
                    char temp[8];
                    memset(temp,'\0', 8);
                    memcpy(temp,&text[rptr],sizeof(char)*m_len);
                    if (0 == strcmp(temp,markers[i])) {
                        text[++wptr] = markers[i+1][0];
                        rptr += m_len;
                        break;
                    } 
                } 
            }//end for  
            
            if ( i == sizeof(markers)/sizeof(markers[0])) {
                text[++wptr] = '&';
                rptr += 1;
            }
        }//else
    }
    
    text[++wptr] = '\0';
    
    return text;
}