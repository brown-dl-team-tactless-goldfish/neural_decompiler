class Solution {
public:
    typedef long long int64;
    const int mod = 1e9 + 7;
    int firstDayBeenInAllRooms(vector<int>& nextVisit) {
        int n = nextVisit.size();
        int64 dp[n];
        dp[0] = 0LL;
        for(int i = 1; i < n; i++) {
            // 1. days to get to i - 1 = dp[i - 1]
            // 2. days to get to nextVisit[i - 1] from i - 1 = 1
            // 3. days to get to i - 1 from nextVisit[i - 1] = dp[i - 1] - dp[nextVisit[i - 1]]
            // 4. days to get to i from i - 1 = 1
            dp[i] = dp[i - 1] + 1LL + (dp[i - 1] - dp[nextVisit[i - 1]]) + 1LL + mod;
            dp[i] %= mod;
        }
        return dp[n - 1];
    }
};