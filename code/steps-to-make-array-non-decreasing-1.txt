class Solution {
    struct Pair {
        int num,step;
        Pair(int n) : num(n), step(1) {}
        bool operator <= (const Pair& p) { return num <= p.num || step < p.step; }  // close enough... 
    };
public:
    int totalSteps(vector<int>& nums) {
        int steps=0, nmax=nums.size()?nums[0]:0;
        vector<Pair> save;
        
        for (int i=1; i<nums.size(); i++) {
			if (nmax <= nums[i]) {                  // next non-decreasing value?
                if (save.size()) save.clear();
                nmax = nums[i];
            }
            else {
                Pair p(nums[i]);
                while (save.size() && save.back() <= p) {
                    p.step = max(p.step,save.back().step+1);
                    save.pop_back();
                }
                save.emplace_back(p);
                steps = max(steps,p.step);
            }
        }
        return steps;
    }
};