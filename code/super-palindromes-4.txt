class Solution {
public:
    bool ispalindrome(long long n){
        return  n == reverse(n);
    }
    
    long long reverse(long long n){
        long long rev=0;
        while(n>0){
            rev = (rev*10) + (n%10);
            n/=10;
        }
        return rev;
    }
    
    int superpalindromesInRange(string left, string right) {
        
        long long l = stoll(left);
        long long r = stoll(right);
        int count=0;
        
        //create palindrome in range 1,100000
        
        //even palindrome
        for(int i=1;i<100000;i++){
            string s = to_string(i);
            for(int j=s.size()-1;j>=0;j--){
                s.push_back(s[j]);
            }
            long long n = stoll(s);
            n=n*n;
            //check if n is superpalindrome or not
            if(n>r) break;
            if(n>=l && ispalindrome(n)) count++;
        }
        
        //odd palindrome
        for(int i=1;i<100000;i++){
            string s = to_string(i);
            for(int j=s.size()-2;j>=0;j--){
                s.push_back(s[j]);
            }
            long long n = stoll(s);
            n=n*n;
            //check if n is superpalindrome or not
            if(n>r) break;
            if(n>=l && ispalindrome(n)) count++;
        }
        return count;
    }
};