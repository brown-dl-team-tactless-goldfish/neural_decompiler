bool subtreeHeight(struct TreeNode *root, int *height) {
    if(!root) {     // base case
        *height = 0;
        return true;
    }    
    
    // Find the heights of left and right subtrees in post order way
    int leftHeight = 0, rightHeight = 0;
    if(subtreeHeight(root->left, &leftHeight) && 
       subtreeHeight(root->right, &rightHeight) &&
       abs(leftHeight - rightHeight) <= 1) {
        // set current level height from left and right subtree heights
        *height = fmax(leftHeight, rightHeight) + 1;
        return true;
    }
    return false;
}

bool isBalanced(struct TreeNode* root){
    // tree with null root node
    if( !root ) return true;
    
    // find height of current level using heights of left and 
    // right subtrees as we descend down towards leaf node
    int height = 0;
    return subtreeHeight(root, &height);
}