/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int count(int a,int b)
{
    int counta=0;
    int countb=0;
    while(a>0)
    {
        counta++;
        a=a/10;
    }
    if(b<0)
        {
            countb++;
            b=abs(b);
        }
        while(b>0)
        {
            countb++;
            b=b/10;
        }
    if(counta>countb)
        return counta;
    if(counta==0 && countb ==0)
        return 1;
    return countb;
}
int* findColumnWidth(int** grid, int gridSize, int* gridColSize, int* returnSize)
{
    *returnSize=0;
    int *retarr=(int*)malloc(*gridColSize*(sizeof(int)));
//    printf("%d %d",gridSize,*gridColSize);
    int i,j;
    int pos=0,k=0;
    int neg=0;
    if(*gridColSize==1 && gridSize==1)
    {retarr[0]=count(1,1); 
     *returnSize=1;
     return retarr;}
    for(j=0;j<*gridColSize;j++)
    {
        for(i=0;i<gridSize;i++)
        {
            if(pos<grid[i][j])
                pos=grid[i][j];
            if(neg>grid[i][j])
                neg=grid[i][j];
        }
        retarr[j]=count(pos,neg);
        pos=0;
        neg=0;
    }
    *returnSize=*gridColSize;
    return retarr;
}