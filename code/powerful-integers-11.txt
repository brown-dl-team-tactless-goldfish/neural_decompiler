public class Solution {
    public IList<int> PowerfulIntegers(int x, int y, int bound) {
        var res = new HashSet<int>();

        var val = 0;

        for (var i = 0; val < bound; i++)
        {
            for (var j = 0; val < bound; j++)
            {
                val = (int)(Math.Pow(x, i) + Math.Pow(y, j));

                if(val <= bound) res.Add(val);

                if (y == 1) break;
            }

            if (x == 1) break;

            val = (int)Math.Pow(x, i);
        }

        return res.ToList();
    }
}