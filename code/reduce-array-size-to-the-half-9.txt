#define HASH_SIZE 100001

int minSetSize(int* arr, int arrSize){

    int freqs_table[HASH_SIZE] = {0};
    int freqs_of_freqs[HASH_SIZE] = {0};
    int no_dels = 0;
    int count = 0;
    
    // fill hash table 1 - frequency of each number
    for(size_t i = 0 ; i < arrSize; i++)
    {
        freqs_table[arr[i]]++;
    }
    
    // fill hash table 2 - frequency of each frequency
    for(size_t i = 0 ; i < HASH_SIZE; i++)
    {
        freqs_of_freqs[freqs_table[i]]++;
    }

    
    int i = HASH_SIZE - 1;
    // while we didn't delete enough elements (no_dels)
    while(no_dels < (arrSize/2))
    {
        // check for the max elements we can delete with 1 operation
        if(freqs_of_freqs[i] != 0 && i > 0)
        {
            no_dels += i;
            freqs_of_freqs[i]--;
            count++;
        }
        
        // if there is no set with this frequency decrement index
        if(freqs_of_freqs[i] == 0)
        {
            i--;
        }
        
    }
    
    return count;
}```