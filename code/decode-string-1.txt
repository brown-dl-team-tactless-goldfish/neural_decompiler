void decode(char* s, int* slen, int start, int end, int times) {
    int index = 0, num = times;
    char* tmp = (char*) malloc(((times * (end - start)) + 1) * sizeof(char));
    while (num > 0) {
        strncpy(tmp + index, s + start, end - start);
        index += (end - start);
        num--;
    }
    tmp[index] = '\0';
    memmove(s + start + strlen(tmp), s + end, ((*slen) - end) * sizeof(char));
    strncpy(s + start, tmp, index);
    (*slen) += ((times - 1) * (end - start));
    free(tmp);
}

int findTimes(char* s, int endpos) {
    int idx = 0, num = 0;
    for (int i = endpos; i >= 0; i--) {
        if (s[i] < 48 || s[i] > 57) break;
        num += ((s[i] - '0') * pow(10, idx++));
    }
    return num;
}

char* decodeString(char* s) {
    int slen = strlen(s), top = 0;
    int* arr = (int*) calloc(slen, sizeof(int));
    char* res = (char*) calloc(10000, sizeof(char));
    strcpy(res, s);
    for (int i = 0; i < slen; i++) {
        if (res[i] == '[') {
            arr[top++] = i;
            continue;
        }
        if (res[i] == ']') {
            int start = arr[top - 1] + 1, end = i, times = findTimes(res, start - 2);
            decode(res, &slen, start, end, times);
            top--;
            i += ((times - 1) * (end - start));
        }
    }
    res[slen] = '\0';
    top = 0;
    char* ans = (char*) malloc((slen + 1) * sizeof(char));
    for (int i = 0; i < slen; i++) {
        if (res[i] == ']' || res[i] == '[' || (res[i] >= 48 && res[i] <= 57)) continue;
        ans[top++] = res[i];
    }
    ans[top] = '\0';
    free(arr);
    free(res);
    return ans;
}