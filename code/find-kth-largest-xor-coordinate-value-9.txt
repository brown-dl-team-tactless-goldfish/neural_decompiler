class Solution {
public:
int kthLargestValue(vector<vector<int>>& matrix, int k)
{
	priority_queue<int, vector<int>, greater<int>> q;
	q.push(matrix[0][0]);
	for (int i = 1; i < matrix.size(); i++) {
		matrix[i][0] ^= matrix[i - 1][0];
		q.push(matrix[i][0]);
		if (q.size() > k)
			q.pop();
	}

	for (int i = 1; i < matrix[0].size(); i++)
	{
		matrix[0][i] ^= matrix[0][i - 1];
		q.push(matrix[0][i]);
		if (q.size() > k)
			q.pop();
	}

	for (int i = 1; i < matrix.size(); i++)
	{
		for (int j = 1; j < matrix[i].size(); j++)
		{
			matrix[i][j] ^= (matrix[i - 1][j] ^ matrix[i][j - 1] ^ matrix[i - 1][j - 1]);
			q.push(matrix[i][j]);
			if (q.size() > k)
				q.pop();
		}
	}

	return q.top();
}
};