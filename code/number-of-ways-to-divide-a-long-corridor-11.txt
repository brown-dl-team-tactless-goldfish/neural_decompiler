typedef long long ll;
class Solution {
public:
    ll M = 1e9+7;
    int numberOfWays(string corridor) {
        int seats = 0, n = corridor.size();
		// no of seats in current segment
        int  curr = 0;
        ll ans = 1;
        for(int i=0; i<n; i++){
            if(corridor[i] == 'S') seats++;
			// if seats in curr segment is 2 then we can place a division here
            if(seats == 2) curr++;
			// if seats in curr segment crossed 2
            else if(seats > 2){
				// update ans by multiplying previous divisions
                ans = ans*curr;
                ans %= M;
				// set divisions to zero
                curr = 0;
				// seats to 1
                seats = 1;
            }
        }
		// if in last division we don't have 2 seats, return 0
        if(curr == 0) return 0;
		// else return ans, we don't need to consider the last division as that can only be marked as one
        return ans;
    }
};