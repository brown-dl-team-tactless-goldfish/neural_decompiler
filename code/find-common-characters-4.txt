// return an array counting the common appearance of each letter
int* helper(char ** A, int ASize){
    int* arr = malloc(26 * sizeof(int));
    memset(arr, 0, 26 * sizeof(int));
    if(ASize==0) return arr;
    
    for(int i=0; i<strlen(A[0]); i++){
        arr[A[0][i]-'a']++;
    }
    if(ASize==1) return arr;
    
    int* arr1 = helper(A+1, ASize-1);
    for(int i=0; i<26; i++){
        if(arr[i] > arr1[i]) arr[i] = arr1[i];
    }
    free(arr1);
    return arr;
}

// translate the int array into the required string array
char ** commonChars(char ** A, int ASize, int* returnSize){
    int* arr = helper(A, ASize);
    *returnSize = 0;
    for(int i=0; i<26; i++){
        *returnSize += arr[i];
    }
    char** res = malloc(*returnSize * sizeof(char*));
    int index = 0;
    for(int i=0; i<26; i++){
        for(int j=0; j<arr[i]; j++){
            res[index] = malloc(2 * sizeof(char));
            res[index][0] = 'a' + i;
            res[index++][1] = 0;
            if(index==*returnSize) break;
        }
        if(index==*returnSize) break;
    }
    free(arr);
    return res;
}