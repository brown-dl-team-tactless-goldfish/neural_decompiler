int cmpfunc (const void * a, const void * b)
{
   return ( *(int*)a - *(int*)b );
}

char* largestTimeFromDigits(int* A, int ASize) {
        char *ret=malloc(sizeof(char)*(ASize+2)),index=0;
        qsort(A,ASize,sizeof(int), cmpfunc);
        int big6=0;
        for(int i=0;i<ASize;i++)
            if(A[i]>=6)
                big6++;
    
        for(int i=ASize-1;i>=0;i--)
        {
            if(big6>=2)
            {
                if(A[i]<2)
                {
                    ret[index++]='0'+A[i];
                    A[i]=10;
                    break;
                }
            }
            else if(A[i]<=2)
            {
                ret[index++]='0'+A[i];
                A[i]=10;
                break;
            }
        }
        for(int i=ASize-1;i>=0;i--)
        {
            if(ret[0]=='0'||ret[0]=='1')
            {
                if(A[i]<10)
                {
                    ret[index++]='0'+A[i];
                    ret[index++]=':';
                    A[i]=10;
                    break;
                }
            }
            else if(A[i]<=3)
            {
                ret[index++]='0'+A[i];
                ret[index++]=':';
                A[i]=10;
                break;
            }
        }
        for(int i=ASize-1;i>=0;i--)
        {
            if(A[i]<=5)
            {
                ret[index++]='0'+A[i];
                A[i]=10;
                break;
            }
        }
        for(int i=ASize-1;i>=0;i--)
        {
            if(A[i]!=10)
            {
                 ret[index++]='0'+A[i];
                 break;
            }
            
        }
    
    ret[index]='\0';
    if(index!=5)return "";
    return ret;
}