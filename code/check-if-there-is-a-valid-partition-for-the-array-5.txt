class Solution {
public:
    int dp[100000];
    bool helper(vector<int> &nums , int n , int i){
        if(i>=n) return true;
        if(dp[i]!=-1) return dp[i];
        int ans = false;
        
        if(i<n-1 and nums[i]==nums[i+1]){
            // cout<<nums[i]<<" "<<i<<"\n";
            ans |= helper(nums,n,i+2);
        }
        if(i<n-2 and nums[i] == nums[i+1] and nums[i] == nums[i+2]){
            ans |= helper(nums,n,i+3);
        }
        if(i<n-2 and nums[i+1] == nums[i]+1 and nums[i+2]==nums[i+1]+1){
            ans |= helper(nums,n,i+3);
        }
        return dp[i] =  ans;
    }
    bool validPartition(vector<int>& nums) {
        memset(dp,-1,sizeof(dp));
        int n = nums.size();
        bool ans = helper(nums,n,0);
        return ans;
    }
};