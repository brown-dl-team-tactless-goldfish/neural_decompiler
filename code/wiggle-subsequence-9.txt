//Greedy

int wiggleMaxLength(int* nums, int numsSize)
{
    if(numsSize < 2)
    {
        return numsSize;
    }
    
    int BEGIN = 0;
    int UP = 1;
    int DOWN = 2;
    int STATE = 0;
    int max_length = 1;
    
    for(int i = 1; i < numsSize; ++i)
    {
        switch(STATE)
        {
            case 0:
            {
                if(nums[i] > nums[i-1])
                {
                    STATE = UP;
                    max_length++;
                }
                else if(nums[i] < nums[i-1])
                {
                    STATE = DOWN;
                    max_length++;
                }
                break;
            }
            case 1:
            {
                if(nums[i] < nums[i-1])
                {
                    STATE = DOWN;
                    max_length++;
                }
                break;
            }
            case 2:
            {
                if(nums[i] > nums[i-1])
                {
                    STATE = UP;
                    max_length++;
                }
                break;
            }
        }
    }
    
    return max_length;
}


//Dynamic programming
/*
int wiggleMaxLength(int* nums, int numsSize) 
{
    if(numsSize<2)
        return numsSize;
    int up=1;
    int down=1;
    for(int i=1;i<numsSize;++i)
    {
        if(nums[i]>nums[i-1])
        {
            down=up+1;
        }
        else
        {
            if(nums[i]<nums[i-1])
                up=down+1;
        }
    }
    return up>down?up:down;
}*/