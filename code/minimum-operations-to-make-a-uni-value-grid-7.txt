class Solution {
public:
    int minOperations(vector<vector<int>>& a, int k) {
        int n = a.size(), m = a[0].size();
        vector<int> arr(n * m, 0);
        int mod = a[0][0] % k;
        for(int i = 0; i < n; ++i) {
           for(int j = 0; j < m; ++j) {
              arr[i * m + j] = a[i][j];
              if(a[i][j] % k != mod) return -1;
           }
        }
        sort(arr.begin(), arr.end());
        int temp = arr[(n * m) / 2];
        int ops = 0;
        for(int i = 0; i < n * m; ++i)
            ops += abs(arr[i] - temp) / k;
        if((n * m) % 2 == 0) {
           int temp2 = arr[( (n * m) / 2) - 1];
           int ops2 = 0;
           for(int i = 0; i < n * m; ++i)
              ops2 += abs(arr[i] - temp2) / k;
           ops = min(ops, ops2);
        }
        return ops;
    }
};