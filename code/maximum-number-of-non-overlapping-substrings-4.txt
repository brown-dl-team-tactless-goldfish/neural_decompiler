class Solution {
public:
    vector<string> maxNumOfSubstrings(string s) {
        int n = s.length(), fst[26], lst[26];
        vector<string> ans;
        for (int i = 0; i < n; ++i) lst[s[i] - 'a'] = i;
        for (int i = n - 1; i >= 0; --i) fst[s[i] - 'a'] = i;
        for (int i = 0, prev = -1; i < n; ++i) {
            if (i == lst[s[i] - 'a']) {
                int b = fst[s[i] - 'a'];
                int e = lst[s[i] - 'a'];
                for (int j = e - 1; j > b && b > prev && e == i; --j) {
                    b = min(b, fst[s[j] - 'a']);
                    e = max(e, lst[s[j] - 'a']);
                }
                if (b > prev && e == i) {
                    ans.push_back(s.substr(b, e - b + 1));
                    prev = e;
                }
            }
        }
        return ans;
    }
};