public class Solution {
    public long MakeSubKSumEqual(int[] arr, int k) {
        var shift = GetMin(arr.Length, k);
        var rs = 0L;
        for (int i = 0; i < shift; i++)
        {
            var list = GetIthList(i, shift, arr);
            rs += GetMin(list);
        }
        return rs;
    }
    private long GetMin(List<int> list)
    {
        var rs = 0L;
        list.Sort();
        var val = list[list.Count / 2];
        for (int i = 0; i < list.Count; i++)
        {
            rs += Math.Abs(list[i] - val);
        }
        return rs;
    }
    private List<int> GetIthList(int index, int shift, int[] arr)
    {
        var rs = new List<int>();
        for (int i = index; i < arr.Length; i += shift)
        {
            rs.Add(arr[i]);
        }
        return rs;
    }
    private int GetMin(int n, int k)
    {
        if (n % k == 0) return k;
        return GetMin(k, n % k);
    }
}