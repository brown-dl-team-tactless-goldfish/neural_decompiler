class DetectSquares {
public:
    int N = 1001;
    int grid[1001][1001];
    DetectSquares() {
        memset(grid,0,sizeof(grid));
    }
    
    void add(vector<int> point) {
        grid[point[0]][point[1]]++;
    }
    
    int count(vector<int> point) {
        int ans = 0;
        int X = point[0] , Y= point[1];
        
        //downwards and left 
       for(int x=X+1 , y=Y-1 ;y>=0 and x<N ; y--, x++)      ans += grid[x][y] * grid[X][y] * grid[x][Y];

        
       //downwards and right
        for(int x=X+1 , y=Y+1 ; x< N and y<N ; x++ , y++)   ans += grid[x][y] * grid[X][y] * grid[x][Y];
        
        //upwards and left
        for(int x=X-1, y=Y-1 ; x>=0 and y>=0  ; x-- , y-- ) ans += grid[x][y] * grid[X][y] * grid[x][Y];
        
        
        //upwards right
        for(int x=X-1, y=Y+1; x>=0 and y<N ; y++ , x--)     ans += grid[x][y] * grid[X][y] * grid[x][Y];
        
        return ans;
        
    }
};