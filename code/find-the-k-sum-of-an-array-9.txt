#define ll long long 
class Solution {
public: 
    long long kSum(vector<int>& nums, int k) {
        ll maxsum=0;
        for(auto &num : nums){
            maxsum+=max(0,num);// adding all pos numbers
            num = abs(num); // we take abs because for pos numbers we remove from maxsum and negitive numbers decrease maxsum on adding with maxsum so by taking abs we just need to dec num
        }
        sort(nums.begin(),nums.end());
        priority_queue<pair<ll,int>> pq;
        ll res = maxsum;
        int curr_k = 1; //maxsum is first largest
        pq.push({maxsum-nums[0],0});
        while(curr_k<k){  
            auto [curr_sum,ind] = pq.top();pq.pop();
            curr_k++; 
            res = curr_sum; // res contains the curr_k th greatest number
            if(ind+1<nums.size()){ // gonna remove the next smallest from currsum i.e nums[ind+1]
                ll include_curr = curr_sum - nums[ind+1];  // we dont remove current ind from maxsum
                ll exclude_curr = curr_sum + nums[ind] -nums[ind+1]; // we undo the previous removal by adding curr_ind and then remove the next smallest part from maxsum
                pq.push({include_curr,ind+1});
                pq.push({exclude_curr,ind+1});
            }
            
        }
        return res;
    }
};