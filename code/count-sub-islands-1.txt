bool dfs(int **grid1,int **grid2,int rowsize,int colsize,int row,int col){
    if(row < 0 || row >= rowsize || col<0 || col >= colsize || grid2[row][col]==0){
        return;
    }
    grid2[row][col]=0;
    dfs(grid1,grid2,rowsize,colsize,row+1,col);
    dfs(grid1,grid2,rowsize,colsize,row-1,col);
    dfs(grid1,grid2,rowsize,colsize,row,col+1);
    dfs(grid1,grid2,rowsize,colsize,row,col-1);
}

int countSubIslands(int** grid1, int grid1Size, int* grid1ColSize, int** grid2, int grid2Size, int* grid2ColSize){
    // remove different
    for(int row=0;row<grid1Size;row++){
        for(int col=0;col<*grid1ColSize;col++){
            if(grid2[row][col]==1 && grid1[row][col]==0){
                dfs(grid1,grid2,grid1Size,*grid1ColSize,row,col);
            }
        }
    }
    int ans=0;
    for(int row=0;row<grid1Size;row++){
        for(int col=0;col<*grid1ColSize;col++){
            if(grid2[row][col]==1){
                dfs(grid1,grid2,grid1Size,*grid1ColSize,row,col);
                ans++;
            }
        }
    }
    return ans;
}