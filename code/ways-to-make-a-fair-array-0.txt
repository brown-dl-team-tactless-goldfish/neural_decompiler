int waysToMakeFair(int* nums, int numsSize){
    int n = numsSize;
    int* preSum = malloc( (n + 4) * sizeof(int));
    int* sufSum = malloc( (n + 4) * sizeof(int));
    preSum[0] = 0, preSum[1] = 0, preSum[n+2] = 0, preSum[n+3] = 0;
    sufSum[0] = 0, sufSum[1] = 0, sufSum[n+2] = 0, sufSum[n+3] = 0;
    for(int i = 2; i < n + 2; i++){
        preSum[i] = preSum[i-2] + nums[i-2];
    }
    for(int i = n+1; i > 1 ; i--){
        sufSum[i] = sufSum[i+2] + nums[i-2];
    }
    int ans = 0;
    for(int i = 2; i <= n+1; i++ ){
        if( (preSum[i-2] + sufSum[i+1]) == (preSum[i-1] + sufSum[i+2]) )
        ans++;
    }
    
    return ans;
}