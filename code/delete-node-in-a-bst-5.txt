/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */


void insertNode(struct TreeNode **ptr, struct TreeNode *toinsert) {
    if (!toinsert) {
        return;
    }
    if (!*ptr) {
        *ptr = toinsert;
        return;
    }
    if ((*ptr)->val > toinsert->val) {
        insertNode(&(*ptr)->left, toinsert);
    } else {
        insertNode(&(*ptr)->right, toinsert);
    }
}

void deletehelper(struct TreeNode **ptr, int key) {
    if (!*ptr)
        return;
    if ((*ptr)->val == key) {
        struct TreeNode *left = (*ptr)->left;
        struct TreeNode *right = (*ptr)->right;
        free(*ptr);
        *ptr = right;
        insertNode(ptr, left);
        return;
    }
    deletehelper(&(*ptr)->left, key);
    deletehelper(&(*ptr)->right, key);
}

struct TreeNode *deleteNode(struct TreeNode *root, int key) {
    deletehelper(&root, key);
    return root;
}