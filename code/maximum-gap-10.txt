class Solution {
    void countingSort(vector<int>& nums, int exp) {
        int n = nums.size();
        
        vector<int>count(10, 0);
        vector<int>output(n, 0);
        
        for (int i = 0; i < n; i++)
            count[(nums[i]/exp)%10]++;
        
        for (int i = 1; i < 10; i++)
            count[i] += count[i-1];
    
        for (int i = n-1; i >= 0; i--) {
            output[count[(nums[i]/exp)%10]-1] = nums[i];
            count[(nums[i]/exp)%10]--;
        }
        
        for (int i = 0; i < n; i++)
            nums[i] = output[i];
    }
public:
    int maximumGap(vector<int>& nums) {
        
        int n = nums.size();
        int mx = INT_MIN;
        for (int i = 0; i < n; i++)
            mx = max(mx, nums[i]);
    
        for (int exp = 1; mx/exp > 0; exp*= 10)
            countingSort(nums, exp);
        
        int res = 0;
        for (int i = 1; i < n; i++)  {
            res = max(res, nums[i]-nums[i-1]);
        }
        
        return res;
    }
};