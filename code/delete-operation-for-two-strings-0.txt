int memo[500][500];
int min(int a,int b)
{
    return a<b?a:b;
}
int dp(int i,int j,int n,int m,char* word1,char* word2)
{
    if(i>=n)
        return m-j;
    else if(j>=m)
        return n-i;
    else if(memo[i][j]!=-1)
        return memo[i][j];
    else
    {
        if(word1[i]==word2[j])
            return memo[i][j]=dp(i+1,j+1,n,m,word1,word2);
        else return memo[i][j]=1+min(dp(i,j+1,n,m,word1,word2),dp(i+1,j,n,m,word1,word2));
    }
}
int len(char* s)
{
    int ret=0;
    while(s[ret]!='\0')
        ++ret;
    return ret;
}
int minDistance(char* word1, char* word2)
{
    memset(memo,-1,sizeof(memo));
    return dp(0,0,len(word1),len(word2),word1,word2);
}