int dig_let(char *s)
{
    int len = strlen(s);
    if ((s[len-1] >= '0') && (s[len-1] <= '9')) {
        return 1;  //dig
    } else {
        return 0; //let
    }
}

int cmp(const void *a, const void *b)
{
    char **a1 = (char **)a;
    char **b1 = (char **)b;
    
    if ((dig_let(b1[0]) == 0) && (dig_let(a1[0]) == 1)) {
        return 1;
    }
    if ((dig_let(b1[0]) == 1) && (dig_let(a1[0]) == 0)) {
        return -1;
    }
    return 0;
}

int cmp1(const void *a, const void *b)
{
    char **a1 = (char **)a;
    char **b1 = (char **)b;
    
    char *a2 = strstr(a1[0], " ");
    char *b2 = strstr(b1[0], " ");
    if (strcmp(a2, b2) == 0) {
        return strcmp(a1[0], b1[0]);
    }
    return strcmp(a2, b2);
}

char ** reorderLogFiles(char ** logs, int logsSize, int* returnSize){
    char **a = (char **)malloc(sizeof(char *) * logsSize);
    for (int i=0; i<logsSize; i++) {
        a[i] = (char *)malloc(sizeof(char) * 101);
        memset(a[i], 0, sizeof(char) * 101);
        memcpy(a[i], logs[i], sizeof(char) * (strlen(logs[i])+1));
    }
    qsort(a, logsSize, sizeof(a[0]), cmp);
    
    int count = 0;
    for (int i=0; i<logsSize; i++) {
        if (dig_let(a[i]) == 0) {
            count++;
        }
    }
    
    qsort(a, count, sizeof(a[0]), cmp1);
    
    *returnSize = logsSize;
    return a;
}