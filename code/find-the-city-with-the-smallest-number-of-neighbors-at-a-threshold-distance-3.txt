    for(int i=0;i<n;i++)
    {
        dist[i][i] = 0;
    }
    
    for(int i=0;i<edges.size();i++)
    {
        int u = edges[i][0];
        int v = edges[i][1];
        int wt = edges[i][2];
        dist[u][v] = wt;
        dist[v][u] = wt;
    }
    
    
    
    for(int k = 0; k < n;k++)
    {
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(dist[i][k] != INF && dist[k][j] != INF)
                {
                    dist[i][j] = min(dist[i][j], dist[i][k] + dist[k][j]);   
                }
            }
        }
    }
    
    
    
    
    
    int min_count = INF;
    int ans = INF;
    for(int i=0;i<n;i++)
    {
        int c = 0;
        for(int j=0;j<n;j++)
        {
            if(dist[i][j] <= distanceThreshold)
            {
                c++;
            }
        }
        if(c<=min_count)
        {
            min_count = c;
            ans = i;
        }
    }
    
    return ans;
    
    
    
    
    
    
    
    
    return 0;
}