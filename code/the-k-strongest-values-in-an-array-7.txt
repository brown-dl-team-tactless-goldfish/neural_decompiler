class Solution {
public:
    vector<int> getStrongest(vector<int>& arr, int k) {
        std::sort(arr.begin(), arr.end());
        const int median = arr[(arr.size() - 1) / 2];
        std::size_t left = 0, right = arr.size() - 1;
        std::vector<int> answer;
        while (left <= right) {
            if (left == right) {
                answer.emplace_back(arr[left]);
                ++left;
                --right;
            } else {
                int abs1 = std::abs(arr[left] - median);
                int abs2 = std::abs(arr[right] - median);
                if (abs1 > abs2) {
                    answer.emplace_back(arr[left]);
                    ++left;
                } else if (abs1 < abs2) {
                    answer.emplace_back(arr[right]);
                    --right;
                } else if (arr[left] > arr[right]) {
                    answer.emplace_back(arr[left]);
                    ++left;
                } else {
                    answer.emplace_back(arr[right]);
                    --right;
                }
            }
            if (answer.size() == k) break;
        }
        return answer;
    }
};