bool wordPattern(char * pattern, char * s){
    int pidx = 0, sidx = 0, plen = strlen(pattern), slen = strlen(s);
    int startIdx = -1;
    char** q = (char**)calloc(26, sizeof(char*));
    while(sidx < slen){
        if(sidx == (slen - 1) || s[sidx] == ' '){
            int idx = pattern[pidx++] - 'a';
            int len = sidx - startIdx;
            len += (sidx == (slen - 1))? 1 : 0;
            if(!q[idx])
            {
                /* check the duplicated */
                for(int i = 0; i < 26; i++){
                    if(i != idx && q[i] && !strncmp(q[i], &s[startIdx+1], len-1)){
                        return false;
                    }
                }
				/* save the mapping string in q[] */
                q[idx] = (char*)calloc(len+1, sizeof(char));
                memcpy(q[idx], &s[startIdx+1], (len-1)*sizeof(char));
                q[idx][len-1] = '\0';
            }
            else
            {
                if(strncmp(q[idx], &s[startIdx+1], len-1))
                    return false;
            }
            startIdx = sidx;            
        }
        sidx++;
    }
    return pidx!=plen? false:true;
}