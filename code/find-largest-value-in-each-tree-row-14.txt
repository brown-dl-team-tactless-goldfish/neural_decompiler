/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */
/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* largestValues(struct TreeNode* root, int* returnSize){
    int *output = malloc(10000 * sizeof(int));
    struct TreeNode* queue[10000];
    int front, back, lev_end,max, i;
    int depth=0; 

    if (root==NULL) {
        *returnSize = 0;
        return output;
    }

    queue[0] = root;
    front=back=lev_end=0;
    while(front<=back) {

        for(i=front, max= queue[i]->val; i<=lev_end; i++) {
            if (max<queue[i]->val){
                max = queue[i]->val;
            }
            if(queue[i]->left != NULL) queue[++back] = queue[i]->left;
            if(queue[i]->right != NULL) queue[++back] = queue[i]->right;
            front++;
        }
        output[depth++] = max;
        lev_end = back;
    }
    *returnSize = depth;
    return output;
}