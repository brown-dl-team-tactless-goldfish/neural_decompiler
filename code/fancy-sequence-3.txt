public class Fancy
{
    private int mod97 = (int)Math.Pow(10, 9) + 7;
    private List<int> num = new List<int>();
    private List<long> mul = new List<long>();
    private List<long> sum = new List<long>();
    public Fancy()
    {
        mul.Add(1);
        sum.Add(0);
    }

    public void Append(int val)
    {
        num.Add(val);
        mul.Add(mul.Last());
        sum.Add(sum.Last());
    }

    public void AddAll(int inc)
    {
        sum[sum.Count - 1] = (sum.Last() + inc) % mod97;
    }

    public void MultAll(int m)
    {
        mul[mul.Count - 1] = mul.Last() * m % mod97;
        sum[sum.Count - 1] = sum.Last() * m % mod97;
    }

    public int GetIndex(int idx)
    {
        if (idx >= num.Count)
            return -1;
        
        //Given Fermat Little Theorem 
        //   1 ≡ a^(m-1) (mod m) 
        //=> a^-1 ≡ a^(m-2) (mod m)
        //Let a = mul[idx], m = mod97
        //So mul.Last()/mul[idx] 
        //=> mul.Last()*mul[idx]^-1 
        //=> mul.Last()*mul[idx]^(mod-2) 
        //=> mul.Last() * PowMod(mul[idx], mod97 - 2, mod97)
        long m = mul.Last() * PowMod(mul[idx], mod97 - 2, mod97) % mod97;
        long inc = sum.Last() + mod97 - sum[idx] * m % mod97;
        return (int)((num[idx] * m + inc) % mod97);
    }

    private long PowMod(long x, long y, long mod)
    {
        long res = 1;
        while (y > 0)
        {
            if ((y & 1) == 1)
                res = res * x % mod;
            x = x * x % mod;
            y >>= 1;
        }

        return res;
    }
}