typedef long long ll;
class Solution {
public:
    ll mod=1e9+7;
    int squareFreeSubsets(vector<int>& nums) 
    {
        vector<ll>f(1025,0);
        f[0]=1;
        set<int>Set;
        Set.insert(2),Set.insert(3),Set.insert(5),Set.insert(6),Set.insert(7),Set.insert(10),Set.insert(11),Set.insert(13);
        Set.insert(14),Set.insert(15),Set.insert(17),Set.insert(19),Set.insert(21),Set.insert(22);
        Set.insert(23),Set.insert(26),Set.insert(29),Set.insert(30);
        vector<vector<int>>fac={{2},{3},{5},{2,3},{7},{2,5},{11},{13},{2,7},{3,5},{17},{19},{3,7},
        {2,11},{23},{2,13},{29},{2,3,5}};
        map<int,int>Map;
        Map[2]=0,Map[3]=1,Map[5]=2,Map[6]=3,Map[7]=4,Map[10]=5,Map[11]=6,Map[13]=7,Map[14]=8,Map[15]=9;
        Map[17]=10,Map[19]=11,Map[21]=12,Map[22]=13,Map[23]=14,Map[26]=15,Map[29]=16,Map[30]=17;
        map<int,int>Map2;
        Map2[2]=0,Map2[3]=1,Map2[5]=2,Map2[7]=3,Map2[11]=4,Map2[13]=5,Map2[17]=6,Map2[19]=7,Map2[23]=8,Map2[29]=9;
        for(auto &x:nums)
        {
            if(x==1)for(auto &x:f)x=(x*2)%mod;
            if(!Set.count(x))continue;
            ll cur=0;
            for(auto &x:fac[Map[x]])cur+=(1<<Map2[x]);
            for(int i=0;i<1024;i++)
            {
                if((i+cur)==(i|cur))f[i+cur]=(f[i+cur]+f[i])%mod;
            }
        }
        ll ans=0;
        for(auto &x:f)ans=(ans+x)%mod;
        return ((ans-1)+mod)%mod;
    }
};

// 2 3 5 7 11 13 17 19 23 29
// 2 3 5 6 7 10 11 13 14 15 17 19 21 22 23 26 29 30 => 18