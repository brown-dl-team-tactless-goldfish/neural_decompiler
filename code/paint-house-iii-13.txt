class Solution {
public:
    int minCost(vector<int>& houses, vector<vector<int>>& cost, int m, int n, int target) {
        //dp[i][j][k] -> cheapest cost 
        // i -> ith target 
        // j -> jth house 
        // k -> the jth house is painted by k 
        
        int INF = INT_MAX/2;
        vector<vector<vector<int>>> dp(target+1,vector<vector<int>>(houses.size()+1,vector<int>(n+1,INF)));
        for(int k = 0;k<=n;k++){
            dp[0][0][k] = 0;
        }
        for(int i = 1;i<=target;i++){
            for(int j = 1;j<=m;j++){
                if(houses[j-1] != 0){
                    int tmp = dp[i][j-1][houses[j-1]];
                    for(int k = 1;k<=n;k++){
                        if(k!=houses[j-1]){
                            tmp = min(tmp,dp[i-1][j-1][k]);
                        }
                    }
                    dp[i][j][houses[j-1]] = tmp; 
                } else {
                    for(int k = 1;k<=n;k++){
                        int tmp = dp[i][j-1][k] + cost[j-1][k-1];
                        for(int l = 1;l<=n;l++){
                            if(l!=k){
                                tmp = min(tmp,dp[i-1][j-1][l] + cost[j-1][k-1]);                    
                            }
                        }
                        dp[i][j][k] = tmp;
                    }
                }
            }
        }
        int tmp = INT_MAX; 
        for(int k = 1;k<=n;k++){
            tmp = min(tmp,dp[target][m][k]);
        }
        if(tmp >= INF){
            return -1;
        }
        return tmp; 
        
    }
};