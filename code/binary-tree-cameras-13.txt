/*
0 means it has a camera
-1 means it needs a camera
1 means it is covered
*/
class Solution
{
public:
    int check(TreeNode *root, int &c)
    {
        if (root == NULL)
            return 1;
        int l = check(root->left, c);
        int r = check(root->right, c);
        if (l == -1 || r == -1)
        {
            c++;
            return 0;
        }
        if (l == 0 || r == 0)
            return 1;
        return -1;
    }
    int minCameraCover(TreeNode *root)
    {
        int c = 0;
        if (check(root, c) == -1)
            c++;
        return c;
    }
};