void findPath(struct TreeNode* root, int startValue, int destValue, char* t, int tIdx, char* s, char* d){
    if(!root) return;
    if(root->val == startValue)
        memcpy(s, t, tIdx*sizeof(char));
    else if(root->val == destValue)
        memcpy(d, t, tIdx*sizeof(char));
    t[tIdx] = 'L';
    findPath(root->left, startValue, destValue, t, tIdx+1, s, d);
    t[tIdx] = 'R';
    findPath(root->right, startValue, destValue, t, tIdx+1, s, d);    
}

char * getDirections(struct TreeNode* root, int startValue, int destValue){
    char* startPath = (char*)calloc(100000, sizeof(char));
    char* destPath = (char*)calloc(100000, sizeof(char));
    char* tmp = (char*)calloc(100000, sizeof(char));
    findPath(root, startValue, destValue, tmp, 0, startPath, destPath);
    int idx, slen = strlen(startPath), dlen = strlen(destPath);
    for(idx = 0; idx < slen || idx < dlen; idx++)
        if(startPath[idx] != destPath[idx])
            break;
    for(int i = idx; i < slen; i++)
        startPath[i] = 'U';
    for(int i = 0; i < dlen-idx; i++)
        startPath[slen+i] = destPath[idx+i];
    startPath[slen+(dlen-idx)] = '\0'; 
    return &startPath[idx];
}