class Solution {
public:
    int maximalNetworkRank(int n, vector<vector<int>>& roads) {
        map<int, set<int>> g;
        for(auto i : roads){
            g[i[0]].insert(i[1]);
            g[i[1]].insert(i[0]);
        }
        
        int ans = 0;
        for(int i = 0 ; i < n ; ++i){
            for(int j = i + 1 ; j < n ; ++j){
                if(g[i].count(j) > 0 )
                    // If (i,j) have a direct path, count only once.
                    ans = max(ans, (int)g[i].size() + (int)g[j].size() - 1);
                else
                    ans = max(ans, (int)g[i].size() + (int)g[j].size());
            }
        } 
        return ans;
    }
};