public class Solution {
    public string[] SplitMessage(string message, int limit) {
        
        if(limit<6) return new string[0];
        
        //FIND SEGMENTS STEP BY STEP
        
        int n = message.Length;
        int t = n;
        int[] sufLen = new int[]{5,7,9,11};
        int[] ns = new int[]{9,90,900,9000};  //numb in segment ,9 90 900 9000 ...
        int[] offset = new int[]{1,10,100,1000};
        int[] presum = new int[]{9,99,999,9999};
        
        int i = 0;
        
        while(t>0)
        {            
            if((limit-sufLen[i])*ns[i]>=t)
                break;
            t = t - (limit-sufLen[i])*ns[i] + presum[i];
            i++; 
            if(i>3)
                return new string[0];
        }
        
        int remin = (t+limit-sufLen[i]-1)/(limit-sufLen[i]);
         
        int segs = offset[i] + remin-1; 
        int off = 0;
        string[] res = new string[segs];
        for(int j=1;j<=segs;j++)
        {
            int strLen = limit - (i+1+3+j.ToString().Length);
            StringBuilder sb = new ();
            sb.Append(message.Substring(off,Math.Min(strLen,message.Length-off)));
            off += strLen;
            sb.Append($"<{j}/{segs}>");
            res[j-1] = sb.ToString();
            
        }
        
        return res;
        
        }
}