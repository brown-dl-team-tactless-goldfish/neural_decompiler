TreeNode* recoverFromPreorder(string S) {
  stack<TreeNode*> st;
  for (auto p = 0, len = 0, level = 0; p < S.size(); p += len) {
    level = 0, len = 0;
    while (S[p] == '-') ++level, ++p;
    while (p + len < S.size() && S[p + len] != '-') ++len;
    TreeNode* n = new TreeNode(stoi(S.substr(p, len)));
    while (st.size() > level) st.pop();
    if (!st.empty()) {
      if (st.top()->left == nullptr) st.top()->left = n;
      else st.top()->right = n;
    }
    st.push(n);
  }
  while (st.size() > 1) st.pop();
  return st.top();
}