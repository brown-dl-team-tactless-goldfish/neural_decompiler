class Solution {
public:
    long long makeSimilar(vector<int>& nums, vector<int>& target) {
        int n = nums.size();
        vector<int> odd1;
        vector<int> odd2;
        vector<int> even1;
        vector<int> even2;
        for (int i = 0; i < n; i++) {
            if (nums[i] % 2 == 1) {
                odd1.push_back(nums[i]);
            } else {
                even1.push_back(nums[i]);
            }
            if (target[i] % 2 == 1) {
                odd2.push_back(target[i]);
            } else {
                even2.push_back(target[i]);
            }
        }
        sort(odd1.begin(), odd1.end());
        sort(odd2.begin(), odd2.end());
        sort(even1.begin(), even1.end());
        sort(even2.begin(), even2.end());
        long long sol = 0;
        for (int i = 0; i < (int) odd1.size(); i++) {
            int diff = odd1[i] - odd2[i];
            if (diff > 0) {
                sol += diff / 2;
            }
        }
        for (int i = 0; i < (int) even1.size(); i++) {
            int diff = even1[i] - even2[i];
            if (diff > 0) {
                sol += diff / 2;
            }
        }
        return sol;
    }
};