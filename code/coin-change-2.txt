#define MIN(a, b) ((a) < (b) ? (a) : (b))

int cchange(int *dp, int *coins, int coinsSize, int amount)
{
    if (amount < 0)
        return INT_MAX;

    if (dp[amount] != -1)
        return dp[amount];
    
    if (amount == 0)
        return 0;
    
    int i;
    int best = INT_MAX;
    
    for (i = 0; i < coinsSize; i++) {
        int coin = coins[i];
        int r = cchange(dp, coins, coinsSize, amount - coin);
        if (r != INT_MAX)
            best = MIN(best, r + 1);
    }

    dp[amount] = best;
    return best;
}

int coinChange(int* coins, int coinsSize, int amount)
{
    int *dp = malloc(sizeof(int) * (amount + 1));
    int i, ret;
    
    for (i = 0; i <= amount; i++)
        dp[i] = -1; // unset
    
    ret = cchange(dp, coins, coinsSize, amount);
    
    free(dp);
    
    return ret == INT_MAX ? -1 : ret;
}