class Solution {
public:
    int minSwaps(vector<int>& nums) {
        // count total one's using count(), as it will be size of sliding window to be used
        int sz=count(nums.begin(),nums.end(),1),n=nums.size(),cnt=0,res=n;
        // check for every window of sz(size) begining from index i, 
        // and find minm. no of 0 in it
        int i,j;
        for(i=0,j=0;i<n;i++){
            // to update sliding window for each traversal
            while((j-i)<sz){
                cnt+=nums[(j++)%n];
            }
            // as 0 in current window = sz(total 1's in nums)-cnt(no. of 1's in current window)
            res = min(res,sz-cnt);
            // update window by removing contribution of starting index
            cnt -= nums[i];
        }
        return res;
    }
};