class Solution {
public:
    int minCharacters(string a, string b) {
        int n = a.length();
        int m= b.length();
        int cnta[26];
        int cntb[26];
        memset(cnta,0,sizeof cnta);
        memset(cntb,0,sizeof cntb);
        for(int i=0;i<a.length();i++){
            cnta[a[i]-'a']++;
        }
        for(int i=0;i<b.length();i++){
            cntb[b[i]-'a']++;
        }
        int ans=INT_MAX;
        // option 1
        // every character in a should be strictly less than b
        int c=0;
        for(int i=25;i>0;i--){
            c =c+ cnta[i];
            int sum=0;
            for(int j=i;j<26;j++){
                sum = sum+cntb[j];
            }
            sum = b.length()-sum;
            ans = min(ans,c+sum);
        }
        // cout<<ans<<endl;
        // option 2
        // every character in b should be strictly less than a
        c=0;
        for(int i=25;i>0;i--){
            c = c+ cntb[i];
            int sum=0;
            for(int j=i;j<26;j++){
                sum = sum+cnta[j];
            }
            sum = a.length()-sum;
            ans = min(ans,c+sum);
        }
        // option 3
        // both a and b should contain exactly one distinct character
        int maxia=0;
        for(int i=0;i<26;i++){
            maxia = max(maxia,cnta[i]);
        }
        int maxib =0;
        for(int i=0;i<26;i++){
            maxib = max(maxib,cntb[i]);
        }
        ans = min(ans,n+m-maxia-maxib);
        return ans;
    }
};