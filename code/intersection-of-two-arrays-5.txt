#define SIZE 1000

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* intersection(int* nums1, int nums1Size, int* nums2, int nums2Size, int* returnSize){
    int hash[SIZE] = {0};
    int count = 0;
    int len = nums1Size >= nums2Size ? nums1Size : nums2Size;
    int *ans = (int *)malloc(len * sizeof(int));
    
    for (int i=0; i<nums1Size; i++) {
        int idx = nums1[i];
        hash[idx]++;
    }
    
    for (int i=0; i<nums2Size; i++) {
        int idx = nums2[i];
        if (hash[idx] > 0) {
            ans[count] = idx;
            count++;
            hash[idx] = 0;
        }
    }
    *returnSize = count;
    return ans;
}