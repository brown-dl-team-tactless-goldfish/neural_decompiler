class Solution {
public:
    double maxAverageRatio(vector<vector<int>>& classes, int extraStudents) {
        int n = classes.size();
        priority_queue<pair<double, int>> pq;
        for (int i=0; i<n; i++) {
            double curr = classes[i][0] / double(classes[i][1]) * 100;
            double updated = (classes[i][0]+1) / double(classes[i][1]+1) * 100;
            //cout << updated-curr << endl;
            pq.push(make_pair(updated-curr, i));
        }
        while (extraStudents--) {
            auto tot = pq.top();
            pq.pop();
            int i = tot.second;
            classes[i][0]++;
            classes[i][1]++;
            double curr = classes[i][0] / double(classes[i][1]) * 100;
            double updated = (classes[i][0]+1) / double(classes[i][1]+1) * 100;
            pq.push(make_pair(updated-curr, i));
        }
        double ans = 0;
        while (!pq.empty()) {
            auto tot = pq.top();
            pq.pop();
            int i = tot.second;
            double curr = classes[i][0] / double(classes[i][1]);
            ans += curr;
        }
        ans /= n;
        return ans;
    }
};