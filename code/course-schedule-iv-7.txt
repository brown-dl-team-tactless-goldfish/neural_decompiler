    public class Solution
    {
        public IList<bool> CheckIfPrerequisite(int n, int[][] prerequisites, int[][] queries)
        {
            var graph = new Dictionary<int, IList<int>>();
            for (int i = 0; i < prerequisites.Length; i++)
            {
                if (!graph.ContainsKey(prerequisites[i][0]))
                    graph.Add(prerequisites[i][0], new List<int>());
                graph[prerequisites[i][0]].Add(prerequisites[i][1]);
            }

            var memo = new Dictionary<(int From, int To), bool>();
            var resList = new List<bool>();
            foreach (var query in queries)
            {
                resList.Add(DFS(graph, (query[0], query[1]), memo));
            }
            return resList;
        }

        private bool DFS(Dictionary<int, IList<int>> graph, (int From, int To) query, Dictionary<(int From, int To), bool> memo)
        {
            if (query.From == query.To)
                return true;
            if (memo.ContainsKey(query))
                return memo[query];

            bool res = false;
            if (graph.ContainsKey(query.From))
            {
                foreach (var next in graph[query.From])
                {
                    if (DFS(graph, (next, query.To), memo))
                        res = true;
                }
            }

            memo[query] = res;
            return res;
        }
    }