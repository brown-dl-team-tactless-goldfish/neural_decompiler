class Solution {
public:
    map<pair<int,int>,int> prices;
    vector<vector<long long>> dp;
    long long maxPro(int l,int w){
        if(dp[l][w]!=-1) return dp[l][w];
        long long ans=0;
        if(prices.count({l,w})) ans=prices[{l,w}];
        
        for(int i=1;i<=l-1;i++){
            ans=max(ans,maxPro(i,w)+maxPro(l-i,w));
        }
        for(int i=1;i<=w-1;i++){
            ans=max(ans,maxPro(l,i)+maxPro(l,w-i));
        }
        
        return dp[l][w]= ans;
    }
    
    long long sellingWood(int m, int n, vector<vector<int>>& price) {
        dp.assign(m+1,vector<long long>(n+1,-1));
        for(auto &v:price){
            prices[{v[0],v[1]}]=v[2];
        }
        
        return maxPro(m,n);
    }
};