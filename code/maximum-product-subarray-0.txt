#define MAX(a, b) ((a) > (b) ? (a) : (b))
#define MIN(a, b) ((a) < (b) ? (a) : (b))

int maxProduct(int* nums, int N)
{
    int *pos = calloc(N, sizeof(int));
    int *neg = calloc(N, sizeof(int));

    int i, best = INT_MIN;

    if (N == 1)
        return nums[0];
    
    for (i = 0; i < N; i++) {
        int n = nums[i];
        if (i == 0) {
            if (n < 0) {
                neg[0] = n;
                pos[0] = 0;
            } else {
                neg[0] = 0;
                pos[0] = n;
            }
        } else {
            if (n < 0) {
                neg[i] = MIN(pos[i - 1] * n, n);
                pos[i] = neg[i - 1] * n;
            } else {
                neg[i] = neg[i - 1] * n;
                pos[i] = MAX(pos[i - 1] * n, n);
            }
        }
        best = MAX(best, pos[i]);
    }
    
    return best;
}