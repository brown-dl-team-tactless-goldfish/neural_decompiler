  // O(max{C*logC,S*logC}) C is classes number,  S is extra students number
  public static double maxAverageRatio(int[][] classes, int extraStudents) {
    PriorityQueue<double[]> maxDiff = new PriorityQueue<>((a, b) -> b[2] - a[2] > 0 ? 1 : -1);
    double score = 0;
    // O(C*logC)
    for (int[] e : classes) {
      maxDiff.offer(
          new double[] {e[0], e[1], 1d * (e[1] - e[0]) / (e[1] * (e[1] + 1)), e[1] - e[0]});
      score += 1d * e[0] / e[1]; // They are still integer, so need change to double by 1d * them
    }
    // O(S*logC)
    while (extraStudents-- > 0) {
      double[] top = maxDiff.poll();
      score -= top[0] / top[1];
      score += (top[0] + 1) / (top[1] + 1);
      maxDiff.offer(
          new double[] {top[0] + 1, top[1] + 1, top[3] / ((top[1] + 1) * (top[1] + 2)), top[3]});
    }
    return score / classes.length;
  }