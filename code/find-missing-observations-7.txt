class Solution {
public:
    vector<int> missingRolls(vector<int>& rolls, int mean, int n) {
        int roll_sum = accumulate(rolls.begin() , rolls.end() ,0);
        int req_sum = (mean*(rolls.size()+n)) - roll_sum;
        vector<int> res;
        int equal_div = req_sum/n;
        if(equal_div > 6 || equal_div < 1){
            return {};
        }
        for(int i=0;i<n;i++){
            res.push_back(equal_div);
        }
        if(req_sum%n == 0){
            return res;
        }else{
            int d = req_sum%n;
            label:
            for(int i=0;i<n && d>0;i++){
                res[i] += 1;
                if(res[i]>6){
                    return {};
                }
                d -= 1;
            }
            if(d>0){
                goto label;
            }
            vector<int> :: iterator it;
            it = find(res.begin() , res.end() , 0);
            if(it == res.end()){
                return res;
            }
            return {};
        }
    }
};