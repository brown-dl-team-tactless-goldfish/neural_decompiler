class Solution {
public:
    #define ll long long 
    int MOD = 1e9 + 7 ;
    ll dp[501][501] ;
    int bound ;
    int solve(int pos , int steps ){
        if(pos >= bound || pos < 0 || (pos != 0 and !steps) ) return 0 ; // check for edge cases 
        if(!pos and !steps) return 1 ; //when steps are finished and we are back at origin return 1
        if(dp[pos][steps] != -1) return dp[pos][steps] ; //return saved answer
        
		//move right , move left , stay at the same place
        ll op1 = solve(pos+1,steps-1) % MOD ;
        ll op2 = solve(pos-1,steps-1) % MOD ;
        ll op3 = solve(pos,steps-1) % MOD ;
        
        return dp[pos][steps] = (op1 + op2 + op3 ) % MOD ;
        
    }
    int numWays(int steps, int n) {
        memset(dp,-1,sizeof(dp)) ;
        bound = n ;
        return solve(0,steps) ;
        
    }
};