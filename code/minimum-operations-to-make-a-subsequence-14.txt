class Solution {
public:
    int minOperations(vector<int>& target, vector<int>& nums) {
        unordered_map<int,int> mp;
        for(int i = 0; i<target.size();++i) mp[target[i]] = i;
        for(int i = 0; i<nums.size();++i){
            if(mp.find(nums[i])==mp.end()) nums[i] = -1;
            else nums[i] = mp[nums[i]];
        }
        vector<int> dp;
        for(int i = 0; i<nums.size();++i){
            if(nums[i]==-1) continue;
            auto it = lower_bound(dp.begin(),dp.end(),nums[i]);
            if(it==dp.end()) dp.push_back(nums[i]);
            else *it = nums[i];
        }
        return target.size()-dp.size();
    }
};