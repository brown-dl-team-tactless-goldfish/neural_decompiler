bool order(int** graph, int graphRowSize, int *graphColSizes, int index, int* color, int front){
    if(color[front]==color[index]){
        return false;
    }else if(color[index]==0){
        color[index]=-color[front];
    }else{
        return true;
    }
    for(int i=0;i<graphColSizes[index];i++){
        if(!order(graph,graphRowSize,graphColSizes,graph[index][i],color,index)){
            return false;
        }
    }
    return true;
}
bool isBipartite(int** graph, int graphRowSize, int *graphColSizes) {
    int* color=(int*)calloc(graphRowSize,sizeof(int));
    for(int k=0;k<graphRowSize;k++){
        if(color[k]!=0){
            continue;
        }
        color[k]=-1;
        for(int i=0;i<graphColSizes[k];i++){
            if(!order(graph,graphRowSize,graphColSizes,graph[k][i],color,k)){
                return false;
            }
        }
    }
    free(color);
    return true;
}