void inorder(struct TreeNode * root, int * temp, int * count)
{
    if(root == NULL) return 0;
    inorder(root->left, temp, count);
    temp[(*count)++] = root->val;
    inorder(root->right, temp , count);
}
int* findMode(struct TreeNode* root, int* returnSize){
    int count = 0, max = 0;
    *returnSize = 0;
    int * temp = (int *)malloc(10000*sizeof(int));
    inorder(root, temp, &count);
    int * result = (int *)malloc(count*sizeof(int));
    int t[200000] = {0};
    for(int i=0; i<count; i++)
    {
        t[temp[i]+100000]++;
        if(max < t[temp[i]+100000]) max = t[temp[i]+100000];
    }
    int idx = 0;
    for(int i=0; i<count-1; i++)
        if(temp[i] != temp[i+1])
            if(t[temp[i]+100000] == max)
                result[idx++] = temp[i];
    *returnSize = count;
    if(count < 2) return temp;
    if(temp[count-1] != temp[count-2] && max == 1) result[idx++] = temp[count-1];
    if(temp[count-1] == temp[count-2] && max == t[temp[count-1]+100000]) result[idx++] = temp[count-1];
    *returnSize = idx;
    return result;
}