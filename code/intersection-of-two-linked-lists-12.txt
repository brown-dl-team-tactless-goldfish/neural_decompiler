/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode *getIntersectionNode(struct ListNode *headA, struct ListNode *headB)
 {
    if(headA==NULL||headB==NULL)
        return NULL;
    else if(headA->next==NULL && headB==NULL)
        return headA;
    else if(headB->next==NULL && headA==NULL)
        return headB;
    else if(headA->next==NULL && headB->next==NULL && headA==headB)
        return headA;
    else if(headA->next==NULL && headB->next!=NULL)
    {
        while(headB!=NULL)
        {
            if(headB==headA)
                return headB;
            else
                headB=headB->next;
        }
        return NULL;
    }
     else if(headB->next==NULL && headA->next!=NULL)
    {
        while(headA!=NULL)
        {
            if(headA==headB)
                return headA;
            else
                headA=headA->next;
        }
        return NULL;
    }

    else
    {
        struct ListNode *a=headA;
        struct ListNode *b=headB;
        while(b!=NULL)
        {
            if(a==b && a!=NULL)
            {
                return a;
            }
            else if(a==NULL)
            {
                a=headA;
                b=b->next;
            }
            else
            {
                a=a->next;
            }

            

        }
        return NULL;
    }
 }
    
