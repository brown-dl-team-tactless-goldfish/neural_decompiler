char * breakPalindrome(char * palindrome){
	// Case 1: if length < 2, return empty string
    if (!*palindrome || !*(palindrome+1)) return "";
    
	// Look for first non-a character
    int pos = 0;
    while(palindrome[pos] && palindrome[pos] == 'a') pos++;
    
	// Find length of string
    int len = pos;
    while(palindrome[len]) len++;
    
	// Case 3: pos is either the middle or the end of the string
    if (pos >= len/2) pos = --len;
    
	// Set value to 'b' if it's already 'a', and 'a' otherwise
    palindrome[pos] = palindrome[pos] == 'a' ? 'b' : 'a';
    
    return palindrome;
}