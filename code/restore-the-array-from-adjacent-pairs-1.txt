#pragma GCC optimize ("O3")
#pragma GCC target ("sse3")
#pragma GCC optimize("unroll-loops")
    
class Solution {
public:
    unordered_map<int, set<int>>mp;
    
    void recur(int val, vector<int>&ans, int cnt, const int&n){
        if(cnt == n)return;
        if(mp[val].empty())return;
        int v = *mp[val].begin();
        
        ans.push_back(v);
        
        mp[val].erase(*mp[val].begin());
        mp[v].erase(val);
        cnt +=1 ;
        recur(v, ans, cnt, n);
        return ;
    }
    
    vector<int> restoreArray(vector<vector<int>>& adjacentPairs) {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        for(auto&it:adjacentPairs){
            mp[it[0]].insert(it[1]);
            mp[it[1]].insert(it[0]);
        }
       
        vector<int>ans;
        int n = 0; 
        n = (int)adjacentPairs.size();
        ++n;
        
        for(auto&it:mp){
            if(it.second.size() == 1){
                ans.push_back(it.first);
                int val = *it.second.begin();
                mp[it.first].erase(val);
                mp[val].erase(it.first);
                ans.push_back(val);
                recur(val, ans, 2, n);
            }   
        }
        return ans;
    }
};