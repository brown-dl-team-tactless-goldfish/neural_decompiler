class Solution {
public:
    long long minimumReplacement(vector<int>& nums) {
        int n=nums.size(), prev=nums.back();
        long long ans=0;
        for(int i=n-2; i>=0; i--) {
            if(nums[i]>prev) {
                long long op=nums[i]/prev;
                if(nums[i]%prev==0) op--;
                ans+=op;
                prev=(nums[i]/(op+1));
				//try to maximise the first element in each distribution
            }
            else {
                prev=nums[i];
            }
            // cout<<ans<<" "<<nums[i]<<" "<<prev<<endl;
        }
        return ans;
    }
};