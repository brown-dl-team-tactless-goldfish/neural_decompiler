using PII = pair<int, int> ; //{score, idx}
class Solution {
public:
    int maximumScore(vector<int>& scores, vector<vector<int>>& edges) {
        int n = scores.size() ;
        auto graph = vector<vector<PII>>(n) ;
        for(auto& e : edges){
            int u = e[0] ;
            int v = e[1] ;
            graph[u].push_back({scores[v], v}) ;
            graph[v].push_back({scores[u], u}) ;
        }
        
        for(int i = 0; i < n; i++){
            sort(graph[i].rbegin(), graph[i].rend()) ;
            if(graph[i].size() > 3)
                graph[i].resize(3) ;
        }
            
        int ret = -1 ;
        for(auto& e : edges){
            int u = e[0] ;
            int v = e[1] ;
            for(auto [score1, i] : graph[u]){
                for(auto [socre2, j] : graph[v]){
                    if(i != j && i != v && j != u )
                        ret = max(ret, scores[i] + scores[j] + scores[u] + scores[v]) ;
                }
            }
        }
        return ret ;
    }
};