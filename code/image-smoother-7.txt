class Solution:
    def imageSmoother(self, M: List[List[int]]) -> List[List[int]]:
        num_rows = len(M)
        if (num_rows == 0):
            return M
        num_cols = len(M[0])
        if (num_cols == 0):
            return M
        
        res = [[0 for i in range(num_cols)] for j in range(num_rows)]
        import math
        
        for idx_row in range(num_rows):
            for idx_col in range(num_cols):
                num_nbs = 0
                tmpSum = 0
                
                for [dx, dy] in [[-1, -1], [-1, 0], [-1,1], [0, -1], [0,0], [0,1], [1, -1], [1,0], [1,1]]:
                    # print ("dx = ", dx, " dy = ", dy)
                    
                    tmpX, tmpY = idx_row + dx, idx_col + dy
                    
                    if (0<=tmpX<num_rows and 0 <= tmpY < num_cols):
                        num_nbs += 1
                        tmpSum += M[tmpX][tmpY]
                        
                res[idx_row][idx_col] = math.floor(tmpSum/num_nbs)
                
        print ("res = ", res)
        
        return res