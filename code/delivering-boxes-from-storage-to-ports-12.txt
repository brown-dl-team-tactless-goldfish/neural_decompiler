class Solution {
public:
    
    int boxDelivering(vector<vector<int>>& boxes, int portsCount, int maxBoxes, int maxWeight) {
     
        vector<int> dp(boxes.size()+2),dp1(boxes.size()+2);
        
        for(int i = 2;i <= boxes.size(); i++){
            dp1[i] = dp1[i-1];
            if(boxes[i-1][0]  != boxes[i-2][0]) dp1[i]++;
        }

        int weight = 0, j = 1;        
        deque<int> dq;
        dp[0] = -1;
        
        for(int i = 1; i <= boxes.size(); i++){
            weight += boxes[i-1][1];
            
            
            while(j < i && (weight > maxWeight || (i-j+1) > maxBoxes)){
                weight -= boxes[j-1][1];
                ++j;
            }
            
            while(!dq.empty() && dq.front() < j) dq.pop_front();
            
            while(!dq.empty() && dp[dq.back()-1] - dp1[dq.back()] > dp[i-1] - dp1[i]) dq.pop_back();
            dq.push_back(i);
           
            dp[i] = dp1[i] + dp[dq.front()-1] - dp1[dq.front()] + 2;
            
          }
         
        return dp[boxes.size()]+1;
    } 
};