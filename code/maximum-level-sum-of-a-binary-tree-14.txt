/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxLevelSum(TreeNode* root) {
        if(root==NULL){
            return 0;
        }
        queue<TreeNode*>q;
        q.push(root);
        q.push(NULL);
        int s=0,sum=INT_MIN,level=1,p=0;
        while(!q.empty()){
            TreeNode*node=q.front();
            q.pop();
            if(node==NULL){
                //  sum=max(sum,s);s=0;
                 if(sum<s){
                     sum=s;
                     p=level;
                 }
                 s=0;
                if(!q.empty()){
                q.push(NULL);
               level++;
                }
                // s+=node->val;
            }else if(node!=NULL){
                s+=node->val;
                if(node->left){
                    q.push(node->left);
                }
                if(node->right){
                    q.push(node->right);
                }
            }
        }
        return p;
    }
};