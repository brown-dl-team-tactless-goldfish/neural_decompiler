struct TreeNode* sortedListToBSTUtil(struct ListNode *head, struct ListNode *tail) {
    if (head == tail)
        return NULL;
    struct ListNode *mid = head;
    struct ListNode *temp = head;
    //find the mid element
    while (temp!= tail && temp->next != tail) {
        mid = mid->next;
        temp = temp->next->next;
    }
    struct TreeNode *root = (struct TreeNode *) malloc(sizeof(struct TreeNode));
    root->val = mid->val;
    root->left = sortedListToBSTUtil(head, mid);
    root->right = sortedListToBSTUtil(mid->next, tail);
    return root;
}

struct TreeNode* sortedListToBST(struct ListNode* head) {
    if (!head)
        return NULL;
    
    return sortedListToBSTUtil(head, NULL);
}
