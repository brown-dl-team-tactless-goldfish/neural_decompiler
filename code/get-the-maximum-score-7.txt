int maxSum(vector<int>& nums1, vector<int>& nums2) {
	unordered_set<int> m1;
	for(int i=0;i<nums1.size();i++) m1.insert(nums1[i]);
	unordered_set<int> m;
	for(int i=0;i<nums2.size();i++) {
		if(m1.count(nums2[i])>0) {
			m.insert(nums2[i]);
		}
	}
	vector<long int> sum1;
	long int s = 0;
	for(int i=0;i<nums1.size();i++) {
		if(m.count(nums1[i])>0) {
			sum1.push_back(s);
			s = nums1[i];
		} else {
			s += nums1[i];
		}
	}
	sum1.push_back(s);
	s = 0;
	vector<long int> sum2;
	for(int i=0;i<nums2.size();i++) {
		if(m.count(nums2[i])>0) {
			sum2.push_back(s);
			s = nums2[i];
		} else {
			s += nums2[i];
		}
	}
	sum2.push_back(s);
	int ans = 0;
	for(int i=0;i<sum1.size();i++) {
		ans += sum1[i]>sum2[i] ? (sum1[i]%1000000007):(sum2[i]%1000000007);
		ans = ans % 1000000007;
	}
	return ans;
}