class Solution {
public:
    vector<int> findRightInterval(vector<vector<int>>& intervals) {
        vector<vector<int>>link;
        vector<int>res;
        
        for(int i = 0; i < intervals.size(); ++i){
            link.push_back({intervals[i][0],i});
        }
        
        sort(link.begin(),link.end());
        
        
        /*
            1,4
            2,3
            3,4
            
            1,2,3
            4-> no found -1
            3->found 3 -> 2
            4 -> no found -1
        */
        
        for(int i = 0; i < intervals.size(); ++i){
            int l = 0;
            int r = link.size()-1;
            
            int k = intervals[i][1];
            
            int mid = 0;
            
            while(l<=r){
                
                mid = l + (r-l)/2;
                
                if(link[mid][0] == k){
                    l = mid;
                    break;
                }
                if(k > link[mid][0] ){
                    l = mid+1;
                }else{
                    r = mid-1;
                }
            }
            
            if(l >= link.size()){
                res.push_back(-1);
            }else{
                res.push_back(link[l][1]);
            }
            
        }
        
        return res;
    }
};