class Solution {
public:
    long long minimumTotalCost(vector<int>& nums1, vector<int>& nums2) {
        long long int ans = 0;
        int count = 0;
        int tot = 0;
        int val;
        vector<int> mark(nums1.size(), 0);
        for(int i = 0; i < nums1.size(); i++){
            if(nums1[i] == nums2[i]){
                mark[i] = 1;
                tot++;
                ans += i;
                if(count == 0){
                    val = nums1[i];
                    count = 1;
                }
                else if(val == nums1[i]) count++;
                else count--;
            }
        }
        count = 0;
        for(int i = 0; i < mark.size(); i++){
            if(mark[i] == 1 && nums1[i] == val) count++;
        }
        if(count*2 > tot){
            count = count*2 - tot;
            int i = 0;
            while(count > 0){
                if(i == nums1.size()) return -1;
                if(mark[i] == 0 && nums2[i] != val && nums1[i] != val){
                    ans += i;
                    count--;
                }
                i++;
            }
        }
        return ans;
    }
};