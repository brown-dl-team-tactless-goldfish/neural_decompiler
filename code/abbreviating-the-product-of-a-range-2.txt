class Solution {
public:
    string abbreviateProduct(int left, int right) {
        int num_2 = 0, num_5 = 0;
        vector<int> arr;
        for(int i=left; i<=right; i++) {
            int num = i;
            while(!(num % 2)) {
                num_2 += 1;
                num /= 2;
            }
            while(!(num % 5)) {
                num_5 += 1;
                num /= 5;
            }
            arr.push_back(num);
        }
        int C = min(num_2, num_5);
        long M = 1e5;
        long suf = 1;
        for(auto& num : arr) {
            suf *= long(num);
            suf %= M;
        }
        for(int i=C+1; i<=num_2; i++) {
            suf *= 2;
            suf %= M;
        }
        for(int i=C+1; i<=num_5; i++) {
            suf *= 5;
            suf %= M;
        }
        double log = 0.0;
        for(int i=left; i<=right; i++) log += log10(double(i));
        log -= double(C);
        if(log < 10.0) {
            suf = 1;
            for(auto& num : arr) suf *= long(num);
            for(int i=C+1; i<=num_2; i++) suf *= 2;
            for(int i=C+1; i<=num_5; i++) suf *= 5;
            return to_string(suf) + "e" + to_string(C);
        }
        log -= floor(log);
        log += 4.0;
        int prev = int(pow(10.0, log));
        char p[30];
        snprintf(p, 30, "%5d...%05de%d", prev, suf, C);
        return string(p);
    }
};