class Solution {
public:
    int minOperations(vector<int>& nums1, vector<int>& nums2) {
        int sum1 = accumulate(nums1.begin(), nums1.end(), 0);
        int sum2 = accumulate(nums2.begin(), nums2.end(), 0);
        //cout << sum1 << ", "  << sum2 << endl;
        if (sum1==sum2)
            return 0;
        else if (sum1>sum2) {
            swap(nums1, nums2);
            swap(sum1, sum2);
        }
        //cout << sum1 << ", "  << sum2 << endl;
        vector<int> v1(7,0), v2(7,0);
        for (int num : nums1)
            v1[num]++;
        for (int num : nums2)
            v2[num]++;
        int count=0, i=1, j=6;
        while (sum1<sum2) {
            //cout << sum1 << ", "  << sum2 << endl;
            while (i<=6 && v1[i]==0)
                i++;
            while (j>=1 && v2[j]==0)
                j--;
            if (i<6 && j>1) {
                if (6-i>j-1) {
                    v1[i]--;
                    v1[6]++;
                    count++;
                    sum1 += (6-i);                    
                } else {
                    v2[j]--;
                    v2[1]++;
                    count++;
                    sum2 -= (j-1);                    
                }
            } else if (i<6) {
                v1[i]--;
                v1[6]++;
                count++;
                sum1 += (6-i);
            } else if (j>1) {
                v2[j]--;
                v2[1]++;
                count++;
                sum2 -= (j-1);
            } else
                return -1;
        }
        return count;
    }
};