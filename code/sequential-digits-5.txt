public class Solution {
    private IList<int> res = new List<int>();
    
    public IList<int> SequentialDigits(int low, int high) {
        DFS(low, high, 12, 2);
        
        return res;
    }
    
    private void DFS(int l, int h, int s, int len)
    {
        int cur = s;
        
        if (cur >= l && cur <= h)
            res.Add(cur);
        
        for (int i = 1 + len; i < 10; i++)
        {
            cur = cur % (int)Math.Pow(10, len - 1) * 10 + i;
            
            if (cur >= l && cur <= h)
                res.Add(cur);
            else if (cur > h)
                break;
        }
        
        if (s * 10 + s % 10 + 1 <= h)
            DFS(l, h, s * 10 + s % 10 + 1, len + 1);
    }
}