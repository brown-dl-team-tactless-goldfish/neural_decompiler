class Solution {
public:
    using VI = vector< int >;
    VI pathInZigZagTree( int N, VI A={1}, VI ans={} ){
        for( auto d{ 1 };; ++d ){
            auto K{ 1<<d };
            if( K > N )
                break;
            VI row( K );
            if( d % 2 == 0 )
                generate( row.begin(), row.end(), [ i=K ]() mutable { return i++; });
            else
                generate( row.rbegin(), row.rend(), [ i=K ]() mutable { return i++; });
            copy_n( row.begin(), K, back_inserter( A ) );
        }
        auto it = find( A.begin(), A.end(), N );
        for( auto i = distance( A.begin(), it ); 0 < i; i = ( i-1 ) / 2 )
            ans.push_back( A[ i ] );
        ans.push_back( 1 ); // root
        return{ ans.rbegin(), ans.rend() };
    }
};