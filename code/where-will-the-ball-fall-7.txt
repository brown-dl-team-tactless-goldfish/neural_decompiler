int* findBall(int** grid, int gridSize, int* gridColSize, int* returnSize){
    int m = gridSize, n=*(gridColSize);
    int dp[m][n];
    int* result = malloc(sizeof(result)*n);
    * returnSize = n;
    for(int i=m-1; i>=0; i--){
        for(int j=0; j<n; j++){
            int nextCol = grid[i][j]+j;
            if(nextCol<0 || nextCol == n || grid[i][j]!=grid[i][nextCol]){
                dp[i][j]=-1;
            } // out of board, or V shape 
            else if(i==m-1){
                dp[i][j]=nextCol;
            } // bottom row, we go to next column
            else{
                dp[i][j]=dp[i+1][nextCol];
            } // middle columns, we get the appropriate column from the next row
            if(i==0){
                result[j]=dp[i][j];
            } // copy the first row to your results
        }
    }
    return result;
}