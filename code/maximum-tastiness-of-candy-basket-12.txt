class Solution {
public:
    typedef long long ll;
    bool f(ll m,vector<int>& nums,int k)
    {
        int c =1;
        ll pre = nums[0];
        for(int i=1;i<nums.size();i++)
        {
            if((nums[i]-pre)>=m)
            {
               c++;
               pre = nums[i];    
            }
        }
        return c>=k;
    }
    int maximumTastiness(vector<int>& nums, int k) {
      sort(begin(nums),end(nums));
        ll l = 0,h = nums[nums.size()-1]-nums[0],ans=0;
        while(l<=h)
        {
            ll m = (l+h)/2;
            if(f(m,nums,k))
            {
                ans = m;
                l = m+1;
            }
            else
            h = m-1;
        }
        return ans;
    }
};