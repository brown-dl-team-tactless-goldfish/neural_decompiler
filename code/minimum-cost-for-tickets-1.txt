int mincostTickets(int* days, int daysSize, int* costs, int costsSize) {
    int temp[365];
    /*init*/
    for (int i = 0;i<365;i++) temp[i]=0;
    /*dynamic programming*/
    temp[0] = costs[0];    
    int ts = 0;
    int ts1 = 0;
    int ts2 = 0;
    int p7 = 0;
    int p30 = 0;
    int min = 0;
    for(int i = 1;i<daysSize;i++){
        ts = temp[i-1]+costs[0];
        /*7-day pass*/
        for(int j = 0;j<7;j++){
            if((i-j>=0) && days[i-j]>=(days[i]-6)){
               p7 = i-j; 
            }else break;            
        }
        ts1 = p7>0?(temp[p7-1]+costs[1]):costs[1];
        
        /*30-day pass*/
        for(int j = 0;j<30;j++){
            if((i-j>=0) && days[i-j]>=(days[i]-29)){
               p30 = i-j; 
            }else break;            
        }
        ts2 = p30>0?(temp[p30-1]+costs[2]):costs[2];
        
        /*pick the mim of ts*/
        min = ts<ts1?ts:ts1;
        min = min<ts2?min:ts2;
        temp[i]=min;
    }
    
    return temp[daysSize-1];
    
}