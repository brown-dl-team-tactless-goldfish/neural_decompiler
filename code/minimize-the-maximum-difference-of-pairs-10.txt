class Solution {
public:
    int minimizeMax(vector<int>& nums, int p) {
        sort(nums.begin(),nums.end());
        int n = nums.size();
        int maxDiff = nums[n-1] - nums[0];
        int minDiff = 0;
        while(minDiff <= maxDiff)
        {
            int midDiff = minDiff + (maxDiff - minDiff)/2;
            int cntPairs = 0;
            for(int i =1;i<n;++i)
            {
                if(midDiff >= (nums[i] - nums[i-1]))
                {
                    cntPairs++;
                    i++;
                }
            }
            if(cntPairs >= p)
               maxDiff = midDiff-1;
            else
               minDiff = midDiff + 1;
        }
    return minDiff;
    }
};