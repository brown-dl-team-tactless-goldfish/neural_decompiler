// to 1xxxxxx
int toLeadOne(std::string& str, int idx) {
	if (idx == str.size() - 1 && str[idx] == '0') return 1;
	if (idx == str.size() - 1 && str[idx] == '1') return 0;
	if (str[idx] == '1') return toAllZero(str, idx + 1);
	else {
		return toLeadOne(str, idx + 1) + std::pow(2, str.size() - idx - 1);
	}
}

// to all zero
int toAllZero(std::string& str, int idx) {
	if (idx == str.size() - 1 && str[idx] == '0') return 0;
	if (idx == str.size() - 1 && str[idx] == '1') return 1;
	for (int i=idx; i< str.size(); ++i) {
		if (str[i] == '1') {
			if (str.size() - i - 1 > 0) {
				return toLeadOne(str, i + 1) + std::pow(2, str.size() - i - 1); 
			} else {
				return 1;
			}
		}
	}
	return 0;
}


int minimumOneBitOperations(int n) {
	if (n == 0) return 0;
	std::string str = std::bitset<32>(n).to_string();
	return toAllZero(str, 0);
}