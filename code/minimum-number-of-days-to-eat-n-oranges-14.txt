class Solution {
public:
    int minDays(int n) {
        deque <pair<int,int>> dq; //number left ,steps;
        dq.push_back({n,0});
        unordered_map <int,int> visited;
        while(!dq.empty())
        {
            int steps = dq.front().second;
            int left = dq.front().first;
            dq.pop_front();
            if(left==1) return steps+1;
            else 
            {
                if(visited[left-1]==0)
                {
                    dq.push_back({left-1,steps+1});
                    visited[left-1]=1;
                }
            }
            if(left%2==0 && visited[left/2]==0)
            {
                dq.push_back({left/2,steps+1});
                visited[left/2]=1;
            }
            if(left%3==0 && visited[left/3]==0)
            {
                dq.push_back({left/3,steps+1});
                visited[left/3]=1;
            }
        }
        return -1;
    }
};