class Solution {
public:
    double averageWaitingTime(vector<vector<int>>& cu) {
    //    int sum = c[0][0]+c[0][1];
    //     int r = c.size();
    //     vector<int> v,vm,vl,a;
    //     vm.push_back(sum);
    //     double s = 0;  double avr = 0;
    //     int co = c[0].size();
    //     for(int i = 0;i<r;i++){
    //           int t = 0;
    //            t = c[i][0];
    //            v.push_back(t);
    //         for(int j = 1;j<r;j++){
    //              sum = sum + c[j][1]; 
    //              vm.push_back(sum);
    //          }
    //        }
    //     for(int i = 0;i<r;i++){
    //         vl.push_back(vm[i]);
    //     }
    //      for(int i = 0;i<v.size();i++){
    //          a.push_back(vl[i]-v[i]);
    //      }
    //      for(auto i : a){
    //          s += i;
    //      }
    //      avr = s/(a.size());
    //      return avr;
    // }
    double wait = 0;
    double curr = 0;

    for (auto c : cu) {
      curr = max(curr, double(c[0])) + c[1];
      wait += curr - c[0];
    }

    return double(wait) / cu.size();
  }
};