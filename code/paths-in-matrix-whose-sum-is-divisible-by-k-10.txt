class Solution {
public:
        int numberOfPaths(vector<vector<int>>& grid, int k) {
        int m=grid.size(); int n=grid[0].size();
        int mod=1000000007;
        int dp[m][n][k];
        memset(dp,0,sizeof(dp));
        int val=0;
        for(int j=0;j<n;j++){
            val+=grid[0][j]; val=val%k; dp[0][j][val]=1;
        }
        val=0;
         for(int j=0;j<m;j++){
            val+=grid[j][0]; val=val%k; dp[j][0][val]=1;
        }
        for(int i=1;i<m;i++){
            for(int j=1;j<n;j++){
                for(int id=0;id<k;id++){
                    dp[i][j][id]=0;     
                }
                for(int id=0;id<k;id++){
                        int x=id+grid[i][j]; x=x%k;
                        dp[i][j][x]+=dp[i-1][j][id];
                        dp[i][j][x]%=mod;
                }
                for(int id=0;id<k;id++){
                        int x=id+grid[i][j]; x=x%k;
                        dp[i][j][x]+=dp[i][j-1][id];
                        dp[i][j][x]%=mod;
                }
            }
        }
        return dp[m-1][n-1][0];
    }
};