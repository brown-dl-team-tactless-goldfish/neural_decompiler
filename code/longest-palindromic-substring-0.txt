
typedef struct word {
    char *s;
    int len;
} word;

char * longestPalindrome(char * s)
{
    int n = strlen(s);
    int i, j, d;
    word longest;
    longest.s = s;
    longest.len = 0;
    
    for (i = 0; i < n; i++) {
        for (d = 0; i - d >= 0 && i + d < n; d++) {
            if (s[i - d] != s[i + d])
                break;
            if (longest.len < 1 + d * 2) {
                longest.s = &s[i - d];
                longest.len = 1 + d * 2;
            }
        }

        for (d = 1; i - d + 1 >= 0 && i + d < n; d++) {
            if (s[i - d + 1] != s[i + d])
                break;
            if (longest.len < d * 2) {
                longest.s = &s[i - d + 1];
                longest.len = d * 2;
            }
        }
    }
    
    if (longest.len < n)
        longest.s[longest.len] = '\0';
    return longest.s;
}