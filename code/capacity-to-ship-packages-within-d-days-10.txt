class Solution
{
public:
    int shipWithinDays(vector<int> &weights, int days)
    {
        int sum = accumulate(weights.begin(), weights.end(), 0);
        auto check = [&](int x) // check is lamdba function
        {
            int c = 1;
            int temp = 0;
            for (int i : weights)
            {
                if (temp + i > x)
                    temp = i, c++;
                else
                    temp += i;
            }
            return c <= days;
        };
        
        
        int low = *max_element(weights.begin(), weights.end()), high = sum;
        while (low < high)
        {
            int mid = low + (high - low) / 2;
            if (check(mid))
                high = mid;
            else
                low = mid + 1;
        }
        return low;
    }
};