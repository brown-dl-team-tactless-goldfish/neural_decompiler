with cte
as
(
    select
        product_id,
        new_price,
        dense_rank() over (partition by product_id order by change_date desc) rn
    from Products 
    where change_date <= '2019-08-16'
)


select distinct
    p1.product_id,
    case when c.product_id is not null and rn = 1 then c.new_price else 10 end price 
from Products p1
left join cte c on p1.product_id = c.product_id
where rn = 1 or c.product_id is null