class Solution {
public:
int n;
int rec(int ind,int k,vector<int>&nums,vector<vector<int>>&dp)
{
    if (ind==n) return 0;
    if (k<0) return 1e8;
    if (dp[ind][k]!=-1) return dp[ind][k];
    int sum=0;
    int mx=0;
    int cost=INT_MAX;
    for (int j=ind;j<n;j++)
    {
        mx=max(mx,nums[j]);
        sum+=nums[j];
        cost=min(cost,mx*(j-ind+1)-sum+rec(j+1,k-1,nums,dp));
    }
    return dp[ind][k]=cost;

}
    int minSpaceWastedKResizing(vector<int>& nums, int k) {
        n=nums.size();
        vector<vector<int>>dp(n,vector<int>(k+1,-1));
        return rec(0,k,nums,dp);
    }
};