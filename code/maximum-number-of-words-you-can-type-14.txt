
    int canBeTypedWords(string text, string broken) {
        
        int n = text.length(), m = broken.length();
        int i = 0, j = 0;
        int res = 0;
        
        unordered_set<char> s;
        //putting broken into set for easy access
        for(char c : broken) s.insert(c);
        
        //looping through text
        while(i<n){
        int cnt = 0;
        //looping through words
        while(i<n && text[i]!=' '){
            char c = text[i];
            //if any character in the word is broken 
            if(s.find(c)!=s.end())
                cnt++;
            i++;
        }
        //if no broken char found in word
        if(cnt==0) res++;
            
        i++;
        }
        
        return res;
    }
