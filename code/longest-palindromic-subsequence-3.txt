class Solution:
    def longestPalindromeSubseq(self, s: str) -> int:
        n = len(s)
        matrix = [[0 for i in range(0, n)] for j in range(0, n)]
        for i in range(0, n):
            matrix[i][i] = 1
        for offset in range(1, n):
            for i in range(0, n - offset):
                j = i + offset
                if s[i] == s[j]:
                    matrix[i][j] = matrix[i + 1][j - 1] + 2
                else:
                    matrix[i][j] = max(matrix[i][j-1], matrix[i+1][j])
        return matrix[0][n-1]