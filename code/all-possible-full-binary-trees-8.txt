class Solution {
public:
    vector<TreeNode*> allPossibleFBT(int n) {
        vector<TreeNode*> ans;
        if(n==1){
            TreeNode *root = new TreeNode(0);
            ans.push_back(root);
            return ans;
        }
        for(int i=1; i<=n-2; i += 2){
            vector<TreeNode *> leftRes = allPossibleFBT(i);
            vector<TreeNode *> rightRes = allPossibleFBT(n-i-1);
            for(int j=0; j<leftRes.size(); j++){
                for(int k=0;k<rightRes.size();k++){
                    TreeNode *root = new TreeNode(0);
                    root->left = leftRes[j];
                    root->right = rightRes[k];
                    ans.push_back(root);
                }
            }
        }
        return ans;
    }
};