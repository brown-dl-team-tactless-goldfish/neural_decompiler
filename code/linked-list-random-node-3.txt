/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */

typedef struct Sol{
    int *arr, Size;
} Solution;

struct Sol *solutionCreate(struct ListNode* head) {
    struct Sol *S = malloc(sizeof(struct Sol));
    struct ListNode *GANDU = head;
    int Size = 0, i=0;
    while( GANDU ){ // to find SIZE
        Size++;
        GANDU = GANDU->next;
    }

    S->arr = (int *)malloc(Size * sizeof(int));
    
    while(head){
        S->arr[i++] = head->val;
        head = head->next;
    }
    S->Size = Size;
    return S;
}

int solutionGetRandom(Solution* obj) {
    int random = rand() % obj->Size;
    return obj->arr[random];
}

void solutionFree(Solution* obj) {
    free(obj->arr);
    free(obj); obj=NULL;
}

/**
 * Your Solution struct will be instantiated and called as such:
 * Solution* obj = solutionCreate(head);
 * int param_1 = solutionGetRandom(obj);
 * solutionFree(obj);
*/