class Solution {
public:
    vector<long long> minOperations(vector<int>& nums, vector<int>& q) {
        sort(nums.begin(), nums.end());
        vector<long long> prefix(nums.size()+1, 0ll);
        for (int i=1; i<prefix.size(); ++i){
            prefix[i] += prefix[i-1]+nums[i-1];
        }
        
        vector<long long> ans;
        for (int i=0; i<q.size(); ++i){
            auto it = upper_bound(nums.begin(), nums.end(), q[i]);
            if (it!=nums.end()){
                int idx = it - nums.begin();
                ans.push_back(1ll*q[i]*idx-prefix[idx] + prefix.back()-prefix[idx]-1ll*q[i]*(nums.size()-idx));
            }else{
                ans.push_back(1ll*q[i]*nums.size()-prefix.back());
            }
            
        }
        return ans;
    }
    
};