struct TreeNode* findMin(struct TreeNode* node)
{
    if(node == NULL)
        return NULL;
    struct TreeNode *cur = node;
    if(cur->left){
        return findMin(cur->left);
    }
    return cur;
}

struct TreeNode* deleteNode(struct TreeNode* root, int key) {
    //search and delete
    struct TreeNode *node = root;

    if(node == NULL){
        return NULL;
    }else if(node->val > key)
        node = deleteNode(node->left, key);
    else if(node->val < key)
        node = deleteNode(node->right,key);
    else if(node->val == key){
        if(node->left == NULL && node->right == NULL){
		    node->val = NULL;
		    //free(node);
		    //node = NULL;
	    }else if(node->left && node->right){
            struct TreeNode* child = findMin(node->right);
            node->val = child->val;
            node->right = deleteNode(child,child->val);
        }else if(node->right == NULL && node->left){
            node->val = node->left->val;
            //free(node->left);
            node->left = NULL;
        }else if(node->left == NULL && node->right){
            node->val = node->right->val;
            //free(node->right);
            node->right = NULL;
        }
    }
    return root;
}