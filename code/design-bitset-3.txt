class Bitset {
public:
  vector<int>v;
  int s, c;
  bool fl;
  
  Bitset(int size) {
    s = size;
    c = 0;
    fl = false;
    
    v.resize(s, 0);
  }
  
  void fix(int idx) {
    if(idx >= 0 && idx < s){
      if(fl == false){if(v[idx] == 0) c++, v[idx] = 1;}
      else           {if(v[idx] == 1) c++, v[idx] = 0;}
    }
  }
    
  void unfix(int idx) {
    if(idx >= 0 && idx < s){
      if(fl == false){if(v[idx] == 1) c--, v[idx] = 0;}
      else           {if(v[idx] == 0) c--, v[idx] = 1;}
    }
  }
    
  void flip() {
    fl = !fl;
    c = s - c;
  }
    
  bool all() {
    return c == s;      
  }
    
  bool one() {
    return c != 0;
  }
    
  int count() {
    return c;      
  }
    
  string toString() {
    string S(s, '0');
    
    if(fl == false){
      for(int i = 0; i != s; i++) if(v[i] == 1) S[i] = '1';
    }
    else{
      for(int i = 0; i != s; i++) if(v[i] == 0) S[i] = '1';
    }
    
    return S;
  }
};