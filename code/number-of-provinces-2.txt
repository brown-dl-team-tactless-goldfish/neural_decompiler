int find(int *arr, int x){
    if(arr[x]==x)return x;
    return arr[x]=find(arr,arr[x]);
}

void Union(int *arr,int x, int y){
    int xx = find(arr,x);
    int yy = find(arr,y);
    if(xx!=yy){
        arr[yy]=xx;
    }
}

int findCircleNum(int** M, int MSize, int* MColSize){
    int *a = malloc(sizeof(int)*MSize);
    int *c = malloc(sizeof(int)*MSize);
    int i,j;
    for(i=0;i<MSize;i++){
        a[i]=i;
        c[i]=0;
    }
    int Row = MSize;
    int Col = *MColSize;
    for(i=0;i<Row;i++){
        for(j=0;j<Col;j++){
            if(M[i][j]==1 && i!=j){
                Union(a,i,j);
            }
        }
    }
    for(i=0;i<Row;i++){
        //printf("%d ",a[i]);
        c[find(a,i)]++;
    }
    //printf("\n");
    // for(i=0;i<Row;i++){
    //     printf("%d ",c[i]);
    // }
    //printf("\n");
    int ans=0;
    for(i=0;i<Row;i++){
        if(c[i])ans++;
    }
    return ans;
}
