int findUnsortedSubarray(int* nums, int numsSize){
    int n = numsSize;
    int start = -1;
    int end = -1;
    for(int i = 1; i < n; i++){
        if(start == -1){
            if(nums[i] < nums[i-1]){
                for(int j = i-1; j >=0; j--){
                    if(nums[i] >= nums[j]){
                        start = j + 1;
                        break;
                    }
                    if(j == 0){
                        start = 0;
                        goto end1;
                    }
                }
            }
        }
        else{
            if(nums[i] < nums[start]){
                for(int j = start-1; j >=0; j--){
                    if(nums[i] >= nums[j]){
                        start = j + 1;
                        break;
                    }
                    if(j == 0){
                        start = 0;
                        goto end1;
                    }
                }
            }
        }
    }
    end1: 
    
    for(int i = n-2; i >=0 ; i--){
        if(end == -1){
            if(nums[i] > nums[i+1]){
                for(int j = i+1; j < n; j++){
                    if(nums[i] <= nums[j]){
                        end = j - 1;
                        break;
                    }
                    if(j == n-1){
                        end = n - 1;
                        goto end1;
                    }
                }
            }
        }
        else{
            if(nums[i] > nums[end]){
                for(int j = end+1; j < n; j++){
                    if(nums[i] <= nums[j]){
                        end = j - 1;
                        break;
                    }
                    if(j == n-1){
                        end = n - 1;
                        goto end2;
                    }
                }
            }
        }
    }
    end2:

    if(start == -1 || end == -1)
        return 0;
    else
        return end - start + 1;

}