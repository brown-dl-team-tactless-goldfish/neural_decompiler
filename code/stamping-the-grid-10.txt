class Solution {
public:
  bool possibleToStamp(vector<vector<int>>& g, int sh, int sw) {
    if(sh == 1 && sw == 1) return true;
    int Y = g.size(), X = g[0].size();    
    int y = Y, x = X, xlim = X - sw, ylim = Y - sh;
    
    for(int i = 0; i != Y; i++)
      for(int j  = 0; j != X; j++)
        if(g[i][j] == 0) {x = j, y = i; goto mark;}
      
    mark:;
    if(y == Y && x == X) return true;
    if(sh > Y || sw > X) return false;
    if(X - x < sw || Y - y < sh) return false;
        
    for(int lim_y = y + sh, i = y; i != lim_y ; i++)
      for(int lim_x = x + sw, j = x; j != lim_x ; j++)
        if( g[i][j] ) return false;
    
    vector<vector<int>> a(Y,vector<int>(X)), b(Y,vector<int>(X)), vis(Y,vector<int>(X,0));
    
    for(int j = 0; j != X; j++)                            //from down to up
      for(int i = Y - 1, k = 0; i >= 0; i--)
        g[i][j] == 0 ? a[i][j] = ++k : a[i][j] = k = 0;
      
    for(int i = 0; i != Y; i++)                            //from right to left
      for(int j = X - 1, k = 0; j >= 0; j--)
        g[i][j] == 0 ? b[i][j] = ++k : b[i][j] = k = 0;
    
    queue<pair<int,int>>q;
    q.push({y,x});    
 
    while(!q.empty()){ 
      auto [y, x] = q.front(); q.pop(); 
      if(vis[y][x]) continue;
      vis[y][x] = 1;
      
      if(x         && vis[y][x-1] == 0 && a[y][x-1]  >= sh) q.push({y, x-1});
      if(x != xlim && vis[y][x+1] == 0 && a[y][x+sw] >= sh) q.push({y, x+1}); 
      if(y         && vis[y-1][x] == 0 && b[y-1][x]  >= sw) q.push({y-1, x});
      if(y != ylim && vis[y+1][x] == 0 && b[y+sh][x] >= sw) q.push({y+1, x});
    }
   
    int k;
    for(y = 0; y <= ylim; y++)
      for(x = 0; x <= xlim;)
        if(vis[y][x] == 1)
          for(k = 1, x++; k != sw; x++, k++)
            vis[y][x] ? k = 0 : vis[y][x] = 1;        
        else x++;
      
    for(x = 0; x < X; x++)
      for(y = 0; y < Y;)
        if(vis[y][x] == 1)
          for(k = 1, y++; k != sh; y++, k++)
            vis[y][x] ? k = 0 : vis[y][x] = 1;
        else y++;
  
    for(y = 0; y != Y; y++)
      for(x = 0; x != X; x++)
        if(g[y][x] == vis[y][x]) return false;
       
    return true;
  }
};