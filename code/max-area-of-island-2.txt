int travel(int** grid, int cur_x, int cur_y, int x, int y){
    int ret = 1;
    grid[cur_x][cur_y] = 0;
    
    if(cur_x + 1 < x){
        if(grid[cur_x+1][cur_y])
            ret+=travel(grid, cur_x+1, cur_y, x, y);
    }
    if(cur_x -1 >= 0){
        if(grid[cur_x-1][cur_y])
            ret+= travel(grid, cur_x-1, cur_y, x, y);
    }
    if(cur_y + 1 < y){
        if(grid[cur_x][cur_y+1])
            ret+= travel(grid, cur_x, cur_y+1, x, y);
    }
    if(cur_y - 1 >= 0){
        if(grid[cur_x][cur_y-1])
            ret+= travel(grid, cur_x, cur_y-1, x, y);
    }
    return ret;
}

int maxAreaOfIsland(int** grid, int gridSize, int* gridColSize){
    int i,j;
    int x = gridSize;
    int y = *gridColSize;
    
    int ret = 0;
    int temp = 0;
    for(i=0;i<x;i++){
        for(j=0;j<y;j++){
            temp = 0;
            if(grid[i][j]){
                temp = travel(grid, i, j, x, y);
            }
            ret = temp > ret? temp : ret;
        }
    }
    return ret;
}