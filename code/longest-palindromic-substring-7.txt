    if(!s[0])
        return s;
    int length = strlen(s);
    int max_length = 1;
    int max_i = 0;
    int max_j = 0;
    
    /* check if the sub_substring of current substring is palindrome */
    int sub_substring[length][length];
    for(int k=0; k<length; k++)
        for(int l=0; l<length; l++)
        {
            if(k==l)
                sub_substring[k][l]=1;
            else
                sub_substring[k][l]=0;
        }
    
    for(int sub_length=2; sub_length <= length; sub_length++)
    {
        for(int i=0; i<length-sub_length+1; i++)
        {
            int j = i+sub_length-1;
            if((sub_length==2 || sub_substring[i+1][j-1] == 1) && s[i] == s[j])
            {
                sub_substring[i][j]=1;
                if(sub_length >= max_length)
                {
                    max_length = sub_length;
                    max_i = i;
                    max_j = j;
                }
            }
        }