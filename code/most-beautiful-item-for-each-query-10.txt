public class Solution { 
    public int[] MaximumBeauty(int[][] itms, int[] q) { 
        int[] r = new int[q.Length];
        
        Array.Sort(itms, new Comparison<int[]>((x,y) => { return x[0] < y[0] ? -1 : (x[0] > y[0] ? 1 : 0); }));
        
        for (int i = 1; i < itms.Length; ++i)
            itms[i][1] = Math.Max(itms[i][1], itms[i - 1][1]);
        
        for (int i = itms.Length - 1; i >= 1; --i) 
            if (itms[i][0] == itms[i - 1][0]) itms[i - 1][1] = itms[i][1];
        
        for (int i = 0; i < q.Length; ++i) 
            r[i] = BinarySearch(itms, q[i]);
        
        return r;
    }
    
    public int BinarySearch(int[][] itms, int p) { 
        int l = 0, r = itms.Length - 1;
        while (l <= r) {
            int m = l + (r - l) / 2;
            if (itms[m][0] == p) {
                return itms[m][1];
            } else if (p > itms[m][0]) {
                l = m + 1;
            } else {
                r = m - 1;
            }
        }
        
        if (l < 0 || r < 0) return 0;
        else if (l >= itms.Length) return itms[l - 1][1];
        else return itms[l][0] > p ? itms[l - 1][1] : itms[l][1];
    }
}