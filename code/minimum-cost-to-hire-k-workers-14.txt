class Solution {
public:
    double mincostToHireWorkers(vector<int>& quality, vector<int>& wage, int k) {
        int n = wage.size();
        vector<pair<double, int> > v;
        
        for(int i=0; i<n; ++i) {
            v.push_back({wage[i] / (double) quality[i], quality[i]});
        }
        
        sort(v.begin(), v.end());
        
        
        priority_queue<int> pq;
        int qsum = 0;
        for(int i=0; i<k; ++i) {
            qsum += v[i].second;
            pq.push(v[i].second);
        }
        
        double ans = v[k-1].first * qsum;
        for(int i=k; i<n; ++i) {
            if(v[i].second < pq.top()) {
                qsum = qsum + v[i].second - pq.top();
                pq.pop();
                pq.push(v[i].second);
            }
            if(v[i].first * qsum < ans) {
                ans = v[i].first * qsum;
            }
        }
        return ans;
    }
};