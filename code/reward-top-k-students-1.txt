bool cmp(pair<int,int> a, pair<int,int> b) {
    // Reverse Sort by 2nd, 1st Sorted
    if(a.second == b.second) return a.first < b.first;
    return a.second > b.second;
}

class Solution {
public:
    vector<int> topStudents(vector<string>& positive_feedback, vector<string>& negative_feedback, vector<string>& report, vector<int>& student_id, int k) {
        int n = student_id.size();
        unordered_map<string, int> pos, neg;
        for(auto x: positive_feedback) pos[x] = 1;
        for(auto x: negative_feedback) neg[x] = 1;
        unordered_map<int, int> points;
        for(auto x: student_id) points[x] = 0;
        for(int i=0; i<report.size(); i++) {
            string st = report[i];
            st.push_back(' ');
            string s;
            for(auto c: st) {
                if(c == ' ') {
                    if(pos[s]) points[student_id[i]] += 3;
                    else if(neg[s]) points[student_id[i]] -= 1;
                    s.clear();
                }
                else s.push_back(c);
            }
        }
        vector<pair<int,int>> v;
        for(auto x: points) v.push_back({x.first, x.second});
        sort(v.begin(),v.end(), cmp);
        vector<int> ans;
        for(int i=0; i<k; i++) {
            ans.push_back(v[i].first);
        }
        return ans;
    }
};