class Solution {
public:
    bool is_prime(int n, int i = 2)
    {
        if (n < 2) return false;
        else if (i > n / i) return true;
        else if (n % i == 0) return false;
        return is_prime(n, i + 1);
    }
    
    int diagonalPrime(vector<vector<int>>& nums) {
        int res = -2e9, n = nums.size();
        for (int i = 0; i < n; ++i)
        {
            if (is_prime(nums[i][i])) res = max(res, nums[i][i]);
            if (is_prime(nums[i][n-i-1])) res = max(res, nums[i][n-i-1]);
        }
        return res > -2e9 ? res : 0;
    }
};