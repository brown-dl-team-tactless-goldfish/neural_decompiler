map<string,int> m;

map<int,unordered_set<string>> mp;


AllOne() {
    
}

void inc(string key)
{
    if(m.find(key) == m.end())
    {
        m[key] = 1;
        
        mp[1].insert(key);
    }
    
    else
    {
        int x = m[key];
        
        m[key] = x + 1;
        
        mp[x].erase(key);
        
        if(mp[x].size() == 0)
        {
            mp.erase(x);
        }
        
        mp[x+1].insert(key);
    } 
}

void dec(string key)
{
   int val = m[key];
    
   if(val == 1)
   {
       m.erase(key);
       mp[val].erase(key);
       
       if(mp[val].size() == 0)
       {
           mp.erase(val);
       }
   }
    else
    {
        m[key] = val-1;
        
        mp[val].erase(key);
       
       if(mp[val].size() == 0)
       {
           mp.erase(val);
       }
        
        mp[val-1].insert(key);
    }
    
}

string getMaxKey()
{
    string res = "";
    
    if(mp.size() > 0)
    {
        auto it = mp.rbegin()->second.begin();
        
        res = *it;
        
       
    }
    
    return res;
}

string getMinKey() 
{    
    string res = "";
    
    if(mp.size() > 0)
    {
        auto it = mp.begin()->second.begin();
        
        res = *it;
    }
    
    return res; 
}