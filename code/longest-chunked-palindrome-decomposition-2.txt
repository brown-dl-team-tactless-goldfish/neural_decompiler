class Solution {
public:
/*
palindromes = 0
i = 0, end_start, end_last = text.size()
first = text.start

for (j = end_last - 1; j > i; --j)
    range = end_last - j
    check if [i, i + range] == [j, j + range] 
    yes 
        i = i + range
        end_last = j

*/
    int longestDecomposition(string text) {
        int k = 0;

        // left = i, right = j
        const char * left = text.c_str(), * end = text.c_str() + text.size(), *right;
        for (right = end - 1; right > left; --right) {
            // cout << "i: " << i << " j: " << j << endl;
            // cout << "Comparing: " << left << " | " << right << ", Range: " << range << endl;
            if (strncmp(left, right, end - right) == 0) {
                // cout << "Found a match!" << endl;
                left = left + (end - right);
                end = right;
                k += 2;
            }
        }
        if (left != right + 1) {
            k += 1;
        }
        return k;
    }
};