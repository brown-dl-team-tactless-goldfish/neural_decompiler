class Solution {
public:
    double champagneTower(int p, int row, int col) {
        // first row will contain all amount of water
        vector<double>pre(1,p);
        for(int i=1;i<=row;i++){
            // cups indicates how many cups are there in ith row
           int cups=i+1;
            // create a array to hold water in cups
           vector<double>cur(cups,0);
            // start filling cups
            for(int j=0;j<cups;j++){
			double excess;
                // if i am on first or last cup then there is only one cup in previous row which can fill this cup
    //pre[0] indicates how much water is there in 1st cup of previous row,after subtracting it by 1 i can find excess water in this if excess water is negative then previous cup is partially filled so excess water is 0,that's why i am taking maximum of both
                if(j==0 || j==cups-1)
                    excess=max(pre[0]-1,double(0))/2;
                else{
                    // for other cups there are two cups in previous row which can fill this cup. Other logic is same as above one.
                    double excess=max(pre[j]-1,double(0))/2;
                    excess+=max(pre[j-1]-1,double(0))/2;
                }
                    cur[j]=excess;    
            }
            pre=cur;
        }
        return pre[col]>=1?1:pre[col];
    }
};