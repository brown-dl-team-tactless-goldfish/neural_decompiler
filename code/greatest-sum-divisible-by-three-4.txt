public class Solution {
    
    public int MaxSumDivThree(int[] nums) {
        
        if(nums == null || nums.Length == 0)
            return 0;
        
        int n = nums.Length;
        // dp[i,j]: greatest sum formed by first i numbers such that sum % 3 == j
        int[,] dp = new int[n + 1,3];
        dp[0,0] = 0;
        dp[0,1] = Int32.MinValue;
        dp[0,2] = Int32.MinValue;
        
        for(int i = 1; i <= n; i++)
        {
            int num = nums[i-1];
            if(num % 3 == 0)
            {
                dp[i, 0] = Math.Max(dp[i-1, 0] + num, dp[i-1, 0]);
                dp[i, 1] = Math.Max(dp[i-1, 1] + num, dp[i-1, 1]);
                dp[i, 2] = Math.Max(dp[i-1, 2] + num, dp[i-1, 2]);
            }
            else if(num % 3 == 1)
            {
                dp[i, 0] = Math.Max(dp[i-1, 2] + num, dp[i-1, 0]);
                dp[i, 1] = Math.Max(dp[i-1, 0] + num, dp[i-1, 1]);
                dp[i, 2] = Math.Max(dp[i-1, 1] + num, dp[i-1, 2]);
            }
            else if(num % 3 == 2)
            {
                dp[i, 0] = Math.Max(dp[i-1, 1] + num, dp[i-1, 0]);
                dp[i, 1] = Math.Max(dp[i-1, 2] + num, dp[i-1, 1]);
                dp[i, 2] = Math.Max(dp[i-1, 0] + num ,dp[i-1, 2]);
            }
        }
        
        return dp[n,0];
    }
}