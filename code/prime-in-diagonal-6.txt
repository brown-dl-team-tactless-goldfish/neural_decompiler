class Solution {
public:
    bool isPrime(int n){
    if (n <= 1)
        return false;
    for (int i = 2; i <= sqrt(n); i++)
        if (n % i == 0)
            return false;
 
    return true;
}
    int diagonalPrime(vector<vector<int>>& nums) {
        int x = nums.size();
        int i=0;
        int maxi=0,maxii=0;
         int a=0,b=x-1;
        while(i<x and a<x){
            int c = isPrime(nums[i][i]);
            int d = isPrime(nums[a][b]);
             if(c){
              maxi = max(maxi,nums[i][i]);
             } 
            if(d){
                maxii = max(maxii,nums[a][b]);   
             }
                a++;
                b--;
                i++;
        }
        return max(maxi,maxii);
    }
};