bool check(char* s, char* part,int i)
{
    int k=0;
    for(int j=i;j<i+strlen(part);j++)
    {
        if(s[j]!=part[k++]) return false;
    }

    return true;
}

char * removeOccurrences(char * s, char * part){

    if ( strlen(part) > strlen(s))
         return s;

    char* ans;
    char l[1005],r[1005];
    int n=strlen(s),m=strlen(part);
    
   int i=0,flag=0;
    for(i=0;i<strlen(s);i++)
    {
        if(flag) i=0;// refresh s and need to recheck again
        flag=0;

        if(s[i]==part[0])
        {
            if(check(s,part,i))
            {
                int tmp=i+m;
                int j=0;
                for(j=i;tmp<strlen(s);j++)
                {
                    s[j]=s[tmp++]; //directly change the data
                }
                s[j]='\0';
                flag=1;
                
            }
        }
    }

// avoid that s is totally same as part
    if(check(s,part,0)) return "";

    return s;
}