class AuthenticationManager {
public:
    int timeToLive;
    unordered_map<string,int>m;
    AuthenticationManager(int timeToLive) {
        this->timeToLive=timeToLive;
        m.clear();
    }
    
    void generate(string tokenId, int currentTime) {
        m[tokenId]=currentTime;
    }
    
    void renew(string tokenId, int currentTime) {
        if(m.find(tokenId)==m.end() || currentTime-m[tokenId]>=timeToLive) {
            return;
        }
        m[tokenId]=currentTime;
    }
    
    int countUnexpiredTokens(int currentTime) {
        int count=0;
        for(auto it:m) {
            if(currentTime-it.second<timeToLive) {
                count++;
            }
        }
        return count;
    }
};