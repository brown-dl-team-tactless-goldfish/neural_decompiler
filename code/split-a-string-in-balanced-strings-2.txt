typedef struct{
    int top;
    char data[1000];
}Stack;

Stack stack;

void push(char data){
    if(stack.top==999){
        return;
    }
    else{
        stack.top++;
        stack.data[stack.top]=data;     
    }
}

void pop(){
    if(stack.top==-1){
        return;
    }
    else{
        stack.top--;
    }
}

char upper(){
    if(stack.top==-1){
        return -1;
    }
    else{
        return stack.data[stack.top];
    }
}

int balancedStringSplit(char* s){
    stack.top=-1;
    int len=strlen(s);
    int i;
    int count=0;
    for(i=0;i<len;i++){
        if(upper()==-1 && s[i]=='R'){
            push(s[i]);
            count++;
        }
        else if(upper()=='R' && s[i]=='L'){
            pop();
        }
        else if(upper()==-1 && s[i]=='L'){
            push(s[i]);
            count++;
        }
        else if(upper()=='L' && s[i]=='R'){
            pop();
        }
        else{
            push(s[i]);
        }
    }
    return count;     
}