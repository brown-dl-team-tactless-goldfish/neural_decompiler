int minEatingSpeed(int *piles, int pilesSize, int h) {
    int retVal = 0;

    int i;

    int low = 1;
    int high = 0;
    for (i = 0; i < pilesSize; ++i) {
        high = fmax(high, piles[i]);
    }

    int useHour;
    int middle;
    while (low < high) {
        middle = low + (high - low) / 2;

        useHour = 0;
        for (i = 0; i < pilesSize; ++i) {
            // ceiling of an integer division
            useHour += ((piles[i] + middle - 1) / middle);
        }
        if (useHour > h) {
            low = middle + 1;
        } else {
            high = middle;
        }
    }
    retVal = low;

    return retVal;
}