//  dp[i][j][k] means points from i to j when there are k same color(as of boxes[i]) boxes left of boxes[i] and color of boxes[i] is equal to that of those boxes...
class Solution {
public:
    
    int fun(vector<int> num,int i,int j,int k,vector<vector<vector<int> > > &dp){
        if(i>j) return 0;
        if(dp[i][j][k]>0) return dp[i][j][k];
        for (; i + 1 <= j && num[i + 1] == num[i]; i++, k++);
        int res=(k+1)*(k+1)+fun(num,i+1,j,0,dp);
        for(int m=i+1;m<=j;m++){
            if(num[m]==num[i]){
                res=max(res,fun(num,i+1,m-1,0,dp)+fun(num,m,j,k+1,dp));
            }
        }
        return dp[i][j][k]=res;
    }
    
    int removeBoxes(vector<int>& boxes) {
       vector<vector<vector<int> > > dp(boxes.size()+1,vector<vector<int> >(boxes.size()+1,vector<int>(boxes.size()+1,0)));
        
       return fun(boxes,0,boxes.size()-1,0,dp);
    }
};