class Solution:
    def fourSumCount(self, A: List[int], B: List[int], C: List[int], D: List[int]) -> int:
        n = len(A)
        
        AB, CD = {}, {}
        
        for i in range(n):
            for j in range(n):
                if (A[i] + B[j]) not in AB:
                    AB[A[i] + B[j]] = 1
                else:
                    AB[A[i] + B[j]] += 1
                    
                if (C[i] + D[j]) not in CD:
                    CD[C[i] + D[j]] = 1
                else:
                    CD[C[i] + D[j]] += 1
                    
 
                
        print ("AB = ", AB, " CD = ", CD)
        
        res = 0
        
        maps = {}

        
        n2 = len(AB)
        # print ("n2 = ", n2)
        for k, v in AB.items():
            # print ("k = ", k, " v = ", v)
            
            if (0-k in CD):
                # print ("0-k = ", 0-k, " CD[0-k] = ", CD[0-k])
                res += (v * CD[0-k])
                # res += v + CD[0-k]
                print (" 1 res = ", res)
                
                
        print ("res = ", res)
        
        return res