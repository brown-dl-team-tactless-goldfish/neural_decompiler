int longestValidParentheses(char* s) 
{
	int ns = 0;
	for (; s[ns]; ++ns);
	int res = 0;
	int temp = 0;
	int cur = 0;
	int i = 0;
	int j = 0;
	int flag;
	for (; cur < ns; ++cur)
	{
		if ('(' == s[cur])
			++i;
		else if (')' == s[cur])
			++j;
		if (i == j)
		{
			temp = i + j;
			res = temp>res ? temp : res;
		}
		else if (i < j)
		{
			temp = 0;
			i = j = 0;
		}
	}
	res = temp>res ? temp : res;
	int res2 = 0;
	temp = 0;
	i = j = 0;
	for (cur=ns-1; cur>=0 ; --cur)
	{
		if ('(' == s[cur])
			++i;
		else if (')' == s[cur])
			++j;
		if (i == j)
		{
			temp += i + j;
			res2 = temp>res2 ? temp : res2;
		}
		else if (j < i)
		{
			temp = 0;
			i = j = 0;
		}
	}
	res2 = temp>res2 ? temp : res2;
	return res > res2 ? res : res2;
}