class Solution {
public:
    int minAreaRect(vector<vector<int>>& points) {
        map<int, vector<int>> xHashMap;
        for (vector<int>& point : points) {
            xHashMap[point[0]].push_back(point[1]);
        }
        
        int res = INT_MAX;
        unordered_map<int, int> lastX;
        for (map<int, vector<int>>::iterator iter = xHashMap.begin(); iter != xHashMap.end(); ++iter) {
            int xPos = iter->first;
            vector<int>& yPoses = iter->second;
            sort(yPoses.begin(), yPoses.end());
            
            int N = yPoses.size();
            for (int i = 0; i < N; ++i) {
                for (int j = i + 1; j < N; ++j) {
                    int key = yPoses[i] + yPoses[j] * 40001;
                    if (lastX.find(key) != lastX.end()) {
                        int width = xPos - lastX[key];
                        int height = yPoses[j] - yPoses[i];
                        res = min(res, width * height);
                    }
                    
                    lastX[key] = xPos;
                }
            }
        }
        
        return res == INT_MAX ? 0 : res;
    }
};