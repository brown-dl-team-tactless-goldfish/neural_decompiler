int max(int a, int b)
{
    return (a > b)? a: b;
}

int minDistance(char * word1, char * word2)
{
    int len_1 = strlen(word1), len_2 = strlen(word2);
    int** dp = (int**)malloc(sizeof(int*) * (len_1 + 1));
    int i, j;
    for(i = 0; i <= len_1; i++)
    {
        dp[i] = (int*)malloc(sizeof(int) * (len_2 + 1));
        memset(dp[i], 0, sizeof(int) * (len_2 + 1));
    }
    
    for(i = 1; i <= len_1; i++)
    {
        for(j = 1; j <= len_2; j++)
        {
            if(word1[i - 1] == word2[j - 1])
                dp[i][j] = 1 + dp[i - 1][j - 1];
            else
                dp[i][j] = dp[i - 1][j - 1];
            
            dp[i][j] = max(dp[i][j], max(dp[i - 1][j], dp[i][j - 1]));
        }
    }
    return len_1 + len_2 - 2 * dp[len_1][len_2];
}