public class Solution {
    private static bool IsPrime(int value) {
        if (value <= 2)
           return value == 2;

        if (value % 2 == 0)
           return false;

        int n = (int)(Math.Sqrt(value) + 0.1);

        for (int d = 3; d <= n; d += 2)
            if (value % d == 0)
                return false;

        return true;    
    }

    public int[] ClosestPrimes(int left, int right) {
        int first = -1;
        int second = -1;

        int bestFirst = -1;
        int bestSecond = -1; 

        for (int i = left; i <= right; ++i) {
            if (IsPrime(i)) {
                first = second;
                second = i;

                if (first > 0) {
                    if (bestFirst < 0 || bestSecond - bestFirst > second - first) {
                        bestFirst = first;
                        bestSecond = second;

                        if (bestSecond - bestFirst <= 2)
                           break;
                    }
                }
            } 
        }

        if (first > 0)
            return new int[] { bestFirst, bestSecond };
        else
            return new int[] { -1, -1 };
    }
}