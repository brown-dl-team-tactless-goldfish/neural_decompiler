class Solution {
    public int[] findOriginalArray(int[] changed) {
        int n = changed.length;
        int[] result = new int[n/2];
        if (n % 2 == 1) {
            return new int[0];
        }
        
        int min = 0, max = 0;
        Map<Integer, Integer> map = new HashMap<>();
        for (int c:changed) {
            map.put(c, map.getOrDefault(c, 0) + 1);
            min = Math.min(min, c);
            max = Math.max(max, c);
        }
        
        int i = 0;
        
        for (int x = min; x <= max; ++x) {
            if (!map.containsKey(x)) 
                continue;
            if (map.get(x) > map.getOrDefault(x+x, 0)) {
                return new int[0];
            }
            for (int j = 0; j < map.get(x); ++j) {
                result[i++] = x;
                map.put(x+x, map.get(x+x) - 1);
            }
        }
        
        return result;
        
    }
}