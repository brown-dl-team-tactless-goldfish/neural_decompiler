/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */

int data[10000];

int caculate(int level, struct TreeNode* parent){
    int ldepth = 0, rdepth = 0;
    data[level] += parent->val;
    if (parent->left != NULL) {
        ldepth = caculate(level + 1, parent->left);
    }
    if (parent->right != NULL) {
        rdepth = caculate(level + 1, parent->right);
    }

    return (ldepth > rdepth) ? 
        ((ldepth > level) ? ldepth : level) : 
        ((rdepth > level) ? rdepth : level);
}

int maxLevelSum(struct TreeNode* root){
    int max = root->val;
    int res = 1;
    int depth = 0;
    memset(data, 0, sizeof(int) * 10000);
    if (root != NULL) {
        depth = caculate(0, root);
    }
    for (int i = 0; i < depth + 1; i++) {
        if (data[i] > max) {
            max = data[i];
            res = i + 1;
        }
    }
    return res;
}