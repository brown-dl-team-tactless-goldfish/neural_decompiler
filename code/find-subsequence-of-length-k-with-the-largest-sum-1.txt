struct pair{
    int idx;
    int val;
};

int cmp_pair_val(const void* a, const void *b){
    struct pair pa = *(const struct pair*) a;
    struct pair pb = *(const struct pair*) b;
    return pb.val - pa.val;
    }
    
int cmp_pair_idx(const void* a, const void *b){
    struct pair pa = *(const struct pair*) a;
    struct pair pb = *(const struct pair*) b;
    return pa.idx - pb.idx;
    }

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* maxSubsequence(int* nums, int numsSize, int k, int* returnSize){
    struct pair * pairs = malloc(sizeof(struct pair)*numsSize);
    for (int i = 0; i < numsSize; i++){
        pairs[i].idx = i;
        pairs[i].val = nums[i];
    } 

    qsort(pairs,numsSize,sizeof(struct pair),cmp_pair_val);
    qsort(pairs,k,sizeof(struct pair),cmp_pair_idx);
    int * sol = (int*)malloc(sizeof(int)*k);
    (*returnSize) = k;
    for (int i = 0; i < k ; i++){
        sol[i] = nums[pairs[i].idx];
    }

    free(pairs);
    return sol;
}