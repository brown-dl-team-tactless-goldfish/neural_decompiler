bool DFS(int** grid,int row, int col, int row_max, int col_max){
    //we will apply the bndary condtion to terminate the recursive loop when the pointer reaches 
    // the boundary 
    if((row < 0) || (col < 0) || (row >= row_max) || (col >= col_max)){return false;}
    //we will also terminate if we reach or get water in search
    if(grid[row][col] == 1){return true;}

    //we will now polulate the current land as water to make sure we dont count it as island again
    grid[row][col] = 1;

    //core dfs
    bool left = DFS(grid,row-1,col,row_max,col_max);
    bool right = DFS(grid,row+1,col,row_max,col_max);
    bool top = DFS(grid,row,col-1,row_max,col_max);
    bool buttom = DFS(grid,row,col+1,row_max,col_max);
    
    //Given point is isalnd if all four directions are water
    return left && right && top && buttom;
}
int closedIsland(int** grid, int gridSize, int* gridColSize){
//we will implement dfs for counting the number fo sisands by performing fist search 
//island and consequently perfom dfs on the island 
int num_islands = 0;
for(int row =0 ; row < gridSize; row++){
    for(int col = 0 ;col < gridColSize[0]; col++){
        if(grid[row][col]== 0 && DFS(grid,row,col,gridSize,gridColSize[0])){num_islands++;}
    }
}
return num_islands;
}