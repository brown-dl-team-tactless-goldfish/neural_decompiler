using LL = long long ;
class Solution {
private:
    int M = 1e9 + 7 ;
public:
    int numberOfWays(int startPos, int endPos, int k) {
        LL d = abs(endPos - startPos) ;
        if(d > k)
            return 0 ;
        vector<vector<LL>>dp(k+1, vector<LL>(2*k + 1)) ;
        dp[0][k] = 1 ;
        for(int i = 1; i <= k; i++){
            for(int j = 0; j <= 2*k; j++){
                if(j-1>= 0)
                    dp[i][j] += dp[i-1][j-1] ;
                if(j+1 <= 2*k)
                    dp[i][j] += dp[i-1][j+1] ;
                dp[i][j] %= M ;
            }
        }
        return dp[k][k+ d] ;
    }
};