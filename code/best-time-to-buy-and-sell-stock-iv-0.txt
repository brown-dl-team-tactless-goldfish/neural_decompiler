int max(int a, int b)
{
	if (a > b) 
	{
		return a;    
	}
	return b;
}

int maxProfit(int k, int* prices, int n)
{
	if (n < 2) 
	{
		return 0;
	}
	int sold[n][k + 1];
	int hold[n][k + 1];
	for (int i = 0; i < n; i++)
		for (int j = 0; j <= k; j++)
		{
			sold[i][j] = -10000;
			hold[i][j] = -10000;
		}
	sold[0][0] = 0;
	hold[0][0] = -(*prices);

	for (int i = 1; i < n; i++)
	{
		hold[i][0] = max(-prices[i], hold[i - 1][0]);
		for (int j = 1; j <= k; j++)
		{
			hold[i][j] = max(hold[i - 1][j], sold[i - 1][j] - prices[i]);
			sold[i][j] = max(sold[i - 1][j], hold[i - 1][j - 1] + prices[i]);
		}
	}
	int res = 0;
	for (int i = 0; i <= k; i++) {
		res = max(res, sold[n - 1][i]);
	}
	return res;
}