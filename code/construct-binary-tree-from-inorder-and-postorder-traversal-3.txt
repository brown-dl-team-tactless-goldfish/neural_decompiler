struct TreeNode* helper(int* inorder, int inS, int inE, int* postorder, int postS, int postE) {
    if (postS > postE)
        return NULL;
    
    struct TreeNode* node = malloc(sizeof(struct TreeNode));
    node->val = postorder[postE];
    node->left = node->right = NULL;
    if (postS != postE) {
        int i;
        for (i = inS; i < inE; i++) {
            if (inorder[i] == postorder[postE])
                break;
        }
        int leftSubtreeSize = i - inS;
        node->left = helper(inorder, inS, i - 1, postorder, postS, postS + leftSubtreeSize - 1);
        node->right = helper(inorder, i + 1, inE, postorder, postS + leftSubtreeSize, postE - 1);
    }
    return node;
}

struct TreeNode* buildTree(int* inorder, int inorderSize, int* postorder, int postorderSize){
    return helper(inorder, 0, inorderSize - 1, postorder, 0, postorderSize - 1);
}