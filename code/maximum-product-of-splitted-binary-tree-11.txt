#include <threads.h>

static thread_local int g_treeSum;
static thread_local int64_t g_maxProduct;

static int Tree_sum(const struct TreeNode * const pRoot){
    if (NULL == pRoot){
        return 0;
    }

    return pRoot->val + Tree_sum(pRoot->left) + Tree_sum(pRoot->right);
}

static int maxProduct_recurse(const struct TreeNode * const pRoot){
    if (NULL == pRoot){
        return 0;
    }

    const int curTreeSum = pRoot->val + 
        maxProduct_recurse(pRoot->left) + maxProduct_recurse(pRoot->right);

    const int64_t curMaxProduct = (int64_t)curTreeSum * (int64_t)(g_treeSum - curTreeSum);
    if (curMaxProduct > g_maxProduct){
        g_maxProduct = curMaxProduct;
    }

    return curTreeSum;
}

int maxProduct(const struct TreeNode * const pRoot){
    g_treeSum = Tree_sum(pRoot);

    g_maxProduct = 0;
    maxProduct_recurse(pRoot);

    return g_maxProduct % 1000000007;
}