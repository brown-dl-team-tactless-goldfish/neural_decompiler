class Solution {
public:
    
    vector<vector<string>> findDuplicate(vector<string>& paths) {
        vector<vector<string>> result;
		
		//Content -> file path map
        unordered_map<string, vector<string>> pmap;
        
        for(auto p: paths){        
            int dir = p.find(' ');
            string d = p.substr(0, dir); //Store directory
            
            int i = dir+1;
			
			//Check for all the files in directory.
            while(i < p.size()){                
                int start = p.find('(', i);
				//Get File name
                string f = p.substr(i, start-i);                                                
                int end =   p.find(')', i);
				
				//Get Content
                string c = p.substr(start+1, end-start);
                string file = d + string("/") + f;
                pmap[c].push_back(file);
				
                i = end + 2;  //Move to next file.
            }
        }
        
        for(auto cp: pmap){            
			//Same content present in multiple files? (More than 1 file exists.)
            if(cp.second.size() > 1)
                result.push_back(cp.second);
        }
        
        return result;
    }
};