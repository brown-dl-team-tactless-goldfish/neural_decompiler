struct NestedInteger* deserializeUtil(char** s) {
    struct NestedInteger *ni = NestedIntegerInit(), *num_ni = NULL;
    char *end = NULL;
    
    if(**s != '['){
        NestedIntegerSetInteger(ni, strtoul(*s, NULL, 0));
        return ni;
    }
    
    if(**s == '[') (*s)++;
    
    while(**s != ']'){
        if(**s == ',') (*s)++;
        else if(**s == '[') NestedIntegerAdd(ni, deserializeUtil(s));
        else {
            num_ni = NestedIntegerInit();
            NestedIntegerSetInteger(num_ni, strtol(*s, &end, 10));
            NestedIntegerAdd(ni, num_ni);
            *s = end;//http://en.cppreference.com/w/c/string/byte/strtol
        }
    }

    if(**s == ']') (*s)++;
    
    return ni;
}

struct NestedInteger* deserialize(char* s) {
    return deserializeUtil(&s);
}