public class Solution {
    private int result = 0;
    
    public int LongestUnivaluePath(TreeNode root) {
        if (root == null || (root.left == null && root.right == null))
            return result;
        
        DFS(root);
        
        return result;
    }
    
    private int[] DFS(TreeNode node)
    {
        int[] l = null,
              r = null,
              cur = new int[2];
        int lLen = 0,
            rLen = 0;
        
        if (node.left != null)
            l = DFS(node.left);
        
        if (node.right != null)
            r = DFS(node.right);
        
        if (l != null && l[0] == node.val)
            lLen = l[1] + 1;
        
        if (r != null && r[0] == node.val)
            rLen = r[1] + 1;
        
        if (l != null &&  r != null && l[0] == r[0])
            result = Math.Max(result, lLen + rLen);
        else
            result = Math.Max(result, lLen >= rLen ? lLen : rLen);
        
        cur[0] = node.val;
        cur[1] = lLen >= rLen ? lLen : rLen;
        
        return cur;
    }
}