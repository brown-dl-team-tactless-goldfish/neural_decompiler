public IList<int> SequentialDigits(int low, int high) 
{
	List<int> result = new List<int>();
	Queue<int> sequences = new Queue<int>(Enumerable.Range(1, 9));

	while(sequences.Count > 0)
	{
		int current = sequences.Dequeue();
		if(current >= low && current <= high)
		{
			result.Add(current);
		}

		int lastDigit = current % 10;
		int next = 10 * current + 1 + lastDigit;
		if(lastDigit < 9 && next <= high)
		{
			sequences.Enqueue(next);
		}
	}

	return result;
}