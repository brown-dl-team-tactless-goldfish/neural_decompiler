class Solution {
public:
    
    void leftrightupdown(int n, vector<vector<int>> &grid, vector<vector<int>> &dp) {
        
        for(int i=0; i<n; i++) {
            int c = 0;
            for(int j=n-1; j>=0; j--) {
                   grid[i][j] ? c++ : c = 0; 
                   dp[i][j] = min(dp[i][j], c);
            }
        }
        
        for(int i=0; i<n; i++) {
             int c = 0;
             for(int j=0; j<n; j++) {
                   grid[i][j] ? c++ : c = 0; 
                   dp[i][j] = min(dp[i][j], c);
             }
        }
        
        for(int j=0; j<n; j++) {
            int c = 0;
            for(int i=n-1; i>=0; i--) { 
                  grid[i][j] ? c++ : c = 0;
                  dp[i][j] = min(dp[i][j], c);
            }
        }
        
        for(int j=0; j<n; j++) {
            int c = 0;
            for(int i=0; i<n; i++) {
                  grid[i][j] ? c++ : c = 0;
                  dp[i][j] = min(dp[i][j], c);
            }
        }  
    }    
    
    int orderOfLargestPlusSign(int n, vector<vector<int>>& mines) {
        
        vector<vector<int>> grid(n, vector<int>(n, 1));
        vector<vector<int>> dp(n, vector<int>(n, INT_MAX));
        
        for(int i=0; i<mines.size(); i++)
            grid[mines[i][0]][mines[i][1]] = 0;
        
        leftrightupdown(n, grid, dp);
        
        int res = 0;
        for(int i=0; i<n; i++) 
            for(int j=0; j<n; j++) 
                res = max(res,dp[i][j]);  
        return res;   
    }
};