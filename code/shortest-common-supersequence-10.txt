class Solution {
public:
    string shortestCommonSupersequence(string str1, string str2) {
        string s = lcs(str1,str2);
        string res = "";
        int i = 0;
        int j = 0;
        cout<<s<<endl;
        for(char c : s) {
            while(str1[i] != c) res+=str1[i++];
            while(str2[j] != c) res+= str2[j++];
            res+=c;
            i++;
            j++;
        }
        return res + str1.substr(i) + str2.substr(j);
    }
    
    string lcs(string& str1,string& str2) {
        vector<vector<string>> dp(str1.size() + 1,vector<string>(str2.size() + 1,""));
        for(int i = 1;i<=str1.size();i++) {
            for(int j = 1;j<=str2.size();j++) {
                if(str1[i-1] == str2[j-1]) {
                    dp[i][j] = dp[i-1][j-1] + str1[i-1];
                } else {
                    dp[i][j] = dp[i-1][j].size() > dp[i][j-1].size() ? dp[i-1][j] : dp[i][j-1];
                }
            }
        }
        return dp[str1.size()][str2.size()];
    }
};