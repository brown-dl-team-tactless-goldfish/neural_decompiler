class Solution {
public:
    vector<vector<int>> onesMinusZeros(vector<vector<int>>& A) 
    {
        unordered_map<int, pair<int, int>> M;
        unordered_map<int, pair<int, int>> N;
        int R = A.size(); 
        int C = A[0].size(); 
        vector<vector<int>> OP(R, vector<int> (C)); 

        for(int i=0; i<R; i++)
        {
            int ones = 0; 
            int zeros = 0; 

            for(auto c: A[i])
            {
                if(c == 0) zeros++; 
                else if(c == 1) ones++; 
            }

            M[i] = make_pair(ones, zeros);
        }

        for(int i=0; i<C; i++)
        {
            int ones = 0; 
            int zeros = 0; 
            for(int j=0; j<R; j++)
            {
                if(A[j][i] == 0) zeros++; 
                else if(A[j][i] == 1) ones++; 
            }
            N[i] = make_pair(ones, zeros);
        }

        for(int i=0; i<R; i++)
            for(int j=0; j<C; j++)
                OP[i][j] = M[i].first + N[j].first - M[i].second - N[j].second; 

        return OP;   
    }
};