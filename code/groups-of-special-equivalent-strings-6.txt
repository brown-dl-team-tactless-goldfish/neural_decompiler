    int numSpecialEquivGroups(vector<string> &A) {
        unordered_set<string> words;
        vector<char> cs1;
        vector<char> cs2;
        for_each(A.begin(), A.end(), [&](const string &word) {
            cs1.clear();
            cs2.clear();
            for (int i = 0; i < word.size(); ++i) {
                char c = word[i];
                if (i % 2 == 0) {
                    cs1.emplace_back(c);
                } else {
                    cs2.emplace_back(c);
                }
            }
            sort(cs1.begin(), cs1.end());
            sort(cs2.begin(), cs2.end());
            string s1(cs1.begin(), cs1.end());
            string s2(cs2.begin(), cs2.end());
            words.insert(s1 + s2);
        });
        return static_cast<int>(words.size());
    }
	```