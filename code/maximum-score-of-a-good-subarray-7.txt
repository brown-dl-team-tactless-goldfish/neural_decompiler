class Solution {
public:
    int maximumScore(vector<int>& h, int k) {
      
        int n= h.size();
       
      vector<int>NSR(n);
      NSR[n-1]=n;
      stack<int>st;
      st.push(n-1);
      
      for(int i=n-2;i>=0;i--){
        if(st.size()==0){
          NSR[i]=n;
          st.push(i);
        }
        
        else if(h[st.top()]<h[i]){
          NSR[i]=st.top();
          st.push(i);
        }
        else{
          while(st.size()>0 && h[st.top()]>=h[i])
            st.pop();
          
          if(st.size()==0){
            NSR[i]=n;
            st.push(i);
          }
          else{
            NSR[i]=st.top();
            st.push(i);
          }
        }
      }
      
      
      vector<int>NSL(n);
      stack<int>st1;
      NSL[0]=-1;
      st1.push(0);
      for(int i=1;i<n;i++){
        if(st1.size()==0){
          NSL[i]=-1;
          st1.push(i);
        }
        
        else if(h[st1.top()]<h[i]){
          NSL[i]=st1.top();
          st1.push(i);
        }
        
        else{
          while(st1.size()>0 && h[st1.top()]>=h[i])
            st1.pop();
          
          if(st1.size()==0){
            NSL[i]=-1;
            st1.push(i);
          }
          else{
            NSL[i]=st1.top();
            st1.push(i);
          }
        }
      }

//NOTE: k should lie in the range [j1+1,j2-1] for valid ans
    
      int ans=INT_MIN;
      int j1,j2;  
      for(int i=0;i<n;i++){
          j1=NSL[i];
          j2=NSR[i];
         if(k<i){
             if(k<j1+1)
                 continue;
         }
         else if(k>i){
             if(j2-1<k)
                 continue;
         }
         ans=max(ans,h[i]*(j2-j1-1));
      }
       
        return ans;
    }
};