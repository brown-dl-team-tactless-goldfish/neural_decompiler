struct Cmp {
    inline bool operator() (const string& a, const string& b) const {
        return stoi(a) < stoi(b);
    }
};

class Solution {
public:
    vector<vector<string>> displayTable(vector<vector<string>>& orders) {
        std::set<string, Cmp> mT;
        std::set<string> mD;
        for(const auto &o: orders) mT.insert(o[1]), mD.insert(o[2]);
        std::unordered_map<string, int> mTT, mDD;
        
        int R{1};
        for(const auto &s: mT) mTT[s] = R++;
        
        int C{1};
        for(const auto &s: mD) mDD[s] = C++;
        
        std::vector<std::vector<string>> res(R, std::vector<string>(C, "0"));
        res[0][0] = "Table";
        int i{1}, j{1};
        for(const auto &t: mT) res[i++][0] = t;
        for(const auto &d: mD) res[0][j++] = d;
        for(const auto &o: orders) {
            auto &s = res[mTT[o[1]]][mDD[o[2]]];
            int tmp = stoi(s);
            s = to_string(++tmp);
        }
        return res;
    }
};