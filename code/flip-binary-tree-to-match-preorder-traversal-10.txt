class Solution
{
public:
    bool helper(TreeNode *root,vector<int>&voyage,int &index,vector<int>&ans)
    {
        if(!root)
        {
            return true;
        }
        if(root->val!=voyage[index])
        {
            return false;
        }
        index++;
        if(root->left && root->left->val!=voyage[index])
        {
            ans.push_back(root->val);
            return helper(root->right,voyage,index,ans) && helper(root->left,voyage,index,ans);
        }
        return helper(root->left,voyage,index,ans) && helper(root->right,voyage,index,ans);
    }
    vector<int> flipMatchVoyage(TreeNode* root, vector<int>& voyage)
    {
        vector<int>ans;
        int index=0;
        bool res=helper(root,voyage,index,ans);
        if(res)
        {
            return ans;
        }
        else
        {
            return {-1};
        }
    }
};