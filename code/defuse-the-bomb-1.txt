int* decrypt(int* code, int codeSize, int k, int* returnSize) {
    *returnSize = codeSize;
    if (k == 0) {
        int* arr = (int*) calloc(codeSize, sizeof(int));
        return arr;
    }
    int* arr = (int*) malloc(2 * codeSize * sizeof(int));
    for (int i = 0; i < codeSize; i++) {
        arr[i] = code[i];
        arr[i+codeSize] = code[i];
    }
    if (k > 0) {
        for (int i = 0; i < codeSize; i++) {
            int tmp = 0;
            for (int j = i+1; j <= i+k; j++) {
                tmp += arr[j];
            }
            code[i] = tmp;
        }
    }
    if (k < 0) {
        for (int i = 0; i < codeSize; i++) {
            int tmp = 0;
            for (int j = i + codeSize - 1; j >= i + codeSize + k; j--) {
                tmp += arr[j];
            }
            code[i] = tmp;
        }
    }
    free(arr);
    return code;
}