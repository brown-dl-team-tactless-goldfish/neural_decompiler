int** threeSum(int* nums, int numsSize, int* returnSize, int** returnColumnSizes){
    * returnSize = 0;
    if(numsSize < 3) return NULL;
    for(int i=0; i<numsSize-1; i++)
        for(int j=i+1; j<numsSize; j++)
            if(nums[i] > nums[j])
            {
                int temp = nums[i];
                nums[i] = nums[j];
                nums[j] = temp;
            }
    int **result = (int **)malloc(10000*2*sizeof(int *));
    int count = 0;
    for(int i=0; i<numsSize-2; i++)
    {
        int j = i + 1, k = numsSize-1;
        while(j<k)
        {
                if(nums[i]+nums[j]+nums[k] == 0)
                {
                    result[count] = (int *)malloc(3*sizeof(int));
                    bool check = true;
                    for(int x=0; x<count; x++)
                        if(nums[i] == result[x][0] && nums[j] == result[x][1] && nums[k] == result[x][2])
                            check = false;
                    if(check)
                    {
                        result[count][0] = nums[i];
                        result[count][1] = nums[j];
                        result[count][2] = nums[k];
                        count++;
                    }
                    j++;
                    k--;
                }
                else  if(nums[i]+nums[j]+nums[k] < 0)
                {
                    j++;
                }
                else
                {
                    k--;
                }
                    
        }
    }
    * returnSize = count;
    *returnColumnSizes = malloc(count * sizeof(int));    
    for (int i = 0; i < count; i++)
        (*returnColumnSizes)[i] = 3;
    return result;
                    
}