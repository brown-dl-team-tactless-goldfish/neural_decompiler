class Solution {
public:
    int kConcatenationMaxSum(vector<int>& arr, int k) {
        int n=arr.size();
        int mod=1e9+7;
        int max_so_far=0, cur_sum=0;
        int arr_sum=0;
        //min b/c when k<2 it will not go beyond n terms
        for(int i=0; i<min(k, 2)*n; i++){
            if(i<n) arr_sum+=arr[i];
            cur_sum=max(arr[i%n], cur_sum+arr[i%n]);
            max_so_far=max(max_so_far, cur_sum);
            if(cur_sum<0) cur_sum=0;
        }
        if(k<2) return (long long)max_so_far%mod;
        return ((long long)max_so_far + (long long)(arr_sum>0?(long long)(k-2)*arr_sum:0))%mod;
    }
};