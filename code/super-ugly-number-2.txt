int **primesOwnUglyArry = (int**)malloc(sizeof(int*) * primesSize);
for (int i = 0; i < primesSize; i++) {
    primesOwnUglyArry[i] = uglyArry;
}

int index =1;
int min = INT_MAX;
int minUgly;
while (index < n) {
    min = INT_MAX;
    for (int i = 0; i < primesSize; i++) {
        if (isOverFlow(primes[i], (*primesOwnUglyArry[i]))) {
            min = fmin(INT_MAX, min);
        } else {
            min = fmin(primes[i] * (*primesOwnUglyArry[i]), min);
        }
    }
    uglyArry[index] = min;
    for (int j = 0; j < primesSize; j++) {
        if (isOverFlow(primes[j], (*primesOwnUglyArry[j]))) {
            minUgly = INT_MAX;
        } else {
            minUgly = *(primesOwnUglyArry[j]) * primes[j];
        }
        if (minUgly <= min) {
            primesOwnUglyArry[j]++;
        }
    }
    index++;
}
return uglyArry[n - 1];