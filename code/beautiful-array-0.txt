/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* beautifulArray(int n, int* returnSize){
    *returnSize =  n ;
    int* ans = malloc(2 * n * sizeof(int) ) ;
    ans[0] = 1 ;
    if(n == 1){
        ans = realloc(ans, n * sizeof(int)) ;
        return ans ;
    }
    int idx = 1 ;
    while(idx < n){
        for(int i = idx ; i < idx*2; i++){
            ans[i] = ans[i-idx] * 2 ;
        }
        for(int i = 0; i < idx ; i++){
            ans[i] = 2 * ans[i] - 1 ;
        }
        idx *= 2 ;
    }
    int p = 0 ;
    for(int i = 0; i < idx ; i++){
        if(ans[i] <= n){
            ans[p] = ans[i] ;
            p++ ;
        }
    }
    ans = realloc(ans, n * sizeof(int) ) ;
    return ans ;
}