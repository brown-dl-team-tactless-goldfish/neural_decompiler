public class Solution {
    public int MatrixScore(int[][] A) {
        for (var i = 0; i < A.Length; i++)
            if (A[i][0] == 0)
                InvertRow(A, i);

        for (var i = 1; i < A[0].Length; i++)
            if (A.Count(t => t[i] == 1) <= A.Length / 2)
                InvertCol(A, i);

        return A.Select((r, i) => ToBinary(A, i)).Sum();
    }

    private void InvertRow(int[][] A, int r) {
        for (var i = 0; i < A[r].Length; i++)
            A[r][i] = A[r][i] == 0 ? 1 : 0;
    }

    private void InvertCol(int[][] A, int c) {
        for (var i = 0; i < A.Length; i++)
            A[i][c] = A[i][c] == 0 ? 1 : 0;
    }

    private int ToBinary(int[][] A, int r) {
        var sum = 0; var mul = 1;
        for (var i = A[r].Length - 1; i >= 0; i--) {
            sum += A[r][i] * mul; mul *= 2;
        }
        return sum;
    }
}