    int numPermsDISequence(string S) {
        const int M = 1e9 + 7, n = S.length(); 
        vector<int> curr(n + 1, 1), next(n + 1, 0);
        for (int t = 0; t < n; ++t) {
            char c = S[t]; 
            int sum = 0; 
            if (c == 'D') {
                for (int i = n - t - 1; i >=0; --i) {
                    sum = (curr[i + 1]%M + sum%M)%M;
                    next[i] = sum; 
                }
            } else {
                for (int i = 0; i < n - t; ++i) {
                    sum = (curr[i]%M + sum%M)%M; 
                    next[i] = sum;  
                }
            }
            swap(curr, next); 
        } 
        return curr.front(); 
    }