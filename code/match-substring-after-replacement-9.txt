    public bool MatchReplacement(string s, string sub, char[][] mappings)
    {
        Dictionary<char, HashSet<char>> replacement = new();
        foreach (char[] mapping in mappings)
        {
            replacement.TryAdd(mapping[0], new());
            replacement[mapping[0]].Add(mapping[1]);
        }

        for (int i = 0; i <= s.Length - sub.Length; i++)
        {
            bool flag = true;
            for (int j = 0; j < sub.Length && flag ; j++)
            {
                char x = s[i + j], y = sub[j];
                if (x != y && (!replacement.ContainsKey(y) || !replacement[y].Contains(x)))
                {
                    flag = false;
                    break;
                }
            }
            if (flag) return true;
        }
        return false;
    }