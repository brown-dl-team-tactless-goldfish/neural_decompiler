
class Solution {
public:
    vector<long> fact;
    vector<vector<int>> dp;
    int mod = 1000000007;
    int f(int p, int d)
    {
        if(d < p)
            return 0;
        if(p == 0)
        {
            return fact[d];
        }
        if(p == 1 && d == 1)
            return 1;
        if(dp[p][d] != -1)
            return dp[p][d];
        long ans = 0;
        long b = f(p - 1, d) % mod;
        ans = (p * b) % mod;

        if(p < d)
        {
            long a = f(p, d - 1) % mod;
            a = ((d - p) * a) % mod;
            ans += a;
            ans %= mod;
        }
        dp[p][d] = ans;
        return ans;
    }
    int countOrders(int n) {
        fact = vector<long> ( n + 1, 1);
        for(int i = 1; i <= n; i++)
        {
            fact[i] = (fact[i - 1] * i) % mod;
        }
        dp = vector<vector<int>> (n + 1, vector<int>(n + 1, -1));
        return f(n, n);
    }
};