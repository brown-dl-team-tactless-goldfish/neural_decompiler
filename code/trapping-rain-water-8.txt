/*int max(int *a,int *b)
{
if (a>b)
return a;
else
return b;
}
int min(int *a,int *b)
{
if (a<b)
return b;
else
return a;
}*/
#define min(a,b) ((a) < (b) ? (a) : (b))
#define max(a,b) ((a) > (b) ? (a) : (b))

int trap(int arr[],int n)
{
  if(n==0)
  return 0;
  int result=0;
  int leftmax[n],rightmax[n];
  leftmax[0]=arr[0];
  for(int i=1;i<n;i++)
  {
    leftmax[i]=max(leftmax[i-1],arr[i]);
  }
  rightmax[n-1]=arr[n-1];
  for(int i=n-2;i>=0;i--)
  {
      rightmax[i]=max(rightmax[i+1],arr[i]);
  }
  for(int i=0;i<n;i++)
  {
      result+=(min(leftmax[i],rightmax[i])-arr[i]);
  }
  return result;
}

/*int trap(int* arr, int n){
int count=0;
for(int i=0;i<n;i++)
{
    int left=arr[i];
    for(int j=0;j<i;j++)
    {
        left=max(left,arr[j]);
    }
        int right=arr[i];
        for(int j=i+1;j<n;j++)
        {
            right=max(right,arr[j]);
        }
    count+=(min(left,right)-arr[i]);
}
return count;
}*/