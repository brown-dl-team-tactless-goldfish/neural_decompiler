public class Solution {
    public int[] SortJumbled(int[] mapping, int[] nums) {
         Array.Sort(nums, (x,y) =>
                   {
                        int first = getMapping(x, mapping);
                        int second = getMapping(y, mapping);
                        return first.CompareTo(second);
                   });
        return nums;
    }
    
    public int getMapping(int n, int[] mapping)
    {
       /* StringBuilder sb = new StringBuilder();
        foreach(char c in n.ToString())
        {
            sb.Append(mapping[c-'0'].ToString());
        }
        return Convert.ToInt32(sb.ToString());*/
        
        if (n<10)
            return mapping[n];
        
        int result = 0;
        int multiplier = 1;
        while (n>0)
        {
            result = result + multiplier * mapping[n%10];
            n = n/10;
            multiplier*=10;
        }
        return result;
    }
}