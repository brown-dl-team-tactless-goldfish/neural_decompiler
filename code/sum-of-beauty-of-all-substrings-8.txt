class Solution {
public:
    
    int beautySum(string s){
        int countSubStrings = 0;
        
        for(int i = 0; i < s.length() - 1; i++){
            vector<int> dp(26, 0);
            dp.at(s.at(i) - 'a')++;
            
            for(int j = i + 1; j < s.length(); j++){
                dp.at(s.at(j) - 'a')++;
                countSubStrings += beautySumCompute(dp);                
            }
        }
        
        return countSubStrings;
    }    
    
    int beautySumCompute(vector<int> &dp) {
        int maxFreq = INT_MIN;
        int minFreq = INT_MAX;
        
        for(int i = 0; i < 26; i++){
            if(dp.at(i) != 0) maxFreq = max(maxFreq, dp.at(i));
            if(dp.at(i) != 0) minFreq = min(minFreq, dp.at(i));
        }       
        
        return maxFreq - minFreq;
    }
};