#include <stdlib.h> 
typedef struct {
    int *array;
    int *nums;
    int numsSize;
} Solution;

Solution* solutionCreate(int* nums, int numsSize) {
    Solution* obj=(Solution*)malloc(sizeof(Solution));
    obj->array=(int*)calloc(1000,sizeof(int));
    obj->nums=nums;
    obj->numsSize=numsSize;
    return obj;
}

int solutionPick(Solution* obj, int target) {
    int count=0;
    for(int i=0;i<obj->numsSize;i++){
        if(obj->nums[i]==target){
            obj->array[count++]=i;
        }
    }
    if(count==1){
        return obj->array[count-1];
    }
    return obj->array[rand()%count];
}

void solutionFree(Solution* obj) {
    free(obj);
}

/**
 * Your Solution struct will be instantiated and called as such:
 * struct Solution* obj = solutionCreate(nums, numsSize);
 * int param_1 = solutionPick(obj, target);
 * solutionFree(obj);
 */