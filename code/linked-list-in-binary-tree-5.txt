bool findKmp(int* v, int* pi, int k, int n, struct TreeNode* root) {
    if (root == NULL) return false;
    for (; k != 0 && v[k] != root->val; k = pi[k - 1]);
    if (v[k] == root->val) k++;
    return (k == n) || findKmp(v, pi, k, n, root->left) || findKmp(v, pi, k, n, root->right);
}

bool isSubPath(struct ListNode* head, struct TreeNode* root) {
    int v[101], pi[101] = { 0 };
    int n = 0;
    for (; head != NULL; head = head->next, ++n) v[n] = head->val;
    for (int i = 1, k = 0; i < n; ++i) {
        for (; k != 0 && v[k] != v[i]; k = pi[k - 1]);
        if (v[k] == v[i]) k++;
        pi[i] = k;
    }
    return findKmp(v, pi, 0, n, root);
}