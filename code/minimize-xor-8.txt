class Solution {
public:
    int minimizeXor(int num1, int num2) {
        int cnt1 = __builtin_popcount(num1);
        int cnt2 = __builtin_popcount(num2);
        
        if(cnt1 == cnt2)
            return num1;
        
        if(cnt2 > cnt1) {
            int i = 0;
            cnt2 -= cnt1;
            
            int ans = 0;
            while(cnt2--) {
                while((num1 & (1<<i)) != 0) i++;
                ans += (1<<i);
                // cout << i << endl;
                i += 1;
            }
                        
            return ans | num1;
        }
        else {
            int i = 32 - __builtin_clz(num1) - 1;
            
            // cout << cnt1 << " " << i << endl;
            
            int ans = 0;
            while(cnt2--) {
                while((num1 & (1<<i)) == 0) i--;
                ans += (1<<i);
                i--;
            }
            return ans;
        }
        
        return 1;
    }
};