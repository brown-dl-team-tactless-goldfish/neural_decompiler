using PII = pair<int, int> ;
class Solution {
public:
    int maxStarSum(vector<int>& vals, vector<vector<int>>& edges, int k) {
        int n = vals.size();
        int ans = INT_MIN;
        vector<vector<PII>> graph(n);

        for (auto& edge : edges) {
          int u = edge[0];
          int v = edge[1];
          graph[u].push_back({v, vals[v]});
          graph[v].push_back({u, vals[u]});
        }

        for (int i = 0; i < n; ++i) {
          priority_queue<int, vector<int> > maxHeap;
          for (auto [ _ , val] : graph[i])
          {
            if (val > 0)
              maxHeap.push(val);
          }
          int sum = vals[i];
          for (int j = 0; j < k && !maxHeap.empty(); ++j)
          {
            sum += maxHeap.top() ; 
            maxHeap.pop() ;
          }
          ans = max(ans, sum);
        }
        return ans;       
    }
};