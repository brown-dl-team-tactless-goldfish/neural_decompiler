class Bitset {
    vector<bool> bs, sb;

    int tot;
    int ones;
    
    string sn, ns;

public:
    Bitset(int size) {
        bs = vector<bool>(size);
        tot = size;
        ones = 0;
        sn = string(tot, '0');
        
        sb = vector<bool>(size, true);
        ns = string(tot, '1');
    }
    
    void fix(int idx) {
        if (bs[idx]==false) {
            ones++;
            bs[idx] = true;
            sn[idx] = '1';
            
            sb[idx] = false;
            ns[idx] = '0';
        }
        
    }
    
    void unfix(int idx) {
        if (bs[idx]) {
            ones--;
            bs[idx] = false;
            sn[idx] = '0';
                
            sb[idx] = true;
            ns[idx] = '1';
        }
        
    }
    
    void flip() {

        swap(sb, bs);
        swap(ns, sn);
        ones = tot-ones;
    }
    
    bool all() {
        return ones == tot;
    }
    
    bool one() {
        return ones;
    }
    
    int count() {
        return ones;
    }
    
    string toString() {
        return sn;
    }
};