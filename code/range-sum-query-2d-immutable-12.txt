struct NumMatrix {
    int **s;
    int r;
    int c;
};
#define Mat struct NumMatrix
struct NumMatrix* NumMatrixCreate(int** m, int r, int c) {
    Mat *p;
    int i, j, *x;
    p = malloc(sizeof(Mat));
    p->s = malloc(sizeof(int *)*r);
    p->r = r;
    p->c = c;
    for(i=0; i<r; i++)
        p->s[i] = malloc(sizeof(int)*(c+1));
    for(i=0; i<r; i++)
    {
        x = m + i*c;
        p->s[i][0] = 0;
        for(j=1; j<=c; j++)
            p->s[i][j] = p->s[i][j-1] + x[j-1];
    }
    return p;
}
int sumRegion(struct NumMatrix* m, int r1, int c1, int r2, int c2) {
    int sum=0, i;
    for(i=r1; i<=r2; i++)
        sum = sum+ m->s[i][c2+1] - m->s[i][c1];
    return sum;
}
void NumMatrixFree(struct NumMatrix* p) {
    int i;
    for(i=0; i<p->r; i++)
        free(p->s[i]);
    free(p->s);
    free(p);
}