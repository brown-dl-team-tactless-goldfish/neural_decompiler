int maxSumDivThree(int* nums, int numsSize){
    int sum = 0;
    int one1 = INT_MAX, one2 = INT_MAX;
    int two1 = INT_MAX, two2 = INT_MAX;
    int remain = 0;
    for(int i = 0; i < numsSize; i++){
        sum += nums[i];
        remain += nums[i]%3;
        if(nums[i]%3 == 1){
            if(nums[i] <= one1){
                one2 = one1;
                one1 = nums[i];                
            }
            else if(nums[i] < one2)
                one2 = nums[i];
        }
        else  if(nums[i]%3 == 2){
            if(nums[i] <= two1){
                two2 = two1;
                two1 = nums[i];
            }
            else if(nums[i] < two2)
                two2 = nums[i];
        }

    }
    remain = remain % 3;

    if(remain == 1){
        if(one1 != INT_MAX && two1!= INT_MAX && two2 != INT_MAX)
             return sum - fmin(one1 , two1 + two2);
        else if(one1 != INT_MAX)
            return sum - one1;
        else
            return 0;
    }
    else if(remain == 2){
        if(one1 != INT_MAX && one2!= INT_MAX && two1 != INT_MAX)
             return sum - fmin(one1 + one2 , two1);
        else if(two1 != INT_MAX)
            return sum - two1;
        else if(one1 != INT_MAX && one2 != INT_MAX)
            return sum - one1 - one2;
        else
            return 0;
    }
    else
        return sum;
}