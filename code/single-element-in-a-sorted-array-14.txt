int singleNonDuplicate(int* nums, int numsSize){
  if(numsSize == 1) return nums[0];
  int head = 0, end = numsSize - 1;
  if(nums[head] != nums[head + 1]) return nums[head];
  if(nums[end] != nums[end - 1]) return nums[end];
  
  while(head < end){
    int mid = (end + head) / 2;
    if(nums[mid + 1] != nums[mid] && nums[mid - 1] != nums[mid]) return nums[mid];
    if(mid % 2 == 0){
      if(nums[mid] == nums[mid - 1]) end = mid;
      else head = mid;
    }
    else{
      if(nums[mid] == nums[mid + 1]) end = mid;
      else head = mid;
    }
  }
  return nums[end];
}