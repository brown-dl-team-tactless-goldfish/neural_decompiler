struct am { int n, p; };

void pwr(struct am *m, size_t n){
    for (int i = 0, c ; i < n ; i++)
        for (c = m[i].n, m[i].p = 0 ; c != 1 ; m[i].p++)
            c = c & 0x1 ? 3 * c + 1 : c >> 1;
}

int cmp(const void *x, const void *y){
    return ((struct am *)x)->p - ((struct am *)y)->p;
}

int getKth(int lo, int hi, int k){
    size_t n = hi - lo + 1;
    struct am m[n];
    for (int i = 0 ; i < n ; m[i++].n = lo++);
    pwr(m, n);
    qsort(m, n, sizeof(struct am), cmp);
    return m[k - 1].n;
}