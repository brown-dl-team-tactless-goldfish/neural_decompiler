class Solution {
public:
    int n,m;
    long long sum=0,num=0;//answer & the total number of 1 
    struct seq{
        int sn=0;
        bool tag=0,a[320];
    };seq A[320];
    vector<long long> handleQuery(vector<int>& n1, vector<int>& n2, vector<vector<int>>& q) {
        n=n1.size();
        m=sqrt(n);
        vector <long long> ans;
        for(int i=0;i<n;++i){
            num+=n1[i];
            A[i/m].sn+=n1[i];
            A[i/m].a[i%m]=n1[i];
            sum+=n2[i];
        }  
        for(int i=0;i<q.size();++i){
            if(q[i][0]==1){
                int l=q[i][1],r=q[i][2];
                int ln=l/m,lm=l%m,rn=r/m,rm=r%m;
                if(ln==rn){//Case A
                    for(int i=lm;i<=rm;++i){
                        if(A[ln].tag==0){
                            if(A[ln].a[i]){
                                --num;
                                --A[ln].sn;
                            }
                            else{
                                ++num;
                                ++A[ln].sn;
                            }
                        }
                        else{
                            if(A[ln].a[i]){
                                ++num;
                                ++A[ln].sn;
                            }
                            else{
                                --num;
                                --A[ln].sn;
                            }
                        }
                        A[ln].a[i]^=1;
                    }
                }
                else{//Case B
                    for(int i=lm;i<m;++i){
                        if(A[ln].tag==0){
                            if(A[ln].a[i]){
                                --num;
                                --A[ln].sn;
                            }
                            else{
                                ++num;
                                ++A[ln].sn;
                            }
                        }
                        else{
                            if(A[ln].a[i]){
                                ++num;
                                ++A[ln].sn;
                            }
                            else{
                                --num;
                                --A[ln].sn;
                            }
                        }
                        A[ln].a[i]^=1;
                    }
                    for(int i=ln+1;i<=rn-1;++i){
                        int la=A[i].sn;
                        A[i].tag^=1;
                        A[i].sn=m-la;
                        num-=(la-A[i].sn);
                    }
                    for(int i=0;i<=rm;++i){
                        if(A[rn].tag==0){
                            if(A[rn].a[i]){
                                --num;
                                --A[rn].sn;
                            }
                            else{
                                ++num;
                                ++A[rn].sn;
                            }
                        }
                        else{
                            if(A[rn].a[i]){
                                ++num;
                                ++A[rn].sn;
                            }
                            else{
                                --num;
                                --A[rn].sn;
                            }
                        }
                        A[rn].a[i]^=1;
                    }
                }
            }
            else if(q[i][0]==2){
                sum+=(long long)(q[i][1])*num;
            }
            else{//q = 3
                ans.push_back(sum);
            }
        }
        return ans;
    }
};