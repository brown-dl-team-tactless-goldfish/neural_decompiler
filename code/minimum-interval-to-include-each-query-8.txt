class Solution {
public:
    #define p pair<int,int>
    vector<int> minInterval(vector<vector<int>>&s, vector<int>& que) 
    {
        int i=0;
        vector<vector<int>>queries;
        for(i=0;i<que.size();i++)
            queries.push_back({que[i],i});
        vector<int>res(i,-1);
        sort(s.begin(),s.end());
        sort(queries.begin(),queries.end());
        priority_queue<p,vector<p>,greater<p>>pq;
        i=0;
        for(auto &q:queries)
        {
            while(i<s.size() && s[i][0]<=q[0])
            {
                pq.push({s[i][1]-s[i][0]+1,s[i][1]});
                i++;
            }
            while(!pq.empty() && pq.top().second<q[0])
                pq.pop();
            if(!pq.empty())
                res[q[1]]=pq.top().first;
        }
        return res;
    }
};