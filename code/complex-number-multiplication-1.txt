bool Isdigit(char a)
{
    if(a>='0'&&a<='9')
        return true;
    return false;
}

char * complexNumberMultiply(char * a, char * b){
    const char s[4] = "+-i";
    int nums[4],i=0;
    char *token,*tmp=calloc(20,1);
    char *ret=calloc(50,1);
    strcat(tmp,a);
    strcat(tmp,b);

    token = strtok(tmp, s);
   
    while( token != NULL ) {
      nums[i++]=atoi(token);
      token = strtok(NULL, s);
    }
    if(*a=='-')
    {
        nums[0]*=-1;
        a++;
    }
    while(Isdigit(*a))
    {
        a++;
    }
    if(*a=='+'&&(*(a+1)=='-'))
        nums[1]*=-1;
    
    
    if(*b=='-')
    {
        nums[2]*=-1;
        b++;
    }  
    while(Isdigit(*b))
    {
        b++;
    }
    if(*b=='+'&&*(b+1)=='-')
        nums[3]*=-1;

    int num1=nums[0]*nums[2]-nums[1]*nums[3];
    int num2=nums[1]*nums[2]+nums[0]*nums[3];
    i=0;
    if(num1<0)
        i+=sprintf(ret+i,"%d",num1);
    else
        i+=sprintf(ret+i,"%d",num1);
    if(num2<0)
        i+=sprintf(ret+i,"+%di",num2);
    else
        i+=sprintf(ret+i,"+%di",num2);
    
    return ret;
}