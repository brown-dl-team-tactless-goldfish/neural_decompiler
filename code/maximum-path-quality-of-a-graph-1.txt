class Solution {
public:
    int maximalPathQuality(vector<int>& v, vector<vector<int>>& e, int m) {
        int res = 0, seen[1001]{};
        vector<pair<int, int>> g[1001];
        for(auto & i : e) {
            g[i[0]].push_back({i[1], i[2]});
            g[i[1]].push_back({i[0], i[2]});
        }
        auto dfs = [&](auto&& self, int n, int t, int cur) {
            if(t < 0) return;
            if(!seen[n]) cur += v[n];
            if(n == 0) res = max(cur, res);
            seen[n]++;
            for(auto & c : g[n]) self(self, c.first, t-c.second, cur);
            seen[n]--;
        };
        dfs(dfs, 0, m, 0);
        return res;
    }
};