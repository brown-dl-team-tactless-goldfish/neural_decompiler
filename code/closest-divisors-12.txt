vector<int> closestDivisors(int num) {
        map<int, vector<int>> mp;
        for (int i = 1; i <= sqrt(num + 1); i++) {
            if ((num + 1) % i == 0) {
                int temp = (num + 1) / i;
                if (mp.find(abs(temp - i)) == mp.end()) {
                    mp[abs(temp - i)].push_back(temp);
                    mp[abs(temp - i)].push_back(i);
                }
            }
        }
        for (int i = 1; i <= sqrt(num + 2); i++) {
            if ((num + 2) % i == 0) {
                int temp = (num + 2) / i;
                if (mp.find(abs(temp - i)) == mp.end()) {
                    mp[abs(temp - i)].push_back(temp);
                    mp[abs(temp - i)].push_back(i);
                }
            }
        }
        for (map<int, vector<int>>::iterator it = mp.begin(); it != mp.end(); it++) {
            return it->second;
        }
        vector<int> v;
        return v;
    }