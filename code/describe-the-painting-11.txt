class Solution {
public:
    vector<vector<long long>> splitPainting(vector<vector<int>>& segments) {
        vector<long long> data(1e5+10);
        vector<int> starts(1e5 + 10);
        vector<int> ends(1e5 + 10);
        for(auto&& s : segments) {
            data[s[0]] += s[2];
            data[s[1]] -= s[2];
            starts[s[0]] += 1;
            ends[s[1]] += 1;
        }
        vector<vector<long long>> ret; 
        long long color = 0; 
        int start = -1; 
        int s_counter = 0;
        int e_counter = 0; 
        for(int i = 0;i<data.size();i++) {
            long long color_next = color + data[i];
            if(ends[i]) {
                ret.push_back({start,i,color});
                if(color_next) {
                    start = i; 
                }
            }
            if(starts[i]) {
                if(color && start != i) {
                    ret.push_back({start,i,color});
                }
                start = i; 
            }
            s_counter += starts[i];
            e_counter += ends[i];
            color = color_next; 
        }
        return ret; 
    }
};