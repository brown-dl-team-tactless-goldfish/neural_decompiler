    // Kahn's algorithm for topological sort.
    static vector<int> tsort(int k, const vector<vector<int>>& conds) {
        // Build adjacency list and in-degree vector.
        vector<vector<int>> adj(k + 1);
        vector<int> in_deg(k + 1);
        for (const vector<int>& cond : conds) {
            const int before = cond[0];
            const int after = cond[1];
            adj[before].push_back(after);
            ++in_deg[after];
        }
        
        // Topological sort.
        queue<int> q;
        for (int i = 1; i <= k; ++i) {
            if (!in_deg[i]) q.push(i);
        }
        
        vector<int> ans;
        ans.reserve(k);
        while (!empty(q)) {
            const int node = q.front(); q.pop();
            ans.push_back(node);
            for (int next : adj[node]) {
                if (!--in_deg[next]) {
                    q.push(next);
                }
            }
        }
        
        if (size(ans) != k) return {};

        return ans;
    }