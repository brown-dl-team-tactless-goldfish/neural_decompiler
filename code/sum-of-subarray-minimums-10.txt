class Solution {
    long long MOD = 1e9 + 7;
public:
    int sumSubarrayMins(vector<int> &A) {
        vector<pair<int, int>> vii(A.size());
        for (int i = 0; i < A.size(); ++i) vii[i] = make_pair(A[i], i + 1);
        sort(vii.begin(), vii.end(), [](const auto &p, const auto &q) -> bool { return p.first < q.first; });
        set<int> si = {0, (int) A.size() + 1};
        int ans = 0;
        for (int i = 0; i < vii.size(); ++i) {
            auto it = si.lower_bound(vii[i].second);
            int c = *it, b = vii[i].second;
            it--;
            int a = *it;
            ans = (ans + (b - a) * (c - b) * vii[i].first % MOD) % MOD;
            si.insert(b);
        }
        return ans;
    }
};