class Solution {
public:
#define F first
#define S second
void fun( unordered_map<int,int>&mp, int x) {
         for(int i=2; i*i<=x; i++) {
             while(x%i==0) {
                 mp[i]++;
                 x/=i;
             }
         }
         if(x>1) mp[x]++;
}
    int findValidSplit(vector<int>& v) 
    {
        int n=v.size();
         unordered_map<int,int>mp;
        for(int i=0; i<v.size(); i++) 
        {
            fun(mp,v[i]);
        }
        unordered_map<int,int>m;
        for(int i=0; i<n-1; i++) { 
             fun(m,v[i]);
              unordered_map<int,int>mq;
             fun(mq,v[i]);
             for(auto it: mq) 
             {
                mp[it.F]-=it.S;
                if(mp[it.F]==0) mp.erase(it.F);
             }
             bool f=true;
             for(auto it:m) {
                if(mp[it.F]) {
                    f=false;
                    break;
                }
             }
             if(f) return i;
        }
        return -1;
    }
};