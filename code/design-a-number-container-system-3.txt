class NumberContainers {
    unordered_map<int, int>indexToVal ; //{index, val}
    unordered_map<int, set<int>>valToIndex ; //{number, setOfIndex}
public:
    NumberContainers() {
        
    }
    
    void change(int index, int number) {
        if(indexToVal.find(index) == indexToVal.end()){
            indexToVal[index] = number ;
            valToIndex[number].insert(index) ;
        }
        else{
            int old_num = indexToVal[index] ;
            valToIndex[old_num].erase(index) ;
            if(valToIndex[old_num].size() == 0)
                valToIndex.erase(old_num) ;
            indexToVal[index] = number ;
            valToIndex[number].insert(index) ;
        }
        
    }
    
    int find(int number) {
        if(valToIndex.find(number) == valToIndex.end())
            return -1 ;
        return *valToIndex[number].begin() ;
    }
};

/**
 * Your NumberContainers object will be instantiated and called as such:
 * NumberContainers* obj = new NumberContainers();
 * obj->change(index,number);
 * int param_2 = obj->find(number);
 */