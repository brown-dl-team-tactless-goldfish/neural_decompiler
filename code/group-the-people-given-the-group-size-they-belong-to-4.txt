

/**
 * Return an array of arrays of size *returnSize.
 * The sizes of the arrays are returned as *returnColumnSizes array.
 * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().
 */
int** groupThePeople(int* groupSizes, int groupSizesSize, int* returnSize, int** returnColumnSizes){
    int n=groupSizesSize;
    
    int id[500]={0};
    for (int i=0;i<n;i++) id[i]=i;
    
    //sort
    for(int i=0;i<n;i++){
        for(int j=0;j<n-i-1;j++){
            if(groupSizes[j]>groupSizes[j+1]){
                int temp1=groupSizes[j];groupSizes[j]=groupSizes[j+1];groupSizes[j+1]=temp1;
                int temp2=id[j];id[j]=id[j+1];id[j+1]=temp2;
            }
        }
    }
   
    
    //给sizes[]赋值
    int *sizes=(int*)malloc(sizeof(int)*n);
    sizes[0]=groupSizes[0];
    int cnt=1;
    int l=1; //l 指向sizes最后一个元素的下一个位置

    for (int i=1;i<n;i++){
        if(groupSizes[i]==groupSizes[i-1]&&cnt<groupSizes[i-1]){
            cnt++;
        }
        else{
            
            sizes[l]=groupSizes[i];
            cnt=1;
            l++;
        }
        
    }
    
    
    //给result[]赋值
    int **result=(int**) malloc(sizeof(int*)*l);
    for (int i=0;i<l;i++) result[i]=(int*) malloc(sizeof(int)*sizes[i]);
    
    int p=0;
    for(int i=0;i<l;i++){
        for(int j=0;j<sizes[i];j++){
            result[i][j]=id[p];
            if(p<n-1) p++;
            
        }
    }
   
    
    //给参数赋值
    *returnSize=l;
    for (int i=0;i<l;i++) (*returnColumnSizes)[i]=sizes[i];
    return result;
    
    
}

