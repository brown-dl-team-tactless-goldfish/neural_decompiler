class Solution {
public:
    bool trythis(vector<int>& nums, int index, int sum, bool taken[], int length){
        for(int i = index;i >= 0;i--)
            if(!taken[i] && sum + nums[i] <= length){
                taken[i] = true;
                sum+=nums[i];
                if(sum == length)
                    return true;
                if(trythis(nums,i-1,sum,taken,length))
                    return true;
                sum-=nums[i];
                taken[i] = false;
            }
        
        return false;
    }
        
    bool makesquare(vector<int>& nums) {
        int length = 0;
        if(!nums.size() || nums.size() < 4)
            return false;
        for(int i = 0;i < nums.size();i++)
            length+=nums[i];
        
        if(length%4)
            return false;
        
        length/=4;
        
        sort(nums.begin(),nums.end());
        bool taken[nums.size()] = {false};
        int c = 0;
        for(int i = nums.size()-1;i >= 0 && c < 4;i--){
            if(!taken[i]){
                c++;
                if(!trythis(nums,i,0,taken,length))
                    return false;
            }
        }
        
        for(int i = 0;i < nums.size();i++)
            if(!taken[i])
                return false;
        
        return true;
    }
};
/*
[1,1,1,2,3,4,4,4]
[1,1,2,2,2]
[3,3,3,3,4]
[1,1,1,2,3,4,4]
[1,1,1,2,3,4]
[1,1,1,1,2,2,4,4]
[5,7,6,3,3]
*/