class FizzBuzz {
private:
    int n;
    int x=1;
    mutex m;
    condition_variable cv;    
    bool stop(){return x > n; }
    
    void f(function<void()> printer, function<bool()> predicate){
        while(!stop()){
            std::unique_lock lk(m);
            cv.wait(lk, [&]{return stop() || predicate();});
            if(stop()) break;
            printer();
            x++;
            cv.notify_all();
        }
    }

public:
    FizzBuzz(int n) {this->n = n;}

    void fizz(function<void()> printFizz) {
        f(printFizz, [this](){return (x % 3 == 0) && (x % 5 != 0);});
    }

    void buzz(function<void()> printBuzz) {
        f(printBuzz, [this](){return (x % 5 == 0) && (x % 3 != 0);});
    }

	void fizzbuzz(function<void()> printFizzBuzz) {
        f(printFizzBuzz, [this](){return (x % 3 == 0) && (x % 5 == 0);});
    }

    void number(function<void(int)> printNumber) {
        f([&](){printNumber(x);}, [this](){return (x % 3 != 0) && (x % 5 != 0);});
    }
};