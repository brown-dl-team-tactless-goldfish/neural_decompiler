double findMedianSortedArrays(int* nums1, int nums1Size, int* nums2, int nums2Size){
    int first = 0;
    int second = 0;
    int median_index, i, j, k;   
    bool even = true;
    
    if ((nums1Size + nums2Size) & 0x1) 
        even = false;
    
    median_index = ((nums1Size + nums2Size)/2);
    
    for (i=0, j=0, k=0; i <= median_index && j < nums1Size && k < nums2Size; i++)
    {
        if (nums1[j] < nums2[k])
        {
            first = second;
            second = nums1[j];
            j++;
        }
        else
        {
            first = second;
            second = nums2[k];
            k++;
        }
    }
    
    if (i <= median_index)
    {
        /* ran out of one array */
        if (j == nums1Size)
        {
            /* ran out of array1. just iterate thru array 2 until hitting median index */
            for (; i <= median_index; i++, k++)
            {
                first = second;
                second = nums2[k];
            }
        }
        else
        {
            for (; i <= median_index; i++, j++)
            {
                first = second;
                second = nums1[j];
            }
        }
    }
    
    return even ? ((double)(first + second))/2 : second;
}