void helper_depth(struct TreeNode* root, int* level, struct TreeNode** result)
{
    int left, right;
    struct TreeNode *resultLeft,*resultRight;
    
    if(root==NULL)
    {
        *level = 0;
        *result = NULL;
        return;
    }
    
    helper_depth(root->left,&left,&resultLeft);
    helper_depth(root->right,&right,&resultRight);
    
    if(left==right)
    {
        *level = left + 1;
        *result = root;
        //printf("\n root->val=%d",root->val);
    }
    else if(left > right)
    {
        *level = left + 1;
        *result = resultLeft;
        //printf("\n update left root->val=%d,%d",root->val,resultLeft->val);
    }
    else
    {
        *level = right + 1;
        *result = resultRight;
        //printf("\n update right root->val=%d,%d",root->val,resultRight->val);
    }
}

struct TreeNode* subtreeWithAllDeepest(struct TreeNode* root){
    int level = 0;
    struct TreeNode* result;
    
    helper_depth(root,&level,&result);
    
    return result;
}