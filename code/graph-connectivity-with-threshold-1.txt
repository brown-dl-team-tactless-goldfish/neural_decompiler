int find(vector<int> &ds, int i) {
    return ds[i] < 0 ? i : ds[i] = find(ds, ds[i]);
}
vector<bool> areConnected(int n, int threshold, vector<vector<int>>& queries) {
    vector<int> ds(n + 1, -1);
    for (int i = threshold + 1; 2 * i <= n; ++i) {
        if (ds[i] != -1)
            continue;
        int p1 = i;
        for (int j = 2 * i; j <= n; j += i) {
            int p2 = find(ds, j);
            if (p1 != p2) {
                if (ds[p1] > ds[p2])
                    swap(p1, p2);
                ds[p1] += ds[p2];
                ds[p2] = p1;
            }
        }
    }
    vector<bool> res;
    for (auto &q : queries)
        res.push_back(find(ds, q[0]) == find(ds, q[1]));
    return res;
}