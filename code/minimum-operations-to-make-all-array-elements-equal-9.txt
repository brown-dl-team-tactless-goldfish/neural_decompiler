class Solution {
public:
    vector<long long> minOperations(vector<int>& nums, vector<int>& queries) {
        const int n = nums.size();
        sort(nums.begin(), nums.end());
        vector<long long> presum = {0}, res;
        presum.reserve(n+1);
        for(auto x:nums) presum.push_back(presum.back()+x);
        for(long long q:queries){
            long long sum = 0;
            int pos = lower_bound(nums.begin(), nums.end(), q) - nums.begin(); 
            sum += q*pos - presum[pos];
            sum += presum.back() - presum[pos] - q*(n-pos); 
            res.push_back(sum);
        }
        return res;
    }
};