class Solution {
public:
	int minimumEffort(vector<vector<int>>& tasks) {
		auto comp = [](vector<int>& a, vector<int>& b) {
			int diff1 = a[1] - a[0];
			int diff2 = b[1] - b[0];
			return diff1 > diff2;
		};
		sort(tasks.begin(), tasks.end(),comp);
		int low = 1;
		int hi = INT_MAX;
		while(low < hi) {
			int mid = low + (hi - low) / 2;
			if(check(tasks,mid)) {
				hi = mid;
			} else {
				low = mid + 1;
			}
		}
		return low;
	}
	bool check(vector<vector<int>>& tasks, int val) {
		for(auto& x:tasks) {
			if(val >= x[1]) {
				val -= x[0];
			} else {
				return false;
			}
		}
		return val >= 0;
	}
};