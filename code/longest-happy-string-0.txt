char * longestDiverseString(int a, int b, int c){
        int n = a + b + c;
        char* ans = malloc((n + 1) * sizeof(char)); 
        int idx = 0;
        int A = 0;
        int B = 0;
        int C = 0;
        for (int i = 0; i < n; i++) {
            if ((a >= b && a >= c && A != 2) || (a > 0 && B == 2) || (a > 0 && C == 2)) {
                 ans[idx] = 'a';
                 idx++;
                 a--;
                 A++;
                 B = 0;
                 C = 0;
             } else if ((b >= a && b >= c && B != 2) || (b > 0 && A == 2) || (b > 0 && C == 2)) {
                 ans[idx] = 'b';
                 idx++;
                 b--;
                 B++;
                 A = 0;
                 C = 0;
             } else if ((c >= a && c >= b && C != 2) || (c > 0 && A == 2) || (c > 0 && B == 2)) {
                 ans[idx] = 'c';
                 idx++;
                 c--;
                 C++;
                 A = 0;
                 B = 0;
             }
        }
        ans[idx] = '\0';
        ans = realloc(ans, (idx+1) * sizeof(char));
        return ans;
}