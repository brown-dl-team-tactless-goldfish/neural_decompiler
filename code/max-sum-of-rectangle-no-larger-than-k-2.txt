class Solution {
    public int maxSumSubmatrix(int[][] matrix, int k) {
        final int M = matrix.length, N = matrix[0].length;
        
        int[][] sums = matrix.clone();
        for (int i = 0; i < M; i++) for (int j = 0; j < N; j++) {
            if (i > 0) sums[i][j] += sums[i-1][j];
            if (j > 0) sums[i][j] += sums[i][j-1];
            if (i > 0 && j > 0) sums[i][j] -= sums[i-1][j-1];
            if (sums[i][j] == k) return k;
        }
        
        int ans = Integer.MIN_VALUE;
        for (int i0 = 0; i0 < M; i0++) for (int j0 = 0; j0 < N; j0++) {
            for (int i1 = i0; i1 < M; i1++) for (int j1 = j0; j1 < N; j1++) {
                int sum = sums[i1][j1];
                if (i0 > 0) sum -= sums[i0-1][j1];
                if (j0 > 0) sum -= sums[i1][j0-1];
                if (i0 > 0 && j0 > 0) sum += sums[i0-1][j0-1];
                if (sum == k) return sum;
                if (sum < k) ans = Math.max(ans, sum);
            }
        }
        
        return ans;
    }
}