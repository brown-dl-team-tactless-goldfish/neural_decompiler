/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int *comp(int *a, int *b){
    return *a - *b;
}

int *compr(int *a, int *b){
    return *b - *a;
}

int* sortEvenOdd(int* nums, int numsSize, int* returnSize){
    *returnSize = numsSize;
    int *even = malloc(sizeof(int)*numsSize);
    int *odd = malloc(sizeof(int)*numsSize);
    int e=0,o=0;
    for(int i=0;i<numsSize;i++){
        if(i%2==0){
            even[e]=nums[i];
            e++;
        }
        else{
            odd[o]=nums[i];
            o++;
        }
    }
    qsort(even, e, sizeof(int), comp);
    qsort(odd, o, sizeof(int), compr);
    e=0,o=0;
    for(int i=0;i<numsSize;i++){
        if(i%2==0){
            nums[i]=even[e];
            e++;
        }
        else{
            nums[i]=odd[o];
            o++;
        }
    }
    return nums;
}