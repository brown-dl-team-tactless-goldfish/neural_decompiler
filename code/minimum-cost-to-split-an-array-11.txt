class Solution {
public:
    int minCost(vector<int>& nums, int k) {
        int n = size(nums), dp[1000];
        fill(dp, dp+n, -1);
        function<int(int)> dfs = [&] (int i) {
            if (i == n)
                return 0;
            if (dp[i] != -1)
                return dp[i];
            int mn = n, t = 0;
            vector<int> cnt(n);
            for (int j = i; j < n; j++) {
                int &v = ++cnt[nums[j]];
                if (v > 2)
                    t++;
                else if (v == 2)
                    t += 2;
                mn = min(mn, t + dfs(j+1));
            }
            return dp[i] = mn + k;
        };
        return dfs(0);
    }
};