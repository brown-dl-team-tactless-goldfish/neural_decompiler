#include <stdlib.h>

typedef struct TreeNode tn;
typedef struct PathNode{
    int val;
    struct PathNode *previous;} pn;

void DFS(tn *node, pn *pathPrevious, int targetSum, int *ps);

int pathSum(struct TreeNode* root, int targetSum){
    int ps = 0;
    pn *path = NULL;
    DFS(root, path, targetSum, &ps);
    return ps;}

void DFS(tn *node, pn *pathPrevious, int targetSum, int *ps){
    if (node == NULL)
        return;
    
    pn *path = (pn *) malloc(sizeof(pn));
    path->val = node->val;
    path->previous = pathPrevious;
    pn *temp = path;
	
    DFS(node->left, path, targetSum, ps);
    DFS(node->right, path, targetSum, ps);
	
	int sum = 0;
    while(path != NULL){
        sum += path->val;
        if (sum == targetSum)
            *ps += 1;
        path = path->previous;}
    free(temp);}