bool validSquare(vector<int>& p1, vector<int>& p2, vector<int>& p3, vector<int>& p4) {
        int a = pow(abs(p1[0] - p2[0]), 2) + pow(abs(p1[1] - p2[1]), 2);
        int b = pow(abs(p1[0] - p3[0]), 2) + pow(abs(p1[1] - p3[1]), 2);
        int c = pow(abs(p1[0] - p4[0]), 2) + pow(abs(p1[1] - p4[1]), 2);
        
        if(a+b+c==0)
            return false;
        
        if(a==b && a+b==c)
        {
            int p = pow(abs(p2[0] - p4[0]), 2) + pow(abs(p2[1] - p4[1]), 2);
            int q = pow(abs(p3[0] - p4[0]), 2) + pow(abs(p3[1] - p4[1]), 2);
            return p==q;
        }
        else if(a==c && a+c==b)
        {
            int p = pow(abs(p2[0] - p3[0]), 2) + pow(abs(p2[1] - p3[1]), 2);
            int q = pow(abs(p4[0] - p3[0]), 2) + pow(abs(p4[1] - p3[1]), 2);
            return p==q;
        }
        else if (c==b && c+b==a)
        {
            int p = pow(abs(p4[0] - p2[0]), 2) + pow(abs(p4[1] - p2[1]), 2);
            int q = pow(abs(p3[0] - p2[0]), 2) + pow(abs(p3[1] - p2[1]), 2);
            return p==q;
        }
            
        return false;
    }