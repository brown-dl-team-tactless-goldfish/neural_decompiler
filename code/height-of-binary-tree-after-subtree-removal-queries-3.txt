int left_height[100001], right_height[100001];

int maxh;

void help2(TreeNode* root, int h)
{
    if(!root)
    {
        return;
    }
    
    right_height[root->val] = maxh;
    
    maxh = max(maxh,h);
    
    help2(root->right, h+1);
    help2(root->left, h+1);
}

  
void help1(TreeNode* root, int h)
{
    if(!root)
    {
        return;
    }
    
    left_height[root->val] = maxh;
    
    maxh = max(maxh,h);
    
    help1(root->left, h+1);
    help1(root->right, h+1);
  
}
   

vector<int> treeQueries(TreeNode* root, vector<int>& queries) 
{
    maxh = 0;
    
    help1(root, 0);
    
    maxh = 0;
    
    help2(root, 0);
    
    vector<int> ans;
    
    for(auto &x: queries)
    {
        ans.push_back(max(left_height[x],right_height[x]));
    }
    
    return ans;
}