class Solution {
public:
    int divisorSubstrings(int num, int k) {
        string s = to_string(num); //convert num to string
        int c = 0; //initialize counter as 0
        
        for(int i = 0; i <= s.length()-k; i++) { //loop will run until the last possible substring of length k is found
            string temp = s.substr(i, k); //create a substring of given parameters
            int x = stoi(temp); //convert this to int
            if(x == 0) continue; //if it is 0 then continue, because you cannot divide by 0
            if(num % x == 0) c++; //if it divides num then increment counter
        }
        return c; //return counter
    }
};