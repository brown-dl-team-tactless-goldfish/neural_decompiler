int maxSumTwoNoOverlap(int* nums, int numsSize, int firstLen, int secondLen){
    int n = numsSize;
    int* prefix = malloc((n+1)* sizeof(int));
    prefix[0] = 0;
    for(int i = 1; i <= n; i++){
        prefix[i] = prefix[i-1] + nums[i-1];
    }
    int max = 0;
    int sum;
    for(int i = firstLen; i <= n-secondLen; i++){        
        for(int j = i + secondLen; j <= n; j++){
            sum = prefix[i] - prefix[i-firstLen];
            sum += prefix[j] - prefix[j-secondLen];
            max = fmax(max, sum);
        }
    }
    if(firstLen != secondLen){
        for(int i = secondLen; i <= n-firstLen; i++){      
            for(int j = i + firstLen; j <= n; j++){
                sum = prefix[i] - prefix[i-secondLen];
                sum += prefix[j] - prefix[j-firstLen];
                max = fmax(max, sum);
            }
        }        
    }
    
    return max;
}