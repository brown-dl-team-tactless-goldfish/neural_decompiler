struct stack {
    char* buffer;
    int size;
    int top;
};


struct stack* create(int size) {
    struct stack* stack_t = (struct stack *)malloc(sizeof(struct stack));
    stack_t->buffer = (char *)malloc(sizeof(int)*size);
    stack_t->size = size;
    stack_t->top = -1;
    return stack_t;
}

bool full(struct stack* stack_t) {
    if(stack_t->top == (stack_t->size-1)) return true;
    return false;
}

void push(struct stack* stack_t, char c) {
    if(!full(stack_t)) {
        stack_t->buffer[++stack_t->top] = c;
    }
}

bool empty(struct stack* stack_t) {
    if(stack_t->top == -1) return true;
    return false;
}

int pop(struct stack* stack_t) {
    int val;
    if(!empty(stack_t)) {
        val = stack_t->top;
        stack_t->buffer[stack_t->top--];
    }
    return val;
}

int maxDepth(char * s){
    int count = 0, maxCount = 0;
    struct stack* stack_t = create(strlen(s));
    for(int i = 0; i < strlen(s); i++) {
        
        if(s[i] == '(') {
            push(stack_t, '(');
        }
        else if(s[i] == ')') {
            count = pop(stack_t)+1;
        }
        if(count > maxCount) maxCount = count;
        
    }
    return maxCount;
}