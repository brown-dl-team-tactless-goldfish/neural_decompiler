public class Solution {
    public long MakeSimilar(int[] nums, int[] target) {
        Array.Sort(nums);
        Array.Sort(target);
        
        List<int> n_o = new(), n_e = new(), t_o = new(), t_e = new();
        
        for(int i = 0; i < nums.Length; i++)
        {
            if(nums[i] % 2 != 0)
                n_o.Add(nums[i]);
            else
                n_e.Add(nums[i]);
        }
        
        for(int i = 0; i < target.Length; i++)
        {
            if(target[i] % 2 != 0)
                t_o.Add(target[i]);
            else
                t_e.Add(target[i]);
        }
        
        long ans = 0;
        
        for(int i = 0; i < n_o.Count(); i++)
            if(n_o[i] > t_o[i])
                ans += (n_o[i] - t_o[i]) / 2;
        
        for(int i = 0; i < n_e.Count; i++)
            if(n_e[i] > t_e[i])
                ans += (n_e[i] - t_e[i]) / 2;
        
        return ans;
    }
}