void getPermute(int ** perArr, int* nums, int numSize, int* returnSize, int *numbuff, int index, bool *flag){
    
    if(index == numSize){
        perArr[*returnSize] = (int *)calloc(numSize, sizeof(int));
        memcpy(perArr[*returnSize], numbuff, sizeof(int)*numSize);
        (*returnSize)++;        
        return;
    }
    
    for(int i = 0; i < numSize; i++){
        if(!flag[i]){
            flag[i] = true;
            numbuff[index] = nums[i];
            getPermute(perArr, nums, numSize, returnSize, numbuff, index+1, flag); 
            flag[i] = false;
        }
    }
}

int** permute(int* nums, int numsSize, int* returnSize) {
    
    int **perArr = (int **)calloc(1024, sizeof(int *)); 
    int *numbuff = (int *)calloc(numsSize, sizeof(int));
    bool *flag = (bool *)calloc(numsSize, sizeof(bool));
    
    getPermute(perArr, nums, numsSize, returnSize, numbuff, 0, flag);
    
    return perArr;
}