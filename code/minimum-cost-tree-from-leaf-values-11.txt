class Solution {
public:
    
    int mctFromLeafValues(vector<int>& a) 
    {
        int n = a.size(); if(n == 1) return 0;
        
        int sum = 0; for(auto x : a) sum += x;
        
        int mx[n][n];
        
        for(int i = 0; i < n; i++) mx[i][i] = a[i];
        for(int j = 1; j < n; j++)
        {
            int r = 0,c = j;
            while(r < n && c < n)
            {
                mx[r][c] = max(mx[r + 1][c],mx[r][c - 1]);
                r++; c++;
            }
        }
    
        
        int dp[n][n];
        for(int i = 0; i < n; i++) dp[i][i] = a[i];
        
        for(int col = 1; col < n; col++)
        {
            int i = 0,j = col;
            while(i < n && j < n)
            {
                dp[i][j] = INT_MAX;
                for(int k = i; k < j; k++)
                {
                    dp[i][j] = min(dp[i][j],dp[i][k] + dp[k + 1][j] + mx[i][k] * mx[k + 1][j]);  
                }
                
                i++; j++;
            }
        }
        
        return dp[0][n - 1] - sum;
    }
};