 public class AllOne {
    private Dictionary<string, int> m_Items = new();

    private SortedList<int, HashSet<string>> m_Frequencies = new();

    public AllOne() { }

    public void Inc(string key) {
      if (!m_Items.TryGetValue(key, out int freq))
        m_Items.Add(key, freq = 1);
      else
        m_Items[key] = ++freq;

      if (freq > 1) {
        m_Frequencies[freq - 1].Remove(key);

        if (m_Frequencies[freq - 1].Count <= 0)
          m_Frequencies.Remove(freq - 1);
      }

      if (!m_Frequencies.TryGetValue(freq, out HashSet<string> hs))
        m_Frequencies.Add(freq, hs = new HashSet<string>());

      hs.Add(key);
    }

    public void Dec(string key) {
      if (!m_Items.TryGetValue(key, out int freq))
        return;

      m_Frequencies[freq].Remove(key);

      if (m_Frequencies[freq].Count <= 0)
        m_Frequencies.Remove(freq);

      if (freq == 1)
        m_Items.Remove(key);
      else {
        m_Items[key] -= 1;

        if (!m_Frequencies.TryGetValue(freq - 1, out HashSet<string> hs))
          m_Frequencies.Add(freq - 1, hs = new HashSet<string>());

        hs.Add(key);
      }
    }

    public string GetMaxKey() => m_Items.Count <= 0
      ? ""
      : m_Frequencies.Last().Value.First(); 
    
    public string GetMinKey() => m_Items.Count <= 0
      ? ""  
      : m_Frequencies.First().Value.First();
    
  }