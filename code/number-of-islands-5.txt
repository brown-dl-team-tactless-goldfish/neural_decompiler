

static void fill(char** grid, int row, int col, int gridSize, int gridColSize)
{
    if (row < 0 || row > gridSize - 1) return;
    if (col < 0 || col > gridColSize - 1) return;
    if (grid[row][col] == '0') return;
    if (grid[row][col] == '3') return;
    
    grid[row][col] = '3';
    
    fill(grid, row+1, col, gridSize, gridColSize);
    fill(grid, row-1, col, gridSize, gridColSize);
    fill(grid, row, col+1, gridSize, gridColSize);
    fill(grid, row, col-1, gridSize, gridColSize);
}
int numIslands(char** grid, int gridSize, int* gridColSize){
    int numIslands = 0;

    for (int i = 0; i < gridSize; i++)
    {
        for (int j = 0; j < *gridColSize; j++)
        {
            if (grid[i][j] == '1') numIslands++;
            fill(grid, i, j, gridSize, *gridColSize);
            
        }
    }
    
    return numIslands;

}