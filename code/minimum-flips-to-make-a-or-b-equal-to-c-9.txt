unsigned int NumBitsSet(unsigned int val) {
    unsigned int count = 0;
    
    while (val) {
        count++;
        val &= (val - 1);
    }
    
    return count;
}

int minFlips(int a, int b, int c){
    unsigned int or, xor, bitsSet, bitsClr, flips;
    
    or = a | b;
    xor = or ^ c; // Number of bits changed between c and or result.
    bitsSet = c & xor; // Number of bits to be changed from 0 to 1 in or.
    flips = NumBitsSet(bitsSet);
    bitsClr = ~bitsSet & xor; // Number of bits to be changed from 1 to 0 in or.
    
    // Bit may be set in both a and b, so need to clear both.
    flips += (bitsClr & a) ? NumBitsSet(bitsClr & a) : 0;
    flips += (bitsClr & b) ? NumBitsSet(bitsClr & b) : 0;
    
    return flips;
}