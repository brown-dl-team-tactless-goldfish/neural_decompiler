vector<string> maxNumOfSubstrings(string s) 
{
	vector<int> start(26, INT_MAX), end(26, INT_MIN), skip(26, 0);
	vector<string> result;

	for (int i = 0; i < s.size(); ++i)
		start[s[i] - 'a'] = min(start[s[i] - 'a'], i), end[s[i] - 'a'] = i;

	for (int i = 0; i < 26; ++i)
		for (int j = start[i]; j <= end[i]; ++j)
			if (start[s[j] - 'a'] < start[i]) skip[i] = 1;
			else end[i] = max(end[i], end[s[j] - 'a']);

	for (int i = s.size() - 1, cut = INT_MAX; i >= 0; --i)
		if (i == start[s[i] - 'a'] && end[s[i] - 'a'] < cut && !skip[s[i] - 'a'])
			result.push_back(s.substr((cut = i), end[s[i] - 'a'] - i + 1));

	return result;
}