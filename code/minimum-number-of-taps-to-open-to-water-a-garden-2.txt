class Solution {
    class Interval {
      public:
        int start;
        int end;
        Interval(int s, int e): start{s}, end{e} {}
    };
public:
    int minTaps(int n, vector<int>& ranges) {
        vector<Interval> intervals;
        int N = ranges.size()-1;
        for(int i = 0; i < ranges.size(); i++) {
            Interval I(max(0, i-ranges[i]), min(N, i+ranges[i]));
            intervals.push_back(I);
        }
        vector<int> dp (intervals.size(), INT_MAX);
        int first = intervals[0].start, last = intervals[0].end;
        for(int i = first; i<= last; i++)
            dp[i] = 1;
        for(int i = 1; i < intervals.size(); i++) {
            first   = intervals[i].start;
            last    = intervals[i].end;
            if(first > intervals[i-1].end) continue;
            int curr = first == 0 ? 0 : dp[first];
            if(curr == INT_MAX) continue;
            for(int j = first; j <= last; j++) {
                dp[j] = min(dp[j], curr+1);
            }
        }
        return dp.back() == INT_MAX ? -1 : dp.back();
    }
};