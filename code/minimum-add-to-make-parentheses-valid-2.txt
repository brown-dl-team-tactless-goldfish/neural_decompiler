struct stack{
    int val;
    unsigned int cap;
    struct stack *link;
};

void push(struct stack** top,int x){
    struct stack *temp = (struct stack*)malloc(sizeof(struct stack));
    if((*top)!=NULL){
        temp->cap = ((*top)->cap)+1;
    }
    else{
        temp->cap = 0;
    }

    temp->val = x;
    temp->link = (*top);
    (*top) = temp;
}
void pop(struct stack** top){
    if((*top)==NULL)return ;
    struct stack *t = NULL;
    t=(*top);
    (*top) = t->link;
    free(t);
}
int head(struct stack** top){
    if((*top)==NULL)
        return 0;
    return (*top)->val;
}
void print(struct stack* top){
    struct stack* t = top;
    printf("Stack - {");
    while(t!=NULL){
        printf(" %d ",t->val);
        t = t->link;
    }
    printf("}");
    printf("\n");
}



int minAddToMakeValid(char * s){
    if(s==NULL)return NULL;
    struct stack *top = NULL;
    int c = 0;
    while(*s){
        printf("%c",*s);
        if(*s!=')'){
            push(&top,(int)(*s));
            c++;
        }else{
            if(((char)head(&top))=='('){
                pop(&top);
                c--;
            }else{
                push(&top,(int)(*s));
                c++;
            }
        }
        s++;
    }
    return c;
}