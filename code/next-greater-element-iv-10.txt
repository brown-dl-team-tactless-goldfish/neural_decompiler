class Solution {
public:
    vector<int> secondGreaterElement(vector<int>& nums) {
        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq_first, pq_second;
        pq_first.push({nums[0], 0});
        vector<int> ans(nums.size(), -1);
        
        for(int i=1; i<nums.size(); i++){
            // checking for the numbers who already have one number greater than them
            while(pq_second.size()){
                pair<int, int> temp = pq_second.top();
                if(temp.first < nums[i]){
                    ans[temp.second] = nums[i];
                    pq_second.pop();
                }
                else{
                    break;
                }
            }
            //checking for numbers who has no number greater than them yet
            while(pq_first.size()){
                pair<int, int> temp = pq_first.top();
                if(temp.first < nums[i]){
                    pq_first.pop();
                    pq_second.push({temp.first, temp.second});
                }
                else{
                    break;
                }
            }
            // insert current index number among those who haven't found any no greater than them.
            pq_first.push({nums[i], i});
        }
        while(pq_first.size()){
            ans[pq_first.top().second] = -1;
            pq_first.pop();
        }
        while(pq_second.size()){
            ans[pq_second.top().second] = -1;
            pq_second.pop();
        }
        
        return ans;
    }
};