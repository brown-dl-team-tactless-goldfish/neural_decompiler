public class Solution 
{
    class TrieNode
    {
        public TrieNode[] children;
        public TrieNode()
        {
            children = new TrieNode[2];
        }
    }
    
    TrieNode root;
    //T : O(nums.Length)
    //S : O(1)
    public int FindMaximumXOR(int[] nums) 
    {
        int MaxBitLength = Convert.ToString(nums.Max(),2).Length;
        root = new TrieNode();
        BuildTrie(nums,MaxBitLength);
        
        int max = 0;
        for(int i = 0;i<nums.Length;i++)
            max = Math.Max(max,GetMaximumXOR(nums[i],MaxBitLength));
        
        return max;
    }
    
    //T : O(32(worstcase)) --> O(1)
    //S : O(1)
    int GetMaximumXOR(int num,int MaxBitLength)
    {
        TrieNode Cur = root;
        string bitstring = ConvertTo32BitString(num,MaxBitLength);
        int corresponding_num = 0;
        
        foreach(char c in bitstring)
        {
            int index = c - '0';
            int corresponding_index = index ^ 1;
            
            if(Cur.children[corresponding_index] != null)
            {
                corresponding_num =  (corresponding_num << 1) | corresponding_index;
                Cur = Cur.children[corresponding_index];
            }
            else
            {
                corresponding_num =  (corresponding_num << 1) | index;
                Cur = Cur.children[index];
            }
        }
        
        return num ^ corresponding_num;
    }
    
    
    //T : O(32(worstcase) x nums.Length) --> O(nums.Length)
    //S : O(1)
    void BuildTrie(int[] nums,int MaxBitLength)
    {
        for(int i = 0;i<nums.Length;i++)
        {
            TrieNode Cur = root;
            string bitstring = ConvertTo32BitString(nums[i],MaxBitLength);
            
            foreach(char c in bitstring)
            {
                int index = c - '0';
    
                if(Cur.children[index] == null)
                    Cur.children[index] = new TrieNode();
                
                Cur = Cur.children[index];
            }
        }
    }
    
    string ConvertTo32BitString(int num,int MaxBitLength)
    {
        return Convert.ToString(num, 2).PadLeft(MaxBitLength,'0'); 
    }
    
    
}