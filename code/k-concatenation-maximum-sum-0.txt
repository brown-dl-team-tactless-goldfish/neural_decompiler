int kadane(int* arr, int arrSize,int degree){
    int i,max=arr[0],tmp=0;
    for(i=0;i<arrSize*degree;i++){
        tmp += arr[i%arrSize];
        if(tmp<0){
            tmp=0;
        }
        if(max<tmp){
            max=tmp;
        }
    }
    return max;
}
int kConcatenationMaxSum(int* arr, int arrSize, int k){
    if(k==1){
        return kadane(arr,arrSize,1);
    }
    long long i,sum=0;
    long long N=1000000007;
    for(i=0;i<arrSize;i++){
        sum+=arr[i];
    }
    if(sum>0){
        return (kadane(arr,arrSize,2)+((k-2)*sum)%N)%N;
    }else{
        return (kadane(arr,arrSize,2))%N;
    }
}