typedef struct { int *A, i, ASize; } RLEIterator;

RLEIterator* rLEIteratorCreate(int* A, int ASize) {
    RLEIterator *r = calloc(1, sizeof *r);
    r->A = A;
    r->ASize = ASize;
    return r;
}

int rLEIteratorNext(RLEIterator* obj, int n) {
    RLEIterator *r = obj;
    int *A = r->A, i = r->i, sz = r->ASize;
    for (int c = 0 ; i < sz && c < n ; c + A[i] >= n ? A[i] -= n - c, c = n : (c += A[i], i += 2));
    return r->i = i, i < sz ? A[i + 1] : -1;
}

void rLEIteratorFree(RLEIterator* obj) {
    free(obj);
}