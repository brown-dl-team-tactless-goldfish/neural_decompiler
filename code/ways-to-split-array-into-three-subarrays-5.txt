#define MOD 1000000007

class Solution {
public:
    int waysToSplit(vector<int>& nums) {
        int size{(int)nums.size()};
        std::vector<int> acc(size+1, 0);
        for(int i{1}; i <= size; ++i) acc[i] = acc[i-1] + nums[i-1];
        int stop{(int)acc.back()/3}, count{0}, total{acc.back()};
        auto jit{acc.begin()+2}, kit{acc.begin()+3};
        for(int i{1}; i <= size; ++i) {
            int f{acc[i]};
            if(jit == acc.begin()+i) ++jit;
            jit = std::lower_bound(jit, acc.end(), f*2);
            kit = std::lower_bound(kit, --acc.end(), f, [total](const auto& a, const auto& b){return total-a >= a-b;});
            if(jit-acc.begin() > kit-acc.begin()) return count;
            count = (count + kit - jit) % MOD;
        }
        return count;
    }
};