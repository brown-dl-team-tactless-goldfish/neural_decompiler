class Solution {
public:
    double maxAverageRatio(vector<vector<int>>& classes, int extraStudents) {
        // ave ratio = sum pass_i/all_i
        // delta = (p+1)/(a+1) - p/a = (ap+a -ap-p)/a(a+1) = (a-p)/a(a+1)
        priority_queue<Class> q;
        for(auto& v:classes) q.emplace(v[0], v[1]);
        while(extraStudents-- > 0){
            auto [p, a, d] = q.top(); q.pop();
            q.emplace(p+1, a+1);
        }
        double res = 0;
        while(!q.empty()){
            auto [p, a, d] = q.top(); q.pop();
            res += double(p)/a;
        }
        return res / classes.size();
    }
    
    struct Class{
        Class(int p, int a) : pass(p), all(a), delta(double(a-p)/a/(a+1)) {}
        int pass;        
        int all;
        double delta;
        bool operator<(const Class& rhs) const{
            return delta < rhs.delta;
        }
    };
};