class Solution {
public:
    long long maxScore(vector<int>& nums1, vector<int>& nums2, int k) {
        priority_queue<int>pq1;
        priority_queue<pair<int,int>>pq2;
       
        for(int i=0;i<nums2.size();i++){
            pq2.push({nums2[i],i});
        }
        int temp=k;
        long long ans=0;
        long long sum=0;
        long long x=INT_MAX;
         while(temp--){

             auto j=pq2.top();
             pq2.pop();
             x=j.first;
             sum+=nums1[j.second];
             pq1.push(-nums1[j.second]);
         }
         long long ml = sum*x;
         ans=max(ans,ml);
         while(!pq2.empty()){
             auto j=pq2.top();
             pq2.pop();
             x=j.first;
             sum+=pq1.top();
             pq1.pop();
             sum+=nums1[j.second];
             pq1.push(-nums1[j.second]);
            ans=max(ans,sum*x);
         }
         return ans;
    }
};