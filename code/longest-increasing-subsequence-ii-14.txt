
void update(vector<int> &seg,int si,int sl,int sr,int i,int val){
    if(sl==sr){
        seg[si]=max(seg[si],val);
        return;
    }
    int mid=(sl+sr)/2;
    if(i<=mid)update(seg,si*2,sl,mid,i,val);
    else update(seg,si*2+1,mid+1,sr,i,val);
    seg[si]=max(seg[si*2],seg[si*2+1]);
}

int Q(vector<int> &seg,int si,int sl,int sr,int l,int r){
    if(l>r)return 0;
    if(sl==l and sr==r)return seg[si];
    int mid=(sl+sr)/2;
    return max(
        Q(seg,si*2,sl,mid,l,min(r,mid)),
        Q(seg,si*2+1,mid+1,sr,max(mid+1,l),r)
    );
}


class Solution {
public:
    int lengthOfLIS(vector<int>& nums, int k) {
        vector<int> seg(400005);
        int ans=0;
        for(int i=0;i<nums.size();i++){
            int maxi=Q(seg,1,1,100000,max(1,nums[i]-k),nums[i]-1);
            ans=max(ans,maxi+1);
            update(seg,1,1,100000,nums[i],maxi+1);
        }
        return ans;
    }
};