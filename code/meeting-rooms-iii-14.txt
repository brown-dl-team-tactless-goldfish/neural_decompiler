typedef long long ll;

class Solution {
public:
    int mostBooked(int n, vector<vector<int>>& a) {
        sort(a.begin(), a.end());
        ll i=0, t=0, m=a.size();
        priority_queue<pair<ll, ll>, vector<pair<ll, ll> >, greater<pair<ll, ll> > > pq; // priority queue for meetings
        priority_queue<ll, vector<ll>, greater<ll> > pq1; // priority queue for rooms
        for(ll i=0; i<n; i++){
            pq1.push(i);
        }
        vector<ll> ans(n, 0);
        while(i<m){
            t=max(t, (ll)a[i][0]);
			// Add idle rooms with no meetings 
            while(!pq.empty() && pq.top().first<=t){
                pq1.push(pq.top().second);
                pq.pop();
            }
            if(pq1.size()>0){
				// Assign smallest idle room to this meeting
                ll idx=pq1.top();
                pq1.pop();
                ans[idx]++;
                pq.push(make_pair(t+a[i][1]-a[i][0], idx));
                i++;
            }
            else{
				// No idle rooms. Wait until a room becomes empty
                t=pq.top().first;
            }
        }
        ll mx=*max_element(ans.begin(), ans.end()), res=-1;
        for(ll i=0; i<n; i++){
            if(ans[i]==mx){
                res=i;
                break;
            }
        }
        return res;
    }
};