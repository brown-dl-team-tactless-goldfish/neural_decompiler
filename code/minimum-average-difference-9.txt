class Solution {
public:
    int minimumAverageDifference(vector<int>& nums) {
        
        int n = nums.size();
        vector<long long int> pre(n,0);
        pre[0]=nums[0];
        
        for(int i = 1;i<n;i++)
           pre[i] = pre[i-1] + nums[i];
            // cout<<pre[i]<<" ";}cout<<endl;
        
        multimap<int,int> mp;
        
        int ans = INT_MAX;
        for(int i = 0;i<n;i++)
        {
            // cout<<pre[i]<<" "<<pre[n-1] - pre[i]<<endl;
            float a = pre[i]/(i+1);
            float b = 0;
            if(i!=n-1)
                b = (pre[n-1] - pre[i])/(n-i-1);
            if(a - int(a)>0.5)
                a++;
            
            if(b - int(b)>0.5)
                b++;
            int c = abs((int)a-(int)b);
            ans = min(ans,c);
            mp.insert({c,i});
        }
        
        auto it = mp.begin();
        return it->second;
        return ans;
    }
};