class Solution {
    void rec(string s, int n, set<string> &st) {
        if(s.size() == n) {
            st.insert(s);
            return;
        }
        if(!s.size()) rec(s + 'a', n, st);
        if(!s.size()) rec(s + 'b', n, st);
        if(!s.size()) rec(s + 'c', n, st);
        
        if(s.back() != 'a') rec(s + 'a', n, st);
        if(s.back() != 'b') rec(s + 'b', n, st);
        if(s.back() != 'c') rec(s + 'c', n, st);
    }
    
public:
    string getHappyString(int n, int k) {
        string s;
        set<string> st;
        rec(s, n, st);
        
        vector<string> v(st.begin(), st.end());
        return k > v.size() ? "" : v[k - 1];
    }
};