class Solution {
public:
    vector<vector<string>> displayTable(vector<vector<string>>& orders) {
        vector<vector<string> > ans;
        int n=orders.size();
        int m=orders[0].size();
        if(!n || !m) return ans;
        
        map<int,unordered_map<string,int> > mp; //2D map
        set<string> dishes;                     //set for sorting
        for(auto v: orders){
            dishes.insert(v[2]);
            mp[stoi(v[1])][v[2]]++;            
        }
        //inserting first row to the ans
        vector<string> heading(dishes.begin(),dishes.end());
        heading.insert(heading.begin(),"Table");  
        ans.push_back(heading);
        for(auto p: mp) {
            vector<string> row;
            row.push_back(to_string(p.first));
            for(string s: dishes){
                row.push_back(to_string(p.second[s]));
            }
            ans.push_back(row);
        }
        return ans;
    }
};