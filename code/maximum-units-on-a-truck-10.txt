int cmp(const void *a, const void *b){
    int **x = (int**)a;
    int **y = (int**)b;
    
    if((*x)[1] > (*y)[1])
        return 0;
    else if((*x)[1] < (*y)[1])
        return 1;
    else{
        if((*x)[0] > (*y)[0])
            return 1;
    }
    return 0;
}

int maximumUnits(int** boxTypes, int boxTypesSize, int* boxTypesColSize, int truckSize){
    int i, sum = 0, l = boxTypesSize, n = truckSize;
    int **pArr = (int**)malloc(boxTypesSize * sizeof(int*));
    
    for(i = 0; i < l; i++)  pArr[i] = boxTypes[i];
    qsort(pArr, l, sizeof(int*), cmp);
    
    for(i = 0; i < l; i++){
        int taken;
        if(pArr[i][0] > n){
            taken = n;
            sum += taken * pArr[i][1];
            break;
        }
        else{
            taken = pArr[i][0];
            sum += taken * pArr[i][1];
        }
        n -= taken;
    }
    
    return sum;
}