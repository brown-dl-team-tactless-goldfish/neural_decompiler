int cmpfunc (const void * a, const void * b) {
   return ( *(int*)a - *(int*)b );
}

int* relativeSortArray(int* arr1, int arr1Size, int* arr2, int arr2Size, int* returnSize){
    
    qsort(arr1, arr1Size, sizeof(int), cmpfunc);
    int * res = (int *)malloc(sizeof(int) * arr1Size);
    memset(res,0,sizeof(int) * arr1Size);
    
    int i;
    int arr[10001]={0};
    int p;
    int j=0;
    
    for (i=0; i < arr1Size; i++)
    {
        p = arr1[i];
        arr[p]++;
    }

    for (i=0; i < arr2Size; i++)
    {
        p = arr2[i];
        p = arr[p];
        while (p)
        {
            res[j] = arr2[i];
            j++;
            p--;
        }
        p = arr2[i];
        arr[p] = 0;
    }


    for (i=0; i < arr1Size; i++)
    {
        p = arr1[i];
        p = arr[p];
        while (p)
        {
            res[j] = arr1[i];
            j++;
            p--;
        }
        p = arr1[i];
        arr[p] = 0;
    }

  
    *returnSize = arr1Size;
    return &res[0];
}