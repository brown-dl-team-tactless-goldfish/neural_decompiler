public class Solution {
    public int MaximumProduct(int[] nums, int k) {
        
        if(nums == null || nums.Length == 0)
            throw new ArgumentException("Invalid Input.");
        
        SortedDictionary<int,int> dic = new SortedDictionary<int,int>();
        foreach(var num in nums)
            dic[num] = dic.GetValueOrDefault(num, 0) + 1;
        
        while(k > 0)
        {
            var minKv = dic.First();
            if(dic[minKv.Key] == 1)
                dic.Remove(minKv.Key);
            else
                dic[minKv.Key]--;
            
            if(!dic.ContainsKey(minKv.Key + 1))
                dic.Add(minKv.Key + 1, 1);
            else
                dic[minKv.Key + 1]++;
            
            k--;
        }
        
        int modulo = (int)1e9 + 7;
        long res = 1;
        foreach(var kv in dic)
        {
            int cnt = kv.Value;
            int val = kv.Key;
                    
            while(cnt > 0)
            {
                Console.WriteLine(val);
                res = (res * val) % modulo;
                cnt--;
            }
        }
        
        return (int)res;
    }
}