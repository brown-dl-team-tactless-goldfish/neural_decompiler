class DetectSquares {
public:
    unordered_map<int, unordered_map<int, int>> row, col;
    DetectSquares() {
        
    }
    
    void add(vector<int> point) {
        int x = point[0], y = point[1];
        row[x][y]++;
        col[y][x]++;
    }
    
    int count(vector<int> point) {
        int x = point[0], y = point[1];
        unordered_map<int, int> mp = col[y];
        int count = 0;
        for (auto it = mp.begin(); it != mp.end(); it++) {
            int c = it->second, x1 = it->first;
            if (x == x1)    continue;
            int dis = abs(x - x1);
            int y1 = y + dis, y2 = y - dis;
            if (row[x1][y1] && row[x][y1])  count += (row[x1][y1] * row[x][y1] * c);
            if (row[x1][y2] && row[x][y2])  count += (row[x1][y2] * row[x][y2] * c);
        }
        
        return count;
    }
};
