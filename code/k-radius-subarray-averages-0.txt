int* getAverages(int* nums, int numsSize, int k, int* returnSize){
    int n = numsSize;
    *returnSize = n;
    int* ans = malloc(n * sizeof(int)); 
    int K = 2*k + 1;
    long long sum = 0;
    if(n < K){
        //special case
        for(int i = 0; i < n; i++){
            ans[i] = -1;
        }
        return ans;
    }
    
    //front
    for(int i = 0; i < k; i++){
        ans[i] = -1;
        sum += nums[i];
    }
    
    sum += nums[k];
    for(int i = k+1; i < 2*k + 1; i++){
        sum += nums[i];
    }
    
    ans[k] = sum/K;
    for(int i = k+1; i < n-k; i++){
        int d = nums[i+k] - nums[i-k-1];
        if(d == 0)
            ans[i] = ans[i-1];
        else{
            sum += d;
            ans[i] = sum/K;
        }
    }
    
    //BACK
    for(int i = 0; i < k; i++){
        ans[n-1-i] = -1;
    }
        
    return ans;
}