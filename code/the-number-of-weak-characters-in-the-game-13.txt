class Solution {
public:
    bool isAStrongerThanB(const pair<int, int> &a, const pair<int, int> &b) {
        return (a.first > b.first && a.second > b.second);
    }
    int numberOfWeakCharacters(vector<vector<int>>& props) {
        sort(begin(props), end(props), [&] (const vector<int> &a, const vector<int> &b) {
            if (a[0] == b[0]) return a[1] >= b[1];
            return a[0] < b[0];
        });
        stack<pair<int, int>> stk;
        int n = props.size();
        for (int i = 0; i < n; ++i) {
            pair<int, int> cur = {props[i][0], props[i][1]};
            while (stk.size() > 0 && isAStrongerThanB(cur, stk.top())) stk.pop();
            stk.push(cur);
        }
        return n - stk.size();
    }
};