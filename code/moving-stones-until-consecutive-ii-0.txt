/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int cmp(const void* a, const void* b){
    return *(int*)a - *(int*)b ;
}
int* numMovesStonesII(int* stones, int stonesSize, int* returnSize){
    int n = stonesSize ;
    *returnSize = 2 ;
    qsort(stones, n, sizeof(int), cmp) ;
    int* ans = malloc(2 * sizeof(int)) ;
    int upper , lower = n ;
    upper = fmax(stones[n-1] - stones[1] + 1 - n + 1, stones[n-2] - stones[0] + 1 - n + 1) ;
    int left = 0 ;
    for(int right = 0; right < n; right++){
        while(stones[right] - stones[left] + 1  > n)
            left++ ;
        
        if( stones[right] - stones[left] + 1 == n-1 && right - left + 1 == n-1 )
            lower = fmin(lower, 2) ;
        else
            lower = fmin(lower, n - (right - left + 1)) ;
    }
    ans[0] = lower ;
    ans[1] = upper ;
    return ans ;
}