use std::collections::HashMap;

impl Solution {
    pub fn minimum_rounds(tasks: Vec<i32>) -> i32 {
        let mut diffCount = HashMap::new();
        for t in tasks {
            *diffCount.entry(t).or_insert(0) += 1;
        }

        let mut rounds = 0i32;
        let countVec: Vec<i32> = diffCount.into_values().collect();
        for c in countVec {
            if c == 1 {
                return -1;
            } else {
                rounds += (c as f32/3.0).ceil() as i32;
            }
        }

        rounds
    }
}