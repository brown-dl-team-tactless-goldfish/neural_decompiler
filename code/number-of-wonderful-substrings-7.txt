class Solution {
public:
    long long wonderfulSubstrings(string word) {
        // used to store occurence of  mask of letter
        int count[1024]{};
        long long res = 0 , running = 0;  // res  will store total substring  , running will store current mask of substring
        count[0] = 1;
        
        for(auto &ch : word){
            
            // masking letter by shifting 1 to the left ith distance
            running = running^(1<<(ch-'a'));
            
            //calculating res if this mask appear before , also updating count of mask in count map
            res += count[running]++;
            
            //now need to see if there is some odd no of occurence of letter , in the current range'
            // that will give some more substrings
            // we will go for mask of each letter and xor with running mask to get the  
            // no of occurence of such mask .
            for(int i=0;i<10;i++){
		
                res += count[running ^ (1<<i)];
            }
        }
        return res;
    }
};