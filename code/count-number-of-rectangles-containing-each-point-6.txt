class Solution {
public:
    vector<int> countRectangles(vector<vector<int>>& rectangles, vector<vector<int>>& points) {
        vector <int> hs[102];
        for (auto rec : rectangles) {
            hs[rec[1]].push_back(rec[0]);
        }
        for (int i = 0; i < 102; ++i) {
            sort(hs[i].begin(), hs[i].end());
        }
        // for (int i = 1; i <= 9; ++i) {
        //     cout << i << " :";
        //     for (auto j : hs[i]) {
        //         cout << j << " ";
        //     }
        //     cout << '\n';
        // }
        // cout << "\\\\\\\\\---" << '\n';
        vector <int> res;
        for (auto point : points) {
            int x = point[0];
            int y = point[1];
            int total = 0;
            for (int j = y; j <= 101; ++j) {
                int l = 0, r = hs[j].size() - 1;
                int can = 0;
                while (l <= r) {
                    int mid = (l + r) >> 1;
                    if (hs[j][mid] >= x) {
                        can = hs[j].size() - mid;
                        r = mid - 1;
                    } else {
                        l = mid + 1;
                    }
                }
                // if (x == 2 and y == 3) {
                //     cout << j << " :" << can << '\n';;
                // }
                total += can;
            }
            res.push_back(total);
        }
        return res;
    }
};