"""
# Definition for a Node.
class Node:
    def __init__(self, val=None, children=None):
        self.val = val
        self.children = children
"""

class Solution:
    # dfs
    def preorder(self, root: 'Node') -> List[int]:
        res = list()
        def dfs(node):
            if node != None:
                res.append(node.val)
                for n in node.children:
                    dfs(n)
        dfs(root)
        return res
                
    #bfs
    def preorder(self, root: 'Node') -> List[int]:
        res = list()
        stk = list()
        if root != None:
            stk.append(root)
        while len(stk) > 0:
            node = stk.pop()
            res.append(node.val)
            node.children.reverse()
            for n in node.children:
                stk.append(n)
        return res
        