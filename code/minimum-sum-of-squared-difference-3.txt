class Solution {
public:
    #define ll long long int
    long long minSumSquareDiff(vector<int>& nums1, vector<int>& nums2, int k1, int k2) {
        int n = nums1.size();
        int k = k1+k2;
        vector<int> a(n);
        for(int i=0;i<n;i++) a[i] = abs(nums1[i]-nums2[i]);
        vector<int> rm(n,0);
        sort(a.begin(),a.end());
        ll ans = 0;
        int c = 0;
        for(int i=n-1;i>=1;i--){
            int diff = a[i]-a[i-1];
            c++;
            if(diff*c<=k){
                k-=diff*c;
                rm[i]+=diff;
            }
            else{
                int r = k/c;
                rm[i]+=r;
                k = k - r*c;
                rm[i]+=1;
                if(i+k<n)
                    rm[i+k]-=1;
                k = 0;
                break;
            }
        }
        
        int diff = a[0];
        c++;
        if((ll)diff*(ll)c<=k){
            k-=(ll)diff*(ll)c;
            rm[0]+=(ll)diff;
        }
        else{
            int r = k/c;
            rm[0]+=r;
            k = k - r*c;
            rm[0]+=1;
            if(k<n)
                rm[k]-=1;
        }

        for(int i=1;i<n;i++){
            rm[i]+=rm[i-1];
        }

        for(int i=0;i<n;i++){
            a[i]-=rm[i];
            ll cur = (ll)a[i];
            ans+=cur*cur;
        }
        return ans;
    }
};