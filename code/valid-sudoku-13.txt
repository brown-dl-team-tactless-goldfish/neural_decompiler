

bool isValidSudoku(char** board, int boardSize, int* boardColSize){

    int **hash_board_col;
    int **hash_board_row;
    int **hash_board_table;
    int table_index = 0;
    int curr_value = 0;
    
    hash_board_col = calloc(9, sizeof(int*));
    hash_board_row = calloc(9, sizeof(int*));
    hash_board_table = calloc(9, sizeof(int*));
    
    for (int i = 0; i < 9; i++) {
        hash_board_table[i] = calloc(9, sizeof(int));
    }
    
    for (int i = 0; i < 9; i++) {
        hash_board_col[i] = calloc(9, sizeof(int));
        hash_board_row[i] = calloc(9, sizeof(int));
    }
    
    // i row, j col
    // i*3 + j
    for (int i = 0; i < 9; i++) {
        for (int j = 0; j < 9; j++) {
            if (board[i][j] == '.') {
                continue;
            }
            table_index = (i/3) * 3 + j/3;
            printf("%d %d %d\n", i,j,table_index);
            
            curr_value = (int) (board[i][j] - '0');
            curr_value--;
            
            if (hash_board_col[j][curr_value] || hash_board_row[i][curr_value] || hash_board_table[table_index][curr_value]) {
                printf("FALSE\n");
                return false;
            }
        
            hash_board_col[j][curr_value] = 1;
            hash_board_row[i][curr_value] = 1;
            hash_board_table[table_index][curr_value] = 1;
        }
    }
    
    return true;
    
}