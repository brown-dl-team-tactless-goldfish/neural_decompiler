class Solution {
public:
    unordered_map<int, vector<int>> mp;
    
    int getVal(string &s, int i, int j){
        int val = 0;
        for(int k=i; k<=j; ++k){
            int x = s[k]-'0';
            val = (val<<1);
            val = val|x;
        }
        return val;
    }
    
    void solve(string &s, int k, int n){
        for(int i=0; i+k-1<n; ++i){
            int val = getVal(s, i, i+k-1);
            if(mp.find(val) != mp.end() && mp[val][0] == -1){
                mp[val] = {i, i+k-1};
            }
        }
    }
    
    vector<vector<int>> substringXorQueries(string s, vector<vector<int>>& queries) {
        int n = s.size();
        vector<vector<int>> res;
        vector<int> v;
        mp.clear();
        
        for(auto &e : queries){
            int x = e[0]^e[1];
            v.push_back(x);
            mp[x] = {-1, -1};
        }
        
        
        for(int k=1; k<=30; ++k){
            solve(s,k,n);
        }
        
        for(auto &q : v){
            res.push_back(mp[q]);
        }
        
        return res;
    }
};