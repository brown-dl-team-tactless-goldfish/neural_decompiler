string smallestSubsequence(string s, int k, char letter, int repetition) {
        int totalOccurencesOfLetter = 0;
        for(char c : s){
            totalOccurencesOfLetter += (c==letter);
        }
        string store="";
         int currentOccurencesOfLetter = 0,totalOccurencesLeft = totalOccurencesOfLetter;
         for (int i = 0; i < s.size(); i++) {
              while (!store.empty() && store.back() > s[i] && (s.size() - i + store.size() > k) && (store.back() != letter ||                                                                                                   ((totalOccurencesLeft+currentOccurencesOfLetter) > repetition))){
                    if (store.back() == letter)
                        currentOccurencesOfLetter--;
                    store.pop_back();
              }

             if (store.size() < k) {
                 if (s[i] == letter || k - (int)store.size() > (repetition-currentOccurencesOfLetter)) {
                    store += s[i];
                    if (s[i] == letter)
                        currentOccurencesOfLetter++;
                }
            }

            if (s[i] == letter)
              totalOccurencesLeft--;
        }
      return store;
    }