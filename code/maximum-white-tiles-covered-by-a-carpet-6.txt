class Solution {
public:
    int find(vector<vector<int>>& nums, int k){
        int l = 0,h=nums.size()-1,re = -1;
        while(l<=h){
            int m = (l+h)/2;
            if(nums[m][1]>=k) {
                re = m;
                h = m-1;
            }
            else l = m+1;
        }
        return re;
    }
    int maximumWhiteTiles(vector<vector<int>>& nums, int d) {
        sort(nums.begin(),nums.end());
        int re = 0; 
        vector<int> dp(nums.size(),0);
        dp[0] = nums[0][1]-nums[0][0]+1;
        for(int i = 1; i<nums.size();++i) dp[i] = dp[i-1] + nums[i][1]-nums[i][0]+1;
        for(int i = 0; i<nums.size();++i){
            int k = nums[i][1]-d+1;
            int l = find(nums,k);
            int sum = dp[i];
            if(l>0) sum -= dp[l-1];
            sum+= min(nums[l][1]-k+1,nums[l][1]-nums[l][0]+1) - (nums[l][1]-nums[l][0]+1);
            re = max(re,sum);
        }
        return re;
    }
};