class Solution {
public:
    
    vector<pair<int,int>>v;
vector<vector<int>>dp;
    
    
    int recurs(int i,int j)
    {
        if(i>=v.size())
        {
            return 0;
        }
        
        
        int maxScore=-1;
        if(j!=-1)
           maxScore=v[j].second;
        
        if(dp[i+1][j+1]!=-1)
        {
            return dp[i+1][j+1];
        }
        
        
        if(v[i].second>=maxScore) 
            return dp[i+1][j+1]=max(recurs(i+1,i)+v[i].second,recurs(i+1,j));
        else
            return dp[i+1][j+1]=recurs(i+1,j);
        
    }

    int bestTeamScore(vector<int>& scores, vector<int>& ages) {
        dp.resize(1002,vector<int>(1002,-1));
        for(int i=0;i<scores.size();i++)
        {
            v.push_back({ages[i],scores[i]});
        }
        sort(v.begin(),v.end());
        return recurs(0,-1);
    }
};