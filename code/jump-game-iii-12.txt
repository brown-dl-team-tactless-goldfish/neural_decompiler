class Solution {
public:
    bool canReach(vector<int>& arr, int start) {
        
        int n = arr.size();
        unordered_map<int, bool>visited;
        
        queue<int>pq;
        pq.push(start);
        
        while (!pq.empty()) {
            int size = pq.size();
            for (int i = 0; i < size; i++) {
                int t = pq.front();
                pq.pop();
        
                if (visited.find(t) != visited.end())
                    continue;
                
                if (!arr[t]) return true;
                
                visited[t] = true;
                int a = t + arr[t];
                int b = t - arr[t];
                
                if (a >= 0 && a < n) pq.push(a);
                if (b >= 0 && b < n) pq.push(b);
            }
        }
        
        return false;
    }
};