    typedef vector<vector<vector<long>>> vvv;
    long m = pow(10, 9) + 7;
    
    int knightDialer(int n) {
        
        vvv dp(n + 1, vector<vector<long>>(4, vector<long>(3, -1)));
        long s = 0;
        
        for(int i = 0 ; i <  4 ; i++) 
            for(int j = 0 ; j < 3 ; j++) 
                s = (s + dfs(i, j, n, dp)) % m;
        
        return (int)s;
    }
    
    long dfs(int i, int j, int n, vvv& dp) {
        
        if(i < 0 || j < 0 || i >= 4 || j >= 3 || (i == 3 && j != 1)) return 0;
        if(n == 1) return 1;
        if(dp[n][i][j] != -1) return dp[n][i][j];
        
        dp[n][i][j] =  dfs(i - 2, j + 1, n - 1, dp)%m + dfs(i - 1, j + 2, n - 1, dp)%m + 
            dfs(i + 1, j + 2, n - 1, dp)%m + dfs(i + 2, j + 1, n - 1, dp)%m +
            dfs(i + 2, j - 1, n - 1, dp)%m + dfs(i + 1, j - 2, n - 1, dp)%m + 
            dfs(i - 1, j - 2, n - 1, dp)%m + dfs(i - 2, j - 1, n - 1, dp)%m;
        
        return dp[n][i][j];
    }