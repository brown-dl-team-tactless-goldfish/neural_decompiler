#define ll long long
  ll mod= 1000000007;  
    int maxSum(vector<int>& nums1, vector<int>& nums2) {
 
      int n= nums1.size();
      int m=nums2.size();
      
      vector<ll>pre1(n+1,0LL);
      vector<ll>pre2(m+1,0LL);
  
      unordered_map<ll,ll>m2;
      
      for(int i=0;i<n;i++){
        pre1[i+1]=(pre1[i]+nums1[i]);
    
      }
      for(int j=0;j<m;j++){
        pre2[j+1]=(pre2[j]+nums2[j]);
        
        m2[nums2[j]]=j;
      }
      vector<ll>v1;
      vector<ll>v2;
      int s1=0;
      int s2=0;
      for(int i=0;i<n;i++){
        if(m2.count(nums1[i])){
          v1.push_back((pre1[i+1]-pre1[s1]));
          int k= m2[nums1[i]];
          v2.push_back((pre2[k+1]-pre2[s2]));
          s1=i+1;
          s2=k+1;
          
        } 
     }
      
   if(s1!=n){
     v1.push_back((pre1[n]-pre1[s1]));
   }
  if(s2!=m){
    v2.push_back((pre2[m]-pre2[s2]));
  }
      
   n=v1.size();
   m=v2.size();
    int i=0,j=0;
    ll ans=0;
  while(i<n || j<m){
   
    if(i<n && j<m){
      ll a= max(v1[i],v2[j]);

      ans = (ans%mod+a%mod )%mod;
      i++;
      j++;
    }else if(i<n){
      ans = (ans%mod+ v1[i]%mod)%mod;
      i++;
    }else if(j<m){
      ans = (ans%mod+ v2[j]%mod)%mod;
      j++;
    }
    
    
  }
      return (int)ans%mod;
        
    }