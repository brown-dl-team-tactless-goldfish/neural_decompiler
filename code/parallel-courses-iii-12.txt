void topo(int src,stack<int>&st,vector<bool>&vis,vector<int>adj[]){
    vis[src]=true;
    for(auto it : adj[src]){
        if(!vis[it]){
            topo(it,st,vis,adj);
        }
    }
    st.push(src);
}
int minimumTime(int n, vector<vector<int>>& rt, vector<int>& t) {
    vector<int>adj[n+1];
    if(rt.size() == 0){
        int mx=INT_MIN;
        for(auto it : t)
            mx=max(mx,it);
        return mx;
    }
    for(int i=0;i<rt.size();i++){
        int pre = rt[i][0];
        int nex = rt[i][1];
        adj[pre].push_back(nex);
    }
    stack<int>st;
    vector<bool>vis(n+1,false);
    for(int i=1;i<=n;i++){
        if(!vis[i]){
            topo(i,st,vis,adj);
        }
    }
    vector<int>v;
    while(st.size()){
        v.push_back(st.top());
        st.pop();
    }
    vector<int>dis(n+1);
    for(int i=0;i<n;i++)
        dis[i+1]=t[i];
    for(auto it : v){
        for(auto node : adj[it]){
            dis[node]=max(dis[node],t[node-1]+dis[it]);
        }
    }
    int mx=0;
    for(auto it:dis)
        mx=max(mx,it);
    return mx;
}