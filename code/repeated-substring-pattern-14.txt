class Solution {
public:
    bool repeatedSubstringPattern(string s) {
        if (s.size() < 2) {
            return false;
        }
        
        if(all_of(s.begin(), s.end(),[&s](unsigned char c){ return c == s[0];})) {
            return true;
        }
        
        for (int i = 2; i <= s.size() / 2; ++i) {
            if (s.size() % i == 0 && checkRepeated(i, s)) {
                return true;
            }
        }
            
        return false;
    }
private:
    bool checkRepeated(int i, const string& s) {
        for (int j = 0; j < s.size() / i; ++j) {
            for (int k = 0; k < i; ++k) {
                if (s[k] != s[k + j * i]) {
                    return false;
                }
            }
        }    
        return true;
    }
};