int cmp(const void *a, const void *b) {
    return *(*(int**)a + 1) - *(*(int**)b + 1);
}

int* kWeakestRows(int** mat, int matSize, int* matColSize, int k, int* returnSize){
    int *ans = calloc(k, sizeof(ans));
    int **count = calloc(matSize, sizeof(count));
    int tmpSoldiers = 0;
    *returnSize = k;
    
    for (int i = 0; i < matSize; i++) {
        *(count + i) = calloc(2, sizeof(*count));
        *(*(count + i)) = i;
    }
    
    for (int i = 0; i < matSize; i++) {
        for (int j = 0; j < *matColSize; j++) {
            if (0 == *(*(mat + i) + j))
                break;
            tmpSoldiers++;
        }
        *(*(count + i) + 1) = tmpSoldiers;
        tmpSoldiers = 0;
    }
    
    qsort(count, matSize, sizeof(int*), cmp);
    
    for (int i = 0; i < k; i++) {
        *(ans + i) = *(*(count + i));
    }

    return ans;
}