inline int myPow(int x, int y) {
	int magic = 1e9 + 7;
	long long res = 1;

	for (int i = 0; i < y; ++i) {
		res = (res * x) % magic;
	}

	return (int)res;
}

int numOfArrays(int n, int m, int k) {
	int magic = 1e9 + 7;
	if (k > m) return 0;

	vector<vector<vector<int>>> vec(n + 1, vector<vector<int>>(m + 1, vector<int>(k + 1, 0)));

	for (int j = 0; j <= m; ++j) vec[0][j][0] = 1;

	for (int i = 1; i <= n; ++i) {
		for (int j = 1; j <= m; ++j) {
			for (int t = 1; t <= k; ++t) {
				if (j == 1 && t == 1) {
					vec[i][j][t] = 1;
					continue;
				}
				long long res = vec[i][j - 1][t];
				for (int s = t; s <= i; ++s) {
					res = (res + ((long long)vec[s - 1][j - 1][t - 1] * (long long)myPow(j, i - s)) % magic) % magic;
				}
				vec[i][j][t] = (int)res;
			}
		}
	}

	return vec[n][m][k];
}