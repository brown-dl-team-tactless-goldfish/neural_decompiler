public class Solution {
    public int[][] SpiralMatrix(int m, int n, ListNode head) {
        int total = m * n,
            cnt = 0,
            i = 0,
            j = 0;
        int[][] res = new int[m][];
        bool[,] visited = new bool[m, n];
        
        for (int k = 0; k < m; k++)
        {
            res[k] = new int[n];
        }
        
        while (cnt < total)
        {
            while (j < n && !visited[i, j])
            {
                res[i][j] = head == null ? -1 : head.val;
                visited[i, j++] = true;
                cnt++;
                
                if (head != null)
                {
                    head = head.next;
                }
            }
            
            i++;
            j--;
            
            while (i < m && !visited[i, j])
            {
                res[i][j] = head == null ? -1 : head.val;
                visited[i++, j] = true;
                cnt++;
                
                if (head != null)
                {
                    head = head.next;
                }
            }
            
            j--;
            i--;
            
            while (j > -1 && !visited[i, j])
            {
                res[i][j] = head == null ? -1 : head.val;
                visited[i, j--] = true;
                cnt++;
                
                if (head != null)
                {
                    head = head.next;
                }
            }
            
            i--;
            j++;
            
            while (i > -1 && !visited[i, j])
            {
                res[i][j] = head == null ? -1 : head.val;
                visited[i--, j] = true;
                cnt++;
                
                if (head != null)
                {
                    head = head.next;
                }
            }
            
            j++;
            i++;        
        }
        
        return res;
    }
}