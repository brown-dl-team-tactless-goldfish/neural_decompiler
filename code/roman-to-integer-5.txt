typedef struct{
   int dataArray[1000];
   int top;
}Stack;

Stack stack;

void push(int data){
    if(stack.top==999){
        return;
    }
    else{
        stack.dataArray[++stack.top] = data;
    }
}

void pop(){
    if(stack.top==-1){
        return;
    }
    else{
        stack.top--;
    }
}

int top(){
    return stack.dataArray[stack.top];
}


int roman(char s){
    switch(s){
        case 'I':return 1;break;
        case 'V':return 5;break;
        case 'X':return 10;break;
        case 'L':return 50;break;
        case 'C':return 100;break;
        case 'D':return 500;break;
        case 'M':return 1000;break;
        default:return -1; 
    }
}

int romanToInt(char * s){
    stack.top=-1;
    int len = strlen(s);
    int i=len-1;
    int temp1 = roman(*(s+i));
    push(temp1);
    i--;
    while(i>=0){
        int temp2 = roman(*(s+i));
        if(temp2<top()){
            int temp3 = top()-temp2;
            pop();
            push(temp3);
        }
        else{
            push(temp2);
        }
        i--;
    }
    i=0;
    len = stack.top;
    int sum=0;
    while(i<=len){
       sum = sum+top();
       pop();
       i++; 
    }
    return sum;
}