class Solution {
public:
    vector<int> topStudents(vector<string>& positive_feedback, vector<string>& negative_feedback, vector<string>& report, vector<int>& student_id, int k) {
        unordered_map<string, int> feedback; // all positive & negative feedbacks
        
        for(auto &s : positive_feedback) feedback[s] = 3; // positive feedback +3 points
        for(auto &s : negative_feedback) feedback[s] = -1; // negative feedback -1 points
        
        unordered_map<int, int> points;
        
        for(int i = 0; i < report.size(); i++) {
            stringstream ss(report[i]);
            string str;
            int point = 0; 
            while(ss >> str) if(feedback.count(str)) point += feedback[str];  
            points[student_id[i]] = point;
        }
        
        vector<pair<int,int>> v;
        for(auto [id, point]  : points) 
            v.push_back({point, id});
        
        
        sort(v.begin(), v.end(), [&](auto& a, auto& b) {
            return a.first > b.first || a.first == b.first && a.second < b.second;
        });
        
        vector<int> ans;
        for(int i = 0; i < k; i++) ans.push_back(v[i].second);
        return ans;
    }
};