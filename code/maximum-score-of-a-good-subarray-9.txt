class Solution {
public:
    int maximumScore(vector<int>& nums, int k) {
        int n = nums.size();
        vector<int> left(n);
        vector<int> right(n);
        stack<int> stl, str;
        left[0] = 0, right[n-1]=n-1;
        stl.push(0);
        str.push(n-1);
        for(int i = 1; i < n; i++)
        {
            while(!stl.empty() && nums[stl.top()] >= nums[i])
                stl.pop();
            if(stl.empty())
                left[i] = 0;
            else
                left[i] = stl.top()+1;
            stl.push(i);
        }
        for(int i = n-2; i >= 0; i--)
        {
            while(!str.empty() && nums[str.top()] >= nums[i])
                str.pop();
            if(str.empty())
                right[i] = n-1;
            else
                right[i] = str.top()-1;
            str.push(i);
        }
        int mx = INT_MIN;
        for(int i = 0; i < n; i++)
        {
            if(left[i] <= k && k <= right[i])
            {
                int val = (right[i]-left[i]+1)*nums[i];
                mx = max(mx,val);
            }
        }
        return mx;
    }
};