public class Solution {
    public int SubarraysWithKDistinct(int[] A, int K) {
        
        return AtMostK(A, K) - AtMostK(A, K - 1);
    }
    
    private int AtMostK(int[] A, int K)
    {
        int i = 0, res = 0;
        Dictionary<int,int> dic = new Dictionary<int,int>();
        for(int j = 0; j < A.Length; j++)
        {
            if(dic.ContainsKey(A[j]))
                dic[A[j]]++;
            else
                dic[A[j]] = 1;           
            
            while(dic.Keys.Count > K)
            {
                dic[A[i]]--;
                if(dic[A[i]] == 0)
                    dic.Remove(A[i]);                
                i++;
            }
            
            // number of sub-arry between i and j.
            res += j - i + 1;
        }
        
        return res;
    }
}