class Solution {
public:
    vector<int> smallestSubarrays(vector<int>& nums) {
        vector<int> cntAll(32, 0), cnt(32, 0), res;
        for(auto x:nums) add(cntAll, x);
        for(int l=0,r=0,n=nums.size(); l<n; l++){           
            int maxOR = toInt(cntAll), curOR = toInt(cnt);
            while(curOR != maxOR){
                add(cnt, nums[r]);
                curOR |= nums[r++];
            }
            res.push_back(max(1, r-l));
            minus(cntAll, nums[l]);
            minus(cnt, nums[l]);
        }
        return res;
    }
    
    int toInt(vector<int>& cnt){
        int res = 0;
        for(int i=0;i<32;i++)
            if(cnt[i] > 0) res |= (1<<i);
        return res;
    }
    
    void add(vector<int>& cnt, int x){
        bitset<32> b(x);
        for(int i=0;i<32;i++)
            if(b[i]) cnt[i]++;
    }
    
    void minus(vector<int>& cnt, int x){
        bitset<32> b(x);
        for(int i=0;i<32;i++)
            if(b[i]) cnt[i]--;
    }
};