class Solution {
public:
    vector<int> findPeakGrid(vector<vector<int>>& mat) {
        int n = mat.size(), m = mat[0].size();
        int r = 0, c = 0;
        
		// Check for both row and column
        while (r+1 < n && c+1 < m) {
            if (mat[r][c] < mat[r+1][c]) {
                ++r;
            } else if (mat[r][c] < mat[r][c+1]) {
                ++c;
            } else break;
        }
        
		// Check for remaining rows (if available)
        if (c < m) {
            while (r+1 < n && mat[r][c] < mat[r+1][c]) {
                ++r;
            }
        }
        
		// Check for remaining column (if available)
        if (r < n) {
            while (c+1 < m && mat[r][c] < mat[r][c+1]) {
                ++c;
            }
        }
        
        return vector<int>{r, c};
    }
};