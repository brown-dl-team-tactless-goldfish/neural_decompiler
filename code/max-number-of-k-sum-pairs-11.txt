class Solution {
public:
    int maxOperations(vector<int>& nums, int k) {
        map<int, int> vals; //keep track of the values that are present in the array
        int count = 0; //keep track of the number of pairs made
        for(int i = 0; i < nums.size(); i++){
            if(vals.count(k - nums[i]) > 0 && vals[k-nums[i]] > 0){ //check to see if a number's pair match is present in the array;
                count++; //if it is, add a pair
                vals[k-nums[i]]--; //and remove that value from the map b/c it has been used to make a pair (decrement its count - there might be more than one copy of it present)
            }
            else vals[nums[i]]++; //add a new value if the new value is not used to make a pair
        }
        return count; //return number of pairs ~The Answer~
    }
};