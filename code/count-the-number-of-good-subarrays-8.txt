class Solution {
public:
    long long countGood(vector<int>& nums, int k) {
        unordered_map<int,int> freq;
        long long count = 0;
        long long ret = 0;
        int n = nums.size();
        int j = 0;
        for(int i=0; i<n; i++) {
            int num = nums[i];
            count += freq[num];
            freq[num]++;
            while(count >= k && j<=i ) {
                // n - i is the number of sub array 
                // [j...i] is alreay a valid subarray, so
                // [j...i, i+1], [j...i, i+1, i+2], ... [j..i, i+1, i+2, ...n-1] is alo valid sub arrray
                // the number of sub arrays are n-i
                ret += (n - i);
                num = nums[j];
                freq[num]--;
                count -= freq[num];
                j++;
            }
            
        }
        return ret;
    }
};