class Solution {
    vector<int> nexts;
    void genNexts(int m, int i, int curr, int pre) {
        if (i == m) {
            nexts.push_back(curr);
            return;
        }
        int a = (pre >> (i * 2)) & 3;
        int b = 0;
        if (i > 0) {
            b = curr >> ((i - 1) * 2);
        }
        for (int j = 1; j < 4; j++) {
            if (j == a || j == b) {
                continue;
            }
            genNexts(m, i + 1, curr | (j << (i * 2)), pre);
        }
    }
public:
    int colorTheGrid(int m, int n) {
        constexpr int mod = 1e9 + 7;
        unordered_map<int, int> hmap;
        hmap[0] = 1;
        for (int i = 0; i < n; i++) {
            unordered_map<int, int> hmap2;
            for (const auto &it : hmap) {
                nexts.clear();
                genNexts(m, 0, 0, it.first);
                for (int next : nexts) {
                    hmap2[next] = (hmap2[next] + it.second) % mod;
                }
            }
            hmap = hmap2;
        }
        int result = 0;
        for (const auto &it : hmap) {
            result = (result + it.second) % mod;
        }
        return result;
    }
};