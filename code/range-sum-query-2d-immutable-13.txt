class NumMatrix {
private:
    vector<vector<int>> sum;
public:
    NumMatrix(vector<vector<int>>& matrix) {
        if (matrix.empty() || matrix[0].empty()) {
            return;
        }
        int rows = matrix.size(), cols = matrix[0].size();
        sum = vector<vector<int>>(rows, vector<int>(cols));
        for(int row = 0; row < rows; ++row) {
            for(int col = 0; col < cols; ++col) {
                sum[row][col] = matrix[row][col]
                              + (row > 0 ? sum[row-1][col] : 0)
                              + (col > 0 ? sum[row][col-1] : 0)
                              - (row > 0 && col > 0 ? sum[row-1][col-1] : 0);
            }
        }
    }
    
    int sumRegion(int row1, int col1, int row2, int col2) {
        int a = row1 > 0 && col1 > 0 ? sum[row1-1][col1-1] : 0;
        int b = row1 > 0 ? sum[row1-1][col2] : 0;
        int c = col1 > 0 ? sum[row2][col1-1] : 0;
        int d = sum[row2][col2];
        return d - b - c + a;
    }
};