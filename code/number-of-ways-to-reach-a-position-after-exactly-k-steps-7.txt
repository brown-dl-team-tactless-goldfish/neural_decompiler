 unordered_map<int,unordered_map<int,int>>dp;
    int mod = 1e9+7;
   int solve(int s,int e,int k){
        if(k==0 && s==e){
            return 1;
        }
       if(k<=0 || s+k<e || s-k>e) return 0;
       if(dp[s].find(k)!=dp[s].end()) return dp[s][k];
        // left 
        int a = solve(s-1,e,k-1)%mod;
        // right 
        int b = solve(s+1,e,k-1)%mod;
        return dp[s][k] = (a+b)%mod;
        
    }
    int numberOfWays(int startPos, int endPos, int k) {
        return solve(startPos,endPos,k)%mod;
    }