int** shiftGrid(int** grid, int gridSize, int* gridColSize, int k, int* returnSize, int** returnColumnSizes){
    int **out = malloc(gridSize*sizeof(int*));
    *returnSize = gridSize;
    *returnColumnSizes = malloc(gridSize*sizeof(int));
    int i = 0;
    int j = 0;
    int newrow = 0;
    int tempcolumn = 0;
    int temprow = 0;
    
    for (i = 0; i < gridSize; i++) {
        (*returnColumnSizes)[i] = *gridColSize;
        out[i] = malloc((*gridColSize)*sizeof(int));
    }
    
    for (i = 0; i < gridSize; i++) {
        for (j = 0; j < *gridColSize; j++) {
            tempcolumn = (k+j) % (*gridColSize);
            newrow = (k+j) / (*gridColSize);
            temprow = (i + newrow) % gridSize;
            out[temprow][tempcolumn] = grid[i][j];
            newrow = 0;
        }
    }
    return out;
}