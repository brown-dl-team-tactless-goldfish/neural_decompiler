void reverse(char *start, char *end) {
    while (start < end) {
        char temp = *start;
        *start = *end;
        *end = temp;
        start++; end--;
    }
}

void eliminatedRepeatedAndTrim(char *s, char c) {
    if (*s == 0) {
        return;
    }

    char *dest = s;
    bool lastIsRepeated = true;
    while (*s != 0) {
        if (*s == c) {
            if (!lastIsRepeated) {
                *dest = c;
                dest++;
                lastIsRepeated = true;
            }
        }
        else {
            lastIsRepeated = false;
            *dest = *s;
            dest++;
        }
        s++;
    }
    *dest = 0;
    if (*(dest - 1) == c) {
        *(dest - 1) = 0;
    }
}

void reverseWords(char *s) {
    eliminatedRepeatedAndTrim(s, ' ');

    if (*s == 0) {
        return;
    }

    char *start = s, *csr = s;
    while (*csr != 0) {
        while (*csr != ' ' && *csr != 0) {
            csr++;
        }

        if (*csr == ' ') {
            reverse(start, csr - 1);
            csr++;
            start = csr;
        }
    }

    if (*start != 0) {
        reverse(start, csr - 1);
    }

    reverse(s, csr - 1);
}