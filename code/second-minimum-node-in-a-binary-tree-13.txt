
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */
int findSecondMinimumValue(struct TreeNode* root) {
    
    if(root==NULL)
        return 0;
    
    if(!root->left && !root->right)
        return -1;
    
    int a=minimum(root->left, root->val);
    int b= minimum(root->right, root->val);
    
    int c = min(a,b);
   
     //printf("actual a=%d, b=%d, c=%d\n",a ,b, c);
   if(a==root->val && b==root->val)
        return -1;
    else if(a==root->val)
        return max(root->val,b);
     else if(b==root->val)
        return max(root->val, a);
    else
        return a;
   
    
    
    
   return a;
    
    
}

int min(int a, int b){
    
    return a<=b?a:b;
}

int max(int a, int b){
    
    return a>b?a:b;
}

int minimum(struct TreeNode *root, int dumb){
    
    if(!root->left && !root->right)
        return root->val;
    
    int a = minimum(root->left, dumb);
    int b= minimum(root->right, dumb);
    
    int c = min(a,b);
    // printf("a=%d, b=%d, c=%d\n",a ,b, c);
    if(a==root->val && b==root->val)
        return root->val;
    else if(root->val==dumb && a==root->val)
        return b;
    else if(root->val==dumb && b==root->val)
        return a;
    else
        return c;
    
  
}
