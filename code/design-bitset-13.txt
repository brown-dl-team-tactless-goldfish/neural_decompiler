class Bitset {
public:
    
    vector<bool> bits;
    int sz, set;
    bool fliped;
    
    Bitset(int size) {
        bits = vector<bool>(size, false);
        sz = size;
        set = 0;
        fliped = false;
    }
    
    void fix(int idx) {
        
        if(!fliped)
        {
            if(!bits[idx])
            {
                set++;
                bits[idx] = true;
            }
        }
        else
        {
            if(bits[idx])
            {
                set++;
                bits[idx] =false;
            }
        }
    }
    
    void unfix(int idx) {
        
        if(!fliped)
        {
            if(bits[idx])
            {
                set--;
                bits[idx] = false;
            }
        }
        else
        {
            if(!bits[idx])
            {
                set--;
                bits[idx] = true;
            }
        }
    }
    
    void flip() {
        
        fliped = (!fliped);
        
        set = sz - set;
    }
    
    bool all() {
        
        return set == sz;
    }
    
    bool one() {
        
        return set > 0;
    }
    
    int count() {
        
        return set;
    }
    
    string toString() {
        
        string ans;
        
        for(bool it : bits)
        {
            if(it)
            {
                if(fliped)
                    ans.push_back('0');
                else
                    ans.push_back('1');
            }
            
            else
            {
                if(fliped)
                    ans.push_back('1');
                else
                    ans.push_back('0');
            }   
        }
        
        return ans;
    }
};