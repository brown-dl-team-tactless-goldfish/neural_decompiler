class Solution {
public:
    vector<vector<int>> findDifference(vector<int>& nums1, vector<int>& nums2) {
        map<int, int> num1vals; //map to hold list of unique vals in nums1
        map<int, int> num2vals; //map to hold list of unique vals in nums2
        for(int i = 0; i < nums1.size(); i++)
            num1vals[nums1[i]]++;
        for(int i = 0; i < nums2.size(); i++)
            num2vals[nums2[i]]++;
        
        vector<vector<int>> sol(2, vector<int>(0)); //solution vector of vectors
        for(auto it = num1vals.begin(); it != num1vals.end(); ++it)
            if(num2vals.count(it->first) == 0) sol[0].push_back(it->first); //check whether nums1 vals are in nums2 map
        for(auto it = num2vals.begin(); it != num2vals.end(); ++it)
            if(num1vals.count(it->first) == 0) sol[1].push_back(it->first); //check whether nums2 vals are in nums1 map
        
        return sol; //return "The Answer"
    }
};