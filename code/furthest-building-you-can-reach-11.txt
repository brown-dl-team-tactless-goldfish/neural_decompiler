class Solution {
public:
 
    int furthestBuilding(vector<int>& heights, int bricks, int ladders) {
        priority_queue<int> pq;
        int i;
        for(i = 0; i < heights.size()-1;i++){
            int diff = heights[i+1] - heights[i];
            if (diff <= 0) continue;
            if(diff <= bricks){
                bricks-=diff;
                pq.push(diff);
            }
            else if(ladders>0){
                if(!pq.empty()){
                    int t = pq.top();
                    if(diff < t){
                        bricks+=t;
                        pq.pop();
                        bricks-=diff;
                        pq.push(diff);
                    }
                   
                }
                ladders--;
            }
            else{
                break;
            }
        }
        return i;
    }
};