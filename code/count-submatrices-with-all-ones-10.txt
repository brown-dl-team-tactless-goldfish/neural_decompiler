class Solution {
public:
    int numSubmat(vector<vector<int>>& mat) {
        size_t R{mat.size()}, C{mat[0].size()}, count{0};
        std::vector<int> m(C+1, 0);
        for(int i{0}; i < R; ++i) {
            for(int j{0}; j < C; ++j) m[j] = mat[i][j] ? m[j]+1 : 0;
            int sum{0};
            std::vector<std::pair<int,int>> s = {{0,0}};
            for(int j{0}; j <= C; ++j) {
                int k{j+1};
                while(s.size() > 1) {
                    auto [v, i] = s.back();
                    if(v >= m[j]) {
                        sum -= (k-i)*(v-m[j]);
                        k = i;
                        s.pop_back();
                    } else break;
                }
                s.emplace_back(m[j], k);
                count += sum += m[j];
            }
        }
        return count;
    }
};

auto gucciGang = [](){std::ios::sync_with_stdio(0);std::cin.tie(0);std::cout.tie(0);return 0;}();