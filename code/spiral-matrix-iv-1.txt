int** spiralMatrix(int m, int n, struct ListNode* head, int* returnSize, int** returnColumnSizes){
    int ** Matrix = malloc(m * sizeof(int*));
    *returnColumnSizes = (int*) malloc(m * sizeof(int));
    *returnSize = m;
    int i, row = 0, col = 0;
    
    for (i = 0; i < m; i++) {
        Matrix[i] = malloc(sizeof(int) * n);
        memset(Matrix[i], -1, n * sizeof(int));
        (*returnColumnSizes)[i] = n;
    }
    
    Matrix[0][0] = head->val;
    head = head->next;
    
    while (head)
    {
        while (col + 1 < n && Matrix[row][col + 1] == -1 && head) {
            Matrix[row][++col] = head->val;
            head = head->next;
        }
        while (row + 1 < m && Matrix[row + 1][col] == -1 && head) {
            Matrix[++row][col] = head->val;
            head = head->next;
        }
        while (col - 1 >= 0 && Matrix[row][col - 1] == -1 && head) {
            Matrix[row][--col] = head->val;
            head = head->next;
        }
        while (row - 1 >= 0 && Matrix[row - 1][col] == -1 && head) {
            Matrix[--row][col] = head->val;
            head = head->next;
        }
    }
        
    return Matrix;
}