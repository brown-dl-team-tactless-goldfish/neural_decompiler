public class Solution {
		Dictionary<char, int> d = new();
	
    public int MaximumCostSubstring(string s, string chars, int[] vals) {
        SetCharsValue(chars, vals);
        
        int maxTillNow = int.MinValue, currMax = 0;
        
        foreach(var c in s)
        {
            int val = d[c];
            currMax += val;
            
            if(maxTillNow < currMax)
                maxTillNow = currMax;
            
            if(currMax < 0)
                currMax = 0;
        }
        
        return maxTillNow < 0 ? 0 : maxTillNow;
    }
    
	//Build dictionary with char - value pair
    private void SetCharsValue(string chars, int[] vals)
    {
        for(char c = 'a'; c <= 'z'; c++)
        {
            int val = c - 'a' + 1;
            d.Add(c, val);
        }
        
        for(int i = 0; i < chars.Length; i++)
            d[chars[i]] = vals[i];
    }
}