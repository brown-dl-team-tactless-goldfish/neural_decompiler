class Solution {
   public:
    vector<double> getCollisionTimes(vector<vector<int>>& cars) {
        const auto n = cars.size();
        vector<double> ret(n, -1);
        vector<size_t> stk;
        for (size_t i = n; i-- != 0;) {
            const auto ci = cars[i];
            while (!stk.empty()) {
                const auto j = stk.back();
                const auto cj = cars[j];
                if (cj[1] < ci[1] &&
                    (!islessgreater(ret[j], -1) ||
                     1.0 * (cj[0] - ci[0]) / (ci[1] - cj[1]) <= ret[j])) {
                    ret[i] = 1.0 * (cj[0] - ci[0]) / (ci[1] - cj[1]);
                    break;
                }
                stk.pop_back();
            }
            stk.push_back(i);
        }
        return ret;
    }
};