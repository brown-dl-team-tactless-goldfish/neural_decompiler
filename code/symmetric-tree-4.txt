/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */


// Remark:

// How do we define a symmetric tree? It's a tree whose left subtrees 
// and right subtrees are symmetric with one another.

// How do we define a symmetric pair of trees? 
// Two trees are symmetric with each other when

// 1. They share the same root node
// We say two nodes are identical when they either are both empty
// or are both non-empty and share the same value

// 2. one's left subtree and right subtree are symmetric with
// another's right subtree and left subtree respectively



bool AreSymmetric(struct TreeNode* root1,struct TreeNode* root2){
  if(!root1 && !root2)
    return true;
  if(!root1 || !root2)
    return false;
  if(root1->val != root2->val)
    return false;
  return AreSymmetric(root1->left,root2->right) && AreSymmetric(root1->right,root2->left);
}


bool isSymmetric(struct TreeNode* root){
  return AreSymmetric(root->left,root->right);
}