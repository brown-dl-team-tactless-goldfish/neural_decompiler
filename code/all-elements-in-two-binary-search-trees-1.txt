/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int>tree1, tree2, fin;
    void inOrder(TreeNode*root, int cnt){
        if(!root)return ;
        inOrder(root->left, cnt);
        if(cnt == 0)tree1.push_back(root->val);
        else tree2.push_back(root->val);
        inOrder(root->right, cnt);
        return ;
    }
    vector<int> getAllElements(TreeNode* root1, TreeNode* root2) {
        ios_base::sync_with_stdio(0);cin.tie(0);
        inOrder(root1, 0);
        inOrder(root2, 1);
        int i = 0, j = 0;
        while(i<tree1.size() && j<tree2.size()){
            if(tree1[i]<tree2[j]){
                fin.push_back(tree1[i]);
                ++i;
            }else{
                fin.push_back(tree2[j]);
                ++j;
            }
        }
        while(i<tree1.size()){
            fin.push_back(tree1[i]);
            ++i;
        }
        while(j<tree2.size()){
            fin.push_back(tree2[j]);
            ++j;
        }
        return fin;
    }
};