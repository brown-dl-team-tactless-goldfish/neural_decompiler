class Solution {
public:
    int unhappyFriends(int n, vector<vector<int>>& pref, vector<vector<int>>& pairs) {
        int ans=0;
        unordered_map<int,unordered_map<int,int>>umap;
        for(int i=0;i<n;i++){
            unordered_map<int,int>temp;
            for(int j=0;j<n-1;j++){
                temp[pref[i][j]]=j;
            }
            umap[i]=temp;
        }
        for(int i=0;i<n/2;i++){
            for(int j=0;j<n/2;j++){
                if(i!=j and ((umap[pairs[i][0]][pairs[j][0]] < umap[pairs[i][0]][pairs[i][1]]
                            and umap[pairs[j][0]][pairs[i][0]] < umap[pairs[j][0]][pairs[j][1]] )
                                    or 
                             (umap[pairs[i][0]][pairs[j][1]] < umap[pairs[i][0]][pairs[i][1]]
                            and umap[pairs[j][1]][pairs[i][0]] < umap[pairs[j][1]][pairs[j][0]]) )){
                    
                    ans++;
                    break;
                }
            }
            for(int j=0;j<n/2;j++){
                if(i!=j and ((umap[pairs[i][1]][pairs[j][0]] < umap[pairs[i][1]][pairs[i][0]]
                            and umap[pairs[j][0]][pairs[i][1]] < umap[pairs[j][0]][pairs[j][1]] )
                                    or 
                             (umap[pairs[i][1]][pairs[j][1]] < umap[pairs[i][1]][pairs[i][0]]
                            and umap[pairs[j][1]][pairs[i][1]] < umap[pairs[j][1]][pairs[j][0]]) )){
                    
                    ans++;
                    break;
                }
            }
            // cout<<ans<<" ";
        }
        return ans;
    }
};