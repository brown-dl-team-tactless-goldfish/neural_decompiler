int list_length(struct ListNode* head) {
   int n = 0;
   while(head) {
      n++;
      head = head->next;
   }
   return n;
}

struct ListNode *reverse(struct ListNode** head, int k){
   struct ListNode* cur = *head, *next, *prev = NULL;
   int count = 0;

   while(cur != NULL && count < k) {
      next = cur->next;
      cur->next = prev;
      prev = cur;
      cur = next;
      count++;
   }
   cur = *head;
   *head = prev;
   cur->next = next;
   return cur;
}

struct ListNode* reverseKGroup(struct ListNode* head, int k){
   if(head == NULL || k < 2)
      return head;
   int n =list_length(head);

   struct ListNode dummy_head;
   struct ListNode *cur = &dummy_head;

   cur->next = head;
   
   for(int i = 0; i < n/k; i++) {
      cur = reverse(&cur->next, k);
   }
   return dummy_head.next;
}
