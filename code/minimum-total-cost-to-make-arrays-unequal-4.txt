class Solution {
public:
    long long minimumTotalCost(vector<int>& nums1, vector<int>& nums2)
    {
        int n=nums1.size();
        long long ans=0;
        int maxfreq=0,maxfreqval=0,toswap=0;
        map<int,int> mp;
        for(int i=0;i<n;i++)
        {
            if(nums1[i]==nums2[i])
            {
                mp[nums1[i]]++;
                if(mp[nums1[i]]>maxfreq)
                {
                    maxfreq=mp[nums1[i]];
                    maxfreqval=nums1[i];
                }
                ans+=i;
                toswap++;
            }
        }
        for(int i=0;i<n;i++)
        {
            if(maxfreq>toswap/2&&nums1[i]!=nums2[i]&&nums1[i]!=maxfreqval&&nums2[i]!=maxfreqval)
            {
                toswap++;
                ans+=i;
            }
        }
        if(maxfreq>toswap/2)
            return -1;
        return ans;
        
    }
};
//if you like the solution plz upvote.