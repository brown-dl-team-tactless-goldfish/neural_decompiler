
typedef struct {
    unsigned long long * acMoney;
    int size;
} Bank;

bool valid(Bank* bank, int account) {
    return account > 0 && account <= bank->size;
}
Bank* bankCreate(long long* balance, int balanceSize) {
    Bank* ret = malloc(sizeof(Bank));
    ret->size = balanceSize ;
    ret->acMoney = malloc(balanceSize   * sizeof(unsigned long long));
    for(int i = 0; i < balanceSize; i++){
        ret->acMoney[i] = balance[i];
    }
    return ret;
}

bool bankTransfer(Bank* obj, int account1, int account2, long long money) {
    if( !valid(obj, account1) ||  !valid(obj, account2) )
        return false;
    if(obj->acMoney[account1-1] < money)
        return false;
    obj->acMoney[account1-1] -= money;
    obj->acMoney[account2-1] += money;
    return true;
}

bool bankDeposit(Bank* obj, int account, long long money) {
    if(!valid(obj, account) )
        return false;
    obj->acMoney[account-1] += money;
    return true;
}

bool bankWithdraw(Bank* obj, int account, long long money) {
    if(!valid(obj, account) )
        return false;
    if(obj->acMoney[account-1] < money)
        return false;  
    obj->acMoney[account-1] -= money;
    return true;
}

void bankFree(Bank* obj) {
    free(obj->acMoney);
    free(obj);
    
}

/**
 * Your Bank struct will be instantiated and called as such:
 * Bank* obj = bankCreate(balance, balanceSize);
 * bool param_1 = bankTransfer(obj, account1, account2, money);
 
 * bool param_2 = bankDeposit(obj, account, money);
 
 * bool param_3 = bankWithdraw(obj, account, money);
 
 * bankFree(obj);
*/