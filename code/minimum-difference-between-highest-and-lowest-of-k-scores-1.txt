void swap(int *a, int *b)
{
  int t = *a;
  *a = *b;
  *b = t;
}

int partition(int *a, int x, int y)
{
  int i = x - 1, pk = a[y];
  for (int j = x; j < y; j++)
  {
    if (a[j] <= a[y])
    {
      i++;
      swap(&a[i], &a[j]);
    }
  }
  swap(&a[i + 1], &a[y]);
  return i + 1;
}

void quickSort(int *a, int x, int y)
{
  if (x < y)
  {
    int q = partition(a, x, y);
    quickSort(a, x, q - 1);
    quickSort(a, q + 1, y);
  }
}

int minimumDifference(int* nums, int numsSize, int k){
  if(numsSize == 1)
    return 0;
  quickSort(nums, 0, numsSize - 1);
  int returnValue = nums[k - 1] - nums[0];
  for (size_t i = 1; i < numsSize - k + 1; i++)
  {
    if(returnValue > nums[i + k - 1] - nums[i])
      returnValue = nums[i + k - 1] - nums[i];
  }
  return returnValue;
}