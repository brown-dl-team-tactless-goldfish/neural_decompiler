vector<string> wordBreak(string s, vector<string>& wordDict) {
     
        unordered_set<string> dict(wordDict.begin(), wordDict.end());
        unordered_map<int, vector<string> > umap;
        vector<string> res;
        vector<bool> dp(s.size()+1, false);
        dp[0] = true;
        umap[0].emplace_back("");
        string word;
        vector<string> copy;
        
        for (int i = 1; i < dp.size(); i++) {
            for (int j = i-1; j > -1; j--) {
                if (dp[j]) {
                    word = s.substr(j, i-j);
                    if (dict.count(word)) {
                        dp[i] = true; 
                        copy = umap[j];
                        for (auto& c : copy) {
                            if (c != "")
                                c += " ";
                            c += word;
                            umap[i].emplace_back(c);
                        }
                    }
                }
            }
        }
        return umap[s.size()];
    }
	