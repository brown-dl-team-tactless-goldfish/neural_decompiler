public class Solution {
    public int[][] FindFarmland(int[][] land) {
        
        if(land == null || land.Length == 0)
            return new int[0][];
        
        List<int[]> res = new List<int[]>();
        int m = land.Length, n = land[0].Length;
        bool[,] visited = new bool[m,n];
        
        for(int i = 0; i < m; i++)
        {
            for(int j = 0; j < n; j++)
            {
                if(!visited[i,j] && land[i][j] == 1)
                {
                    int maxRow = 0, maxCol = 0;
                    dfs(land, i, j, ref maxRow, ref maxCol, visited);
                    res.Add(new int[4]{i, j, maxRow, maxCol});
                }
            }
        }
        
        return res.ToArray();
    }
    
    private void dfs(int[][] land, int row, int col, ref int maxRow, ref int maxCol, bool[,] visited)
    {
        int m = land.Length, n = land[0].Length;
        if(row < 0 || row >= m || col < 0 || col >= n || visited[row,col] || land[row][col] != 1)
            return;
        
        visited[row,col] = true;
        maxRow = Math.Max(maxRow, row);
        maxCol = Math.Max(maxCol, col);
        
        //dfs(land, row - 1, col, ref maxRow, ref maxCol, visited);
        dfs(land, row + 1, col, ref maxRow, ref maxCol, visited);
        //dfs(land, row, col - 1, ref maxRow, ref maxCol, visited);
        dfs(land, row, col + 1, ref maxRow, ref maxCol, visited);
    }
}