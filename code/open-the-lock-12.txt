class Solution {
public:
    int openLock(vector<string>& deadends, string target) {
        unordered_map<string,int> visited{},deadend{};
        for(auto d:deadends) deadend[d]++;
        string s="0000";
        queue<string> q{};
        q.push(s);
        int ans{};
        while(q.size()){
            int n=q.size();
            for(int i=0;i<n;i++){
                s = q.front();
                q.pop();
                if(visited[s]) continue;
                visited[s]=1;
                if(s==target) return ans;
                if(deadend[s]!=0) continue;
                for(int j=0;j<4;j++){
                    char c = s[j];
                    s[j] = (char)((c-'0'+1)%10+48);
                    q.push(s);
                    s[j] = (char)((c-'0'+9)%10+48);
                    q.push(s);
                    s[j]=c;
                }
            }
            ans++;
        }
        return -1;
    }
};