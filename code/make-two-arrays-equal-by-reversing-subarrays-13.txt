class Solution:
    def canBeEqual(self, target: List[int], arr: List[int]) -> bool:
        # print("target = ", target)
        # print("arr = ", arr)

        n = len(arr)

        if (len(target) != n):
            return False

        print("n = ", n)

        set_1 = set(target)
        set_2 = set(arr)
        print("set_1 = ", set_1, " set_2 = ", set_2)

        if (set_1 != set_2):
            return False

        def helper(remainTarget, remainA):
            # print("remainTarget = ", remainTarget)
            # print("remainA = ", remainA)
            if (remainTarget == [] and remainA == []):
                return True

            elif (remainTarget == remainA):
                return True
            elif (remainTarget[0] == remainA[0]):
                return helper(remainTarget[1:], remainA[1:])
            else:
                idx = remainA.index(remainTarget[0])
                print("idx = ", idx)
                if (idx < 0):
                    return False
                remainA = remainA[:idx+1][::-1] + remainA[idx+1:]
                # print("remainA = ", remainA)
                return helper(remainTarget[1:], remainA[1:])

        res = helper(target, arr)
        print("res = ", res)

        return res