void rotate(int** mat, int matSize, int* matColSize){
    int i, j, n = matSize;
    for (i = 0; i < n / 2; i++) {
        for (j = i; j < n - i - 1; j++) {
            int tmp = mat[i][j];
            mat[i][j] = mat[n-j-1][i];
            mat[n-j-1][i] = mat[n-i-1][n-j-1];
            mat[n-i-1][n-j-1] = mat[j][n-i-1];
            mat[j][n-i-1] = tmp;
        }
    }
}

bool check(int** mat, int matSize, int* matColSize, int** target, int targetSize, int* targetColSize) {
    int i, j;
    for (i = 0; i < matSize; i++) {
        for (j = 0; j < *matColSize; j++) {
            if (mat[i][j] != target[i][j]) return false;
        }
    }
    return true;
}

bool findRotation(int** mat, int matSize, int* matColSize, int** target, int targetSize, int* targetColSize){
    int i, j, k;
    for (i = 0; i < 4; i++) {
        if (check(mat, matSize, matColSize, target, targetSize, targetColSize)) {
            return true;
        }
        rotate(mat, matSize, matColSize);
    }
    return false;
}