class Solution {
public:
static bool cmp(pair<int,int> &a,pair<int,int> &b)
    {
        if(a.first<b.first)
            return true;
        else if(a.first>b.first)
            return false;
        else
            return a.second<b.second;
    }
    vector<int> sortJumbled(vector<int>& mapping, vector<int>& nums) {
        // unordered_map<int,int> mymap;
        
        vector<pair<int,int>> ans;
        
        
        for(int i=0;i<nums.size();i++)
        {
            string str=to_string(nums[i]);
            string temp="";
            for(int j=0;j<str.length();j++)
            {
                int c = str[j]-'0';
                temp+=to_string(mapping[c]);
            }
            ans.push_back({stoi(temp),i});
        }
        vector<int> temp;
      
        
        sort(ans.begin(),ans.end(),cmp);
          // for(auto it:ans)
          //   cout<<it.first<<" "<<it.second<<endl;
        for(auto it:ans)
            temp.push_back(nums[it.second]);
        
        return temp;
        
    }
};