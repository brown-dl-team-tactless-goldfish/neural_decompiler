class Solution {
public:
    int bit(int n){  // return no. of set bits in n
        int re = 0;
        while(n){ re++; n = n&(n-1);}
        return re;
    }
    long long countExcellentPairs(vector<int>& nums, int k) {
        unordered_set<int> mp;
        vector<int> arr;
        for(int i = 0; i<nums.size();++i){ 
            if(mp.find(nums[i])!=mp.end()) continue;
            int k = bit(nums[i]);
            arr.push_back(k);
            mp.insert(nums[i]);
        }
        long long re = 0, p = 0;
        sort(arr.begin(),arr.end());
        for(auto&i:mp){
            p = bit(i); p = k-p;
            auto pt = lower_bound(arr.begin(),arr.end(),p);
            if(pt!=arr.end()){
                int in = pt-arr.begin();
                re+=arr.size()-in;
            }
        }
        return re;
    }
};