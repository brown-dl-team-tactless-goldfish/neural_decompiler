class Solution {
    static bool cmp(vector<int>& a, vector<int>& b){
        return a[1] < b[1] ;
    }
public:
    int maxTwoEvents(vector<vector<int>>& events) {
        int n = events.size() ;
        sort(events.begin(), events.end(), cmp) ;
        vector<int>PrefixMax(n) ;
        int m =  0 ;
        for(int i = 0; i < n; i++){
            m = max(m, events[i][2]) ;
            PrefixMax[i] = m ;
        }
        vector<int>endTimes ;
        int ret = 0 ;
        for(int i = 0; i < n; i++){
            int start = events[i][0] - 1 ;
            int end = events[i][1] ;
            int val = events[i][2] ;
            ret = max(ret, val) ;
            auto iter = upper_bound(endTimes.begin(), endTimes.end(), start) ;
            if(iter != endTimes.begin())
            {
                iter = prev(iter) ;
                int idx = iter - endTimes.begin() ;
                ret = max(ret, PrefixMax[idx] + val) ;
            }
            endTimes.push_back(end) ;
        }
        return ret ;
    }
};