bool end(struct TreeNode* root) {
    if (root == NULL){
        return false;
    }
    return root->val == -1 ? true : false;
}

void check (struct TreeNode* root, int* count, int* light){
    if (root == NULL){
        return;
    }
    if (root->left == NULL && root->right == NULL){
        root->val = -1;
        return; 
    }
    check (root->left, count,light);
    if (*light > 0){
        root->val = 1;
        *light = 0;
    }
    check (root->right, count,light);  

    if (end(root->left) || end(root->right)) {
        *count += 1;
        root->val = 2;
        *light += 1;
        return;
    }else if (*light > 0){
        root->val = 1;
        *light = 0;
        return;
    } else if (root->val == 0){
        root->val = -1;
    }
    return;
}

int minCameraCover(struct TreeNode* root){
    int count = 0;
    int light = 0;
    check ( root, &count, &light);
    return root->val == -1 ? count+1 : count;
}