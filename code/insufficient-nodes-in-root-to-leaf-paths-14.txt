public class Solution {
    public TreeNode SufficientSubset(TreeNode root, int limit) 
    {
        if(root==null)
            return null;
        if(!Dfs(root,0,limit))
            return root;
        return null;
    }
    
    private bool Dfs(TreeNode root,int sum,int limit)
    {
        if(root==null)
            return true;
        
        sum+=root.val;
        
        if(root.left==null && root.right==null)
        {
            if(sum<limit)
                return true;
            return false;
        }
        
        var left = Dfs(root.left,sum,limit);
        var right = Dfs(root.right,sum,limit);
        
        if(left)
            root.left=null;
        else if(right)
            root.right=null;
        
        return left && right;
    }
}