class Solution {
public:
    bool canChange(string start, string target) {
        int c1 = count(start.begin(), start.end(), '_');
        int c2 = count(target.begin(), target.end(), '_');
        string s1 = "", s2 = "";
        vector<int> k1, k2;
        int k = 0, n = start.length();
        for (int i = 0; i < n; i++)
        {
            if (start[i] == '_')
                k++;
            else if (start[i] == 'L')
            {
                k1.push_back(c1 - k);
                s1 += 'L';
            }
            else
            {
                k1.push_back(k);
                s1 += 'R';
            }
        }
        k = 0;
        for (int i = 0; i < n; i++)
        {
            if (target[i] == '_')
                k++;
            else if (target[i] == 'L')
            {
                k2.push_back(c2 - k);
                s2 += 'L';
            }
            else
            {
                k2.push_back(k);
                s2 += 'R';
            }
        }
        if (s1 != s2)
            return false;
        int m = k1.size();
        for (int i = 0; i < m; i++)
            if (k1[i] > k2[i])
                return false;
        return true;
    }
};