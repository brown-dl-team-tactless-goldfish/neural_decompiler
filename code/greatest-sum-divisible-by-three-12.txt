#define ull unsigned long long int
#define pb push_back
#define pii pair<int, int>
#define mll map<ll, ll>
#define v vector
#define mod 1000000007
class Solution {
public:
int maxSumDivThree(vector<int> &ar)
{
    int n = ar.size();
    v<v<int>> dp(3, v<int>(n, 0));
    //  dp[i][j] denotes max sum possible from ar[j] ar[j+1] ... ar[n-1] such than its sum % 3 = i
    //  ans is dp[0][0]
    for (int j = n - 1; j >= 0; j--)
    {
        if (j == n - 1)
        {
            dp[ar[j] % 3][n - 1] = ar[j];
        }
        else
        {
            if (ar[j] % 3 == 0)
            {
                for (int i = 0; i < 3; i++)
                    dp[i][j] = (i == 0 || dp[i][j + 1]) ? (dp[i][j + 1] + ar[j]) : 0;
            }
            if (ar[j] % 3 == 1)
                dp[0][j] = max(dp[0][j + 1], dp[2][j + 1] + ar[j]), dp[1][j] = max(dp[1][j + 1], dp[0][j + 1] + ar[j]), dp[2][j] = max(dp[2][j + 1], dp[1][j + 1] + ar[j]);
            if (ar[j] % 3 == 2)
                dp[0][j] = max(dp[0][j + 1], dp[1][j + 1] + ar[j]), dp[1][j] = max(dp[1][j + 1], dp[2][j + 1] + ar[j]), dp[2][j] = max(dp[2][j + 1], dp[0][j + 1] + ar[j]);
        }
    }
    return dp[0][0];
}
};