class Solution {
public:
    TreeNode* createBinaryTree(vector<vector<int>>& descriptions) {
        unordered_map<TreeNode*,int> mp_temp;
        unordered_map<int,TreeNode*> mp;
        for(auto &x: descriptions){
            mp[x[0]] = new TreeNode(x[0]);
            mp[x[1]] = new TreeNode(x[1]);
        }
        for(auto &x : descriptions){
            TreeNode* parent = mp[x[0]];
            TreeNode* child = mp[x[1]];
            int pos = x[2];
            if(pos) parent->left = child;
            else parent->right = child;
            mp_temp[child] = 1;
        }

        TreeNode* root = NULL;
        for(auto &x : mp){
            if(mp_temp.find(x.second) == mp_temp.end()){
                root = x.second;
                break;
            }
        }

        return root;

    }
};