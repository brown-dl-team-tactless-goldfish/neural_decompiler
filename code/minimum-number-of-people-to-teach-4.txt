class Solution {
public:
int minimumTeachings(int n, vector<vector<int>>& lng, vector<vector<int>>& ar){
    // n-> languages
    // m-> users
    int m=lng.size(),ct=(1<<30);
    bool *vis=new bool[m]();
    int *toTeach = new int[n]();
    vector<bitset<501>> v;
    for(auto it:lng){
        bitset<501> tmp;
        for(auto it1:it) tmp.set(it1-1);
        v.push_back(tmp);
    }
    for(auto it:ar){
        if( (v[it[0]-1] & v[it[1]-1]).count()){
            // they can talk
        }else{
            for(int i=0;i<n;i++){
                if(!(v[it[0]-1].test(i)) && !vis[it[0]-1]) toTeach[i]++;
                if(!(v[it[1]-1].test(i)) && !vis[it[1]-1]) toTeach[i]++;
            }
            vis[it[0]-1]=true,vis[it[1]-1]=true;
        }
    }
    for(int i=0;i<n;i++) ct=min(ct,toTeach[i]);
    if(ct==(1<<30)) return 0;
    return ct;
}
};