

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */

int* findLonely(int* nums, int numsSize, int* returnSize){
    int h[1000002]={0};
    int i,k=0;
    int d,v;
    int *ret = (int *)malloc(sizeof(int) * numsSize);
    for (i=0 ; i < numsSize; i++)
    {
        h[nums[i]]++;
    }
    
    for (i=0; i < numsSize; i++)
    {
        d = nums[i] - 1;
        v = nums[i] + 1;
        if (nums[i] == 0 && h[nums[i]] == 1 && h[1] == 0)
        {
            ret[k] = nums[i];
            k++;
            continue;
        }
        if (h[nums[i]] == 1)
        {
            if (d!=-1 && h[d] == 0 && h[v] == 0)
            {
                ret[k] = nums[i];
                k++;
            }
        }

        
    }
    *returnSize = k;
    return &ret[0];

}