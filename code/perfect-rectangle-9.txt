public class Solution {
    public bool IsRectangleCover(int[][] rectangles) {
        HashSet<string> hs = new HashSet<string>();
        int area = 0;
        int l = Int32.MaxValue, r = Int32.MinValue, u = Int32.MinValue, d = Int32.MaxValue;
        foreach (int[] rec in rectangles) {
            l = Math.Min(l, rec[0]);
            r = Math.Max(r, rec[2]);
            
            u = Math.Max(u, rec[3]);
            d = Math.Min(d, rec[1]);
            
            string k1 = rec[0] + " " + rec[1];
            string k2 = rec[0] + " " + rec[3];
            string k3 = rec[2] + " " + rec[1];
            string k4 = rec[2] + " " + rec[3];
            
            area += (rec[2] - rec[0]) * (rec[3] - rec[1]);
            
            if (!hs.Add(k1)) hs.Remove(k1);
            if (!hs.Add(k2)) hs.Remove(k2);
            if (!hs.Add(k3)) hs.Remove(k3);
            if (!hs.Add(k4)) hs.Remove(k4);
        }
        
        if (!hs.Contains(l + " " + d) || !hs.Contains(l + " " + u) || !hs.Contains(r + " " + d) || !hs.Contains(r + " " + d) || hs.Count != 4) return false;
        
        return area == (r - l) * (u - d);
    }
}