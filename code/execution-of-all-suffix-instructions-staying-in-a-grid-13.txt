class Solution {
private:
    bool IsValidPosition(
        const int x,
        const int y,
        int n) {
        return x>=0 && y>=0 && x<n && y<n;
    }
public:
    vector<int> executeInstructions(
        int n,
        vector<int>& startPos,
        string s) {
        
        const int x = startPos[0];
        const int y = startPos[1];
        
        std::vector<int> ins(s.size(), 0);
        for (int i=0;i<s.size();++i) {
            int j = i;
            int curr_x = x;
            int curr_y = y;
            int moves = 0;
            while (j<s.size()) {
                const char c = s[j];
                // execute instruction
                if (c == 'R') {
                    ++curr_y;
                } else if (c == 'D') {
                    ++curr_x;
                } else if (c == 'U') {
                    --curr_x;
                } else if (c == 'L') {
                    --curr_y;
                }
                if (IsValidPosition(curr_x, curr_y, n)) {
                    ++moves;
                } else {
                    break;
                }
                ++j;
            }
            // jth instruction is not valid
            ins[i] = moves;
        }
        
        return ins;
    }
};