        public int MinMalwareSpread(int[][] graph, int[] initial)  {
            var ds = new DisjointSet(graph.Length);
            for (int i = 0; i < graph.Length; i++)
                for (int j = i + 1; j < graph[i].Length; j++)
                    if (graph[i][j] == 1) ds.Union(i, j);

            int ret = initial[0];
            foreach (var i in initial) {
                if (ds.Size(ret) < ds.Size(i) || (ds.Size(ret) == ds.Size(i) && ret > i))
                    ret = i;
            }

            return ret;
        }

        class DisjointSet  {
            public DisjointSet(int n) {
                _parents = new int[n];
                _sizes = new int[n];
                for (int i = 0; i < n; i++) {
                    _parents[i] = i;
                    _sizes[i] = 1;
                }
            }

            public void Union(int i, int j)  {
                int pi = Find(i);
                int pj = Find(j);
                if (pi != pj)  {
                    _parents[pi] = pj;
                    _sizes[pj] += _sizes[pi];
                }
            }

            public int Size(int i) {
                return _sizes[Find(i)];
            }

            int Find(int i) {
                if (_parents[i] != i)
                    _parents[i] = Find(_parents[i]);
                return _parents[i];
            }

            int[] _parents;
            int[] _sizes;
        }