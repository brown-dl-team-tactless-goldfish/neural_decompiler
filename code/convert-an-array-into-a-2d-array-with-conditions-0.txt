/**
 * Return an array of arrays of size *returnSize.
 * The sizes of the arrays are returned as *returnColumnSizes array.
 * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().
 */
int max(int a,int b){
    return a>b?a:b;
}
int** findMatrix(int* nums, int numsSize, int* returnSize, int** returnColumnSizes){
    int **res=(int**)malloc(sizeof(int*)*numsSize);
    *returnColumnSizes=(int*)calloc(numsSize,sizeof(int));
    *returnSize=0;
    int *count=(int*)calloc(numsSize+1,sizeof(int));
    for(int i=0;i<numsSize;i++){
        if((*returnColumnSizes)[count[nums[i]]]==0){
            res[count[nums[i]]]=(int*)malloc(sizeof(int)*numsSize);
            res[count[nums[i]]][0]=nums[i];
        }else{
            res[count[nums[i]]][(*returnColumnSizes)[count[nums[i]]]]=nums[i];
        }
        (*returnColumnSizes)[count[nums[i]]]++;
        count[nums[i]]++;
        *returnSize=max(*returnSize,count[nums[i]]);
    }
    return res;
}