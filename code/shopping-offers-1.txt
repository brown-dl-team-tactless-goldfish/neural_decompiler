int dp[224695] = {};
int shoppingOffers(vector<int>& price, vector<vector<int>>& special, vector<int>& needs) {
    auto res = 0, idx = 0;
    for (auto i = 0; i < needs.size(); ++i) {
        res += needs[i] * price[i];
        idx = (idx << 3) + needs[i];
    }
    if (dp[idx])
        return dp[idx];
    for (auto &s : special) {
        auto canApply = true;
        for (auto i = 0; i < needs.size(); ++i)
            canApply &= (needs[i] -= s[i]) >= 0;
        if (canApply)
            res = min(res, s.back() + shoppingOffers(price, special, needs));
        for (auto i = 0; i < needs.size(); ++i)
            needs[i] += s[i];        
    }
    return dp[idx] = res;
}