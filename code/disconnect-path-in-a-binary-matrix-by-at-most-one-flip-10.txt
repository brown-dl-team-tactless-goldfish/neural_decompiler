class Solution {
public:
    bool isPossibleToCutPath(vector<vector<int>>& grid) {
        queue<pair<int, int>> q;
        int n=grid.size(), m=grid[0].size(), i, j;
        vector<vector<bool>> vis(n, vector<bool> (m, false));
        if(grid[0][0]){
            if(n>1 && grid[1][0]){q.push({1, 0}); vis[1][0] = true;}
            if(m>1 && grid[0][1]){q.push({0, 1}); vis[0][1] = true;}
        }

        while(!q.empty()){
            int sz = q.size();
            if(sz==1 && q.front()!=(pair<int, int>){n-1, m-1}){return true;}
            while(sz--){
                auto [f, s] = q.front();
                q.pop();
                if(n>f+1 && grid[f+1][s] && !vis[f+1][s]){q.push({f+1, s}); vis[f+1][s] = true;}
                if(m>s+1 && grid[f][s+1] && !vis[f][s+1]){q.push({f, s+1}); vis[f][s+1] = true;}
            }
        }

        return !vis[n-1][m-1];
    }
};