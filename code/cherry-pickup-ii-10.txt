class Solution {
public:
    int f(int i, int j1 ,int j2 , int r, int c, vector<vector<int>> &a,vector<vector<vector <int>>> &dp){
    if(j1 < 0 or j2<0 or j1 >= c or j2 >= c)return -1e8;
    if(i == r-1){
        if( j1 == j2)return a[i][j1];
        else return a[i][j1] + a[i][j2];
    }
    
    if(dp[i][j1][j2] != -1)return dp[i][j1][j2];
    
    int maxi = -1e8;
  
    for(int del1 = -1; del1<=1 ; del1++){
        for(int del2 = -1; del2<=1 ; del2++ ){
            
            if(j1 == j2) maxi = max(maxi , a[i][j1] + f(i +1 , j1 + del1 , j2 + del2 , r, c, a, dp));
            else{ maxi = max(maxi ,a[i][j1] + a[i][j2] + f(i +1 , j1 + del1 , j2 + del2 , r, c, a, dp) ); }
            
        }
    }
    return dp[i][j1][j2] = maxi;
}
  int cherryPickup(vector<vector<int>>& grid) {
      int r = grid.size() ; int c = grid[0].size(); 
        vector<vector<vector<int>>> dp(r ,vector<vector<int >> (c , vector<int > (c ,-1)));
    return f(0, 0,c-1 ,r, c, grid , dp);
    }
};