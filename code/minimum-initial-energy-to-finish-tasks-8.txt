class Solution {
public:
    int minimumEffort(vector<vector<int>>& tasks) {
        priority_queue<pair<int,pair<int,int>>> pq;
        for(int i=0;i<tasks.size();i++){
            int x=tasks[i][1]-tasks[i][0];
            pq.push({x,{tasks[i][1],tasks[i][0]}});
        }
        int ans=0;
        int req=0;
        while(!pq.empty()){
            if(req<pq.top().second.first){
                ans+=pq.top().second.first-req;
                req=pq.top().second.first;
                req-=pq.top().second.second;
            }
            else{
                req-=pq.top().second.second;
            }
            pq.pop();
        }
        return ans;
    }
};