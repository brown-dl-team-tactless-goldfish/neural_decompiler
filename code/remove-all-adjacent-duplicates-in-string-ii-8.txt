char *removeDuplicates(char *s, int k) {
    assert(k>1);
    int length = strlen(s);

    char *stack_buf = malloc(length*sizeof(char));
    int i_stack = 0;

    int repeat_count = 0;
    for(int i=0;i<length;i++) {
        /* Push into stack buf, i_stack start from 1 */
        stack_buf[i_stack++] = s[i];

        /* Determine whether adjacent is the same */
        if(i_stack >= 2) {
            if(stack_buf[i_stack-2] == stack_buf[i_stack-1]) {
                repeat_count++;
            }
            else {
                repeat_count = 1;
            }
        }

        /* Determine the counter */
        if(repeat_count == k) {
            /* Pop the stack */
            i_stack -= k;

            /* Get the repeat counter in stack */
            repeat_count = 1;
            int temp = i_stack-1;
            while(temp-1 >= 0) {
                if(stack_buf[temp] == stack_buf[temp-1]) {
                    repeat_count++;
                }
                else {
                    break;
                }
                temp--;
            }
        }

        // for(int i=0;i<i_stack;i++) {
        //     printf("%c", stack_buf[i]);
        // }
        // printf("\n");
    }

    /* Put the stack to s buf */
    for(int i=0;i<i_stack;i++) {
        s[i] = stack_buf[i];
    }
    s[i_stack] = '\0';

    return s;
}
