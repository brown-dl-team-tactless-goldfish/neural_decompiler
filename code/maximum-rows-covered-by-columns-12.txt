class Solution {
public:
    int n,m,ans = 0;
    void recur(vector<vector<int>>& mat, vector<int>& col_arr, int idx, int remaining_cols){
        //if we have not selected cols columns then remaining_cols will be non zero and no updatation in ans;
        if(idx==m and remaining_cols!=0) return;
        //if we have selected cols columns then we check how many rows satisfies the given condions and update ans
        if(idx==m and remaining_cols==0){
           int res = 0;
            for(int j=0;j<n;j++){
                bool yes = true;
                for(int k=0;k<m;k++){
                    if(mat[j][k] and col_arr[k]==0){
                        yes = false;
                        break;
                    }
                }
                if(yes) res++;
            }
            ans = max(ans,res);
            return;
        }
        //lets skip this column and recur next
        recur(mat,col_arr,idx+1,remaining_cols);
        //or select this column and recur next
        col_arr[idx] = 1;
        recur(mat,col_arr,idx+1,remaining_cols-1);
        col_arr[idx] = 0;
        return;
    }
    
    int maximumRows(vector<vector<int>>& mat, int cols) {
        n = mat.size();
        m = mat[0].size();
        vector<int>col_arr(m,0);
        recur(mat,col_arr,0,cols);
        return ans;
    }
};