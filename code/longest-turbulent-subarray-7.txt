int maxTurbulenceSize(int* arr, int arrSize){
    if(arrSize == 1)
        return 1;
    int i;
    int comp[arrSize-1];
    for(i=0;i<arrSize-1;++i){
        if(arr[i]<arr[i+1])
            comp[i] = 1;
        else if(arr[i]>arr[i+1])
            comp[i] = 0;
        else 
            comp[i] = 2;
    }
	// length of 'a[i] == a[i+1]' is 1, otherwise is 2
    int length = 1 + (comp[0]!=2);
    int max = -1;
    // find the longest 0,1,0,1,... flip
    for(i=1;i<arrSize-1;++i){
        if((comp[i-1]^comp[i]) == 1){
            ++length;
        }else{
            if(length>max)
                max = length;
            length = 1 + (comp[i]!=2);
        }
    }
    if(length>max)
        max = length;
    return max;
}
