class Solution {
public:
    int val[201][201];
    int solver(vector<int>& nums,int k,int s,int n,vector<vector<int>>&dp)
    {
        if(s==n)
            return 0;
        if(k==0)
            return val[s][n-1];
        if(dp[k][s]!=-1)
            return dp[k][s];
        int ans=INT_MAX;
        for(int i=s;i<n;i++)
        {
            ans=min(ans,solver(nums,k-1,i+1,n,dp)+val[s][i]);
        }
        return dp[k][s]=ans;
    }
    int minSpaceWastedKResizing(vector<int>& nums, int k) {
        int n=nums.size();
        for(int i=0;i<n;i++)
        {
            int m=0;
            int sum=0;
            for(int j=i;j<n;j++)
            {
               m=max(m,nums[j]);
                sum+=nums[j];
                
                val[i][j]=((m*(j-i+1))-sum);
            }
        }
        vector<vector<int>>dp(k+1,vector<int>(n+1,-1));
        return solver(nums,k,0,n,dp);
    }
};