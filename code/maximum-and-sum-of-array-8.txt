class Solution {
public:
    int maximumANDSum(vector<int>& nums, int numSlots) {
        unordered_map<string,int> memo;
        string used(numSlots, '0');
        return get(nums, 0, used, memo);
    }
private:
    int get(vector<int>& nums, int i, string& used, unordered_map<string,int>& memo) {
        if(i==nums.size())
            return 0;
        if(memo.count(used))
            return memo[used];
        int ans=0;
        for(int j=0;used[j];++j){
            if(used[j]=='2')
                continue;
            used[j]++;
            ans=max(ans, get(nums, i+1, used, memo) + (nums[i]&(j+1)));
            used[j]--;
        }
        return memo[used]=ans;
    }
};