 if (head == NULL)	return;
	//find the middle
	struct ListNode* fast = head->next;
	struct ListNode* slow = head;
	while (fast && fast->next) {
		slow = slow->next;
		fast = fast->next->next;
	}

	//reserve the latter half
	struct ListNode* current = slow->next;
	struct ListNode* temp;
	struct ListNode* prev = NULL;
	while (current) {
		temp = current->next;
		current->next = prev;
		prev = current;
		current = temp;
	}

	//make the front half finite 
	slow->next = NULL;

	//connect two list
	struct ListNode* front = head;
	struct ListNode* frontTemp;
	struct ListNode* prevTemp;
	while (prev) {
		frontTemp = front->next;
		front->next = prev;
		prevTemp = prev->next;
		prev->next = frontTemp;
		front = frontTemp;
		prev = prevTemp;
	}