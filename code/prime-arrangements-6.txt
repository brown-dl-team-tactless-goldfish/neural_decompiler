class Solution {
public:
    int numPrimeArrangements(int n) {
        int prime[] = {2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97};
        vector<int> prime_v;
        for(int i = 0 ; i < 25 ; i++)
            prime_v.push_back(prime[i]);
        auto it = lower_bound(prime_v.begin(),prime_v.end(),n);
        int num_prime = (it - prime_v.begin()) + (*it == n);
        return (count(num_prime)*count(n-num_prime))%1000000007;
    }
    long long count(int n){
        if(n <= 1)
            return 1;
        else
            return n*count(n-1)%1000000007;
    }
};