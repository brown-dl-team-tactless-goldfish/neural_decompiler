class Solution {
public:
    int mod = 1e9+7;
    long fac[10030], inv[10030];
    unordered_map<int,vector<int>> mp;
    void MAP(int m){
        for(int i = 1; i<=m;++i){
            for(int j = i+i; j<=m;j+=i) mp[j].push_back(i);
        }
    }
    void find(){
        int n = 10020;
        fac[0] = 1; fac[1] = 1;
        for(int i = 2; i<=n; ++i) fac[i] = (i*fac[i-1])%mod;
        inv[n] = 464446337;
        for(int i = n-1;i>=0;i--) inv[i] = ((i+1)*inv[i+1])%mod;
    }
    long nCr(int n,int r){
        return ((fac[n]*inv[r])%mod*inv[n-r])%mod;
    }
    int idealArrays(int n, int m) {
        MAP(m); find();
        int l = log2(m)+1;
        vector<vector<long>> dp(l+1,vector<long>(m+1,0));
        for(int i = 1; i<=min(n,l);++i){
            for(int j = 1;j<=m;++j){
                if(i==1){ dp[i][j] = 1; continue; }
                for(int k = 0; k<mp[j].size();++k){
                    dp[i][j] = (dp[i-1][mp[j][k]] + dp[i][j])%mod;
                }
            }
        }
        vector<long> dp2(l+1,1);
        for(int i = 2; i<=l;++i){
            dp2[i] = nCr(n+i-1,n);
            for(int j = i-1;j>=1;--j){
                dp2[i] = (dp2[i] - dp2[j]*nCr(i,j) + mod)%mod;
            }
        }
        long long re = 0;
        for(int i = 1; i<=min(n,l);++i){
            for(int j = 1;j<=m;++j){
                re = (re + (dp[i][j]*dp2[i])%mod)%mod;
            }
        }
        return re;
    }
};