int* smallerNumbersThanCurrent(int* nums, int numsSize, int* returnSize) {
    int * solution = (int *) malloc(sizeof(int) * numsSize);
    *returnSize = numsSize;
    int dp [101] = { 0 }; // this initializes all members of the array to 0, which is a good placeholder for counting
    for(int i = 0; i < numsSize; i++)
    {
        dp[nums[i]] = dp[nums[i]]+1; // how many of a num are in array, nums, of all 100 nums in range
    }
    for(int i = 1; i <= 100; i++) // start at 1 since 0 <= nums[i]; nothing can be lower than 0
    {
        dp[i] = dp[i] + dp[i-1]; // how many are lower for each pos
    }
    for(int i = 0; i < numsSize; i++)
    {
        if(nums[i] == 0) // 0 <= nums[i]; nothing can be lower than 0
        {
            solution[i] = 0;
        } else
        {
            solution[i] = dp[nums[i]-1];  // write to solution array
        }
    }
    return solution;
}