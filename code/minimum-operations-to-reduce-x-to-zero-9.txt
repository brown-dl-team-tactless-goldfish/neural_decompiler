
class Solution {
public:
    int minOperations(vector<int>& nums, int x) {
        unordered_map<int,int>suf ; 
        int sz = nums.size()   ;
        int ans = INT_MAX ;
        long long F = 0 ; 
        int i = sz - 1 ;
        for( ; i >= 0 ; i -- ){
            F += nums[i]   ;
            if( F == x ){
                ans = min( ans , sz - i ) ;
                 break ;
            }
            else if( F > x ){
                break ;
            }
            suf[F] = i + 1 ; 
        }
        F = 0 ; 
        for(int j = 0 ; j < sz ; j ++ ){
            F += nums[j] ;
            if( F == x ){
                ans = min( ans , j + 1 ) ;
                break ;
            }
            else if(F > x ){break ; } 
            else if( suf[ x - F ] > 0 && suf[x - F ] - 1 > j ){
                ans = min( ans , ( j + 1 ) +  ( sz - suf[x-F] ) + 1 ) ;
            }
        }
        return ans == INT_MAX ? -1 : ans ;
    }
};
