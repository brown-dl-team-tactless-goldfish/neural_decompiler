class Solution {
public:
    string lastSubstring(string s) {
        int l = s.length(), k = 0;
        char max = 'a';
        for(char c : s) {
            if(c > max) max = c;
        }
        if(max == 'a') return s;
        
        vector<int> maxStr(l, -1);
        for(int i = 0; i < l; i++) {
            if(s[i] == max) {
                maxStr[k] = i;
                ++k;
            }
        }
        
        string lexLast = s.substr(maxStr[0]);
        int pos = 0;
        for(int i = 1; i < maxStr.size(); i++) {
            if(maxStr[i] == -1) break;
        
            int minRange = min(l - maxStr[i], l - maxStr[pos]);
            for(int j = 0; j < minRange; j++) {
                if(s[maxStr[pos] + j] < s[maxStr[i] + j]) {
                    pos = i;
                    lexLast = s.substr(maxStr[i]);
                    break;
                }else if(s[maxStr[pos] + j] > s[maxStr[i] + j])
                    break;
            }
        }
        return lexLast;
    }
};