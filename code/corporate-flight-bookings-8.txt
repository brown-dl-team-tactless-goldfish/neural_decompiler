class Solution {
public:
    vector<int> corpFlightBookings(vector<vector<int>>& bookings, int n) {
        // to sum of seats for a particular flight
        vector<int>n_seats(n,0); // TC, SC: O(n)

        for(auto flight: bookings) // TC: O(|bookings|)
        {
            int first=flight[0]-1;
            int last=flight[1];
            int seats=flight[2];

            // now update the boundary
            n_seats[first]+=seats;
            if(last<n)
            n_seats[last]-=seats;
        }
      
      // now do commulative sum
      int sum=0;
      for(auto &num: n_seats) // TC: O(n)
        {  
            sum+=num;
            num=sum;
        }

        return n_seats;
    }
};