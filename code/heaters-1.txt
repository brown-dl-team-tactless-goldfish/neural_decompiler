#define MIN(a, b) ((a) < (b) ? (a): (b))

int comp(const void* a, const void* b)
{
    if (*(int*)a > *(int*)b) {
        return 1;
    }
    else if (*(int*)a < *(int*)b) {
        return -1;
    }
    else
        return 0;
}

int findRadius(int* houses, int housesSize, int* heaters, int heatersSize){
    int i,j;

    int maxAbsDiff = 0;
    int absDiff;
    
    qsort(houses, housesSize, sizeof(*houses), comp);
    qsort(heaters, heatersSize, sizeof(*heaters), comp);
    
    i = 0;
    j = 0;
    
    while (i < housesSize) {
        absDiff = 0;
        if (houses[i] < heaters[j]) {
            if (j == 0) {
                absDiff = abs(houses[i] - heaters[j]);
            }
            else {
                absDiff = MIN(abs(houses[i] - heaters[j]), abs(houses[i] - heaters[j-1]));
            }
            i++;
        }
        else if (houses[i] > heaters[j]) {
            if (j + 1 < heatersSize) {
                if (houses[i] < heaters[j+1]) {
                    absDiff = MIN(abs(houses[i] - heaters[j]), abs(houses[i] - heaters[j+1]));
                    i++;
                }
            }
            else {
                absDiff = abs(houses[i] - heaters[j]);
                i++;
            }
            j++;
        }
        else {
            i++;
            j++;
        }

        if (j >= heatersSize) {
            j = heatersSize-1;
        }
        
        if (absDiff > maxAbsDiff) {
            maxAbsDiff = absDiff;
        }
    }
    
    return maxAbsDiff;
}