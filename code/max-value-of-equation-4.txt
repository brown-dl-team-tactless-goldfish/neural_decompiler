// OJ: https://leetcode.com/problems/max-value-of-equation/
// Author: github.com/lzl124631x
// Time: O(N)
// Space: O(N)
class Solution {
public:
    int findMaxValueOfEquation(vector<vector<int>>& A, int k) {
        int i = 0, j = 0, N = A.size(), ans = INT_MIN;
        deque<int> q; // descending monoqueue
        for (; i < N; ++i) {
            for (; j < N && A[j][0] - A[i][0] <= k; ++j) {
                int sum = A[j][0] + A[j][1];
                while (q.size() && q.back() < sum) q.pop_back();
                q.push_back(sum);
            }
            if (q.size() && q.front() == A[i][0] + A[i][1]) q.pop_front();
            if (q.size()) ans = max(ans, A[i][1] - A[i][0] + q.front());
        }
        return ans;
    }
};