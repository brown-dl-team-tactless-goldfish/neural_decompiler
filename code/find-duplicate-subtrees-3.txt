public class Solution {
    private IList<TreeNode> res = new List<TreeNode>();
    private Dictionary<string, int> dict = new Dictionary<string, int>();
    
    public IList<TreeNode> FindDuplicateSubtrees(TreeNode root) {
        if (root == null)
            return res;
        
        DFS(root);
        
        return res;
    }
    
    private string DFS(TreeNode node)
    {
        if (node == null)
            return "-";
        
        string val = node.val.ToString() + "-" + DFS(node.left) + DFS(node.right);
        
        if (dict.ContainsKey(val))
            dict[val]++;
        else
            dict.Add(val, 1);
        
        if (dict[val] == 2)
            res.Add(node);
        
        return val;
    }
}