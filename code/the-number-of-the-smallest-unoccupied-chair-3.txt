class Solution {
public:
    int smallestChair(vector<vector<int>>& times, int targetFriend) 
    {
        vector<pair<int,pair<int,int>>> m;
        
        int n = times.size();
        
        for(int i = 0; i < n; i++)
        {
            m.push_back({times[i][0],{times[i][1],i}});
        }
                        
        sort(m.begin(),m.end());
                        
        vector<int> min_chair(n,-1);
                        
        for(int i = 0; i < n; i++)
        {
            for(int j = 0; j < n; j++)
            {
                if(min_chair[j] <= m[i].first)
                {
                    min_chair[j] = m[i].second.first;
                    if(m[i].second.second == targetFriend)
                    {
                        return j;
                    }
                    break;
                }
            }
        }
                        
        return 0;   
    }
};