bool dfs(int** grid, int i, int j, int row, int col){
    if(i < 0 || i >= row || j < 0 || j >= col)
        return false;
    if(grid[i][j] == 1)
        return true;
    grid[i][j] = 1;
    bool up = dfs(grid, i-1, j, row, col);
    bool down = dfs(grid, i+1, j, row, col);
    bool left = dfs(grid, i, j-1, row, col);
    bool right = dfs(grid, i, j+1, row, col);
    
    return up && down && left && right;
}

int closedIsland(int** grid, int gridSize, int* gridColSize){
    int row = gridSize;
    int col = gridColSize[0];
    
    int ans = 0;
    for(int i = 0; i < row; i++){
        for(int j = 0; j < col; j++){
            if(grid[i][j] == 0 && dfs(grid, i, j, row, col)) 
                ans++;
        }
    }
        
    return ans;
}