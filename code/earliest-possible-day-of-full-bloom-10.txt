class Solution {
public:
    int earliestFullBloom(vector<int>& plantTime, vector<int>& growTime) 
    {
        priority_queue<pair<int, int>> pq;
        int i = 0, n = plantTime.size();
        for(int i = 0; i < n; i++)
            pq.push({growTime[i], plantTime[i]});
        int planting = 0, ans = 0;
        while(!pq.empty())
        {
            pair<int, int> tp = pq.top();
            pq.pop();
            planting += tp.second;
            int plant_grow = planting+tp.first+1;
            ans = max(plant_grow, ans);
        }
        return ans-1;
    }
};