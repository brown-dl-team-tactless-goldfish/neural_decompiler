int cal(vector<int>& p, int i, int buy, int count)
{
    if(i >= p.size())
        return 0;
    
    if(count == 0)
        return 0;
    
    if(dp[i][buy][count] != -1)
        return dp[i][buy][count];
    
    int c = cal(p,i+1,buy,count);
    if(buy)
        c = max(c,cal(p,i+1,0,count-1) + p[i]); 
    else
        c = max(c,cal(p,i+1,1,count) - p[i]);
    
    return dp[i][buy][count] = c;
}

int maxProfit(int k1,vector<int>& prices) 
{
    int n  = prices.size();
    for(int i = 0; i < n; i++) 
    {
        for(int j = 0; j < 2; j++) 
        {
            for(int k = 0; k <= k1; k++) 
            {
                dp[i][j][k] = -1;
            }
        }
    }
    return cal(prices,0,0,k1);
}