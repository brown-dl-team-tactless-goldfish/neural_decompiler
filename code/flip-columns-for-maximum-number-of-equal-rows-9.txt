class Solution {
public:
    int maxEqualRowsAfterFlips(vector<vector<int>>& matrix) {
        int m = matrix.size();
        int n = matrix[0].size();
        for(auto v: matrix){
            for(int &i:v) i = (i==0) ? 1: 0;
        }
        unordered_map<vector<bool>,int> mp;
        // Now we have to see how many rows we can
        for(int r=0;r<m;r++){
            vector<bool> col(n,0);
            // we have to make this row have equal elements
            // here we can make either 1 or 0
            // for 0
            for(int c = 0;c<n;c++){
                if(matrix[r][c] == 0) col[c] = 1;
            }
            // Now we have colum choosing code in col
            mp[col]++;
            // for 1 we have to do just opposite of what we did in making elements 0
            for(int b=0;b<n;b++) col[b] = !col[b];
            mp[col]++;
        }
        int ans = 0;
        for(auto e: mp){
            ans = max(e.second,ans);
        }
        return ans;
    }
};