class Solution {
public:
    int minFlips(string s) {
        
       
        int n=s.length();
        
        string str=s+s;  // Type 1 handeled
        
      
        int i=0;
        
        int ans=INT_MAX;
        int c1=0;  // count for 010101
        int c2=0;   // count for 101010
        
        while(i<n){
           if(i%2==0){
               if(str[i]=='1')
                   c1++;
               else
                   c2++;
                  
            }
            else{
                if(str[i]=='1')
                    c2++;
                else
                    c1++;
            }
            i++;
        }
        
        ans=min({ans,c1,c2});
        
        int j=0;
        while(i<2*n){
            if(j%2==0){
               if(str[j]=='1')
                   c1--;
               else
                   c2--;
                  
            }
            else{
                if(str[j]=='1')
                    c2--;
                else
                    c1--;
            }
            
            j++;
            
            
            if(i%2==0){
               if(str[i]=='1')
                   c1++;
               else
                   c2++;
                  
            }
            else{
                if(str[i]=='1')
                    c2++;
                else
                    c1++;
            }
            
            i++;
            
            
            ans=min({ans,c1,c2});
        }
        
        
        return ans;
    }
    
};
