class Solution {
public:
    int longestCommonSubsequence(string text1, string text2) {
        int n = text1.size(), m = text2.size();
        
        int** memo;
        memo = new int*[n+1];
        for(int i = 0; i <= n; i++)
            memo[i] = new int[m + 1];
        
        for(int i = 0; i <= n; i++) {
            memo[i][0] = 0;
        }
        for(int i = 0; i <= m; i++) {
            memo[0][i] = 0;
        }
        
        for(int i = 1; i <= n; i++) {
            for(int j = 1; j <= m; j++) {
                if(text1[i - 1] == text2[j - 1]) memo[i][j] = 1 + memo[i - 1][j - 1];
                else {
                    memo[i][j] = max(memo[i][j - 1], memo[i - 1][j]);
                }
            }
        }
        return memo[n][m];
    }
    
    int minDistance(string word1, string word2) {
        int cmpp = longestCommonSubsequence(word1, word2);
        int ans = word1.size() + word2.size() - 2 * cmpp;
        return ans;
    }
};