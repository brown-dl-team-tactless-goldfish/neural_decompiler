/**
 * Return an array of arrays of size *returnSize.
 * The sizes of the arrays are returned as *returnColumnSizes array.
 * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().
 */
int cmp(const void* a , const void* b){
    int* A = *(int**)a ;
    int* B = *(int**)b ;
    return B[1] - A[1] ;
}
int** sortTheStudents(int** score, int scoreSize, int* scoreColSize, int k, int* returnSize, int** returnColumnSizes){
    int m = scoreSize ;
    int n = *scoreColSize ;
    int** ans = malloc(m * sizeof(int*) ) ;
    for(int i = 0; i < m; i++){
        ans[i] = malloc(n * sizeof(int) ) ;
    }
    
    int** data = malloc(m * sizeof(int*)) ;
    for(int i = 0; i < m; i++){
        data[i] = malloc(2 * sizeof(int)) ;
        data[i][0] = i ;
        data[i][1] = score[i][k] ;
    }
    qsort(data, m, sizeof(int*), cmp) ;
    
    for(int i = 0; i < m; i++){
        int r = data[i][0] ;
        memcpy(ans[i], score[r], n* sizeof(int)) ;
    }
    *returnSize = m;
    *returnColumnSizes = malloc(m * sizeof(int)) ;
    for(int i = 0; i < m; i++){
        returnColumnSizes[0][i] = n ;
    }
    return ans ;
}