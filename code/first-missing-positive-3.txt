int cmp(const void* a, const void* b) {
    return *(const int*) a - *(const int*) b;
}

int firstMissingPositive(int* nums, int numsSize){
int z=0;
    if(numsSize<100000)
    {
    int moves=0,i,j,flag=0;
    for(i=0;i<numsSize-1;i++)
    {
        flag=0;
        for(j=0;j<numsSize-i-1;j++)
        {
            if(nums[j]>nums[j+1])
            {
                int temp=nums[j];
                nums[j]=nums[j+1];
                nums[j+1]=temp;
                flag=1;
            }
        }
        if(flag==0)
            break;
    }
    }
    else
    {
    qsort(nums, numsSize, sizeof(int), cmp);    
    }
    if(numsSize==1)
    {
        if(nums[0]<=0)
        {
            return 1;
        }
        else if(nums[0]==1)
        {
            return 2;
        }
        else if(nums[0]>1)
        {
            return 1;
        }
    }
    for(int i=0;i<numsSize;i++)
    {
        if(nums[i]>0)
        {
            if(nums[i]==1)
            {
                if((i<numsSize-1)&&((nums[i+1]==nums[i]+1)||(nums[i+1]==nums[i])))
                {
                    z=nums[i];
                    continue;
                }
                else
                {
                    return nums[i]+1;
                }
            }
            else if(nums[i]>1&&i>0)
            {
                    if(nums[i]-1==nums[i-1]||nums[i]==nums[i-1])
                    {
                        z=nums[i];
                        continue;
                    }
                    else
                    {
                        return z+1;
                    }
            }
            else
            {
                return 1;
            }
        }
        else
        {
            continue;
        }
    }
    return z+1;
}