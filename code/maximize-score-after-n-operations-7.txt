class Solution {
public:
    vector<int> a;
    map<int, int> mem;
    int go(int hop, int mask) {
        if(mem.count(mask))
            return mem[mask];
        int &ret = mem[mask] = 0;
        for(int i=0; i<a.size(); i++) {
            if(((1 << i) & mask)) continue;
            for(int j=0; j<a.size(); j++)
                if(i != j && ((1 << j) & mask)==0)
                    ret = max(ret, hop * __gcd(a[i], a[j]) + go(hop + 1, mask | (1 << i) | (1 << j)));
        }
        return ret;
    }
    int maxScore(vector<int>& _nums) {
        a = _nums;
        return go(1, 0);
    }
};