class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        int n = obstacles.size();
        vector<int> ans;
		// v[i] = a, means a is the smallest number that has a subsequence of length i+1.
        vector<int> v;
        
        for(int i=0; i<obstacles.size(); ++i) {
            auto it = upper_bound(v.begin(), v.end(), obstacles[i]);
            if(it == v.end()) {
                v.push_back(obstacles[i]);
                ans.push_back(v.size());
            } else {
                v[it - v.begin()] = obstacles[i];
                ans.push_back(it - v.begin() + 1);
            }
        }
        return ans;
    }
};