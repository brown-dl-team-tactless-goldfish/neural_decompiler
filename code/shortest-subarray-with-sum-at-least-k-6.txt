class Solution {
public:
    int shortestSubarray(vector<int>& nums, int k) {
        int n = nums.size() ;
        vector<long long>preSum(n+1) ;
        preSum[0] = 0 ;
        int ret = INT_MAX ;
        for(int i = 0; i < n; i++)
            preSum[i+1] = preSum[i] + nums[i] ;
        deque<int>q ;
        for(int i = 0; i <= n; i++){
            while(!q.empty() && preSum[q.back()] >= preSum[i])
                q.pop_back() ;
            while(!q.empty() && preSum[i] - preSum[q.front()] >= k){
                ret = min(ret, i - q.front()) ;
                q.pop_front() ;
            }
            q.push_back(i) ;
        }
        return (ret == INT_MAX) ? -1 : ret ;
    }
};