class Solution {
public:
    int minOperationsMaxProfit(vector<int>& customers, int boardingCost, int runningCost) {

        int n = customers.size(),wait = 0,board=0,curProfit = 0, maxProfit = INT_MIN,minRotate = -1,round = 0,i = 0;
        while (true) {
            round++;
            if (i < n) wait += customers[i++];
            board = min(4, wait);
            wait -= board;
            curProfit += board * boardingCost - runningCost;

            if (curProfit > maxProfit) {
                minRotate = round;
                maxProfit = curProfit;
            }

            if (i == n && wait <= 0) break;
        }
        
        return maxProfit <= 0 ? -1 : minRotate;
    }
};