int compareArray(int *v1, int *v2, int n) {
    for (int i = 0; i < n; i++) {
        if (v1[i] != v2[i])
            return 0;
    }
    return 1;
}

void free2D (int ***mat, int n) {
    int i, j;
    int **m = *mat;
    
    for (i = 0; i < n; i++)
        free(m[i]);
    
    free(m);
    *mat = NULL;
    return;
}

char *oddString(char **words, int wordsSize) {
    int i, n, j, k, flag, **differences;
    
    for (n = 0; words[0][n] != '\0'; n++);
    
    differences = (int **) malloc(wordsSize * sizeof(int *));
    
    for (i = 0; i < wordsSize; i++)
        differences[i] = (int *) malloc((n - 1) * sizeof(int));
    
    for (i = 0; i < wordsSize; i++) {
        for (j = 0; j < n - 1; j++)
            differences[i][j] = words[i][j + 1] - words[i][j];
    }
    
    if (wordsSize < 4) {
        if(!compareArray(differences[0], differences[1], n-1)) {
            if (!compareArray(differences[0], differences[2], n-1) && compareArray(differences[1], differences[2], n-1)) {
                k = 0;
            } else if (!compareArray(differences[1], differences[2], n-1) && compareArray(differences[0], differences[2], n-1)) {
                k = 1;
            }
        } else {
            k = 2;
        }
    } else {
        if (!compareArray(differences[0], differences[1], n-1)) {
            if(!compareArray(differences[0], differences[1], n-1)) {
                if (!compareArray(differences[0], differences[2], n-1) && compareArray(differences[1], differences[2], n-1)) {
                    k = 0;
                } else if (!compareArray(differences[1], differences[2], n-1) && compareArray(differences[0], differences[2], n-1)) {
                    k = 1;
                }
            } else {
                k = 2;
            }
        } else {
            for (i = 2, flag = 0; i < wordsSize - 1 && !flag; i++) {
                if (!compareArray(differences[i], differences[i + 1], n-1)) {
                    if (compareArray(differences[0], differences[i], n-1)) {
                        k = i + 1;
                    } else {
                        k = i;
                    }
                    flag = 1;
                }
            }
        }
    }

    free2D(&differences, wordsSize);
    return words[k];
}