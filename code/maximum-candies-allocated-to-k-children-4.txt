// use binary search to get optimum valuse
// O(n)

class Solution {
public:
    bool check( long long mid, vector<int> &candies, long long k){
        long long cnt=0;
        for(auto c : candies){
            cnt += 1ll*c/mid;
        }
        return cnt >= k;
    }
    int maximumCandies(vector<int>& candies, long long k) {
        long long lo=0, hi = 1e12+1;  // check for highest possible (although it will be max(candies))
        while(lo < hi){
            long long mid = lo+(hi-lo+1)/2;  
            if(mid == 0)
                return 0;
            if(check(mid, candies, k))
                lo = mid;
            else
                hi = mid-1;
        }
        return hi;
    }
};