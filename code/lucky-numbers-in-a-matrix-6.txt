
/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int cmp(int*a,int*b){
    return *a>*b;
}
int* luckyNumbers (int** matrix, int matrixSize, int* matrixColSize, int* returnSize){
    int *maxCol=(int*)malloc(sizeof(int)*(*matrixColSize));
    for(int y=0;y<*matrixColSize;y++)maxCol[y]=INT_MIN;
    int *minRow=(int*)malloc(sizeof(int)*(matrixSize));
    for(int x=0;x<matrixSize;x++)minRow[x]=INT_MAX;
    for(int x=0;x<matrixSize;x++){
        for(int y=0;y<*matrixColSize;y++){
            if(matrix[x][y]<minRow[x])minRow[x]=matrix[x][y];
            if(matrix[x][y]>maxCol[y])maxCol[y]=matrix[x][y];
        }
    }
    int *colsAndRows=(int*)malloc(sizeof(int)*(matrixSize+(*matrixColSize)));
    int j=0;
    for(int x=0;x<matrixSize;x++)colsAndRows[j++]=minRow[x];
    for(int y=0;y<*matrixColSize;y++)colsAndRows[j++]=maxCol[y];
    qsort(colsAndRows,j,sizeof(int),cmp);
    int i=0;
    int *res=(int*)malloc(sizeof(int)*(matrixSize));
    for(int x=0;x<j-1;x++)if(colsAndRows[x]==colsAndRows[x+1])res[i++]=colsAndRows[x];
    *returnSize=i;
    return res;
}