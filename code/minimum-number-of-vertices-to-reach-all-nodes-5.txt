int* findSmallestSetOfVertices(int n, int** edges, int edgesSize, int* edgesColSize, int* returnSize){
    int* visited = calloc(n, sizeof(int));
    // time extensive but dynamic method  
	// int* result = NULL;
	// OR
	// fast but memory hungry method
    int* result = calloc(n, sizeof(int));
    *returnSize = 0;
    
    // mark all nodes with incoming edges
    for(int index = 0; index < edgesSize; index++)
        if(!visited[edges[index][1]])
            visited[edges[index][1]] = 1;
    
    // Find all nodes with no incoming edges
    for(int index = 0; index < n; index++)
    {
        if(!visited[index])
        {
            // time extensive but dynamic method
            // result = realloc(result, ++(*returnSize)*sizeof(int)Z);
			// OR
			// fast but memory hungry method
            result[(*returnSize)++] = index;
        }
    }
    
    return result;
}