struct pair {
    int row;
    int sum;
    int val;
};

int cmp(const void* a, const void* b) {
    struct pair* pa = (const struct pair*) a;
    struct pair* pb = (const struct pair*) b;
    if(pa->sum == pb->sum) return pb->row - pa->row;
    return pa->sum - pb->sum;
}

int* findDiagonalOrder(int** nums, int numsSize, int* numsColSize, int* returnSize) {
    *returnSize = 0;
    for(int i = 0; i < numsSize; i++) {
        *returnSize += numsColSize[i];
    }
    
    struct pair* arr = (struct pair*) malloc((*returnSize) * sizeof(struct pair));
    int idx = 0;
    for(int r = 0; r < numsSize; r++) {
        for(int c = 0; c < numsColSize[r]; c++) {
            arr[idx].row = r;
            arr[idx].sum = r + c;
            arr[idx].val = nums[r][c];
            idx++;
        }
    }
    
    qsort(arr, *returnSize, sizeof(struct pair), cmp);

    int* ans = (int*) malloc((*returnSize) * sizeof(int));
    for(int i = 0; i < (*returnSize); i++) {
        ans[i] = arr[i].val;
    }
    free(arr);
    return ans;
}