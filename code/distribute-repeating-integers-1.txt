public class Solution {
    public bool CanDistribute(int[] nums, int[] quantity) {
        var cnt = nums.GroupBy(x => x).Select(x => x.Count()).ToList();
        Array.Sort(quantity, (a,b) => b.CompareTo(a));
        return DFS(cnt, quantity, 0);
    }
    
    public bool DFS(List<int> cnt, int[] quantity, int idx)
    {
        if(idx == quantity.Length) return true;
        for(int i = 0; i < cnt.Count; i++)
        {
            if(cnt[i] >= quantity[idx])
            {
                cnt[i] -= quantity[idx];
                if(DFS(cnt, quantity, idx+1))
                    return true;
                cnt[i] += quantity[idx];
            }
        }
        return false;
    }
}