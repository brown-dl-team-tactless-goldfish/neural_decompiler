class Robot {
public:
    int R; int C;
    int i; int j;
    int dir;

    vector<int> x{+1,0,-1,0};
    vector<int> y{0,+1,0,-1};

    Robot(int width, int height) {
        this-> R = width;
        this-> C = height;
        this->i = 0;
        this->j = 0;
        this-> dir = 0;

    }
    
    void step(int num) {
        while(num){
            int newI = i + x[dir];
            int newJ = j + y[dir];
            if(inBounds(newI, newJ)){
                i = newI;
                j = newJ;
                num--;
            }
            else{
                while(!inBounds(newI, newJ)){
                    dir = (dir + 1)%4;
                    newI = i + x[dir];
                    newJ = j + y[dir];
                }

                i = newI;
                j = newJ;
                num--;
            }
        }
        return;
    }
    
    vector<int> getPos() {
        return {i,j};
    }
    
    string getDir() {
        switch(dir){
            case 0:
                return "East";
                break;
            
            case 1:
                return "North";
                break;
            
            case 2:
                return "West";
                break;
            
            case 3:
                return "South";
                break;

            default:
                exit(100);
        }
    }

    bool inBounds(int i, int j){
        return (i >=0 && i<R && j>=0 && j<C);
    }
};

