int comp (const void * elem1, const void * elem2) 
{
    int f = *((int*)elem1);
    int s = *((int*)elem2);
    if (f > s) return  1;
    if (f < s) return -1;
    return 0;
}

int largestSumAfterKNegations(int* nums, int numsSize, int k){
    qsort(nums,numsSize,sizeof(int),comp);
    int sum = 0;
    int cnt = 0;
    for(int i=0;i<numsSize;i++) {     
        if(i<k && nums[i]<0) {
            nums[i] = -nums[i];
            cnt++;
        }
        sum+=nums[i];
    }
    if(cnt<k) {
        int minima = 999999;
        for(int i=0;i<numsSize;i++) {
            if(nums[i]<minima) {
                minima = nums[i];
            }
        }
        if((k-cnt)%2==1) {
            sum-=minima*2;
        }         
    }
    return sum;
}