#define all(x) (x).begin(),(x).end()

const int N = 400 + 15;
class Solution {
public:
    bool used[N];
    int c;
    void init(){
        c = 0;
        for (int i = 0; i < N - 10; ++i) {
                used[i] = false;
        }
    }
    int len;
    void dfs(int v,vector<vector<int>>& graph){
        used[v] = true;
        c++;
        for (int i = 0; i < len; ++i) {
            if (graph[v][i] && !used[i]){
                dfs(i,graph);
            }
        }
    }
    int minMalwareSpread(vector<vector<int>>& graph, vector<int>& initial) {
        sort(all(initial));
        len = graph.size();
        int t = INT_MIN;
        int ans;
        for (int i = 0; i < initial.size(); ++i) {
            init();
            dfs(initial[i],graph);
            if (c > t){
                t = c;
                ans = initial[i];
            }
        }
        return ans;
    }
};