int minMaxGame(int* nums, int numsSize){
    int n = numsSize;
    int* stack1 = malloc(n * sizeof(int));
    int* stack2 = malloc(n/2 * sizeof(int));
    int n1 = n, n2 = 0;
    memcpy(stack1, nums, n* sizeof(int));
    int ans;
    while(n1 > 1 || n2 > 1){
        if(n1 > 1){
            for(int i = 0; i < n1/2; i++){
                if(n2 %2 == 0)
                    stack2[n2] = fmin(stack1[i*2], stack1[i*2+1] ) ;
                else
                    stack2[n2] = fmax(stack1[i*2], stack1[i*2+1] ) ;
                n2++;
            }
            n1 = 0;
        }
        else{
            for(int i = 0; i < n2/2; i++){
                if(n1 %2 == 0)
                    stack1[n1] = fmin(stack2[i*2], stack2[i*2+1] ) ;
                else
                    stack1[n1] = fmax(stack2[i*2], stack2[i*2+1] ) ;
                n1++;
            }
            n2 = 0;
        }
    }

    if(n1 == 1)
        ans = stack1[0];
    else
        ans = stack2[0];
    free(stack1);
    free(stack2);
    return ans;
}