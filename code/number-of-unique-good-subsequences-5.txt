    int n = binary.size();
    vector<long long> dp(n + 1, 0);
    int prev_zero = 0, prev_one = 0;
    
    int i = 1;
    for(; i <= n && binary[i - 1] == '0'; i++);
    
    if(i > n)
        return 1;
    
    dp[i] = 1;
    prev_one = i - 1;
            
    bool zero_flag = i > 1;
    for(i++; i <= n; i++)
    {
        dp[i] = 2 * dp[i - 1];
        
        if(binary[i - 1] - '0')
            dp[i] -= dp[prev_one], prev_one = i - 1;
        else
            dp[i] -= dp[prev_zero], prev_zero = i - 1, zero_flag = true;
        
        if(dp[i] < 0)
            dp[i] += M;
        
        dp[i] %= M;
    }
    
    return (dp[n] + zero_flag) % M;
}