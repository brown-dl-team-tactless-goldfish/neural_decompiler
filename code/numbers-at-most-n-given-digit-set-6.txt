public class Solution 
{
    public int AtMostNGivenDigitSet(string[] D, int N) 
    {
        int result = ExactlySameLengthNumbersCount(D, N.ToString());
        for (int i = 1; i < N.ToString().Length; i++)
            result += (int) Math.Pow(D.Length, i);
        return result;
    }
    
    private int ExactlySameLengthNumbersCount(string[] D, string str)
    {
        if(string.IsNullOrEmpty(str)) return 1;
        int firstDigit = (int) (str[0] - '0'), result = 0;
        foreach(var digit in D.Select(x => int.Parse(x))) 
        {
            if (digit < firstDigit)
                result += (int) Math.Pow(D.Length, str.Length-1);
            else if (digit == firstDigit)
                result += ExactlySameLengthNumbersCount(D, str.Substring(1));
        }
        
        return result;
    }
}