class Solution {
public:
    vector<double> getCollisionTimes(vector<vector<int>>& cars) {
        int n = cars.size();
        vector<double> ans(n);
        vector<int> st;
        auto time = [&] (int i, int j) {
            return (double) (cars[j][0] - cars[i][0]) / (cars[i][1] - cars[j][1]);  
        };
        for(int i = n - 1; i >= 0; i--) {
            while(!st.empty() && cars[st.back()][1] >= cars[i][1] || (st.size() > 1 && time(st.back(), i) >= ans[st.back()])) {
                st.pop_back();
            }
            if(st.empty()) {
                ans[i] = -1;
            }
            else {
                ans[i] = time(st.back(), i);
            }
            st.push_back(i);
        }
        return ans;
    }
};