public class Solution {
    public int MinCapability(int[] nums, int k) {
        PriorityQueue<int,int> pq=new ();
        for(int i=0;i<nums.Length;i++)
            pq.Enqueue(i,nums[i]);
        int score=0;
        Dictionary<int,int> dhead=new ();
        Dictionary<int,int> dtail=new ();
        while(pq.Count!=0){
            var x=pq.Dequeue();
            bool a=dhead.ContainsKey(x+1);
            bool b=dtail.ContainsKey(x-1);
            var head=b ? dtail[x-1]: x ;
            var tail=a ? dhead[x+1]: x ;
            if (a) dhead.Remove(x+1);
            if (b) dtail.Remove(x-1);
            score-=(tail-x+1)/2;
            score-=(x-head+1)/2;
            dhead[head]=tail;
            dtail[tail]=head;
            score+=(tail-head+2)/2;
            if (score>=k) return nums[x];
        }
        return 0;
    }
}