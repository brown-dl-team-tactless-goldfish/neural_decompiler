public class Solution 
{
    public IList<int> GetAllElements(TreeNode root1, TreeNode root2) 
    {
        List<int> list1 = new List<int>(), list2 = new List<int>();
        Traverse(root1, list1);
        Traverse(root2, list2);
        return Merge(list1, list2);
    }
   
    private void Traverse(TreeNode root, List<int> list)
    {
        if(root == null) return;
        Traverse(root.left, list);
        list.Add(root.val);
        Traverse(root.right, list);
    }
    
    private List<int> Merge(List<int> list1, List<int> list2)
    {
        var result = new List<int>();
        int i = 0, j = 0;
        while(i < list1.Count && j < list2.Count)
        {
            if(list1[i] < list2[j])
                result.Add(list1[i++]);
            else
                result.Add(list2[j++]);
        }
        
        while(j < list2.Count)
            result.Add(list2[j++]);
        while(i < list1.Count)
             result.Add(list1[i++]);
        
        return result;
    }
}