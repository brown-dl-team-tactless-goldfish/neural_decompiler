class Solution {
public:
    vector<int> minDifference(vector<int>& nums, vector<vector<int>>& queries) {
        map<int, vector<int>>numToIndices ;
        for(int i = 0; i < nums.size(); i++){
            numToIndices[nums[i]].push_back(i) ;
        }
        if(numToIndices[nums[0]].size() == nums.size())
            return vector<int>(queries.size(), -1) ;
        vector<int>ret ;
        for(auto& q : queries){
            int l = q[0] ;
            int r = q[1] ;
            int prevNum = -1;
            int minDiff = INT_MAX;
            for(auto& m : numToIndices){
                auto& indices = m.second ;
                auto it = lower_bound(indices.begin(), indices.end(), l) ;
                if(it == indices.end() || *it > r)
                    continue ;
                if(prevNum != -1)
                    minDiff = min(minDiff, m.first - prevNum) ;
                prevNum = m.first ;
                if(minDiff == 1)
                    break ;
            }
            ret.push_back( (minDiff == INT_MAX) ? -1 : minDiff ) ;
        }
        return ret ;
    }
};