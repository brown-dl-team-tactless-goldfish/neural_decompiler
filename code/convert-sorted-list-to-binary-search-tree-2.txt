/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */


struct TreeNode* sortedListToBST(struct ListNode* head){
struct ListNode* tail;
struct TreeNode* new_node;
int counter = 0;
tail = head;
if (tail==NULL) return NULL;
while (tail!=NULL) { tail = tail->next; counter++; }
new_node = malloc(sizeof(struct TreeNode));
if (counter==1) {
    new_node->left = NULL;
    new_node->right = NULL;
    new_node->val = head->val;
    return new_node;
}
if (counter==2) {
    new_node->right = NULL;
    new_node->val = head->next->val;
    head->next = NULL;
    new_node->left = sortedListToBST(head);
     return new_node;
}
tail = head;
counter = (counter / 2) - 1;
while (counter-- > 0) tail = tail->next;
new_node->right = sortedListToBST(tail->next->next);
new_node->val = tail->next->val;
tail->next = NULL;
new_node->left = sortedListToBST(head);
return new_node;    
}