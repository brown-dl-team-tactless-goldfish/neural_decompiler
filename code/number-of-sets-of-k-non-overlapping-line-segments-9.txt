long dp[1001][1001];
bool f=false;
class Solution 
{
    public:
    long m=1000000007;
    long dfs(long n,long k)
    {
        if(k==1) return (n*(n-1)/2)%m;
        if(dp[n][k]!=-1) return dp[n][k];
        long result=0;
        for(int i=1;i<=n-k;i++) result=(result+i*dfs(n-i,k-1))%m;
        dp[n][k]=result;
        return result;
    }
    int numberOfSets(int n, int k) 
    {
        if(!f)
        {
            f=true;
            for(int i=0;i<1001;i++)
                for(int j=0;j<1001;j++)
                    dp[i][j]=-1;
        }
        
        return dfs(n,k);
    }
};