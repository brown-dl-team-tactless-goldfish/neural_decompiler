class Solution {
public:
    int minReorder(int n, vector<vector<int>>& connections) {
        map<int, vector<int>> from;
        map<int, vector<int>> to;
        for(int i = 0; i < connections.size(); i++){
            from[connections[i][0]].push_back(connections[i][1]);
            to[connections[i][1]].push_back(connections[i][0]);
        }
        int count = 0;
        queue<int> q;
        set<int> v;
        q.push(0);
        while(!q.empty()){
            int n = q.size();
            for(int i = 0; i < n; i++){
                int c = q.front();
                q.pop();
                v.insert(c);
                for(int i = 0; i < from[c].size(); i++){
                    if(!v.count(from[c][i])){
                        count++;
                        q.push(from[c][i]);
                    }
                }
                for(int i = 0; i < to[c].size(); i++){
                    if(!v.count(to[c][i])){
                        q.push(to[c][i]);
                        }
                }
            }
        }
        return count;
    }
};