/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */


/**
 * Note: The returned array must be malloced, assume caller calls free().
 */

void dfs(struct TreeNode* node, int* res, int* pos) {
    if (node==NULL) return;
    
    dfs(node->left, res, pos);
    dfs(node->right, res, pos);
    res[(*pos)++] = node->val;
}

int countSize(struct TreeNode* head) {
    if (head == NULL) return 0;
    int res = 1;
    res += countSize(head->left);
    res += countSize(head->right);
    return res;
}

int* postorderTraversal(struct TreeNode* root, int* returnSize){
    *returnSize = countSize(root);
    int* res = malloc(sizeof(int)*(*returnSize));
    int pos = 0;
    dfs(root, res, &pos);
    return res;
}