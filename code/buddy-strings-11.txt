bool checkAnyDuplicate(char *A, int len) {
    bool hash_set[26] = {0};
    for(int i = 0; i < len; i++) {
        if(hash_set[A[i] - 'a'] == true) {
            return true;
        }
        hash_set[A[i] - 'a'] = true;
    }
    return false;
}

void swap(char *A, int *index) {
    int idx1 = index[0];
    int idx2 = index[1];
    char temp = A[idx1];
    A[idx1] = A[idx2];
    A[idx2] = temp;
}

bool buddyStrings(char * A, char * B){
    int diffIndex[2] = {-1, -1};
    int diff = 0;
    
    int lenA = strlen(A);
    int lenB = strlen(B);
    
    if(lenA != lenB)    return false;
    
    for(int i = 0; i < lenA; i++) {
        if(A[i] != B[i]) {
            diff++;
            if(diff > 2)    return false;
            if(diff == 1) {
                diffIndex[0] = i;
            }else if(diff == 2) {
                diffIndex[1] = i;
            }
        }
    }
    if(diff == 0) {
        return checkAnyDuplicate(A, lenA);
    }
    
    if(diff != 2) {
        return false;
    }
    
    swap(A, diffIndex);
    return strcmp(A,B) == 0;
}
