using System.Collections.Generic;
using System.Linq;
using System.Text;

public class Solution {
    public IList<int> PathInZigZagTree(int label) {
        var binary = ToBinary(label);
        var n = binary.Length;
        var result = new List<int>();
        var bins = Enumerable.Range(1, n).Select(x => binary.Substring(0, x));
        foreach (var bin in bins) {
            if (bin.Length % 2 == n % 2) {
                result.Add(ToDigit(bin));
            }
            else {
                var chars = bin.Select(x => x == '0' ? '1' : '0').ToArray();
                chars[0] = '1';
                result.Add(ToDigit(new string(chars)));
            }
        }

        return result;

        string ToBinary(int i) {
            var str = new StringBuilder();
            while (i > 0) { str.Append(i % 2); i /= 2; }
            return new string(str.ToString().Reverse().ToArray());
        }

        int ToDigit(string s) {
            var i = 1; var sum = 0;
            foreach (var c in s.Reverse()) { sum += (c % 2) * i; i *= 2; }
            return sum;
        }
    }
}