#define pii pair<int, int>
class Solution {
public:
    int secondMinimum(int n, vector<vector<int>>& edges, int time, int change) {
        vector<int> dist1(n+1, INT_MAX);
        vector<int> dist2(n+1, INT_MAX);
        vector<vector<int> > graph(n+1);
        for(auto e : edges) {
            graph[e[0]].push_back(e[1]);
            graph[e[1]].push_back(e[0]);
            
        }
        queue<pii> q;
        dist1[1] = 0;
        q.push({0, 1});
        while(!q.empty()) {
            int cost = q.front().first;
            int node = q.front().second;
            q.pop();
            for(auto nbr : graph[node]) {
                int r = cost/change;
                int newcost = cost + time;
                if(r%2) newcost = change*(1+r) + time;
                if(dist1[nbr] > newcost) {
                    dist2[nbr] = dist1[nbr];
                    dist1[nbr] = newcost;
                    q.push({newcost, nbr});
                } else if(newcost > dist1[nbr] && newcost < dist2[nbr]) {
                    dist2[nbr] = newcost;
                    q.push({newcost, nbr});
                }
            }
        }
        return dist2[n];
    }
};