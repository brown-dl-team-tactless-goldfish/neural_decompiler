int printNum(char *s, int num)
{
    int i = 0;
    int j = 0;
    int ret = 0;
    
    while (num > 0) {
        s[i++] = num % 10 + '0';
        num /= 10;
    }
    
    ret = i;
    i--;
        
    while (j < i) {
        char tmp;
        tmp = s[j];
        s[j] = s[i];
        s[i] = tmp;
        j++;
        i--;
    }
    
    return ret;
}

int compress(char* chars, int charsSize){
    int moveIdx = 0;
    char prev = '\0';
    char cur;
    bool bRept = false;
    int i;
    int reptCnt = 0;
    
    for (i = 0; i <= charsSize; i++) {
        if (i == charsSize)
            cur = '\0';
        else
            cur = chars[i];
        
        if (prev && prev != cur) {
            chars[moveIdx++] = prev;
            if (reptCnt > 1) {
                moveIdx += printNum(chars+moveIdx, reptCnt);
            }
            reptCnt = 1;
        }
        else {
            reptCnt++;
        }
        prev = cur;
    }

    return moveIdx;
}