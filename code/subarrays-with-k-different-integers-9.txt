int atmost(vector<int>& nums, int k)
{
    int count = 0, left=0, right = 0;
    
     unordered_map<int,int> mp;
    
    for(right=0; right < nums.size(); right++)
    {
        mp[nums[right]]++;
        
        while(mp.size() > k)
        {
            auto it = mp.find(nums[left]);
            
            it->second--;
            
            if(it->second == 0)
            {
                mp.erase(it);
            }
            
            left++;
            
        }
        
         count += right-left+1;
           
    }
    
    return count;
    
    
}

int subarraysWithKDistinct(vector<int>& nums, int k) {
    
    return atmost(nums,k) - atmost(nums,k-1);
    
}