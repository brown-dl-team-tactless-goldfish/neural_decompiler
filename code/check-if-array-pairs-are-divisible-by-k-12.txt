public class Solution {
    public bool CanArrange(int[] arr, int k) {
        int[] counter = new int[k];
        foreach(int n in arr)
        {
            int reminder = n % k;
            if (reminder == 0) continue; // special case
            if (reminder < 0) reminder += k; // handle negative case.
			
            // "reminder" and "k - reminder" becomes a pair, and can cancel out each other.
			// for a reminder, check if the other part in the piar exist or not. 
            if (counter[k-reminder] > 0) 
                counter[k-reminder]--;  // if exist, cancel out
            else
                counter[reminder]++;  // if not, increase the count.
        }
        
        return counter.All(x => x == 0);
    }
}