#include<stdio.h>
#include<stdlib.h>
#define min(a,b) a<b?a:b
int dp(char* S,char a,int i,int limit,int (*save)[2]){
    int count=0;
    
    if(i==0){
        if(a=='0'){
           if(S[i]=='0'){
           
           return 0;	
		   }
            
            else{
            
            return 1;	
			}
            
        }
        else{
         
          return 0;
        }
    }
    
    if(i<limit-1&&a=='0'){
        if(save[i][0]!=-1)
            return save[i][0];
        
        if(S[i]=='1'){
        count=dp(S,'0',i-1,limit,save)+1;  
        save[i][0]=count;
        }
        
        else{
        count=dp(S,'0',i-1,limit,save);    
        save[i][0]=count;
        }
           
    }
    else{
        char change='0',unchange='1';
        if(S[i]=='0'){
            change='1';
            unchange='0';
        }
        if(save[i][change-48]!=-1&&save[i][unchange-48]!=-1)
            return min(save[i][change-48],save[i][unchange-48]); 
            
        save[i][change-48]=dp(S,change,i-1,limit,save)+1;
            
        save[i][unchange-48]=dp(S,unchange,i-1,limit,save);
        
        count=min(save[i][change-48],save[i][unchange-48]); 
    }
   
    
    return count;
}

int minFlipsMonoIncr(char* S) {
    int count=0,i,min;
    char* A=S;
    while(*A!='\0'){
    count++;
    A++;
    }
    int save[count][2];
    for(i=0;i<count;i++){
        save[i][0]=-1;
        save[i][1]=-1;
    }
    
   return  dp(S,S[count-1],count-1,count,save);
   
}