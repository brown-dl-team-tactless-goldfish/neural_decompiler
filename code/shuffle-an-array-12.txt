    #include <random>

    class Solution {
    public:
        Solution(vector<int> nums) {
            this->nums = move(nums);
            this->last = this->nums;
        }

        vector<int> reset() {
            return nums;
        }

        vector<int> shuffle() {
            auto N = static_cast<int>(last.size());

            for (int i = 0; i < N; ++i)
            {
                auto j = uniform_int_distribution<int>(0, (N - 1) - i)(raneng);
                swap(last[i], last[j]);
            }

            return last;
        }

        vector<int> last;
        vector<int> nums;
        default_random_engine raneng;
    };