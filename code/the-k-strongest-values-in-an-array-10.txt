class Solution {
public:
    vector<int> getStrongest(vector<int>& arr, int k) {
        sort(arr.begin(), arr.end());
        const int n = arr.size(), m = arr[(n - 1) / 2];
        int i = 0, j = n - 1;
        vector<int> r;
        for (;i < j && arr[j] >= m && arr[i] <= m && r.size() < k;) {
            if (arr[j] + arr[i] >= m + m) {
                r.push_back(arr[j--]);
            } else {
                r.push_back(arr[i++]);
            }
        }
        for (; r.size() < k && arr[i] <= m; ++i) {
            r.push_back(arr[i]);
        }
        for (; r.size() < k && arr[j] >= m; --j) {
            r.push_back(arr[j]);
        }
        return r;
        
        
    }
};