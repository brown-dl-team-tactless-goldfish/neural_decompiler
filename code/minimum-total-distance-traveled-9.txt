class Solution {
public:
    static bool custom(vector<int>& v1,vector<int>& v2)
    {
        return v1[0]<v2[0];
    }
    long long F[101][101];
    long long memoi(int x,int y,vector<int>& robot,vector<vector<int>>& factory)
    {
        if(x==robot.size()) return 0;
        if(y==factory.size()) return -1;
        if(F[x][y]!=-1) return F[x][y];
        long long mi=LLONG_MAX,a=0,v,f;
        f=memoi(x,y+1,robot,factory);
        if(f!=-1) mi=f;
        for(int i=1;i<=factory[y][1];i++)
        {
            if(x+i>robot.size()) break;
            a=a+abs(factory[y][0]-robot[x+i-1]);
            f=memoi(x+i,y+1,robot,factory);
            if(f==-1) continue;
            v=a+f;
            if(mi>v) mi=v;
        }
        if(mi==LLONG_MAX) mi=-1;
        return F[x][y]=mi;
    }
    long long minimumTotalDistance(vector<int>& robot, vector<vector<int>>& factory) {
        sort(robot.begin(),robot.end());
        sort(factory.begin(),factory.end(),custom);
        memset(F,-1,sizeof(F));
        return memoi(0,0,robot,factory);
    }
};