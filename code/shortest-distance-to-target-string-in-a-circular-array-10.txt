class Solution {
public:
    int closetTarget(vector<string>& words, string target, int startIndex) {
        unordered_map<string, vector<int>> index;
        for (int i = 0; i < words.size(); i++) index[words[i]].push_back(i);
        if (index.find(target)==index.end()) return -1;
        int ans = INT_MAX;
        for (int v: index[target]) {
            int diff = std::abs(startIndex - v);
            ans = std::min<int>(ans, diff);
            ans = std::min<int>(ans, words.size()-diff);
        }
        return ans;
    }
};