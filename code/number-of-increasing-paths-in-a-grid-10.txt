#define mod 1000000007
class Solution {
public:
	long long dp[1001][1001];
	int dir[4][2] = { { 0, 1 }, { 1, 0 }, { -1, 0 }, { 0, -1 } },n,m;
	int help(vector<vector<int>>& grid, int i, int j){
		if (dp[i][j] != -1) return dp[i][j];
		long long res = 1;
		for (auto d:dir) {
			int  x = i + d[0];
			int  y = j + d[1];
			if (x >= 0 and x < n and y >= 0 and y < m and grid[x][y] > grid[i][j]) {
				res = (res + help(grid, x, y))%mod;
			}
		}
		return dp[i][j] = res%mod;
	}
	int countPaths(vector<vector<int>>& grid) {
		n = grid.size();
		m = grid[0].size();
		memset(dp,-1,sizeof dp);
		long long sum = 0;

		for (int i = 0; i < n; i++)
		 for (int j = 0; j < m; j++)
			sum  = (sum + help(grid, i, j))%mod;

		return sum;
	}
};