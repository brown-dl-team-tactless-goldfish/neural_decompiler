class Solution {
public:
    set<int> accuArea;
    vector<vector<int>> rect;
    int total = 0;
    Solution(vector<vector<int>> rects):rect(rects) {
        int sum = 0;
        for(auto i:rect){
            sum+=(i[2]-i[0]+1)*(i[3]-i[1]+1);
            accuArea.insert(sum);
        }
        // for(auto i:accuArea) cout<<i<<endl;
        total = sum;
        
    }
    
    vector<int> pick() {
        int area = rand()%total;
        auto iter = accuArea.lower_bound(area);
        int a = distance(accuArea.begin(),iter);
        cout<<a<<endl;
        int b = rect[a][2] == rect[a][0]? rect[a][0]:rand()%(rect[a][2]-rect[a][0]+1)+rect[a][0];
        int c = rect[a][3] == rect[a][1]? rect[a][1]:rand()%(rect[a][3]-rect[a][1]+1)+rect[a][1];
        return {b,c};
    }
};
'''