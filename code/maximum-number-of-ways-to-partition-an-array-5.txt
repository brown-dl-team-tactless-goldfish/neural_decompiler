class Solution {
public:
    using ll = long long;
    int waysToPartition(vector<int>& A, int k) {
        ll res = 0, N = A.size(), sum = accumulate(begin(A), end(A), 0ll);
        unordered_map<ll, ll> left, right;
        for(ll i = 0, s0 = A[0], s1 = sum-A[0]; i < N-1; i++, s0 += A[i], s1 -= A[i]) right[s0-s1]++;
        res = right[0];
        for(ll i = 0, s0 = A[0], s1 = sum-A[0]; i < N; i++, s0 += i < N ? A[i] : 0, s1 -= i < N ? A[i] : 0) {
            res = max(res, right[A[i]-k]+left[k-A[i]]);
            left[s0-s1]++;
            if(i < N-1) right[s0-s1]--;
        }
        return res;
    }
};