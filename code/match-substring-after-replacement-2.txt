class Solution {
public:
    bool matchReplacement(string s, string sub, vector<vector<char>>& mappings) {
        unordered_map<char,unordered_set<char>> mp;
        for(auto it : mappings){
            mp[it[0]].insert(it[1]);
        }
        vector<string> op;
        for(int i = 0;i <= s.size() - sub.size();i++){
            op.push_back(s.substr(i,sub.size()));
        }
        int n = sub.size();
        for(auto &it : op){
            bool flag = true;
            for(int i = 0;i < n;i++){
                if(it[i] != sub[i]){
                   if(mp[sub[i]].find(it[i]) == mp[sub[i]].end()){
                        flag = false;
                        break;
                    }
                }
            }
            if(flag){
                 return true; 
            }
        }
        return false;
        
    }
};