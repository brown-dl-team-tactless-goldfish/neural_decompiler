    vector<int> smallestRange(vector<vector<int>>& nums) {
        auto cmp = [&](pair<int, int> a, pair<int, int> b) {
            return nums[a.first][a.second] > nums[b.first][b.second];
        };
        
        priority_queue<pair<int, int>, vector<pair<int, int>>, decltype(cmp)> pq(cmp);
        int l = INT_MAX, h = INT_MIN, w = INT_MAX;
        for(int i = 0; i < nums.size(); i++) {
            l = min(l, nums[i][0]);
            h = max(h, nums[i][0]);
            pq.push({i, 0});
        } 
        
        int rl = l, rh = h;
        w = h-l;
        while(pq.size() == nums.size()) {
            auto t = pq.top(); pq.pop();
            if(h - nums[t.first][t.second] < w) {
                rl = nums[t.first][t.second];
                rh = h;
                w = rh - rl;
            }
            if(t.second < nums[t.first].size() - 1) {
                h = max(h, nums[t.first][t.second + 1]);
                pq.push({t.first, t.second + 1});
            }
        }
        return {rl, rh};
    }