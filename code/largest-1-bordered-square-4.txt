    public int Largest1BorderedSquare(int[][] grid) {
      (int rowLength, int colLength)[][] data = Enumerable
          .Range(0, grid.Length)
          .Select(r => new (int rowLength, int colLength)[grid[r].Length])
          .ToArray();

      int rowCount = grid.Length;
      int colCount = grid[0].Length;

      for (int r = 0; r < rowCount; ++r)
        for (int c = 0; c < colCount; ++c) 
          if (grid[r][c] == 1) 
            data[r][c] = (r == 0 ? 1 : data[r - 1][c].rowLength + 1, c == 0 ? 1 : data[r][c - 1].colLength + 1);
          
      int result = 0;

      for (int r = 0; r < rowCount; ++r)
        for (int c = 0; c < colCount; ++c) {
          (int dr, int dc) = data[r][c];

          int n = Math.Min(dr, dc);

          for (int i = result + 1; i <= n; ++i)
            if (IsSquare(grid, (r - i + 1, c - i + 1), (r, c))) 
              result = Math.Max(result, i);
        }

      return result * result;
    }