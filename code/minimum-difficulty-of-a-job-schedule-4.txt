    int minDifficulty(vector<int>& jobDifficulty, int d) {
        int n = jobDifficulty.size();
        if (n < d) return -1;
        vector<vector<int>> dp(n+1, vector<int>(d+1,INT_MAX));
        dp[1][1] = jobDifficulty[0];
        for (int j = 1; j <= d; j++) {
            for (int i = 1; i <= n; i++) {
                int diff = jobDifficulty[i-1];
                for (int m = i-1; (m >= 1 && m >= j-1); m--) {
                    dp[i][j] = min(dp[i][j], (j-1>=1?dp[m][j-1]+diff:max(dp[m][j],diff)));
                    diff = max(diff, jobDifficulty[m-1]);
                }
            }
        }
        return dp[n][d];
    }