#define SWAP(x, y) do {char tmp = (x); (x) = (y); (y) = tmp;} while(0)
#define MIN(x, y) (x) < (y) ? (x) : (y)

void rev(char* s, int from, int to)
{
    while (from < to) {
        SWAP(s[from], s[to]);
        from++;
        to--;
    }
}

char * reverseStr(char * s, int k){
    int len;
    int i;
    
    if (!s) {
        return s;
    }
    
    len = strlen(s);
    
    if (len < k) {
        rev(s, 0, len-1);
        return s;
    }
    
    for (i = 0; i < len; i += (2 * k)) {
        rev(s, i, i+k-1<len ? i+k-1: len-1);
    }
    
    return s;
}