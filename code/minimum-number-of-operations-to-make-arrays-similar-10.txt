class Solution {
public:
    long long makeSimilar(vector<int>& nums, vector<int>& target) {
        long long n=nums.size(), i, j, o=0, e=0;
        
        sort(nums.begin(), nums.end());
        sort(target.begin(), target.end());
        
        queue<long long>even, odd;
        
        for(i=0; i<n; i++){
            if(target[i]%2){odd.push(target[i]);}
            else{even.push(target[i]);}
        }
        
        for(i=0; i<n; i++){
            if(nums[i]%2){
                target[i] = odd.front();
                if(target[i]>nums[i]){o += (target[i]-nums[i])/2;}
                odd.pop();
            }
            else{
                target[i] = even.front();
                if(target[i]>nums[i]){e += (target[i]-nums[i])/2;}
                even.pop();
            }
        }
        
        return o + e;
    }
};