class Solution {
public:
	int checkRecord(int n) {
		int kMod=1e9+7;
		if(n==1) return 3;
		if(n==2) return 8;

		long A_LL=0; // contains A ending with two L
		long X_LL=1; // without A ending with two L
		long A_L=1; // contains A ending with single L
		long X_L=1; //  without A ending with single L
		long A_A=2; // contains A and ending with A
		long A_P=1; // contains A ending with P
		long X_P=2; // without A ending with P
		for(int i=3;i<=n;i++)
		{
			long old_A_LL=A_LL;
			long old_X_LL=X_LL;
			long old_A_L=A_L;
			long old_A_A=A_A;
			long old_A_P=A_P;
			long old_X_P=X_P;
			long old_X_L=X_L;

			A_LL=old_A_L;
			X_LL=old_X_L;
			A_L=(old_A_A+old_A_P)%kMod;
			X_L=old_X_P;
			A_A=(old_X_LL+old_X_L+old_X_P)%kMod;
			A_P=(old_A_LL+old_A_L+old_A_A+old_A_P)%kMod;
			X_P=(old_X_LL+old_X_L+old_X_P)%kMod;

		}

		return (A_LL+X_LL+A_L+X_L+A_A+A_P+X_P)%kMod;

	}
};