class Solution {
public:
    int minOperations(vector<int>& nums1, vector<int>& nums2) {
        int sum1=0,sum2=0;
        int size1=nums1.size();
        int size2=nums2.size();
        for(auto n:nums1)
            sum1+=n;
        for(auto n:nums2)
            sum2+=n;
        if(sum1>sum2)return minOper(nums1,nums2,sum1-sum2);
        return minOper(nums2,nums1,sum2-sum1);
        
    }
    int minOper(vector<int>& nums1, vector<int>& nums2,int res) {
        sort(nums1.begin(),nums1.end(),greater<int>());
        sort(nums2.begin(),nums2.end());
        int left=0;
        int right=0;
        int count=0;
        while(left<nums1.size()||right<nums2.size())
        {
            if(res<=0)break;
            if(left>=nums1.size())res-=6-nums2[right++];
            else if(right>=nums2.size())res-=nums1[left++]-1;
            else if(nums1[left]-1>6-nums2[right])
                res-=nums1[left++]-1;
            else 
                res-=6-nums2[right++];
            count++;   
        }
        return res>0?-1:count;
        
    }
};