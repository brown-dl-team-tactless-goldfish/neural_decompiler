int index[201]={0};
int value[201]={0};
int *arr;
int temp1=0;
int temp2=0;
int temp=1000;
int k=-1;
int n=0;
arr=(int*)malloc(numsSize*sizeof(int));
int i=0;
qsort(nums,numsSize,sizeof(int),cmpfunc);

for(int i=0;i<numsSize;i++)
{   
    if(temp==nums[i])
    {
    index[k]=nums[i];
    value[k]++;
    }
    else{
        temp=nums[i];
        k++;
        index[k]=nums[i];
        value[k]++;
    }
}
for(int m=0;m<=k;m++)
    printf(" %d %d ",index[m],value[m]);


for(int i=0;i<=k;i++)
{
    for(int j=0;j<=k;j++)
    {
        if(value[j]<value[j+1])
        {
            temp1=value[j];
            temp2=index[j];
            value[j]=value[j+1];
            index[j]=index[j+1];
            value[j+1]=temp1;
            index[j+1]=temp2;
        }
    }
}

for(int i=k;i>=0;i--)
{
    temp1=value[i];
    while(temp1)
    {
        arr[n]=index[i];
        n++;
        temp1--;
    }
    
}

*returnSize=numsSize;




return arr;