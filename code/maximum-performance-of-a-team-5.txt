class Solution {
public:
    #define ll long long
    #define MOD 1000000007
    int maxPerformance(int n, vector<int>& speed, vector<int>& efficiency, int k) {
        ll ans = 0;
        vector<pair<ll,ll>>store;
        for(ll i = 0; i < n; i++) store.push_back({efficiency[i], speed[i]}); 
        sort(store.rbegin(),store.rend());
        //store sum of k maximum speeds upto current index whose minimum efficiency is current element
        ll sum = 0;
        multiset<int>ms;
        for(ll i = 0; i < n; i++){
            //current element's efficiency
            ll mini_effi = store[i].first;
            sum = sum + store[i].second;
            ans = max(ans, sum*mini_effi);
            
            ms.insert(store[i].second);
            //finding sum of (k-1) maximum speed
            if(ms.size() > k-1){
                sum -= (*ms.begin());
                ms.erase(ms.begin());
            }
        }
        return (int)(ans%MOD);
    }
};