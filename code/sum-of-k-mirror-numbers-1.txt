class Solution 
{
    public:
    bool check(long long c,int k)
    {
        string s;
        while(c)
        {
            s+=(char)(c%k+'0'); // change to_string to this speed up more than 10 times
            c/=k;
        }
        // check if s is palindrome
        int p1=0,p2=(int)s.length()-1;
        while(p1<p2)
            if(s[p1++]!=s[p2--])
                return false;
        
        return true;
    }
    long long kMirror(int k, int n) 
    {
        long long result=0,c=0;
        for(int i=1;i<10;i++) // 1,2,......,9
        {
            if(check(i,k)) // if single digit in base 10 is also palindromes in base k
            {
                result+=i;
                if(--n==0) return result;
            }
        }
        while(n)
        {
            int start=pow(10,c),last=start*10;
            for(int i=start;i<last;i++) // 11,22,.........,99 / 1001,1111,......,9999
            {
                int p=i,t=0;
                while(p)
                {
                    t=t*10+p%10;
                    p/=10;
                }
                long long current=1ll*i*last;
                current+=t; // eg. i=123, then current=123321
                if(check(current,k))
                {
                    result+=current;
                    if(--n==0) return result;
                }
            }
            for(int i=start;i<last;i++) // 101,111,......191,202,212,......,989,999 / 10001,10101,......99999
            {
                int p=i,t=0;
                while(p)
                {
                    t=t*10+p%10;
                    p/=10;
                }
                long long r=1ll*i*10;
                for(int j=0;j<10;j++)
                {
                    long long current=(r+j)*last+t; // eg. i=123, j=4, then current=1234321
                    if(check(current,k))
                    {
                        result+=current;
                        if(--n==0) return result;
                    }
                }
            }
            c++;
        }
        return result;
    }
};