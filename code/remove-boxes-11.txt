class Solution {
public:
    int removeBoxes(vector<int>& bs) {
        int n = 0;
        for (q[0].first = bs[0]; auto b : bs) {
            if (q[n].first != b)
                q[++n].first = b; 
            q[n].second++;
        }
        function<int(int, int, int)> dfs = [&] (int l, int r, int k) {
            auto &ans = dp[l][r][k];
            if (l >= r || ans) return ans;
            int acc = k + q[l].second;
            ans = acc * acc + dfs(l + 1, r, 0);
            for (int i = l + 1; i < r; i++) {
                if (q[i].first != q[l].first) continue;
                ans = max(ans, dfs(l + 1, i, 0) + dfs(i, r, acc));
            }
            return ans;
        };
        return dfs(0, n + 1, 0);
    }
     
private:
    pair<int, int> q[101];
    int dp[101][101][101];
};