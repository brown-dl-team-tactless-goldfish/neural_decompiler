class Solution {
public:
    bool sumGame(string num) {
		// s1 is the sum of first half, c1 is the number of ?s of first half
		// s2 is the sum of second half, c2 is the number of ?s of second half
        int s1 = 0, s2 = 0, c1 = 0, c2 = 0;
        for (int i = 0; i < num.length() / 2; i++) {
            if (num[i] == '?') {
                c1++;
            } else {
                s1 += num[i] - '0';
            }
        }
        for (int i = num.length() / 2; i < num.length(); i++) {
            if (num[i] == '?') {
                c2++;
            } else {
                s2 += num[i] - '0';
            }
        }
        if (c1 + c2 == 0) {
			// if c1 == c2 == 0, no one plays
            return s1 != s2;
        }
        if ((c1 + c2) % 2 != 0) {
			// if Alice has one more play, she can always win
            return true;
        }
		// (c1 + c2) % 2 == 0, Alice and Bob has same number of plays
        if (c1 == c2) {
			// if c1 == c2 and s1 != s2, Alice can win by always putting 9 on the larger half
			// if c1 == c2 and s1 == s2, Bob can win by always putting the same number in another half
            return s1 != s2;
        }
        // c1 != c2
        if (s1 == s2) {
			// if c1 != c2 and s1 == s2, Alice can win by always putting 9 on the larger half
            return true;
        } else if (s1 < s2) {
            if (c1 < c2) {
				// if c1 < c2 and s1 < s2, Alice can win by always putting 9 on the larger half
                return true;
            } else {
                // c1 > c2
				// this is a little more complex.
				// if (c1 - c2) / 2 * 9 < s2 - s1, it means Bob can never add s1 to equal to s2, Alice wins
				// if (c1 - c2) / 2 * 9 > s2 - s1, it means Alice can add s1 to more than s2, Alice wins
				// if (c1 - c2) / 2 * 9 == s2 - s1, Bob can always compensate the actions of Alice and win
                return (c1 - c2) / 2 * 9 != s2 - s1;
            }
        } else {
            //s1 > s2
            if (c1 > c2) {
				// similar
                return true;
            } else {
                // c1 < c2
				// similar
                return (c2 - c1) / 2 * 9 != s1 - s2;
            }
        }
    }
};