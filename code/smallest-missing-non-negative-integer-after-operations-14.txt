// C++
class Solution {
public:
    int findSmallestInteger(vector<int>& nums, int value) {
        unordered_map<int, int> Map;
        for(int num: nums) Map[(num % value + value) % value]++;
        for(int i = 0; i < nums.size(); i++) {
            if(!Map[i % value]) return i;
            --Map[i % value];
        }
        return nums.size();
    }
};


// Golang
func findSmallestInteger(nums []int, value int) int {
    Map := make(map[int]int)
    for _, num := range nums {Map[(num % value + value) % value]++}
    for i := 0; i < len(nums); i++ {
        if Map[i % value] == 0 {return i}
        Map[i % value]--
    }
    return len(nums)
}