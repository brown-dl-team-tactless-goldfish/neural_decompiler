class Solution {
public:
    vector<int> xorQueries(vector<int>& arr, vector<vector<int>>& queries) {
        
        vector<int> ans;
        
        
        
        // Properties : 
        // a = b ^ c <=> b = a ^ c <=> c = a ^ b
        
        // note: xors is the array contaning prefix xor
        
        // xors[end] = xors[end -1] ^ arr[end];
        // xors[end] = xors[end -2] ^ arr[end -1] ^ arr[end];
        
        // xors[end] = xoros[start-1] ^ (arr[start] ^ arr[start+1] ... ^ arr[end])
        
        // (arr[start] ^ arr[start+1] ... ^ arr[end]) = xors[end] ^ xors[start-1]
        
        
        
        
        
        vector<int> xors;
        
        int x = 0;
        
        for(int i = 0; i < arr.size(); i++){
            x = x ^ arr[i];
            xors.push_back(x);
        }
        
        
        for(auto querie : queries){
            int start = querie[0];
            int end = querie[1];
            
            
            if(start)ans.push_back(xors[end]^xors[start-1]);
            else ans.push_back(xors[end]);
            
        }
        
        return ans;
        
        
    }
};