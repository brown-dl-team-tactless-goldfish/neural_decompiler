public class Solution {
    private Dictionary<int, int> dict = new Dictionary<int, int>();
    private int cnt = 0;
    
    public int[] FindFrequentTreeSum(TreeNode root) {
        if (root == null)
            return new int[] { };
        
        List<int> res = new List<int>();
        
        DFS(root);
        
        foreach (var item in dict.Keys)
            if (dict[item] == cnt)
                res.Add(item);
        
        return res.ToArray();
    }
    
    private int DFS(TreeNode node)
    {
        if (node == null)
            return 0;
        
        int cur = node.val + DFS(node.left) + DFS(node.right);
        
        if (!dict.ContainsKey(cur))
            dict.Add(cur, 0);
        
        dict[cur] += 1;
        
        cnt = Math.Max(dict[cur], cnt);
        
        return cur;
    }
}