class Solution {
public:
    int atMostNGivenDigitSet(vector<string>& digits, int n) {
        string nstr = to_string(n);
        int nlen = nstr.size(), res = 0, p = 1;
        set<char> digit_set;

        for (auto d : digits)
            digit_set.insert(d[0]);
        for (int i = 1; i < nlen; i++) {
            p *= digits.size();
            res += p;
        }
        
        
        for (int i = 0; i < nlen; i++) {
            auto it = digit_set.lower_bound(nstr[i]);
            int num_smaller = distance(digit_set.begin(), it);
            res += p * num_smaller;
            p /= digits.size();
            if (digit_set.find(nstr[i]) == digit_set.end())
                return res;
        }
        return res + 1;
    }
};