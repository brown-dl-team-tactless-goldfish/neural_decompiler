template<class T>
class segtree{
	public:
	vector<T> t;
	int n;
	segtree(int _n, T* a){
		n = _n;
		t = vector<T>(2*n, 0);
		for(int i=0;i< n;i++) t[n+i] = a[i];
		for (int i = n - 1; i > 0; --i) t[i] = t[i<<1] + t[i<<1|1];
	}
	T query(int l, int r){
		T res = 0;
		for(l+=n, r+=n; l < r; l>>=1, r>>=1){
			if(l&1) res = max(res, t[l++]);
			if(r&1) res = max(res, t[--r]);
		}
		return res;
	}
	void modify(int i, T v){
		for (t[i+=n] = v; i > 1; i>>=1) t[i>>1] = max(t[i],  t[i^1]);
	}
};

class Solution {
public:
    int lengthOfLIS(vector<int>& nums, int k) {
        int a[100001];
        for(int i = 0; i<100001; i++) a[i] = 0;
        segtree<int> st(100001, a);
        int re=  0;
        for(int i: nums){
            int g = st.query(max(0, i-k), i);
            st.modify(i, g+1);
            re = max(g+1, re);
        }
        return re;
    }
};