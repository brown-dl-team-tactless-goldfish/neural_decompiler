char * reorderSpaces(char * text){
    int len = strlen(text);
    int spaceCnt = 0, wordCnt = 0, charCnt= 0;
    for(int i = 0; i < len; i++){
        if(text[i]==' '){
            spaceCnt++;
            if(charCnt){
                wordCnt++;
                charCnt = 0;
            }
        }
        else
            charCnt++;
    }
    /* check the latest word without space */    
    if(charCnt)
        wordCnt++;
    /* calculate average spaces */
    if(wordCnt>1)
        spaceCnt = spaceCnt/(wordCnt - 1);

    char* ans = (char*)calloc(len+1, sizeof(char));
    int ansIdx = 0;
    charCnt = 0;
    while(charCnt < len)
    {
        if(text[charCnt] != ' ')
        {
            /* put word into answer buffer */
            while(charCnt < len && text[charCnt] != ' ')
                ans[ansIdx++] = text[charCnt++];
            /* text[charCnt] is space now */
            /* put extra space is needed */
            for(int i = 0; i < spaceCnt && ansIdx < len; i++)
                    ans[ansIdx++] = ' ';
        }
        charCnt++;
    }
    /* for extra space */
    while(ansIdx < len)
        ans[ansIdx++] = ' ';
    ans[ansIdx] = '\0';
    return ans;
}