vector<TreeNode*> res;

unordered_map<string,int> m;

string helper(TreeNode* root)
{
    if(!root)
    {
        return "";
    }
   
    string left = helper(root->left);
    
    string right = helper(root->right);
    
    string s = to_string(root->val)+"," + left +"," + right;
    
    m[s]++;
    
    if(m[s] == 2)
    {
        res.push_back(root);
    }
    
    return s;
}

vector<TreeNode*> findDuplicateSubtrees(TreeNode* root) {
    
    
    helper(root);
    
    return res;
    
}