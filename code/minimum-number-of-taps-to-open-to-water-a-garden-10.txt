class Solution {
public:
    int minTaps(int n, vector<int>& ranges) {
        vector<pair<int,int>> covers;
        for(int i=0; i<=n; i++)
        {
            covers.push_back({i - ranges[i], i + ranges[i]});
        }
        
        auto comp = [](const pair<int,int>& p1, const pair<int,int>& p2)
        {
            return p1.first < p2.first;
        };
        
        sort(covers.begin(), covers.end(), comp);
        
        int ans = 0, i = 0, e = 0, cur = 0;
        while(i <= n && e < n)
        {
            if(covers[i].first > e)
            {
                return -1;
            }
            
            cur = e;
            while(i<=n && covers[i].first <= e)
            {
                cur = max(cur, covers[i].second);                   
                i++;
            }
            
            e = cur;
            ans++;
        }
        
        return e >= n ? ans : -1;
    }
};