class FizzBuzz {
private:
    int n ;
    int cur ;
    mutex mtx ;

public:
    FizzBuzz(int n) {
        this->n = n;
        this->cur = 1 ;
    }

    // printFizz() outputs "fizz".
    void fizz(function<void()> printFizz) {
        while(cur <= n)
        {
            if((cur % 3 == 0) && (cur % 5 != 0) )
            {
                mtx.lock() ;
                printFizz();
                cur++ ;
                mtx.unlock() ;
            }        
        }
    }

    // printBuzz() outputs "buzz".
    void buzz(function<void()> printBuzz) {
        while(cur <= n)
        {
            if((cur % 5 == 0) && (cur % 3 != 0))
            {
                mtx.lock() ;
                printBuzz();
                cur++ ;
                mtx.unlock() ;
            }        
        }
    }

    // printFizzBuzz() outputs "fizzbuzz".
	void fizzbuzz(function<void()> printFizzBuzz) {
        while(cur <= n)
        {
            if((cur % 5 == 0) && (cur % 3 == 0))
            {
                mtx.lock() ;
                printFizzBuzz();
                cur++ ;
                mtx.unlock() ;
            }        
        }
    }

    // printNumber(x) outputs "x", where x is an integer.
    void number(function<void(int)> printNumber) {
        while(cur <= n)
        {
            if((cur % 5 > 0) && (cur % 3 > 0) )
            {
                mtx.lock() ;
                printNumber(cur);
                cur++ ;
                mtx.unlock() ;
            }        
        }
    }
};