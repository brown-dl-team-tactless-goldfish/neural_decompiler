    long long maxScore(vector<int> &nums1, vector<int> &nums2, int k)
{
    int n1=nums1.size();
    int n2=nums2.size();
    long long int ans=0;

    pair<int,int> arr1[nums1.size()];
    for(int i=0;i<n1;i++)
    {
        arr1[i]={nums1[i],i};
    }
    sort(arr1,arr1+n1);

    priority_queue <pair<int,int> , vector<pair<int,int> >, greater<pair<int,int> > > pq;

    // unordered_map<int,int> mp;
    long long int sum=0;
    int i=n1-1;
    for(;i>n1-1-k;i--)
    {
        pq.push({nums2[arr1[i].second],arr1[i].second});
        sum+=arr1[i].first;
    }
    ans=max(ans,sum*(pq.top().first));

    for(;i>=0;i--)
    {
        int index=pq.top().second;
        sum-=nums1[index];
        pq.pop();

        pq.push({nums2[arr1[i].second],arr1[i].second});
        sum+=arr1[i].first;

        ans=max(ans,sum*(pq.top().first));
    }
    return ans;
}