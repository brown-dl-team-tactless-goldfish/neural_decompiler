#include <semaphore.h>

class DiningPhilosophers 
{
public:
    DiningPhilosophers() 
    {
        for(int i = 0; i < 5; i++)
        {
            sem_t sem;
            sem_init(&sem, 0, 1);
            forks.push_back(sem);
        }
    }
    
    ~DiningPhilosophers()
    {
		//destroy semaphores
        for(int i = 0; i < 5; i++)
        {
            sem_destroy(&forks[i]);
        }
    }
    
    void wantsToEat(int philosopher, function<void()> pickLeftFork, function<void()> pickRightFork, function<void()> eat, function<void()> putLeftFork, function<void()> putRightFork) 
    {
            //wait for right fork
            sem_wait(&forks[philosopher]);
            //wait for left fork
            sem_wait(&forks[(philosopher + 1) % 5]);
        
            pickLeftFork();
            pickRightFork();
            eat();
            putLeftFork(); 
            putRightFork();
        
            sem_post(&forks[philosopher]);
            sem_post(&forks[(philosopher + 1) % 5]);
		
    }
private:
    vector<sem_t> forks;
};