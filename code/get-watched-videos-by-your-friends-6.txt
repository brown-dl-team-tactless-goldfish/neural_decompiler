class Solution {
public:
    static bool cmp(pair<string,int> a,pair<string,int> b)
    {
        if(a.second==b.second)
            return a.first<b.first;
        return a.second<b.second;
    }
    vector<string> watchedVideosByFriends(vector<vector<string>>& wv, vector<vector<int>>& fr, int id, int lev) {
        vector<string> ans;
        queue<int> q;
        unordered_map<int,int> mp;
        mp[id]=1;
        q.push(id);
        
        while(lev--)
        {
           int sz=q.size();
            while(sz--)
            {
                int d=q.front();
                q.pop();
                vector<int> v=fr[d];
                for(auto n:v)
                {
                    if(!mp.count(n))
                    {
                        mp[n]=1;
                        q.push(n);
                    }
                }
                
            }
        }
        
        unordered_map<string,int> m1;
        while(!q.empty())
        {
            vector<string> vs=wv[q.front()];
            q.pop();
            for(auto s:vs)
                m1[s]++;
        }
        vector<pair<string,int>> vp;
        for(auto it:m1)
            vp.push_back({it.first,it.second});
        sort(vp.begin(),vp.end(),cmp);
        for(auto pp:vp)
            ans.push_back(pp.first);
        return ans;
    }
    
};