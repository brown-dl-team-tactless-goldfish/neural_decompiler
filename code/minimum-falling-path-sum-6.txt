int min(int a , int b){
    return a < b ? a : b;
}

int minFallingPathSum(int** A, int ASize, int* AColSize){
    
    int ** dp = (int**) malloc(sizeof(int*)*ASize);
    
    for(int i = 0 ; i < ASize; i++){
        int * tmp = (int* )malloc(sizeof(int)*AColSize[i]);
        memset(tmp, 0 , AColSize[i]);
        dp[i] = tmp;
    }
    
    for(int i = 0 ,len =  AColSize[0] ; i < len ; i++){
        dp[0][i] = A[0][i];
    }
    
    for(int i = 1 ; i < ASize ; i++){
        for(int j = 0 , len = AColSize[i] ; j < len ; j++){
            if(j == 0){
                dp[i][j] = A[i][j] + min(dp[i-1][j],dp[i-1][j+1]);
            }else if(j == len -1){
                dp[i][j] = A[i][j] + min(dp[i-1][j],dp[i-1][j-1]);
            }else{
                dp[i][j] = A[i][j] + min(dp[i-1][j-1], min(dp[i-1][j],dp[i-1][j+1]));
            }
        }
    }
    
    int m = INT_MAX;
    for(int i = 0 , len = AColSize[ASize-1];  i < len ; i++){
        m = min(m, dp[ASize-1][i]);
    }
    return m;
}
