double minAreaFreeRect(vector<vector<int>>& points) {
        unordered_map<string,vector<vector<int>>> dic;
        long size = LONG_MAX;
        for(int i = 0; i < points.size() - 1; ++i)
        {
            long x1 = points[i][0], y1 = points[i][1];
            for (int j = i + 1; j < points.size(); ++j)
            {
                long x2 = points[j][0], y2 = points[j][1];
                long x = x1 - x2;
                long y = y1 - y2;
                if (x < 0) x = -x, y = -y;
                string p = to_string(x) + ',' + to_string(y);
                if (dic.count(p) == 1)
                {
                    for (auto v : dic[p])
                    {
                        if (((v[0] - x1) * x + (v[1] - y1) * y == 0) && ((v[2] - x2) * x + (v[3] - y2) * y == 0)) 
                            size = min(size, (x*x + y*y) * ((v[0] - x1) * (v[0] - x1) +  (v[1] - y1) *  (v[1] - y1)));
                        else if (((v[0] - x2) * x + (v[1] - y2) * y == 0) && ((v[2] - x1) * x + (v[3] - y1) * y == 0))
                            size = min(size, (x*x + y*y) * ((v[0] - x2) * (v[0] - x2) + (v[1] - y2) *  (v[1] - y2)));
                    }
                }
                dic[p].push_back({x1, y1, x2, y2});
            }
        }
        if (size == LONG_MAX) return 0;
        return sqrt(size);
        
    }