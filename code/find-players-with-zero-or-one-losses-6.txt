/**
 * Return an array of arrays of size *returnSize.
 * The sizes of the arrays are returned as *returnColumnSizes array.
 * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().
 */
int** findWinners(int** matches, int matchesSize, int* matchesColSize, int* returnSize, int** returnColumnSizes){
    /*Declare and initialise return variables*/
    int** ans = (int**)malloc(2 * sizeof(int*));
    *returnSize = 2;
    *returnColumnSizes = (int*)malloc(2 * sizeof(int));
    ans[0] = (int*)malloc(matchesSize * sizeof(int));
    ans[1] = (int*)malloc(matchesSize * sizeof(int));
    (*returnColumnSizes)[0] = 0;
    (*returnColumnSizes)[1] = 0;

    int player[100001] = {0};
    int loser[100001]  = {0};
    for(int i = 0; i < matchesSize; ++i) {
        player[matches[i][0]]++;         //Increment every winner in player array
        player[matches[i][1]]++;         //Increment every loser also in player array
        loser[matches[i][1]]++;          //Increment every loser in loser array
    }
    
    for(int i = 0; i < 100001; i++)   {
        if(player[i] && (loser[i] == 0)){   //If a player is never a loser
            ans[0][(*returnColumnSizes)[0]++] = i;
        }
        if(player[i] && (loser[i] == 1)){   //If a player hast lost exactly once.
            ans[1][(*returnColumnSizes)[1]++] = i;
        }
    }
    
    return ans;    
}