public class Solution {
    private int res = 0;
    
    public int CountPairs(TreeNode root, int distance) {
        if (root == null)
            return res;
        
        DFS(root, distance);
        
        return res;
    }
    
    private List<int> DFS(TreeNode node, int distance)
    {
        if (node.left == null && node.right == null)
            return new List<int>() { 1 };
        
        List<int> l = node.left == null ? null : DFS(node.left, distance),
                  r = node.right == null ? null : DFS(node.right, distance),
                  cur = new List<int>();
        
        if (l != null && r != null)
            foreach (var itemL in l)
                foreach (var itemR in r)
                    if (itemL + itemR <= distance)
                        res++;
        
        if (l != null)
            foreach (var item in l)
                cur.Add(item + 1);
        
        if (r != null)
            foreach (var item in r)
                cur.Add(item + 1);
        
        return cur;
    }
}