
void cleanSpaces(char *s) {
    int new = 0;
    int old = 0;
    while(s[old] != '\0') {
        while(s[old] != '\0' && s[old] == ' ') {
            old++;
        }
        if(s[old] != '\0' && new > 0) {
            s[new++] = ' ';
        }
        while(s[old] != '\0' && s[old] != ' ') {
            s[new++] = s[old++];
        }
    }
    s[new++] = '\0';
}

void reverseWord(char *s, int i, int j) {
    while(i<j) {
        char temp = s[j];
        s[j--] = s[i];
        s[i++] = temp;
    }
}

void flip(char *s) {
    int i = 0;
    while(s[i] != '\0') {
        i++;
    }
    reverseWord(s, 0, i-1);
}

void reverseEachWords(char *s) {
    int begin = 0;
    int end = 0;
    while(s[begin]!='\0') {
        while(s[begin] != '\0' && s[begin] == ' ') {
            begin += 1;
        }
        while(s[end] != '\0' && s[end] != ' ') {
            end += 1;
        }
        reverseWord(s, begin, end-1);
        begin = end;
        end += 1;
    }
}

void reverseWords(char *s) {
    cleanSpaces(s);
    reverseEachWords(s);
    flip(s);
}