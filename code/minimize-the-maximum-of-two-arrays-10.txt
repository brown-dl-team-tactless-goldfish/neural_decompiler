class Solution {
private:

int gcd(int a, int b) {
    if (!b) return a;
    return gcd(b, a % b);
}
int lcm(long long a, long long b) {
    long long temp = (a / gcd(a, b)) * b;
    return temp > INT_MAX ? INT_MAX : temp;
}

public:
    int minimizeSet(int div1, int div2, int cnt1, int cnt2) {
        int Lcm=lcm(div1,div2);
        int ans=-1;
        int low=1,high=INT_MAX;
        while(low<=high){
            int mid=low+(high-low)/2;
            int divBy1=mid/div1, divBy2=mid/div2;
            if(cnt1+cnt2<=mid-mid/Lcm && cnt1<=mid-divBy1 && cnt2<=mid-divBy2){
                ans=mid;
                high=mid-1;
            }
            else{
                low=mid+1;
            }
        }
        return ans;
    }
};
//code by sachin