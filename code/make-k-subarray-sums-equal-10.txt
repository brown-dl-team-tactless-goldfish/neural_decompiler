class Solution {
public:
    long long med(vector<int> brr,int k){
        long long count = 0;
        long long x = brr.size()/2;
        for(int i=0;i<brr.size();i++){
            count += abs(brr[i]-brr[x]);
        }
        return count;
    }
    long long makeSubKSumEqual(vector<int>& arr, int k) {
        vector<long long> v(arr.size(),1);
        long long ans = 0;
        for(int i=0;i<arr.size();i++){
            vector<int> temp;
            if(v[i]==0) continue;
            long long j = i;
            while(true){
                if(v[j%arr.size()]==0) break;
                temp.push_back(arr[j%arr.size()]);
                v[j%arr.size()] = 0;
                j+=k;
            }
            if((int) temp.size()){
                sort(temp.begin(),temp.end());
                ans += med(temp,k);
            }
            temp.clear();
        }
        return ans;
    }// 3 8 10 
};