class Solution {
public:
    vector<int> exclusiveTime(int n, vector<string>& logs) {
        vector<int> res(n, 0);
        stack<pair<int, int>> st;
        int interval = 0;
        for(auto &l: logs) {
            vector<string> log;
            int last = 0;
            for(int i = 0; i < 2; i++) {
                auto pos = l.find_first_of(":", last);
                log.push_back(l.substr(last, pos-last));
                last = pos+1;
            }
            log.push_back(l.substr(last));
            int id = stoi(log[0]);
            int ts = stoi(log[2]);
            if(log[1] == "start") {
                if(interval > 0) {
                    st.push({-1, interval});
                    interval = 0;
                }
                st.push({id, ts});
            }
            else {
                int beginID = st.top().first;
                int beginTS = st.top().second;
                while(st.top().first == -1) {
                    beginTS = st.top().second;
                    interval += beginTS;
                    st.pop(); 
                }
                beginTS = st.top().second;                  
                res[id] += ts - (beginTS + interval) + 1;
                st.pop();
                if(st.empty()) interval = 0;
                else interval = ts - beginTS +1;
            }
        }
        return res;
    }
};