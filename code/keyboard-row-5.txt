class Solution {
public:
    unordered_map<char, bool>first, second, third;
    vector<string>ans;
    bool check(string s, int type){
        transform(s.begin(), s.end(), s.begin(), ::tolower);
        if(type == 0){
            bool ok = true;
            for(char c:s){
                if(first[c]!=true){
                    ok = false;
                    break;
                }
            }
            if(!ok)return false;
            return true;
        }
        if(type == 1){
            bool ok = true;
            for(char c:s){
                if(second[c]!=true){
                    ok = false;
                    break;
                }
            }
            if(!ok)return false;
            return true;
        }
        if(type == 2){
            bool ok = true;
            for(char c:s){
                if(third[c]!=true){
                    ok = false;
                    break;
                }
            }
            if(!ok)return false;
            return true;
        }
        return false;
    }
    
    vector<string> findWords(vector<string>& words) {
        string f = "qwertyuiop", s = "asdfghjkl", t = "zxcvbnm";
        for(char c:f){
            first[c] = true;
        }
        for(char c:s){
            second[c] = true;
        }
        for(char c:t){
            third[c] = true;
        }
        
        
        for(auto&it: words){
            if(check(it, 0) || check(it, 1) || check(it, 2)){
                ans.push_back(it);
            }
        }
        return ans;
        
    }
};