int cmp(const void *a, const void *b) {
    int *a1 = (int *)a;
    int *b1 = (int *)b;
    
    return *a1 - *b1;
}

int minCost(char * colors, int* neededTime, int neededTimeSize){
    int dp[neededTimeSize];
    memset(dp, 0, sizeof(dp));
    int ans = 0;
    
    for (int i=0; i<neededTimeSize; i++) {
        int l = i, r = l + 1;
        while (r <neededTimeSize && colors[l] == colors[r]) {
            r++;
        }
        if (r - l == 1) {
            continue;
        }
        
        for (int j=l; j<r; j++) {
            dp[j-l] = neededTime[j];
        }
        qsort(dp, r-l, sizeof(dp[0]), cmp);
        for (int j=0; j<r-l-1; j++) {
            ans += dp[j];
        }
        i = r - 1;
    }
    
    return ans;
}