int x_offset[4] = {1, 0, -1, 0};
int y_offset[4] = {0, -1, 0, 1};

void numIslands_r(char** grid, int gridSize, int* gridColSize, int x, int y) {
    int i, xx, yy;
    
    if (grid[x][y] != '1')
        return;
    
    grid[x][y] = 'x';
    
    for (i = 0; i < 4; i++) {
        xx = x + x_offset[i];
        yy = y + y_offset[i];
        if (xx >= 0 && xx < gridSize && yy >= 0 && yy < gridColSize[xx]) {
            if (grid[x][y] != '0')
                numIslands_r(grid, gridSize, gridColSize, xx, yy);
        }
    }
    return;
}

int numIslands(char** grid, int gridSize, int* gridColSize){
    int i, j, c;
    char ch;
    
    for (i = c = 0; i < gridSize; i++) {
        for (j = 0; j < gridColSize[i]; j++) {
            if (grid[i][j] == '1') {
                c++;
                numIslands_r(grid, gridSize, gridColSize, i, j);
            }
        }
    }
    
    return c;
}