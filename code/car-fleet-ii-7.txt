class Solution {
public:
    vector<double> getCollisionTimes(vector<vector<int>>& cars) {
        int n = cars.size();
        vector<double> ret(n, -1);
        stack<int> st;
        
        for (int i = n- 1; i >= 0; i--) {
            while (!st.empty() && cars[i][1] <= cars[st.top()][1]) 
                st.pop();
            
            while (!st.empty()) {
                int catch_up = st.top();
                double time = (double) (cars[catch_up][0] - cars[i][0]) / (cars[i][1] - cars[catch_up][1]);
                if (time <= ret[catch_up] || ret[catch_up] < 0) {
                    ret[i] = time;
                    break;
                }
                st.pop();
            }
            
            st.push(i);
        }
        
        return ret;
    }
};