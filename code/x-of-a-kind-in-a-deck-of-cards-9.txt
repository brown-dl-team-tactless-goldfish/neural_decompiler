public class Solution {
    public bool HasGroupsSizeX(int[] deck) {
        if(deck.Length<2){
            return false;
        }       
        var d=new Dictionary<int,int>();
        for(int i=0;i<deck.Length;i++){
            if(d.ContainsKey(deck[i])){
                d[deck[i]]++;
            }
            else{
                d.Add(deck[i],1);
            }          
        }       
        if(d.Count==1){
            return true;
        }
        if(d.Count==deck.Length)
        {
            return false;
        }
        var divideByThree=true;
        var divideByFive=true;
        var divideBySeven =true;
         bool isEven =true;
        foreach(var kv in d){
            if(kv.Value%3!=0){
               divideByThree=false;
            }
            if(kv.Value%5!=0){
               divideByFive=false;
            }
            if(kv.Value%7!=0){
               divideBySeven=false;
            }
             if(kv.Value%2!=0){
                isEven =false;
            }
        }
        if(isEven){
            return true;
        }        
       return divideByThree||divideByFive||divideBySeven;
    }
}