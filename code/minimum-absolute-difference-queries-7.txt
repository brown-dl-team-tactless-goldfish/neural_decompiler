class Solution {
public:
    vector<int> minDifference(vector<int>& nums, vector<vector<int>>& queries) {
        vector<int> indices[101] ; 
        vector<int> ans ;
		
        //store indices of every number in nums array
        for(int i = 0 ; i < nums.size() ; ++i) indices[nums[i]].push_back(i) ;
		
		//for each query 
        for(int i = 0 ; i < queries.size() ; ++i ){
			int lo = queries[i][0] ;
            int hi = queries[i][1] ;
            
            int prev = 0 , tempAns = INT_MAX ;
			//go through every possible number there can be and checking if that number lies in the ith query 
            for(int j = 1 ; j <= 100 ; j++ ){
                int idx = lower_bound(begin(indices[j]),end(indices[j]),lo) - begin(indices[j]) ;
				
				//if the found number lies inside the query range then update tempAns
                if(idx < indices[j].size() and indices[j][idx] <= hi ){
                    if(!prev){
                        prev = j ;
                        continue ;
                    }
                    tempAns = min(tempAns,j-prev) ;
					if(tempAns == 1) break ;
                    prev = j ; 
                }
            }

            ans.push_back((tempAns==INT_MAX ? -1 : tempAns)) ;
        }
        
        return ans ;
    }
};