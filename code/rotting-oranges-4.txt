
int infectable(int i, int j, int rows, int cols, int** grid){
    if (i > 0 && grid[i-1][j] == 2) return 1;
    if (j > 0 && grid[i][j-1] == 2) return 1;
    if (i < rows-1 && grid[i+1][j] == 2) return 1;
    if (j < cols-1 && grid [i][j+1] == 2) return 1;
    return 0;
}

int orangesRotting(int** grid, int gridSize, int* gridColSize){
    int matrix_changed;
    int rounds = 0;
    int has_ones;
    do {
        matrix_changed = 0;
        has_ones = 0;
        for (int i = 0; i < gridSize; i++)
            for (int j = 0; j < gridColSize[i]; j++)
                if (grid[i][j] == 1)
                    if (infectable(i, j, gridSize, gridColSize[i], grid)){
                        grid[i][j] = -1;
                        matrix_changed = 1;
                    } else {
                        has_ones = 1;
                    }
        
        if (matrix_changed){
            rounds++;
            for (int i = 0; i < gridSize; i++)
                for (int j = 0; j < gridColSize[i]; j++)
                    if (grid[i][j] == -1) grid[i][j] = 2;
        }
        
    } while (matrix_changed);
    
    return (has_ones)? -1 : rounds;
}