class Encrypter {
public:
    Encrypter(vector<char>& keys, vector<string>& values, vector<string>& dictionary) {
        int n = keys.size();
        for (int i = 0; i < n; i++) {
            mp[keys[i]] = values[i];
            rev[values[i]] = keys[i];
        }
        for (auto& dict : dictionary) {
            string res = "";
            for (auto& c : dict) res += mp[c];
            all[res]++;
        }
    }
    
    string encrypt(string word1) {
        string res = "";
        for (auto& c : word1) res += mp[c];
        return res;
    }
    
    int decrypt(string word2) {
        return all[word2];
    }
private:
    unordered_map<char, string> mp;
    unordered_map<string, char> rev;
    unordered_map<string, int> all;
};