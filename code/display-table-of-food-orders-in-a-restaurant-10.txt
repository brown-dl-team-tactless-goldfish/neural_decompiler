class Solution {
public:
    vector<vector<string>> displayTable(const vector<vector<string>>& orders) {
        
        map<int, unordered_map<string,int>> tables;
        set<string> foods;
        
        for(const auto& i:orders) {
            ++tables[stoi(i[1])][i[2]];
            foods.insert(i[2]);
        }
        
        vector<vector<string>> res(tables.size()+1,vector<string>());
        
        int pos=0;
        res[pos].push_back("Table");
        for(const auto& food:foods)
            res[pos].push_back(food);
        
        for(const auto& tab:tables) {
            res[++pos].push_back(to_string(tab.first));
            for(const auto& food:foods) {
                if(tab.second.count(food)) res[pos].push_back(to_string(tab.second.at(food)));
                else res[pos].push_back("0");
            }
        }
        return res;
    }
};