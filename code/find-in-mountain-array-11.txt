class Solution {
public:
    int findInMountainArray(int target, MountainArray &mountainArr) {
        int n = mountainArr.length();
        int l = 0, r = n - 1, mid;
        while(l < r){
            mid = l + (r - l)/2;
            if(mountainArr.get(mid) < mountainArr.get(mid + 1)){
                l = mid + 1;
            }
            else r = mid;
        }
        int peak = l;
        //Find in the left part
        l = 0, r = peak;
        while(l <= r){
            mid = l + (r - l)/2;
            if(mountainArr.get(mid) > target) r = mid - 1;
            else if(mountainArr.get(mid) < target) l = mid + 1;
            else return mid;
        }
        
        //Find in the right part
        l = peak, r = n - 1;
        while(l <= r){
            mid = l + (r - l)/2;
            if(mountainArr.get(mid) > target) l = mid + 1;
            else if(mountainArr.get(mid) < target) r = mid - 1;
            else return mid;
        }
        return -1;
    }
};