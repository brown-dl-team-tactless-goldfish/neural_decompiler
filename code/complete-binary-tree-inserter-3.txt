public class CBTInserter {

    private List<TreeNode> nodes = new List<TreeNode>();
    
    public CBTInserter(TreeNode root) {        
        Queue<TreeNode> pending = new Queue<TreeNode>();
        pending.Enqueue(root);
        
        while (pending.Count != 0){
            var c = pending.Dequeue();
            nodes.Add(c);

            if (c.left != null){
                pending.Enqueue(c.left);

                if (c.right != null){
                    pending.Enqueue(c.right);
                }
            }
        }
    }
    
    public int Insert(int v) {
        TreeNode node = new TreeNode(v);
        int parentIndex = (this.nodes.Count - 1) / 2;     
        this.nodes.Add(node);
        
        var parent = this.nodes[parentIndex];
        if (parent.left == null){
            parent.left = node;
        }
        else{
            parent.right = node;
        }
        
        return parent.val;
    }
    
    public TreeNode Get_root() {
        return nodes[0];
    }
}