/*
 * Count '\t' to identify the depth
 */
int finddirlevel(char *d) {
    int i = 0;
    while (d[i] && d[i] == '\t')
        i += 1;
    return i;
}

/*
 * Count length of the entry
 */
int findentrylen(char *d, bool *isfile) {
    int i = 0;
    while (d[i] && d[i] != '\n') {
        if (d[i] == '.') *isfile = true;
        i++;
    }
    return i;
}

int pathfinder(char *in, int l, int *mlen, int clen) {
    int sz = 0, tclen, dl, dlen;
    bool isfile;

    while (in[sz]) {
        /* Find the directory level. */
        tclen = clen;
        
        /* Skip \n */
        if (in[sz] && in[sz] == '\n') ++sz;
        
        /* Current level. */
        dl = finddirlevel(&in[sz]);
        if (dl != l) break;
        sz += dl;
        
        /* Find current dir entry length. */        
        isfile = false;
        dlen = findentrylen(&in[sz], &isfile);        

        /* Update the length. "/" is not counted for files in root. */        
        tclen += dlen + (dl > 0 ? 1 : 0);
        /* Track path length only if it's a file. */
        if (isfile && tclen > *mlen)
            *mlen = tclen;
        
        /* Recursively explore. */
        sz += dlen;
        sz += pathfinder(&in[sz], l + 1, mlen, tclen);        
    }
    return sz;
}

int lengthLongestPath(char * in){
    int mlen = 0;    
    pathfinder(&in[0], 0, &mlen, 0);
    return mlen;
}