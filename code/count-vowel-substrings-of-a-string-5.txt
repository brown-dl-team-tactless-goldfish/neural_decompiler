#define isVowel(x) (x == 'a' || x == 'e' || x == 'i' || x == 'o' || x == 'u')
#define isVowelSubstring() (arr['a'-'a'] && arr['e'-'a'] && arr['i'-'a'] && arr['o'-'a'] && arr['u'-'a'])
#define clear(arr) {arr['a'-'a']=0;arr['e'-'a']=0;arr['i'-'a']=0;arr['o'-'a']=0;arr['u'-'a']=0;}
int countVowelSubstrings(char * word){
    uint8_t arr[26] = {0};
    uint8_t right[100] = {0};
    int sum = 0;
    uint8_t left = 0;
    uint8_t idx = 0;
    uint8_t right_size = 0;
    while(word[idx] != '\0'){
        if(!isVowel(word[idx])){
            for(uint8_t i = 0; i < right_size; i++){
                sum += idx - right[i];
                right[i] = 0;
            }
            clear(arr);
            right_size = 0;
            idx++;
            left=idx;
            continue;
        }
        arr[word[idx]-'a']++;
        while(isVowelSubstring()) {
            right[right_size++] = idx;
            arr[word[left++]-'a']--;
        }
        idx++;
    }
    for(uint8_t i = 0; i < right_size; i++){
        sum += idx - right[i];
        right[i] = 0;
    }
    return sum;
}