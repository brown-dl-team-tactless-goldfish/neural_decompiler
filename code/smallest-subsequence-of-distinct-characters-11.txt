class Solution {
public:
    string smallestSubsequence(const string& s) {
        std::vector<int> f(26, 0);
        for(const auto &c: s)  ++f[c-'a'];
        std::bitset<26> included;
        string res{""};
        for(const auto& c: s) {
            --f[c-'a'];
            if(included[c-'a']) continue;
            included[c-'a'] = 1;
            while(!res.empty() && c < res.back() && f[res.back()-'a']) included[res.back()-'a'] = 0, res.pop_back();
            res += c;
        }
        
        return res;
    }
};