class ThroneInheritance {
    unordered_set<string> dead;
    unordered_map<string, vector<string>> children;
    string king;
public:
    ThroneInheritance(string kingName) {
        king = kingName;
    }
    
    void birth(string parentName, string childName) {
        children[parentName].push_back(childName); 
    }
    
    void death(string name) {
       dead.insert(name);
    }
    
    void dfs(string& s, vector<string>& v) {
        if(dead.find(s) == dead.end()) v.push_back(s);
        for(auto c : children[s]) dfs(c, v);
    }
    
    vector<string> getInheritanceOrder() {
       vector<string> v; 
       dfs(king, v);
       return v;
    }
};