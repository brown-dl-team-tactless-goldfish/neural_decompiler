char * frequencySort(char * s){
    int counts[128] = {0};
    int ch[62];
    char *result = (char *)malloc(strlen(s) + 1);
    char *temp;
    //add ASCII of English letters and digits into ch
    for(int i = 0;i < 10;i++)
        ch[i] = i + 48;
    for(int i = 10;i < 36;i++)
        ch[i] = i + 55;
    for(int i = 36;i < 62;i++)
        ch[i] = i + 61;
    //record the times of appearance of characters
    for(char *str = s;*str;str++)
        counts[*str]++;
    /**
    Bubble sort: character appears more times would be in the front
    No need to use quick sort or merge sort because of O(61*61/2) = O(1)
    **/
    for(int i = 0;i < 61;i++){
        for(int j = 61, temp;j > i;j--){
            if(counts[ch[j]] > counts[ch[j-1]]){
                temp = ch[j];
                ch[j] = ch[j-1];
                ch[j-1] = temp;
            }
        }
    }
    temp = result;
    //make the new string after frequencySorted
    for(int i = 0;i < 62;i++){
        for(int j = 0;j < counts[ch[i]];j++){
            *temp = ch[i];
            temp++;
        }
    }
    //add '\0' at the tail of the string
    *temp = 0;
    return result;
}