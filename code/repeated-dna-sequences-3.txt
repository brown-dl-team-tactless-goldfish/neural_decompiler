//c code
#define D(x) ((x)=='A'?0:((x)=='C'?1:((x)=='G'?2:3)))
#define STEP 3
struct StringArray* findRepeatedDnaSequences(char* s) {
    struct StringArray* result = (struct StringArray*)malloc(sizeof(struct StringArray));
    result->size = 0;
    int caption = STEP;
    result->elements = (char**)malloc(caption*sizeof(char*));
    uint64_t* pos = (uint64_t*)malloc(0x20000);
    memset(pos, 0, 0x20000);
    uint64_t* occupy = (uint64_t*)malloc(0x20000);
    memset(occupy, 0, 0x20000);
    unsigned int seq = 0;
    int i = 0;
    for(;i<9;i++) {
        seq <<= 2;
        seq |= D(s[i]);
    }
    for(;s[i];i++) {
        seq <<= 2;
        seq |= D(s[i]);
        seq &= 0xFFFFF;
        if (pos[seq/64]&(1ull<<(seq%64))) {
            if (!(occupy[seq/64]&(1ull<<(seq%64)))) {
                // set
                result->size++;
                if (result->size > caption) {
                    caption += STEP;
                    realloc(result->elements, caption);
                }
                result->elements[result->size-1] = (char*)malloc(11);
                memcpy(result->elements[result->size-1], s+i-9, 10);
                result->elements[result->size-1][10] = 0;
                occupy[seq/64]|=(1ull<<(seq%64));
            }
        } else {
            pos[seq/64]|=(1ull<<(seq%64));
        }
    }
    return result;
}