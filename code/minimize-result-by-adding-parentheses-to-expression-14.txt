class Solution {
public:
    
    int get_val(int &index, string &s) {
        int val = 0;
        
        while (index < s.size() && s[index] >= '0' && s[index] <= '9') {
            val = val * 10 + (s[index] - '0');
            index++;
        }
        
        index++;
        
        return val;
    }
    
    int evaluate(string s) {
        
        int index = 0;
        
        int a = get_val(index, s);
        
        int b = get_val(index, s);
        
        int c = get_val(index, s);
        
        int d = get_val(index, s);
        
        if (a == 0) {
            a = 1;
        }
        
        if (d == 0) {
            d = 1;
        }
        
        return a * (b + c) * d;
    }
    
    
    string minimizeResult(string s) {
        string ans = "(" + s + ")";
        int min_val = evaluate(ans);
        
        int plus_index = s.find("+");
        
        int size = s.size();
        
        for (int i = 0; i < plus_index; i++) {
            for (int j = plus_index + 1; j < size; j++) {
                string temp = s.substr(0, i) + "(" + s.substr(i, (j - i + 1)) + ")" + s.substr(j + 1);
                int val = evaluate(temp);

                if (val < min_val) {
                    min_val = val;
                    ans = temp;
                }
            }
        }
        
        return ans;
    }
};