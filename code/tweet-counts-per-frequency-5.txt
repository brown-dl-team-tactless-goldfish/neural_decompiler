class TweetCounts {
public:
    TweetCounts() {}
    
    void recordTweet(string tweetName, int time) {
        m[tweetName].insert(time);
    }
    
    vector<int> getTweetCountsPerFrequency(string freq, string tweetName, int startTime, int endTime) {
        const int d = deltas.at(freq), n = 1 + (endTime - startTime) / d;
        vector<int> res(n);
        for(int t : m[tweetName])
            if(t >= startTime && t <= endTime) res[(t-startTime)/d]++;
        return res;
    }
    
    unordered_map<string, set<int>> m;
    const map<string, int> deltas = {{"minute", 60}, {"hour", 3600}, {"day", 3600*24}};
};