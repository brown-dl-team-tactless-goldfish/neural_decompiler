typedef struct _data{
    unsigned int val ;
    int r_type ;    //type 0 : >= 0  ; type 1 : < 0
    int c_type ;
}data;

bool isPathCrossing(char * path){
    int n = strlen(path) ;
    int N = 5 * n ;
    data **hash = calloc(N, sizeof(data*) ) ;
    hash[0] = malloc(sizeof(data) ) ;
    hash[0]->val = 0 ;
    hash[0]->r_type = 1 ; 
    hash[0]->c_type = 1 ; 
    int r = 0, c = 0 ;
    bool ans = false ;
    for(int i = 0 ; i < n; i++){
        if(ans == true) 
            break ;
        if(path[i] == 'N')
            r += 1 ;
        else if(path[i] == 'S')
            r -= 1 ;
        else if(path[i] == 'W')
            c -= 1 ;
        else
            c += 1 ;
        unsigned int val = abs(r) * 10000 + abs(c) ;
        unsigned int d = val ;
        while(1){
            if(hash[d % N] == NULL){
                hash[d % N] = malloc(sizeof(data) ) ;
                hash[d % N]->val = val ;
                hash[d % N]->r_type = (r >= 0) ; 
                hash[d % N]->c_type = (c >= 0) ; 
                break ;
            }
            else if( hash[d % N]->val == val && hash[d % N]->r_type == (r >= 0) && hash[d % N]->c_type == (c >= 0) ){
                ans = true ;
                break ;
            }
            else 
                d++ ;
        }
    }
    for(int i = 0 ; i < N; i++){
        if(hash[i])
            free(hash[i]) ;
    }
    free(hash) ;
    return ans ;
}