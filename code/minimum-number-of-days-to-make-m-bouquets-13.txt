public class Solution 
{
    public int MinDays(int[] bloomDay, int m, int k) 
    {
        int start = 0, end = int.MaxValue;
        while(start < end)
        {
            int mid = start + (end - start) / 2;
            if(!IsPossible(bloomDay, m, k, mid))
                start = mid + 1;
            else
                end = mid;
        }
        
        return IsPossible(bloomDay, m, k, start) ? start : -1;
    }
    
    private bool IsPossible(int[] bloomDay, int m, int k, int day)
    {
        int count = 0, i = 0;
        while(i <= bloomDay.Length - k)
        {
            if(bloomDay[i] <= day)
            {
                int j = i;
                for(j = i; j < i + k; j++)
                    if(bloomDay[j] > day)
                        break;
                if(j == i + k)
                    count++;
                i = j;
            }
            else
                i++;
        }
        
        return count >= m;
    }
}