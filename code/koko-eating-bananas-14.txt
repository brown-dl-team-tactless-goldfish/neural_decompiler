int getTime(int *piles, int pilesSize, int speed) {
    int i;
    int sum = 0;

    for (i = 0; i < pilesSize; i++) {
        sum += (piles[i] + speed - 1) / speed;
    }
    
    return sum;
}

int bs(int *piles, int pilesSize, int H, int max) {
    int l = 0;
    int r = max;
    int mid;
    int h;

    while (l < r) {
        mid = l + (r - l) / 2;
        h = getTime(piles, pilesSize, mid + 1);
        if (h == H)
            r = mid;
        else if (h < H)
            r = mid;
        else
            l = mid + 1;
    }

    return l + 1;
}

int minEatingSpeed(int* piles, int pilesSize, int H){
    int max = 0;
    int i;

    for (i = 0; i < pilesSize; i++) {
        if (piles[i] > max)
            max = piles[i];
    }

    return bs(piles, pilesSize, H, max);
}