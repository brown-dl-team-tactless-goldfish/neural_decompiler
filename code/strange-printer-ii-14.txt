    unordered_map<int,Node> mp;
    bool cycle(int src,vector<bool>&rec,vector<bool>&vis,vector<int>adj[]){
    if(vis[src]== false){
    vis[src]=true;
    rec[src]=true;
    for(auto node : adj[src]){
        if(!vis[node] && cycle(node,rec,vis,adj)){
                return true;
        }
        else if(rec[node] == true)
        return true;
    }
    }
    rec[src]=false;
    return false;
    
}
bool isPrintable(vector<vector<int>>& a) {
    int n = a.size();
    int m = a[0].size();
    int sz=0;
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++)
            sz=max(sz,a[i][j]);
    }
    vector<int>adj[sz+1];
    for(int i = 0;i<n;i++)
    {
        for(int j = 0;j<m;j++)
        {
            mp[a[i][j]].minx = min(mp[a[i][j]].minx,i);
            mp[a[i][j]].maxx = max(mp[a[i][j]].maxx,i);
            mp[a[i][j]].miny = min(mp[a[i][j]].miny,j);
            mp[a[i][j]].maxy = max(mp[a[i][j]].maxy,j);
        }
    }
    
    for(auto it:mp)
    { 
        for(int i = it.second.minx;i<=it.second.maxx;i++)
        {
            for(int j = it.second.miny;j<=it.second.maxy;j++)
            {
                if(a[i][j]!=it.first){
                   adj[it.first].push_back(a[i][j]);
                }
            }
        }
        //cout<<endl;
    }
    // for(int i=1;i<=sz;i++){
    //     cout<<i<<"->";
    //     for(auto it : adj[i])
    //         cout<<it<<" ";
    //     cout<<endl;
    // }
    vector<bool>vis(sz+1,false);
    vector<bool>rec(sz+1,false);
    for(int i=1;i<=sz;i++){
        if(vis[i]==false && cycle(i,rec,vis,adj))
            return false;
    }
    return true;
    
}   