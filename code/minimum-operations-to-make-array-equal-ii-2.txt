class Solution {
public:
    long long minOperations(vector<int>& nums1, vector<int>& nums2, int k) {
	//we will check diff for nums1[i] and nums2[i] and based on that we will make decision
        long long tot = 0; //total difference
        long long n = nums1.size();
        long long c = 0; //our answer
        for(int i = 0; i < n; i++){
            long long diff = nums1[i] - nums2[i];
            if(diff > 0){
                if(diff < k) return -1; //if our k is greater than diff then we can not do any operation
				/*
				suppose diff is 4 and k=8, it's not possible, right?
				*/
                if(k == 0) return -1; //if there is diff and k = 0, we can not do any operation to make them equal
                if(diff % k != 0) return -1; //if we can not make diff using k then it's not possible
				/*
				suppose k = 5 and diff = 11, not possible right?
				*/
                c = c + diff/k; //else we will add required operation
            }
            tot += diff;
        }
        if(tot != 0) return -1;
        return c;
        
    }
};