class Solution {
public:
	bool dfs(vector<int>& nums,int idx, int state, int count,int cur, int target)
	{
		bool res=false;
		if(count>=3)
		{
			return true;
		}
		if(cur>target)
			return false;
		if(cur==target)
			res|=dfs(nums,0,state,count+1,0,target);
		for(int i=idx;i<nums.size();i++)
		{
			if(i>=1 && nums[i]==nums[i-1] && (state>>(i-1))==0) continue;
			if(((state>>i)&1)==0)
			{
				int temp=state;
				state|=(1<<i);
				if(dfs(nums,i+1,state,count,cur+nums[i],target))
					res=true;
				state=temp;
			}
		}
		return res;
	}
	bool makesquare(vector<int>& nums) {
		if(nums.size()==0) return false;
		sort(nums.begin(),nums.end());
		int sum=0;
		for(auto& num:nums)
			sum+=num;
		if(sum%4!=0) return false;
		int target=sum/4;
		return dfs(nums,0,0,0,0,target);
	}
};