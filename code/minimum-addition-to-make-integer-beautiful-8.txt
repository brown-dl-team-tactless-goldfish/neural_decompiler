class Solution {
public:
    const long long INF = 1e18;
    long long makeIntegerBeautiful(long long n, int t) {
        string s = to_string(n);
        const int m = (int)s.size();
        
        vector<vector<vector<long long>>> dp(m, vector<vector<long long>>(2, vector<long long>(120, -1)));
        function<long long(int, int, int)> f = [&](int i, int c, int sm) -> long long {  
            if(i == -1) {
                if(sm + c <= t) return 0;
                else return 999; // very large value 
            }
            long long& ans = dp[i][c][sm];
            if(ans != -1) return ans;
            ans = INF;
            for(int d = 0; d <= 9; d++) {
                int cur = d + (s[i] - '0') + c;
                ans = min(ans, 1LL * 10 * f(i - 1, cur / 10, sm + (cur % 10)) + d);
            }
            return ans;
        }; 
        return f(m - 1, 0, 0);
    }
};