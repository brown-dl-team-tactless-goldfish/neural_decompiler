class Solution {
public:
    vector<int> minDifference(vector<int>& nums, vector<vector<int>>& q) {
        
        vector<int> temp(101,0);
        vector<vector<int>> hash;
        vector<int>  ans;
        
//         hash i...j number count save .
        for(int i=0;i<nums.size();i++)
        {
            temp[nums[i]]++; hash.push_back(temp);
        }
        
        
        for(int i=0;i<q.size();i++){
            
//             interval number count .
            if(q[i][0]-1<0){
                for(int k=0;k<101;k++)
                  temp[k]=hash[q[i][1]][k];
            }
            else 
            {
                for(int k=0;k<101;k++)
                  temp[k]=hash[q[i][1]][k]-hash[q[i][0]-1][k];
            }
            
//             find number min  ... 
            long x=INT_MIN,m=INT_MAX;
            for(int k=0;k<101;k++) 
                if(temp[k]>0){
                       m=min(m,k-x);
                       x=k;   
                  }
            if(m!=INT_MAX) 
                 ans.push_back(m); 
            else 
                 ans.push_back(-1);
        }
        
        return ans;
        
    }
};