class Solution {
public:
	int maxSumAfterPartitioning(vector<int>& arr, int k) 
    {
        int n = arr.size();
        vector<int> dp (n+1, 0);
        
        //base case for i=n is 0, dp already 0 at start so no need to initialise base case
        
        for(int i=n-1; i>=0; i--)
        {
            int maxi = 0;
            long long max_sum = 0;
            
            for(int j=i; j<min(n, i+k); j++)
            {
                maxi = max(maxi, arr[j]);
                long long sum = maxi*(j-i+1) + dp[j+1]; //partition after j
                max_sum = max(max_sum, sum);
            }

            dp[i] = max_sum;
        }
        
        return dp[0];
    }
};