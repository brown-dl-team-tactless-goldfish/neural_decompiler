public class Solution {
    public int FindSubstringInWraproundString(string p) {
        var n = p.Length;
        if (n == 0) return 0;
        var counts = new int[26];

        var local = 1;

        counts[p[0] - 'a'] = 1;
        for (int i = 1; i < n; i++) {
            var pre = p[i - 1] - 'a';
            var cur = p[i] - 'a';

            if ((cur - pre + 26) % 26 == 1) {
				// abc => [1,2,3] when c: c, bc, abc (count: 3)
                local++;
            } else {
                local = 1;
            }

            counts[cur] = Math.Max(counts[cur], local);
        }

        return counts.Sum();
    }
}