class Solution {
public:
    bool checkOnesSegment(string s) {
        char c = s[0];
        int count = s[0] == '1' ? 1 : 0; //Check if first character is 1
        for(int i=1;i<s.size();i++){ //traverse remaining characters in string
            if(s[i]=='1' && c=='1'){ //To handle continuous 1's
                count=1;
            }
            else if(s[i]=='1' && count) return false; //To handle repetition of 1's without adjacent 1's (Atmost 1 is already achieved, then return false)
            else if(s[i]=='1') count=1; //No adjacent 1's in prior traversal
            c= s[i]; //Strore prev char
        }
        return true; // at most one contiguous segment of ones 
    }
};