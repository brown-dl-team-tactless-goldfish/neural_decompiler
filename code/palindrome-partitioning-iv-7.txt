class Solution {
public:
    bool checkPartitioning(string s) {
        int n = s.length();
        vector<vector<int>> dp(n, vector<int>(n, 0));
        for(int i = 0; i < n; i++) {
            for(int j = 0; j <= i; j++) {
                if(s[i] == s[j] && (i - j <= 2 || dp[j+1][i-1])) {
                    dp[j][i] = true;
                }
            }
        }
        
        for (int firstPartion = 1 ; firstPartion < n - 1; firstPartion++) {
            if (!dp[0][firstPartion - 1]) continue;
            for (int secondPartition = first + 1; secondPartition < n; secondPartition++) {
                if (dp[firstPartion][secondPartition - 1] && dp[secondPartition][n - 1]) return true;
            }
        }
        
        return false;
    }
};