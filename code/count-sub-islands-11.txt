class Solution {
public:
    int countSubIslands(vector<vector<int>>& grid1, vector<vector<int>>& grid2) {
        int m = size(grid1), n = size(grid1[0]), ans = 0, dir[5] = {1, 0, -1, 0, 1}; 
        for (int i = 0; i < m; ++i) 
            for (int j = 0; j < n; ++j) {
                if (grid2[i][j]) {
                    grid2[i][j] = 0; // mark as visited 
                    stack<pair<int, int>> stk; 
                    stk.emplace(i, j); 
                    int val = 1; 
                    while (size(stk)) {
                        auto [r, c] = stk.top(); stk.pop(); 
                        val &= grid1[r][c]; 
                        for (int k = 0; k < 4; ++k) {
                            int rr = r + dir[k], cc = c + dir[k+1]; 
                            if (0 <= rr && rr < m && 0 <= cc && cc < n && grid2[rr][cc]) {
                                grid2[rr][cc] = 0; 
                                stk.emplace(rr, cc); 
                            }
                        }
                    }
                if (val) ++ans;
                } 
            }
        return ans; 
    }
};