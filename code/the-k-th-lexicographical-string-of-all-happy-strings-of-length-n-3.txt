char * getHappyString(int n, int k){
    char* s = (char*)malloc(n+1);
    int l = 3<<(n-1); //how many different happy strings
    
    if(k>l){
        s[0] = 0;
        return s;
    }
    //if k is more than l, return ""
    
    k--; 
    s[0] = 'a' + (k>>(n-1));
    //first two bits represents the first character 00 = 'a' 01 = 'b' 10 = 'c' 
    //not possible to be 11, or it will be k > l
    
    //with the previous character, each following bit of k-1 can be convert into certain character
    for(int i = 1; i<n;i++)
    {
        s[i] = k>>(n-i-1) & 1;
        if(s[i-1] == 'a')
        {
            if (s[i] == 0) s[i] ='b';
            if (s[i] == 1) s[i] ='c';
        }
        else if(s[i-1] == 'b')
        {
            if (s[i] == 0) s[i] ='a';
            if (s[i] == 1) s[i] ='c';
        }
        else
        {
            if (s[i] == 0) s[i] ='a';
            if (s[i] == 1) s[i] ='b';
        }
    }
    s[n] = 0;//end the string
    return s;
}