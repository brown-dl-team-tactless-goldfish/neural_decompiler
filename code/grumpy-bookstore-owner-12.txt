class Solution {
public:
    int maxSatisfied(vector<int>& customers, vector<int>& grumpy, int X) {
        
        //calculate unsatisfied customer for every minute
        for(int i = 0; i < grumpy.size(); i++)
        {
            if(customers[i] && grumpy[i]) 
                grumpy[i] = -customers[i];
            else 
                grumpy[i] = 0;
        }

        for(int i = 1; i < grumpy.size(); i++)
            grumpy[i] += grumpy[i-1];
        grumpy.insert(grumpy.begin(), 0);
        
        //sliding window to find max number of unsatisfied customer
        int min = INT_MAX;
        for(int i = X; i < grumpy.size(); i++)
                min = std::min(min, grumpy[i]-grumpy[i-X]);
        
        return grumpy[grumpy.size()-1] - min + std::accumulate(customers.begin(), customers.end(), 0);
        
    }
};