class Solution:
    def freqAlphabets(self, s: str) -> str:
        # print("s = ", s)

        data = {}
        for i in range(1, 10):
            data[i] = chr(i-1 + ord("a"))

        for i in range(10, 27):
            data[i] = chr(i-10 + ord("j"))
        # print("data = ", data)

        self.res = ""

        def helper(remainS):
            if ("#" in remainS):
                idx_first_hash = remainS.index("#")
                # print("idx_first_hash = ", idx_first_hash)

                # print("found #")
                tmpS_1 = remainS[idx_first_hash-2:idx_first_hash]
                # print("tmpS_1 = ", tmpS_1)

                tmp_mapped_s = data[int(tmpS_1)]
                # print("tmp_mapped_s = ", tmp_mapped_s)

                tmpS_2 = remainS[0:idx_first_hash-2] + \
                    tmp_mapped_s + remainS[idx_first_hash+1:]

                # print("tmpS_2 = ", tmpS_2)

                helper(tmpS_2)

            else:
                # print("no #")
                mappedS = ""
                for c in remainS:
                    # print("c = ", c)
                    if (c in "123456789"):
                        mappedS += str(data[int(c)])
                    else:
                        mappedS += c

                # print("end mapped S = ", mappedS)
                self.res = mappedS
        helper(s)
        # print("end self.res = ", self.res)
        return self.res