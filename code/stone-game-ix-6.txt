class Solution {
public:
    bool stoneGameIX(vector<int>& stones) {
        int n = stones.size();
        vector<int> freq(3, 0);
        for (int i = 0; i < n; i++)
            freq[stones[i] % 3]++;
        for (int i = 1; i <= 2; i++)
            if (freq[i] != 0)
            {
                int sum = i;
                freq[i]--;
                if (round(freq, sum, 1) % 2 == 0)
                    return true;
                freq[i]++;
            }
        return false;
    }
    
    
private:
    int round(vector<int> freq, int sum, int r)
    {
        if (sum == 0)
            return r;
        if (freq[0] == 0 && freq[1] == 0 && freq[2] == 0)
            return 1;
        if (sum == 1)
        {
            if (freq[0] != 0)
                freq[0]--;
            else if (freq[1] != 0)
            {
                freq[1]--;
                sum += 1;
            }
            else
                sum = 0;
        }
        else if (sum == 2)
        {
            if (freq[0] != 0)
                freq[0]--;
            else if (freq[2] != 0)
            {
                freq[2]--;
                sum = 1;
            }
            else
                sum = 0;
        }
        return round(freq, sum, r + 1);
    }
};