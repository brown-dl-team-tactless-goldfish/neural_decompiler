class Solution {
public:
    void solve(int arrows, vector<int>alice, vector<int>&res, vector<int>curr, int& maxi, int sum, int index){
        
        if(index<0){
            if(sum > maxi){
                maxi = sum;
                if(arrows>0){
                    curr[10]+=arrows;
                }
                res.clear();
                for(int i=0;i<=11;i++){
                    res.push_back(curr[i]);
                }
            }
            return;
        }
        
        
        if(arrows >= alice[index] + 1){
            curr.push_back(alice[index]+1);
            sum+=index;
            arrows=arrows - alice[index] - 1;
            solve(arrows, alice, res, curr, maxi, sum, index-1);
            arrows+=alice[index]+1;
            sum-=index;
            curr.pop_back();
        }
        
        
        curr.push_back(0);
        solve(arrows, alice, res, curr, maxi, sum, index-1);
        curr.pop_back();
    }
    vector<int> maximumBobPoints(int numArrows, vector<int>& aliceArrows) {
        vector<int>res;
        vector<int>curr;
        
        int maxi = 0, sum=0;
        
        solve(numArrows, aliceArrows, res, curr, maxi, sum, 11);
        
        reverse(res.begin(), res.end());
        return res;
    }
};