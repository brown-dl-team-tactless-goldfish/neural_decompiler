class Solution {
public:
    int dp[101][101];
    // this question is same as k - boxes leetcode
    int solve(string s,int i , int n)
    {
        // base case
        if(i == n)
            return 1;
        if(i > n)
            return 0;
        if(dp[i][n] != -1)
            return dp[i][n];
        int ans = 1e9;
        // in the worst case we need to print all the character individually
        // for ex - abcde 
        // in this we need to print 
        // a
        //  b
        //   c
        //    d
        //     e
        ans = 1 + solve(s,i+1,n);
        // you can alse check for consecutive occurences in string and rmove them or
       // search for  a new sequence
        // for ex - abbbacd
     //  aacd   print all the consecutive b's
        // cd   print all the consecutive a's
        // c 
        // d
        for(int j = i + 1 ;j <= n;j++)
        {
            if(s[i] == s[j]){
          // after removal of consecutives char's start new sequence or search for nex             //match
            int r1 = solve(s,i+1,j-1) + solve(s,j,n);
            ans = min(ans,r1);}
        }
        return dp[i][n] = ans;
        
    }
    int strangePrinter(string s) {
        int n = s.size();
        if(n == 1)
            return 1;
        if(n == 2 && s[0] == s[1])
            return 1;
        if(n == 2 && s[0] != s[1])
            return 2;
        memset(dp,-1,sizeof(dp));
        return solve(s,0,n-1);
    }
};