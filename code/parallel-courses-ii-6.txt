int memo[32768][15];
int minNumberOfSemesters(int n, vector<vector<int>>& arr, int k) 
{
    int prereq[15];
	memset(prereq,0,sizeof(prereq));
    for(vector<int> x:arr)
        prereq[x[1]-1]|=1<<(x[0]-1);
    int allmask=(1<<n)-1;
    memset(memo,-1,sizeof(memo));
    return dfs(0,allmask,prereq,0,n,0,k);
}
int dfs(int mask,int allmask,int* prereq,int submask,int n,int count,int k)
{
	if(mask==allmask)
		return 0;
    else if(memo[mask][count]!=-1)
        return memo[mask][count];
	else if(submask)
	{
		int q=n;
		for(int i=0;i<n;++i)
			if(submask&1<<i)
			{
				int newMask=submask&(~(1<<i));
				if(count+1==k||newMask==0)
					q=min(q,1+dfs(mask|1<<i,allmask,prereq,0,n,0,k));
				else q=min(q,dfs(mask|1<<i,allmask,prereq,newMask,n,count+1,k));
			}
		return memo[mask][count]=q;
	}
	else
	{
		int submask=0,temp=0,ret=n;
		for(int i=0;i<n;++i)
			if((mask&1<<i)==0&&((prereq[i]&mask)==prereq[i]))
			{
				submask|=1<<i;
				++temp;
			}
		if(temp<=k)
			return memo[mask][count]=1+dfs(mask|submask,allmask,prereq,0,n,0,k);
		else
		{
			int q=n;
			for(int i=0;i<n;++i)
				if(submask&1<<i)
					if(k>1)
						q=min(q,dfs(mask|1<<i,allmask,prereq,submask&(~(1<<i)),n,1,k));
					else q=min(q,1+dfs(mask|1<<i,allmask,prereq,submask&(~(1<<i)),n,0,k));
			return memo[mask][count]=q;
		}
	}
}