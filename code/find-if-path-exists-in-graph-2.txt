int i, count = n, start = source;

visited = NULL;

build_graph(n, edges, edgesSize);

unvisited = (int*)malloc(n * sizeof(int));

if (source == destination)
    return true;

if (edgesSize == 0)
    return false;

for (i = 0; i < n; i ++)
    unvisited[i] = 1;

unvisited[start] = 0;
insert_queue(start);

while (visited != NULL)
{
    printf("queue head %d\n", visited->vertex);
    start = remove_queue();
    
    printf("visited %d\n", start);
    
    node* p = graph[start];
    
    while (p != NULL)
    {
        printf("connected to %d\n", p ->vertex);
        if (p -> vertex == destination)
            return true;
        
        if (unvisited[p->vertex] == 1)
        {           
            unvisited[p->vertex] = 0;
            insert_queue(p->vertex);
        }
        
        p = p -> next;

    }
    
    
}
return false;