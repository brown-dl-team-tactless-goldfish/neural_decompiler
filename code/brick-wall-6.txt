class Solution {
public:
    int leastBricks(vector<vector<int>>& wall) {
        if(wall.empty()) return 0;
        unordered_map<int, int> tmp;
        int R = wall.size(), count = INT32_MAX;
        for(int i = 0; i < R; ++i) {
            int C = wall[i].size(), sum = 0;
            for(int j = 0; j < C-1; ++j)
                count = min(count, R - ++tmp[sum += wall[i][j]]);
        }
        // if count = INT32_MAX, then we didn't update count at all, so we have no edges in any row, 
		// so we must cross all of them, so the minimum count is also the number of rows of bricks.
        return count == INT32_MAX ? R : count; 
    }
};

auto gucciGang = []() {std::ios::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);return 0;}();