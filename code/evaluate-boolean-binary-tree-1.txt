/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */
//  2 represents the boolean OR
//  3 represents the boolean AND.
//  0 represents False
//  1 represents True.
bool evaluateTree(struct TreeNode* root){
    if(!root) return false; 
    if(root->val==2){
        return evaluateTree(root->left) || evaluateTree(root->right);
    }else if(root->val==3){
        return evaluateTree(root->left) && evaluateTree(root->right);
    }else if(root->val==0){
        return false;
    }else if(root->val==1){
        return true;
    }
    return false;
}