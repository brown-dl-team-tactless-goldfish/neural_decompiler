int calCost(int index, int continueLen, int* neededTime){
    int max = neededTime[index];
    int sum = 0;
    for(int i = index; i < (index + continueLen); i++){
        sum = sum + neededTime[i];
            if ((i + 1) < (index + continueLen)){
                if(neededTime[i + 1] > max){
                max = neededTime[i + 1];
            }
        }
    }

    return sum - max;
}
int minCost(char* colors, int* neededTime, int neededTimeSize){
    int continueLen = 1;
    int index = 0;
    int minCost = 0;
    int Cost = 0;
    for(int i = 0; i < neededTimeSize; i ++){
        if(colors[i]  == colors[i + 1]){
            continueLen ++;
            index = i - (continueLen - 2);
        }else{
            if(continueLen != 1){
                Cost = calCost(index, continueLen, neededTime);
                minCost += Cost;
                Cost = 0;
            }
            continueLen = 1;
        }
    }
    return minCost;
}