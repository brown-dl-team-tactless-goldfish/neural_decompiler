/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* reverse(struct ListNode* head){
    struct ListNode* curr = head;
    struct ListNode* prev =NULL;
    struct ListNode* nxt;
    while( curr!=NULL){
        nxt = curr->next;
        curr->next = prev;       // this function reverses the linked list
        prev = curr;
        curr = nxt;
    }
    return prev;
}
void reorderList(struct ListNode* head){
        struct ListNode* slow = head;
        struct ListNode* fast = head->next;
        while(fast!=NULL && fast->next!=NULL){
            slow = slow->next;        // this loop finds the middle of the linked list 
            fast = fast->next->next;
        }
        struct ListNode* first = head;
        struct ListNode * second = slow->next;
        slow->next = NULL;
        second  = reverse(second);
        struct ListNode* temp1;
        struct ListNode* temp2;
        while(second!=NULL){
                temp1 = first->next;
                first->next = second;
                temp2 = second->next;
                second->next = temp1;
                first = temp1;
                second = temp2;
        }
        

}