class Solution {
public:
    int minFlips(string s) {
        int n = s.length();
        vector<vector<int>> dp(n + 1, vector<int>(2));
        dp[n][0] = 0;
        dp[n][1] = 0;
        for (int i = n - 1; i >= 0; i--) {
            dp[i][0] = (s[i] == '0' ? 0 : 1) + dp[i + 1][1];
            dp[i][1] = (s[i] == '1' ? 0 : 1) + dp[i + 1][0];
        }
        int result = min(dp[0][0], dp[0][1]);
        for (int i = 1; i < n; i++) {
            int s0 = dp[i][0] + dp[0][(n - i + 0) % 2] - dp[i][(i + ((n - i + 0) % 2)) % 2];
            result = min(result, s0);
            int s1 = dp[i][1] + dp[0][(n - i + 1) % 2] - dp[i][(i + ((n - i + 1) % 2)) % 2];
            result = min(result, s1);
        }
        return result;
    }
};