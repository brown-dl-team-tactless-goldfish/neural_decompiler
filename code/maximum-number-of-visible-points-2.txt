class Solution {
public:
    int visiblePoints(vector<vector<int>>& points, int angle, vector<int>& location) {
        const double pi = acos(-1.);
        int s = 0;
        vector<double> v;
        for (const auto& p : points) {
            const int x = p[0] - location[0], y = p[1] - location[1];
            if (x == 0 && y == 0) {
                ++s;
                continue;
            }
            v.push_back(atan2(y, x) / pi * 180);
        }
        sort(v.begin(), v.end());
        const int n = v.size();
        for (int i = 0; i < n; ++i) {
            v.push_back(v[i] + 360);
        }
        int r = 0;
        for (int i = 0, j = 0; i < n; ++i) {
            for (j = max(i, j); j < i + n && v[j] - v[i] <= angle; ++j)
            ;
            r = max(r, j - i);
        }
        return r + s;
    }
};