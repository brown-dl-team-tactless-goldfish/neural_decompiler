int n,n2;
    map<char,vector<int>>m;
    map<pair<int,int>,int>dp;
    int func(int top,int i,string &key){
        if(i==n)return 0;
        if(dp.count({top,i})>0)return dp[{top,i}];
        int ans = INT_MAX;
        for(auto ind : m[key[i]]){
            ans = min(ans,1+min(abs(ind-top),n2-abs(ind-top))+func(ind,i+1,key));
        }
        return dp[{top,i}]=ans;
    }
    int findRotateSteps(string ring, string key) {
        n = key.length();
        n2 = ring.length();
        for(int i=0;i<ring.length();i++){
            m[ring[i]].push_back(i);
        }
        return func(0,0,key);
    }