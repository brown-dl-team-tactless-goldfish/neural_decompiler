class Solution {
public:
    vector<int> secondGreaterElement(vector<int>& nums) {
        unordered_map<int,int>Parent;
        stack<int>s;
        vector<int>ans(nums.size(),-1);
        for(int i=0;i<nums.size();i++)
        {
            if(s.empty()||nums[s.top()]>=nums[i])
            {
                s.push(i);
            }
            else
            {
               while(!s.empty() and nums[s.top()]<nums[i])
               {
                   ans[s.top()] = i;
                   s.pop();
               }
                s.push(i);
            }
        }
        vector<int>store(nums.size(),-1);
        priority_queue<pair<pair<int,int>,int>,vector<pair<pair<int,int>,int>>,greater<pair<pair<int,int>,int>>>pq,pq1;
        for(int i=0;i<nums.size();i++)
        {
            while(!pq.empty() and nums[pq.top().first.second]<nums[i])
            {
                if(pq.top().second==i)
                {
                    pq1.push(pq.top());
                    pq.pop();
                }
                else
                {
                    store[pq.top().first.second] = nums[i];
                    pq.pop();
                }
            }
            if(ans[i]!=-1)
            pq.push({{nums[i],i},ans[i]});
            while(!pq1.empty())
            {
                pq.push(pq1.top());
                pq1.pop();
            }
        }
        
        return store;
            
    }
};