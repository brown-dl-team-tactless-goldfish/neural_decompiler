class Solution {
public:
    vector<int> kthSmallestPrimeFraction(vector<int>& arr, int k) {
        priority_queue<pair<double,pair<int,int>>>max_heap;
        for(int i=0;i<arr.size();i++){
            for(int j=i+1;j<arr.size();j++){
                double frac = (double) arr[i]/arr[j];
                max_heap.push({frac,{arr[i],arr[j]}});
                if(max_heap.size()>k)max_heap.pop();
            }
        }
        vector<int>ans;
            ans.push_back(max_heap.top().second.first);
            ans.push_back(max_heap.top().second.second);

        return ans;
    }
};