class Solution {
public:
    int dfs(TreeNode* root, int level, int val) {
        int a, b;
        a = b = -1;
        if(root->left and root->left->val == val) a = dfs(root->left,level+1,val);
        if(root->right and root->right->val == val) b = dfs(root->right,level+1,val);
        if(a == -1 and b == -1) return level;
        return max(a,b);  
    }
    
    int longestUnivaluePath(TreeNode* root) {
        if(!root) return 0;
        
        int c = longestUnivaluePath(root->left);
        int a = 0, b = 0;
        if(root->left and root->left->val == root->val) a = dfs(root->left,1,root->val); 
		if(root->right and root->right->val == root->val) b = dfs(root->right,1,root->val);
        int d = longestUnivaluePath(root->right);
        
        return max(a+b, max(c,d));
    }
};