public IList<TreeNode> FindDuplicateSubtrees(TreeNode root) {
    var map = new Dictionary<int, List<TreeNode>>();
    int f(TreeNode n) {
        if (n == null) {
            return 0;
        }
        int hash = HashCode.Combine(n.val, f(n.left), f(n.right));
        if (!map.TryGetValue(hash, out var list)) {
            map.Add(hash, list = new List<TreeNode>());
        }
        list.Add(n);
        return hash;
    }
    f(root);
    var res = new List<TreeNode>();
    foreach (var pair in map.Where(p => p.Value.Count > 1)) {
        res.Add(pair.Value.First());
    }
    return res;
}