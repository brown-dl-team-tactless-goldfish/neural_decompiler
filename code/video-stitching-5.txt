class Solution {
public:
    int videoStitching(vector<vector<int>>& clips, int T) {
        if (!T) return 0;
        sort(clips.begin(), clips.end(), [](const vector<int> &first, const vector<int> &second)
             {return first[0] < second[0];});
        vector<int> dp(T+1, INT_MAX);
        int first = clips[0][0];
        int second = clips[0][1];
        for(int i = first; i <= min(T,second); i++)
            dp[i] = 1;
        for(int i = 1; i < clips.size(); i++) {
            first = clips[i][0];
            second = clips[i][1];
            for(int j = first; j <= min(T,second); j++) {
                int curr = first == 0 ? 0 : dp[first];
                if(curr == INT_MAX) continue;
                dp[j] = min(dp[j], curr+1);
            }
        }
        for(int i =0; i < T; i++) if(dp[i] == INT_MAX) return -1;
        return dp.back();
    }
};