#define GROUP_FORMAT1 0x1E  /*6-9*/
#define GROUP_FORMAT2 0x1E0 /*2-5*/
#define GROUP_FORMAT3 0x78  /*4-7*/
#define GROUP_FORMAT4 0x1FE /*2-5, 6-9*/

int cmp(const int** a, const int** b){ return(a[0][0]-b[0][0]); }

int maxNumberOfFamilies(int n, int** reservedSeats, int reservedSeatsSize, int* reservedSeatsColSize){
    int ans = 0, idx = 0, bitmask, rowIdx = 1;
    qsort(reservedSeats, reservedSeatsSize, sizeof(int*), cmp);
    
    while(idx < reservedSeatsSize){
        bitmask = 0x1FE;/* without considering seat 1 and 10 */
        /* clear bit if reserved */
        while((idx < reservedSeatsSize) && (reservedSeats[idx][0] == rowIdx))
            bitmask &= ~(1 << (reservedSeats[idx++][1]-1));
        
        /* check group */
        if(bitmask==GROUP_FORMAT4) 
            ans += 2;
        else if(((bitmask & GROUP_FORMAT1) == GROUP_FORMAT1) || 
                ((bitmask & GROUP_FORMAT2) == GROUP_FORMAT2) || 
                ((bitmask & GROUP_FORMAT3) == GROUP_FORMAT3))
            ans++;

        rowIdx++;
    }
    /* calculate the remain row */
    if(rowIdx<=n)
        ans += ((n - rowIdx + 1) * 2);
    return ans;
}