class Solution {
public:
int totalSteps(vector& nums) {
int n=nums.size(); //Taking the size of the array
stack<pair<int,int>>st; //making a stack of pair type to hold the key value pair
//in key placeholder I will store the element and in value placeholder I will hold the number of rounds.
int ans=0;
st.push({nums[n-1],0}); //storing the first element from right
for(int i=n-2;i>=0;i--) //start to iterate from the second last element
{
int count=0;
while(!st.empty() and nums[i]>st.top().first) //if the element pushed at the top of the stack is greater than the element which was previously at the top then we will remove the previous element and increase the count against the number of elements which is popped out
{
count=max(count+1,st.top().second);
st.pop();

        }
        
        ans=max(ans,count);
        st.push({nums[i],count});  //else simply push the element
    }
    return ans;
}
};
``