class Solution {
public:
    int maximumScore(vector<int>& nums, vector<int>& multipliers) {
        int n = nums.size(), m = multipliers.size();
        auto dp = vector<vector<int>>(m+1,vector<int>(m+1));
        int res = INT_MIN;
        dp[0][0] = 0;
        for ( int r = 1; r <= m; r++)
        {
            dp[r][0] = dp[r-1][0] + nums[r-1]*multipliers[r-1];    
        }
        
        for ( int c = 1; c <= m; c++ )
        {
            dp[0][c] = dp[0][c-1] + nums[n-c]*multipliers[c-1];
        }
        
        for ( int len = 2; len <= m; len++ )
        {
            for ( int r = 0; r < len; r++ )
            {
                int c = len - r;
                if ( r != 0 && c != 0 )
                {
                    dp[r][c] = max(dp[r-1][c]+nums[r-1]*multipliers[r+c-1],dp[r][c-1] + nums[n-c]*multipliers[r+c-1]);
                }
                if ( r+c == m )
                {
                    res = max(res,dp[r][c]);
                }
            }
        }
        
        return res;
    }
};