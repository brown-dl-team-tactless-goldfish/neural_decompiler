class StockPrice {
public:
    StockPrice() {}
    
    void update(int timestamp, int price) {
        auto it = m.find(timestamp);
        if(it != m.end()){
            int pre = it->second;
            if(--vals[pre]==0) vals.erase(pre);            
        }
        m[timestamp] = price;
        vals[price]++;
    }
    
    int current() {
        return m.rbegin()->second;
    }
    
    int maximum() {
        return vals.rbegin()->first;
    }
    
    int minimum() {
        return vals.begin()->first;
    }

    map<int, int> m; // t, price
    map<int, int> vals; //price, count
};

/**
 * Your StockPrice object will be instantiated and called as such:
 * StockPrice* obj = new StockPrice();
 * obj->update(timestamp,price);
 * int param_2 = obj->current();
 * int param_3 = obj->maximum();
 * int param_4 = obj->minimum();
 */