class MagicDictionary {
public:
    unordered_set<string> dic;
    MagicDictionary() {
        
    }
    
    void buildDict(vector<string> dictionary) {
        for (auto& s : dictionary) dic.insert(s);
    }
    
    bool search(string searchWord) {
        // 26 * 100 * 100
        string cur = searchWord;
        for (int i = 0; i < searchWord.size(); ++i){
            for (char c = 'a'; c <= 'z'; ++c){
                cur[i] = c;
                if (cur[i] != searchWord[i]
                   && dic.find(cur) != dic.end())
                    return true;
            }
            cur[i] = searchWord[i];
        }
        return false;
    }
};

/**
 * Your MagicDictionary object will be instantiated and called as such:
 * MagicDictionary* obj = new MagicDictionary();
 * obj->buildDict(dictionary);
 * bool param_2 = obj->search(searchWord);
 */