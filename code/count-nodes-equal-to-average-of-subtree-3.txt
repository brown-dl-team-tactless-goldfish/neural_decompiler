int dfs(struct TreeNode* root, int* no_nodes, int* subtree_sum)
{
    // amount of nodes in left and right branches
    int left = 0;
    int right = 0;
    
    int left_sum = 0;
    int right_sum = 0;

    if(root->left)
        left = dfs(root->left,no_nodes,&left_sum);
    
    if(root->right)
        right = dfs(root->right,no_nodes,&right_sum);
    
    *subtree_sum = left_sum + right_sum + root->val;
    
    // check if avarage is equal to current node value
    if((*subtree_sum / (left + right + 1)) == root->val)
        (*no_nodes)++;
    
    return left + right + 1;
}

int averageOfSubtree(struct TreeNode* root){

    int no_nodes = 0;
    int tree_sum = 0;
    
    dfs(root,&no_nodes,&tree_sum);
    
    return no_nodes;
}