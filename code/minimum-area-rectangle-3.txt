int minAreaRect (int** points, int pointsSize, int* pointsColSize) {
	int i, j, yi, yj, yv, xlen, area, min = INT_MAX;
	int xidx[502];
	
	// use your own revised quick_sort: primarily X and secondarily Y
	quick_sort(points, 0, pointsSize-1);

	xidx[0] = 0;
	for (i = xlen = 1; i < pointsSize; i++) {
		if (points[i][0] != points[i-1][0]) {
			xidx[xlen++] = i;
		}
	}
	xidx[xlen++] = pointsSize;

	for (i = 0; i < xlen-2; i++) {
		if (xidx[i+1] - xidx[i] < 2) continue;
		for (j = i+1; j < xlen-1; j++) {
			if (xidx[j+1] - xidx[j] < 2) continue;
			yv = -1;
			yi = xidx[i];
			yj = xidx[j];
			while (yi < xidx[i+1] && yj < xidx[j+1]) {
				if (points[yi][1] < points[yj][1]) {
					yi++;
				} else if (points[yi][1] > points[yj][1])  {
					yj++;
				} else {
					if (yv >= 0) {
						area = (points[yi][1] - yv) * (points[xidx[j]][0] - points[xidx[i]][0]);
						min = area < min ? area : min;
					}
					yv = points[yi][1];
					yi++;
					yj++;
				}
			}
		}
	}

	return min == INT_MAX ? 0 : min;
}