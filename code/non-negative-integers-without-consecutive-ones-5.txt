class Solution {
public:
    int findIntegers(int n) {

        std::bitset<32> max_(n);
        std::vector<std::vector<int>> free(33, {-1, -1}), valid(33, {-1, -1});
        free[0][0] = free[0][1] = 1;
        for(int i{1}; i <= 32; ++i) {
            free[i][0] = free[i-1][0] + free[i-1][1];
            free[i][1] = free[i-1][0];
        }
        
        valid[0][0] = valid[0][1] = 1;
        
        for(int i{1}; i <= 32; ++i) {
            if(max_[i]) {
                valid[i][0] = free[i-1][0] + free[i-1][1];
                valid[i][1] = valid[i-1][0];
            } else {
                if(max_[i-1]) {
                    valid[i][0] = free[i-1][0] + valid[i-1][1];
                    valid[i][1] = 0;
                } else {
                    valid[i][0] = valid[i-1][0];
                    valid[i][1] = 0;
                }
            }
        }
        
        return valid[32][0] + valid[32][1];
    }
};