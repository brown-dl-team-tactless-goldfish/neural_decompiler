/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */
/**
 * Return an array of size *returnSize.
 * Note: The returned array must be malloced, assume caller calls free().
 */
#define SIZE 1000
void preorder(struct TreeNode* root,int *ret,int hight,int* returnSize){
    if(root==NULL){return NULL;}
    hight++;
    if(ret[hight-1]<root->val){
        ret[hight-1]=root->val;
    }
    if(hight>*returnSize){
        *returnSize=hight;
    }
    preorder(root->left,ret,hight,returnSize);
    preorder(root->right,ret,hight,returnSize);
}
int* largestValues(struct TreeNode* root, int* returnSize) {
    int *ret=(int*)malloc(sizeof(int)*SIZE);
    for(int i=0;i<SIZE;i++){
        ret[i]=INT_MIN;
    }
    int hight=0;
    *returnSize=0;
    preorder(root,ret,hight,returnSize);
    return ret;
}