struct Node{
    char* val;
    struct Node* next;
};
void add(struct Node** node,char* s){
    int index=strlen(s);
    if(node[index]->val==NULL){
        node[index]->val=s;
        return ;
    }else if(strcmp(s,node[index]->val)<0){
        struct Node* q=(struct Node*)malloc(sizeof(struct Node));
        q->val=node[index]->val;
        q->next=node[index]->next;
        node[index]->val=s;
        node[index]->next=q;
        return ;
    }
    struct Node* p=node[index];
    while(p->next!=NULL&&strcmp(s,p->next->val)>0){
        p=p->next;
    }
    if(p->next==NULL){
        struct Node* q=(struct Node*)malloc(sizeof(struct Node));
        q->val=s;
        q->next=NULL;
        p->next=q;
        return ;
    }
    if(strcmp(s,p->next->val)<0){
        struct Node* q=(struct Node*)malloc(sizeof(struct Node));
        q->val=s;
        q->next=p->next;
        p->next=q;
        return ;
    }
}
int compare(char* s,char* d){
    int count=0;
    while(*s!='\0'){
        if(*s==*d){
            d++;
            if(*d=='\0'){
                return 1;
            }
        }
        s++;
    }
    return 0;
}
char* findLongestWord(char* s, char** d, int dSize) {
    struct Node** node=(struct Node**)malloc(1001*sizeof(struct Node*));
    for(int i=0;i<1001;i++){
        node[i]=(struct Node*)malloc(sizeof(struct Node));
        node[i]->val=NULL;
        node[i]->next=NULL;
    }
    for(int i=0;i<dSize;i++){
        add(node,d[i]);
    }
    for(int i=strlen(s);i>=0;i--){
        if(node[i]->val!=NULL){
            struct Node* p=node[i];
            while(p!=NULL){
                if(compare(s,p->val)==1){
                    return p->val;
                }
                p=p->next;
            }
        }
    }
    return "";
}