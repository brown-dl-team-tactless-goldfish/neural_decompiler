
/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* deckRevealedIncreasing(int* deck, int deckSize, int* returnSize){
    // sort the array
    int temp = 0;
    for (int idx = 0; idx < deckSize - 1; idx++)
    {
        for (int jdx = 0; jdx < deckSize - idx - 1; jdx++)
        {
            if (deck[jdx] > deck[jdx + 1])
            {
                temp          = deck[jdx];
                deck[jdx]     = deck[jdx + 1];
                deck[jdx + 1] = temp;
            }
        }
    }
    
    int *orderedDeck = (int*)malloc(sizeof(int)*deckSize);
    memset(orderedDeck, 0, sizeof(int)*deckSize);
    *returnSize = deckSize;
    int itr = 0, count = 0;
    orderedDeck[0] = deck[0];
    for (int idx = 1; idx < deckSize; idx++)
    {
        while(count != 2)
        {   
            itr++;
            if (itr >= deckSize)
                itr = 0;
            if (orderedDeck[itr] == 0)
                count++;
        }
        orderedDeck[itr] = deck[idx];
        count = 0;
    }
    
    return orderedDeck;
}