class Solution {
public:
    int minSwaps(string s) {
        int num_0 = 0, num_1 = 0;
		for (int i = 0; i < s.size(); i++) {
			if (s[i] == '1') { num_1++; }
			else { num_0++; }
		}
		int a = num_0 - num_1;
		if (a > 1 || a < -1) { return -1; }
		// a=0 -> 10...10 or 01...01 ; a=1 -> 01...; a=-1 -> 10...; 
		if (a == 1) {
			int d = 0;
			for (int i = 0; i < s.size(); i++) {
				char c = i % 2 == 0 ? '0' : '1';
				if (s[i] != c) { d++; }
			}
			return d / 2;
		}
		if (a == -1) {
			int d = 0;
			for (int i = 0; i < s.size(); i++) {
				char c = i % 2 == 0 ? '1' : '0';
				if (s[i] != c) { d++; }
			}
			return d / 2;
		}
		if (a == 0) {
			int num_diff_0 = 0;
			int num_diff_1 = 0;
			for (int i = 0; i < s.size(); i++) {
				char c = i % 2 == 0 ? '1':'0';
				if (c != s[i]) { num_diff_0++; }
				else { num_diff_1++; }
			}
			num_diff_0 = num_diff_0 < num_diff_1 ? num_diff_0 : num_diff_1;
			return num_diff_0 / 2;
		}
		return -1; 
    }
};