//Approach-2 (Simpler way to solve)
//This is a very good way of writing logic for TicTacToe used in (Leetcode - 348) also
class Solution {
public:
    string tictactoe(vector<vector<int>>& moves) {
        /*****Player-A****/
        int ARow[3] = {0};
        int ACol[3] = {0};
        int Adiag1  = 0;
        int Adiag2  = 0;
        
        /*****Player-B****/   
        int BRow[3] = {0};
        int BCol[3] = {0};
        int Bdiag1  = 0;
        int Bdiag2  = 0;
        
        bool A      = true;
        for(auto &vec : moves) {
            int r = vec[0];
            int c = vec[1];
            
            if(A) {
                if(++ARow[r]==3 || ++ACol[c] == 3 ||
                   (r==c && ++Adiag1 == 3)        ||
                   (r+c==2 && ++Adiag2 == 3))
                return "A";
            } else {
                if(++BRow[r]==3 || ++BCol[c] == 3 ||
                   (r==c   && ++Bdiag1 == 3)      ||
                   (r+c==2 && ++Bdiag2 == 3))
                return "B";
            }
            A = A ? false : true;
        }
        
        return moves.size() == 9 ? "Draw" : "Pending";
    }
};