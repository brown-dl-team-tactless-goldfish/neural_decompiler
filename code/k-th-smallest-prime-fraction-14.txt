class Solution {
public:
    vector<int> kthSmallestPrimeFraction(vector<int>& arr, int k) {
        priority_queue<pair<double,vector<int>>>pq;
        for(int i=0;i<arr.size();i++)
        {
            for(int j=i+1;j<arr.size();j++)
            {
                double p=arr[i]/(arr[j]*1.0);
                if(pq.size()==k)
                {
                    if(pq.top().first>p)
                    {
                        pq.pop();
                        pq.push({p,{arr[i],arr[j]}});
                    }
                }
                else if(pq.size()<k)
                {
                    pq.push({p,{arr[i],arr[j]}});
                }
            }
        }
        // while(pq.size()>1)
        // {
        //     pq.pop();
        // }
        return pq.top().second;
    }
};