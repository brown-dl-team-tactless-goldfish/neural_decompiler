int** intervalIntersection(int** firstList, int firstListSize, int* firstListColSize, int** secondList, int secondListSize, int* secondListColSize, int* returnSize, int** returnColumnSizes){
    
    int idx_1 = 0, idx_2 = 0;
    *returnSize = 0; //return row
    *returnColumnSizes = (int*)malloc(1001 * sizeof(int)); //return col
    int** result = (int**)malloc(1001 * sizeof(int*)); //return result
    
    while(idx_1 < firstListSize && idx_2 < secondListSize){
        int min = fmax(firstList[idx_1][0],secondList[idx_2][0]);
        int max = fmin(firstList[idx_1][1],secondList[idx_2][1]);

        if(max >= min){
            result[*returnSize] = (int*)malloc(2 * sizeof(int));
            (*returnColumnSizes)[*returnSize] = 2;
			result[*returnSize][0] = min;
            result[*returnSize][1] = max;
            *returnSize += 1;
        }
        if(secondList[idx_2][1] >= firstList[idx_1][1]) idx_1 += 1;
        else idx_2 += 1;
    }
    return result;
}