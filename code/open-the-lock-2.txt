public class Solution {
    public int OpenLock(string[] deadends, string target) {
        
        if(target == null || target == "")
            return -1;
        
        HashSet<string> set = new HashSet<string>(deadends);
        if(set.Contains("0000"))
            return -1;
        
        HashSet<string> visited =  new HashSet<string>();
        Queue<string> queue = new Queue<string>();
        queue.Enqueue("0000");
        visited.Add("0000");
        int cnt = 0;
        
        while(queue.Count > 0)
        {        
            int size = queue.Count;
            for(int i = 0; i<size; i++)
            {      
                string curr = queue.Dequeue();                 
                if(curr == target)
                    return cnt;
                                              
                for(int j = 0; j < 4; j++)
                {  
                    char[] arr = curr.ToCharArray();                        
                    char c = arr[j];     
                    //arr[j] = arr[j] == '9'? '0' : Convert.ToChar(arr[j] + 1);
                    arr[j] = Convert.ToChar((arr[j] -'0' + 1 + 10) % 10 + '0');
                    string pwd = new string(arr);    
                    if(set.Contains(pwd))
                        continue;              
                    if(!visited.Contains(pwd))
                    {
                        queue.Enqueue(pwd);
                        visited.Add(pwd);
                    }

                    arr[j] = c;
                    arr[j] = Convert.ToChar((arr[j] -'0' - 1 + 10) % 10 + '0');
                    pwd = new string(arr); 
                    if(set.Contains(pwd))
                        continue;               
                    if(!visited.Contains(pwd))
                    {
                        queue.Enqueue(pwd);
                        visited.Add(pwd);
                    }
                }                
            }
            cnt++;
        }   
        
        return -1;
    }
}