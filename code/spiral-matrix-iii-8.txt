        int[][] ret = new int[R*C][];

        int vDist = 1, hDist = 1;

        ret[0] = new int[] { r0, c0 };
        c0++;

        for (int i = 1; i < (R * C); )
        {

            //east
            for (int j = r0; j < r0 + hDist; j++)
            {
                if (c0 < C && r0 < R && r0 > -1 && c0 > -1)
                    ret[i++] = new int[] { r0, c0 };
                c0++;
            }
            c0--;
            r0++;

            //south
            for (int j = c0; j < c0 + vDist; j++)
            {
                if(r0<R && c0 < C && r0 > -1 && c0 > -1)
                    ret[i++] = new int[] { r0, c0 };
                r0++;
            }
            r0--;
            c0--;

            hDist++;
            vDist++;
            //west
            for (int j = r0; j > r0 - hDist; j--)
            {
                if (c0 >= 0 && c0 < C && r0 < R && r0 > -1)
                    ret[i++] = new int[] { r0, c0 };
                c0--;
            }

            c0++;
            r0--;
            //North
            for (int j = c0; j > c0 - vDist; j--)
            {
                if (r0 >= 0 && r0 < R && c0 > -1 && c0 < C)
                    ret[i++] = new int[] { r0, c0 };
                r0--;
            }
            r0++;
            c0++;
            hDist++;
            vDist++;
        }



        return ret;        
    
}