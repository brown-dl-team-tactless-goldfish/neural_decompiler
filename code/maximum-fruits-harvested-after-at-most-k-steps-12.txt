#include<bits/stdc++.h>
class Solution {
public:
    
    int maxTotalFruits(vector<vector<int>>& fruits, int startPos, int k) {
       int left,right;
        if(startPos>=k)
        {
            left=startPos-k;
            right=startPos;
            
        }
        else{
            left=0;
            
            if(k>=3*startPos)
                right=(k-startPos*2)+startPos;
            else
                right=startPos+(k-startPos)/2;
        }
        
        int arr[fruits.size()+1];
        arr[0]=0;
        
        for(int i=0;i<fruits.size();i++)
            arr[i+1]=arr[i]+fruits[i][1];
        
        int ans=0;
        vector<int> fruit;
        for(auto &v:fruits)
            fruit.push_back(v[0]);
        
        while(1){
            int ll=lower_bound(begin(fruit),end(fruit),left)-begin(fruit);
            
            int rr=upper_bound(begin(fruit),end(fruit),right)-begin(fruit);

            ans=max(ans,arr[rr]-arr[ll]);

            if(left==startPos) break;
            
            left++;

            if(k>(startPos-left)*3)
                right=startPos+(k-(startPos-left)*2);
            
            else
               right=startPos+(k-(startPos-left) )/2;

        }   
       return ans;
 
    }
};