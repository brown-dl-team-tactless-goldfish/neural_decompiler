class Solution 
{
public:
    vector<int> minInterval(vector<vector<int>>&inter, vector<int>& q) 
    {
        vector<vector<int>>v;
        for(int i=0;i<q.size();i++)
        {
            v.push_back({q[i],i});
        }
        int j=0;
        sort(v.begin(),v.end());
        sort(inter.begin(),inter.end());
        multiset<pair<int,int>>mp;
        vector<int>ans(q.size(),0);
        for(auto it:v)
        {
            int size=it[0];
            int index=it[1];
            while(j<inter.size()&&inter[j][0]<=size)
            {
                mp.insert({inter[j][1]-inter[j][0]+1,inter[j][1]});
                j++;
            }
            while(mp.size()&&size>(*mp.begin()).second)
            {
                mp.erase(mp.begin());
            }
            if(mp.size()==0)
            {
                ans[index]=-1;
            }
            else
            {
                ans[index]=(*mp.begin()).first;
            }
        }
        return ans;
    }
};