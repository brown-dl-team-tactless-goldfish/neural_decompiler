class Solution {
public:
    int maximizeWin(vector<int>& prizePositions, int k) {
        int n = prizePositions.size();
        vector<int> bestProfit(n, 0);
        vector<int> profit(n, 0);
        vector<int> nextPosition(n, -1);
        int j = 0;
        for (int i = 0; i < n; ++i) {
            while (j < n && prizePositions[j] - prizePositions[i] <= k) {++j;}
            profit[i] = j-i;
            nextPosition[i] = j;
        }
        bestProfit[n-1] = profit[n-1];
        for (int i = n-2; i >= 0; --i) {
            bestProfit[i] = max(profit[i], bestProfit[i+1]);
        }
        int res = 0;
        for (int i = 0; i < n; ++i) {
            res = max(res, profit[i] + (nextPosition[i] == n?0:bestProfit[nextPosition[i]]));
        }
        return res;
    }
};