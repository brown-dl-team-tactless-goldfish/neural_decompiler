class Solution {
public:
    int unhappyFriends(int n, vector<vector<int>>& preferences, vector<vector<int>>& pairs) {
        std::vector<std::vector<int>> m(n, std::vector<int>(n, 0));
        for(int i{0}; i < n; ++i)
            for(int j{0}; j < n-1; ++j)
                m[i][preferences[i][j]] = j;
        
        int count{0};
        for(int i{0}, size{(int)pairs.size()}; i < size; ++i) {
            for(int j{0}, p1{0}, p2{0}; j < size && (!p1 || !p2); ++j) {
                if(i == j) continue;
                int x{pairs[i][0]}, y{pairs[i][1]}, u{pairs[j][0]}, v{pairs[j][1]};
                if(!p1 && (m[x][u] < m[x][y] && m[u][x] < m[u][v] || m[x][v] < m[x][y] && m[v][x] < m[v][u])) ++count, p1 = 1;
                if(!p2 && (m[y][u] < m[y][x] && m[u][y] < m[u][v] || m[y][v] < m[y][x] && m[v][y] < m[v][u])) ++count, p2 = 1;
            }
        }
        
        return count;
    }
};