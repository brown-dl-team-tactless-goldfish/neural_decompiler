  int eatenApples(const vector<int>& apples, const vector<int>& days) {
  map<int, int> counts;  // day -> count
  int count{}, eaten{};
  for (int i{}; i < apples.size(); i++) {
    if (int c{min(days[i], apples[i])}; c > 0)
      count += c, counts[i + days[i] - 1] += c;
    if (count > 0) {
      eaten++, count--, counts.begin()->second--;
      if (counts.begin()->second == 0) counts.erase(counts.begin());
    }
    if (counts.contains(i)) count -= counts[i], counts.erase(i);
  }
  for (int day = apples.size() - 1; auto [d, c] : counts) {
    if (count <= 0) break;
    auto e{min(count, d - day)};
    eaten += e, count -= max(c, e), day = d;
  }
  return eaten;
}
