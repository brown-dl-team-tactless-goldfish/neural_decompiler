#include<math.h>
int kthGrammar(int N, int K){
    
    if(K<=2) // for any N 1th bit is 0 and 2th bit is 1
        return K==1?0:1;
    
    int a[2]={0,1};
    int total=(int)pow(2,N-1);
    
    return findbit(a,total,K);

}

int findbit(int bits[],int total,int pos)
{
    if(total==2)
         return bits[pos-1];
    
    int mid=total/2;
    
    if(pos<=mid)     //Avoid right subtree
        return findbit(bits,mid,pos);
    
    bits[0]=!bits[0];
    bits[1]=!bits[1];
    return findbit(bits,mid,pos-mid); // Avoid left subtree
}```