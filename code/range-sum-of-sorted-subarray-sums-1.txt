
int cmp(const void *a, const void *b){
    return *(int*)a - *(int*)b;
}

int rangeSum(int* nums, int numsSize, int n, int left, int right){
    int *all_sub_array = calloc(n*(n+1)/2, sizeof(int));
    int idx = 0;
    long long ans = 0;

    for (int i = 0; i<n; i++){
        int temp = nums[i];
        all_sub_array[idx] = temp;
        idx++;
        for (int j = i + 1; j < n; j++){
            temp = temp + nums[j];
            all_sub_array[idx] = temp;
            idx++;
        }
    }

    qsort(all_sub_array, n*(n+1)/2, sizeof(int), cmp);
    for (int i = (left-1); i<= (right-1); i++){
        ans = ans + all_sub_array[i];
    }
    free(all_sub_array);
    return (int)(ans % (1000000000+7));
}