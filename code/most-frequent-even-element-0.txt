int mostFrequentEven(int* nums, int numsSize){
    int min = -1;
    int n = numsSize;
    int** hash = malloc( n * sizeof(int*));
    for(int i = 0; i < n; i++){
        hash[i] = calloc(2 , sizeof(int));
    }
    int maxFreq = 0;
    int val = INT_MAX;
    int id;
    for(int i = 0; i < n; i++){
        if(nums[i] % 2 == 1)
            continue;
        if( hash[nums[i] % n][1] == 0 ){
            hash[nums[i] % n][0] = nums[i];
            hash[nums[i] % n][1] = 1;
            id = nums[i];            
        }
        else{
            if(hash[nums[i] % n][0] == nums[i]){
                hash[nums[i] % n][1]++;
                id = nums[i] ;                          
            }
            else{
                id = nums[i] + 1 ;
                bool flag = false;
                while( hash[id % n][1] != 0){
                    if(hash[id % n][0] == nums[i]){
                        hash[id % n][1]++;                        
                        flag = true;
                        break;
                    }
                    id++;
                }
                if(flag == false){
                    hash[id % n][0] = nums[i];
                    hash[id % n][1] = 1; 
                }
            }
        }
        if(hash[id % n][1] == maxFreq && nums[i] < val)
            val = nums[i];
        else if(hash[id % n][1] > maxFreq){
            maxFreq = hash[id % n][1];
            val = nums[i];
        }
    }
    if(val == INT_MAX)
        return -1;
    return val;
}