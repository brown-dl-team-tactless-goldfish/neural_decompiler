class Solution {
public:
    int maxSideLength(vector<vector<int>>& mat, int threshold) {
        int  n=mat.size(),m=mat[0].size();
        int sum[n][m+1];
        for(int i=0;i<n;i++){
            sum[i][0]=0;
            for(int j=1;j<=m;j++){
                sum[i][j]=sum[i][j-1]+mat[i][j-1];
            }
        }
        int len=1;
        while(len<=min(n,m)){
            bool flag=false;
            for(int i=0;i<n-len+1;i++){
                int squareSum=INT_MAX;
                for(int j=0;j<m-len+1;j++){
                    squareSum=0;
                    for(int k=0;k<len;k++){
                        squareSum+=(sum[i+k][j+len]-sum[i+k][j]);
                    }
                    if(squareSum<=threshold){
                        flag=true;
                        break;
                    }
                }
                if(squareSum<=threshold){
                    break;
                }
            }
            if(!flag){
                break;
            }
            len++;
        }
        return len-1;
    }
};