void dfs(int** grid, int gridSize, int* gridColSize, int i, int j, bool* surrounded){
    if(i<0 || j<0 || i>=gridSize || j>=*gridColSize || grid[i][j] != 0) return;
    if(i==0 || j==0 || i==gridSize-1 || j==*gridColSize-1) *surrounded = false;
    grid[i][j] = 2;
    dfs(grid, gridSize, gridColSize, i+1, j, surrounded);
    dfs(grid, gridSize, gridColSize, i-1, j, surrounded);
    dfs(grid, gridSize, gridColSize, i, j+1, surrounded);
    dfs(grid, gridSize, gridColSize, i, j-1, surrounded);
}

int closedIsland(int** grid, int gridSize, int* gridColSize){
    int result = 0;
    for(int i=0; i<gridSize; i++){
        for(int j=0; j<*gridColSize; j++){
            if(grid[i][j] == 0){
                bool surrounded = true;
                dfs(grid, gridSize, gridColSize, i, j, &surrounded);
                if(surrounded == true) result += 1;
            }
        }
    }
    return result;
}