vector<int> pancakeSort(vector<int>& arr) {
    vector<int> ans;
    for (int v = arr.size(); v >= 1; --v) {
        int index = findIndex(arr, v);
        if (index == v - 1) continue;
        if (index != 0) {
            ans.push_back(index + 1);
            flip(arr, index);
        }
        ans.push_back(v);
        flip(arr, v - 1);
    }
    return ans;
}

int findIndex(vector<int>& arr, int v) {
    for (int i = 0; i < arr.size(); ++i)
        if (arr[i] == v) return i; 
    return -1;
}

void flip(vector<int>& arr, int k) {
    for (int l = 0, r = k; l <= r;) swap(arr[l++], arr[r--]);
}