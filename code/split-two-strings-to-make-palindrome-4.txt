class Solution {
public:
    bool checkPalindromeFormation(string a, string b) {
        auto a1 = a, b1 = b;
        reverse(a1.begin(), a1.end());
        reverse(b1.begin(), b1.end());
        return able(a, b1) || able(b1, a) || able(a1, b) || able(b, a1);
    }
    
    int maxLenPalin(const string& s){
        int n = s.size();
        int l = (n-1)/2, r = l;
        if(n%2 == 0) r++;
        int res = 0;
        while(l>=0 && s[l] == s[r]){
            res = r-l+1;
            l--, r++;
        }
        return res;
    }
    
    bool able(const string& s, const string& t){
        const int n = (s.size() - maxLenPalin(s)) / 2;
        return s.substr(0, n) == t.substr(0, n);        
    }
};