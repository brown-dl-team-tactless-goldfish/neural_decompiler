class Solution {
public:
    int ans = 0;
    vector<vector<int>> dir = {{0,1},{0,-1},{1,0},{-1,0}};
    int getMaximumGold(vector<vector<int>>& grid) {
        for(int i = 0; i<grid.size();i++)
        {
            for(int j = 0; j<grid[i].size();j++)
            {
                if(grid[i][j]!=0)
                {
                    int x = grid[i][j];
                    grid[i][j]=0;
                    dfs(i,j,grid,x);
                    grid[i][j]=x;
                }
            }
        }
        return ans;
    }
    void dfs (int r, int c, vector<vector<int>> & grid, int temp)
    {
        ans = max(ans,temp);
        for(int i = 0; i<dir.size();i++)
        {
            int nr = r + dir[i][0];
            int nc = c + dir[i][1];
            if(nr<0 || nc<0||nr>=grid.size()||nc>=grid[r].size())
                continue;
            if(grid[nr][nc]==0)
                continue;
            int x = grid[nr][nc];
            grid[nr][nc]=0;
            dfs(nr,nc,grid,temp+x);
            grid[nr][nc]=x;
        }
    }
};