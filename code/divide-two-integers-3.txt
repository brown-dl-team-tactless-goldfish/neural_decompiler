int divide(int dividend, int divisor)
{
    long dr = divisor;
    long dd = dividend;
    int sign_flag = 1;
    long res;

    if (!dd)
        return 0;

    if (dd < 0) {
        dd = 0 - dd;
        sign_flag = 0 - sign_flag;
    }
    if (dr < 0) {
        dr = 0 - dr;
        sign_flag = 0 - sign_flag;
    }

    if (dd < dr)
        return 0;
    if (dd == dr) {
        res = 1;
        goto out;
    }
    res = 1;
    int rem = dd - dr;
    long tmp_dr = dr + dr; 
    while (tmp_dr < dd) {
        res = res + res;
        rem = dd - tmp_dr;
        tmp_dr = tmp_dr + tmp_dr;
    }
  
    if (rem >= dr) {
        res += divide(rem, dr);
    }

    int max = 0x7fffffff;
    int min = 0x80000000;
out:
    if (sign_flag == -1) {
        res = 0 - res;
        return res >= min ? res : min;
    }
    return res <= max ? res : max;
}