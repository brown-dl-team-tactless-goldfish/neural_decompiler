#define MAX(n1,n2) n1 > n2 ? n1 : n2

int calcAreaOfIsland(int **grid, int row, int col, int i, int j)
{
    if(i < 0 || i >= row || j < 0 || j >= col || grid[i][j] == 0)
        return 0;
    
    int area = 0; 
    area += grid[i][j];
	grid[i][j] = 0;        // Mark the visited nodes as 0 as you encounter them. This is done so that you don't double count them again in the future. 
    
    area += calcAreaOfIsland(grid, row, col, i+1, j);
    area += calcAreaOfIsland(grid, row, col, i-1, j);
    area += calcAreaOfIsland(grid, row, col, i, j+1);
    area += calcAreaOfIsland(grid, row, col, i, j-1);

    return area;
}

int maxAreaOfIsland(int** grid, int gridSize, int* gridColSize)
{
    int maxArea = 0;
    
    for(int i = 0; i < gridSize; i++)
    {
        for(int j = 0; j < *gridColSize; j++)
        {
            if(grid[i][j] == 1)
            {
                int area = calcAreaOfIsland(grid, gridSize, *gridColSize, i, j);
                maxArea = MAX(maxArea, area);   
            }
        }
    }
    
    return maxArea;
}