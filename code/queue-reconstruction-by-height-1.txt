int cmp(const void* a, const void* b) {
    const int* pa = *(const int**) a;
    const int* pb = *(const int**) b;
    if (pa[0] == pb[0]) return pa[1] - pb[1];
    return pb[0] - pa[0];
}

int** reconstructQueue(int** people, int peopleSize, int* peopleColSize, int* returnSize, int** returnColumnSizes) {
    qsort(people, peopleSize, sizeof(int*), cmp);
    int** res = (int**) calloc(peopleSize, sizeof(int*));
    (*returnColumnSizes) = (int*) calloc(peopleSize, sizeof(int));
    for ((*returnSize) = 0; (*returnSize) < peopleSize; (*returnSize)++) {
        (*returnColumnSizes)[(*returnSize)] = 2;
        if (!res[people[(*returnSize)][1]]) {
            res[people[(*returnSize)][1]] = people[(*returnSize)];
        } else {
            int idx = people[(*returnSize)][1], cnt = 0;
            while (res[idx++]) {
                cnt++;
            }
            memmove(res + people[(*returnSize)][1] + 1, res + people[(*returnSize)][1], cnt * sizeof(int*));
            res[people[(*returnSize)][1]] = people[(*returnSize)];
        }
    }
    return res;
}