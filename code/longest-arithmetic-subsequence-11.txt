
class Solution {
public:
    int longestArithSeqLength(vector<int>& nums) {
		int ans = 1;
		const int maxd = 505, maxv = 505;
		vector<vector<int>> dp0(maxv, vector<int>(maxd, 0));
		vector<vector<int>> dp1(maxv, vector<int>(maxd, 0));
		
		for (int i = 0; i < nums.size(); i++) {
			ans = max(ans, ++dp0[nums[i]][0]);
			for (int d = 1; d < maxd; d++) {
				int &x = nums[i];
				int k = x - d;
				dp0[x][d] = max(dp0[x][d], 1);
				dp1[x][d] = max(dp1[x][d], 1);
				if (k >= 0) {
					dp0[x][d] = max(dp0[x][d], 1 + dp0[k][d]);  // increasing AP
				}
				k = x + d;
				if (k < maxv) {
					dp1[x][d] = max(dp1[x][d], 1 + dp1[k][d]); // decreasing AP
				}
				ans = max({ans, dp1[x][d], dp0[x][d]});
			}
		}
		return ans;
    }
};




