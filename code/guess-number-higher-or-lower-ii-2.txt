#define INF 0xFFFFFFF

int find(int **map, int st, int en){ // 1,2,3 tc
    //edge case for st == en
    int min = INF;
    if(st >= en)
        return 0;
    if((en - st) == 1){
        return st; // pick smaller
    }
    if(map[st][en]) // already filed
        return map[st][en];
    
    for(int i = st; i <= en; i++){
        int res1, res2, max;
        res1 = find(map, st, i - 1); //find(1,2) -> return 1
        res2 = find(map, i + 1, en);// find(4, 3)-> return 0
        max = (res1 > res2)? res1:res2; //1
        max += i; //4
        min = (max < min)? max: min;
       // printf("i %d st %d en %d max %d min %d\n", i, st, en, max, min);
    }
    
    map[st][en]= min;
    return min;    
}

int getMoneyAmount(int n){
    int **map;
    int res;
    map = malloc((n+ 1)*sizeof(int*));
    
    for(int i = 0; i <=n; i++){
        map[i] = calloc(n+1, sizeof(int));
    }
    
    res = find(map, 1, n);
    return res;
}