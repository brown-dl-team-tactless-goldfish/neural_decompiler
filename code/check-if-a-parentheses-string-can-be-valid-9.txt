class Solution {
public:
    bool canBeValid(string s, string locked) {
        
        // return false for even length
        if(s.length() & 1) return false;
        
        int balance = 0;
        
        // check for orphan ')' from left to right
        for(int i=0;i<s.length() && balance>=0;i++)
        {
            if(locked[i]=='1' && s[i]==')')balance--;
            else balance++;
            
            if(balance<0)return false;
        }
        
        balance = 0;
        
        // check for orphan '(' from right to left
        for(int i=s.length()-1;i>=0 && balance>=0;i--)
        {
            if(locked[i]=='1' && s[i]=='(')balance--;
            else balance++;
            
            if(balance<0)return false;
        }
        
        return true;
    }
};