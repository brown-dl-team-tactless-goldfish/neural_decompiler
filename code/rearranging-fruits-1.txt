class Solution {
public:
    long long minCost(vector<int>& v1, vector<int>& v2) {
        unordered_map<int,int> m;
        for(auto x:v1) m[x]++;
        for(auto x:v2) m[x]--;
        vector<int> v;
        for(auto [x, n]:m){
            if(n % 2 != 0) return -1;
            for(int i=0;i<abs(n)/2;i++) v.push_back(x);
        }
        sort(v.begin(), v.end());
        const int xmin = min(*min_element(v1.begin(), v1.end()), *min_element(v2.begin(), v2.end()));
        long long res = 0;
        for(int i=0;i<v.size()/2;i++){
            res += min(xmin*2, v[i]);
        }
        return res;
    }
};