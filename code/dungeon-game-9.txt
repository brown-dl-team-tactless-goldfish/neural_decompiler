class Solution {
public:
    int calculateMinimumHP(vector<vector<int>>& dungeon) 
    {
        int r = dungeon.size();
        int c = dungeon[0].size();
        
        int dp[r][c];
        
        //fill last element 
        dp[r-1][c-1] = dungeon[r-1][c-1] >= 0 ? 1 : 1-dungeon[r-1][c-1];
        
        //fill last row ( r-1 ) in reverse 
        for(int col=c-2; col>=0; col--)
            dp[r-1][col] = dp[r-1][col+1] - dungeon[r-1][col] <= 0 ?
                       1 : dp[r-1][col+1] - dungeon[r-1][col];
        
        
        //fill last col ( c-1 ) in reverse
        for(int row=r-2; row>=0; row--)
            dp[row][c-1] = dp[row+1][c-1] - dungeon[row][c-1] <= 0 ?
                       1 : dp[row+1][c-1] - dungeon[row][c-1];
        
        //fill rest of the array
        for(int i=r-2; i>=0; i--)
        {
            for(int j=c-2; j>=0; j--)
            {
                dp[i][j] = min(dp[i+1][j], dp[i][j+1]) - dungeon[i][j] <= 0?
                       1 : min(dp[i+1][j], dp[i][j+1]) - dungeon[i][j];
            }
        }
        
        
        return dp[0][0];
            
        
        
    }
};
