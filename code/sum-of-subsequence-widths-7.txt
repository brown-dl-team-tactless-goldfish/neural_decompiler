class Solution {
public:
    int md=1e9+7;
    using ll=long long;
    int sumSubseqWidths(vector<int>& nums) {
        int n=nums.size();
        if(n==1) return 0;
        
        sort(nums.begin(), nums.end());

        vector<ll> pow(n), pref(n);
        pow[0]=1;
        pref[0]=nums[0];
        for(int i=1;i<n;i++) {
            pow[i]=(2*pow[i-1]) % md;
            pref[i]=(pref[i-1]%md+nums[i]%md)%md;
        }
        
        ll ans=0;
         for(int i=0;i<n-1;i++) {
            ans+=(pow[i] * (pref[n-1]-pref[i])) % md  -  (pow[i] * pref[n-2-i] + md) % md;
            ans=(ans+md)%md;
         }
        return ans%md;
    }
};