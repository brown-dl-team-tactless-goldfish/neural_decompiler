bool canTransform(char * start, char * end){
    int n1 = strlen(start);
    int n2 = strlen(end);
    if(n1 != n2)
        return false;
    int begin = 0;
    for(int i = 0; i < n1; i++){
        if(end[i] == 'X')
            continue;
        if(end[i] == 'L'){
            if(begin == n1)
                return false;
            for(int j = begin; j < n1; j++){
                if(start[j] == 'R')
                    return false;
                else if(start[j] == 'L'){
                    if(j < i)
                        return false;
                    begin = j + 1;
                    break;
                }
                if(j == n1-1)
                    return false;
            }
        }
        else if(end[i] == 'R'){
            if(begin == n1)
                return false;
            for(int j = begin; j < n1; j++){
                if(start[j] == 'L')
                    return false;
                else if(start[j] == 'R'){
                    if(i < j)
                        return false;
                    begin = j + 1;
                    break;
                }
                if(j == n1-1)
                    return false;
            }
        }
    }
    for(int k = begin; k < n1; k++){
        if(start[k] == 'L' || start[k] == 'R')
            return false;
    }
    return true;
}