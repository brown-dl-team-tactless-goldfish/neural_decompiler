class Solution {
    int LongestCM(int a, int b, int gcd)
    {
        int f = a / gcd;
        f *= b;
        return f;
    }
public:
    vector<int> replaceNonCoprimes(vector<int>& nums) {
        int n = nums.size(), i = 0;
        stack<int> st;
        while(i < n)
        {
            int val = nums[i];
            while(!st.empty())
            {
                int gcd = __gcd(val,st.top());
                if(gcd == 1)
                    break;
                else
                {
                    int v = st.top();
                    st.pop();
                    val = LongestCM(v, val, gcd);
                }
            }
            st.push(val);
            i++;
        }
        vector<int> ans(st.size());
        int j = st.size()-1;
        while(!st.empty())
        {
            ans[j] = st.top();
            st.pop();
            j--;
        }
        return ans;
    }
};