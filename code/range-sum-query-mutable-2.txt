typedef struct {
    int size;   // len(nums)
    int length; // sqrt(len(nums))
    int *sum;   // store initial sum 
    int *nums;  // stort nums
} NumArray;


NumArray* numArrayCreate(int* nums, int numsSize) {
    
    NumArray *array = (NumArray *)calloc(1, sizeof(NumArray));
    array -> size = numsSize;
    
    if(numsSize == 0){
        return array;
    }
    
    array -> length = sqrt(numsSize);
    
    int index;
    if(numsSize % array -> length == 0)
        index = ceil(numsSize / array -> length);
    else
        index = ceil(numsSize / array -> length) + 1;
    
    array -> sum = (int *)calloc(index, sizeof(int));
    array -> nums = (int *)calloc(numsSize, sizeof(int));
    
    int i;
    int cnt;
    for(i=0; i<numsSize; i++){
        cnt = i / array -> length;
        array -> sum[cnt] += nums[i];
        array -> nums[i] = nums[i];
    }
    
    return array;
    
}

void numArrayUpdate(NumArray* obj, int i, int val) {
    int sum_idx;
    sum_idx = i / obj->length;
    obj -> sum[sum_idx] += (val - obj->nums[i]);
    obj -> nums[i] = val;
}

int numArraySumRange(NumArray* obj, int i, int j) {
    if(obj -> size == 0){
        return 0;
    }
    
    int start = i / obj -> length;
    int end = j / obj -> length;
    int idx;
    int nums_sum = 0;
    
    if(start == end){
        for(idx=i; idx<=j; idx++){
            nums_sum += obj -> nums[idx];
        }
    }
    else{
        int start_idx = (start+1) * obj -> length;
        int end_idx = end * obj -> length;
        for(idx=i; idx<start_idx; idx++)
            nums_sum += obj->nums[idx];
        for(idx=start+1; idx<end; idx++)
            nums_sum += obj->sum[idx];
        for(idx=end_idx; idx<j+1; idx++)
            nums_sum += obj->nums[idx];
    }
    
    return nums_sum;
    
}

void numArrayFree(NumArray* obj) {
    free(obj->sum);
    free(obj->nums);
    free(obj);
}

/**
 * Your NumArray struct will be instantiated and called as such:
 * NumArray* obj = numArrayCreate(nums, numsSize);
 * numArrayUpdate(obj, i, val);
 
 * int param_2 = numArraySumRange(obj, i, j);
 
 * numArrayFree(obj);
*/