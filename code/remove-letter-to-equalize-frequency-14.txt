class Solution {
public:
    bool equalFrequency(string word) {
        vector<int>hash(26);
        unordered_map<int,int> mp;
        for(char c : word) hash[c - 'a']++;
        for(int& i : hash) {
            if(i) mp[i]++;
        }
        if(mp.size() > 2) return 0;
        if(mp.size() == 1){
            if(mp.begin()->first == 1)return 1;
            return mp.begin()->second == 1;
        }
        auto itr = mp.begin();
        int x1 = itr->first, y1= itr->second;
        itr++;
        int x2 = itr->first, y2 = itr->second;
        if(x1 == 1 and y1== 1) return 1;
        if(x2 == 1 and y2 == 1) return 1;
        if(x1 -x2 == 1) return y1 == 1;
        else if(x2 - x1 == 1) return y2 == 1;
        return 0;
    }
};