



int** diagonalSort(int** mat, int matSize, int* matColSize, int* returnSize, int** returnColumnSizes){
    int m=matSize;
    int n=matColSize[0];

   
    if(m!=1&&n!=1){
        //sort mat[i][0]开头的
        for(int i=0;i<m;i++){
            int l=fmin(m-i,n);
            for(int p=0;p<l;p++){
                for(int q=0;q<l-p-1;q++){
                    if(mat[i+q][q]>mat[i+q+1][q+1]){
                        int temp=mat[i+q][q];
                        mat[i+q][q]=mat[i+q+1][q+1];
                        mat[i+q+1][q+1]=temp;
                    }
                }
            }
        }
        //sort mat[0][j]开头的
        for(int j=1;j<n;j++){
            int l=fmin(m,n-j);
            for(int p=0;p<l;p++){
                for(int q=0;q<l-p-1;q++){
                    if(mat[q][j+q]>mat[q+1][j+q+1]){
                        int temp=mat[q][j+q];
                        mat[q][j+q]=mat[q+1][j+q+1];
                        mat[q+1][j+q+1]=temp;
                    }
                }
            }
        }
    }
    
    
    *returnSize=m;
    *returnColumnSizes=(int*) malloc(sizeof(int)*m);
    for(int i=0;i<m;i++) (*returnColumnSizes)[i]=n;  
    

    return mat;
    
}