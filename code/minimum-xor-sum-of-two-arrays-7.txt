class Solution {
public:
    int n;
    int dp[15][17000];
    int get(int i,int mask,vector<int>& a, vector<int>& b)
    {
        if(i>=n)
            return 0;
        if(dp[i][mask]!=-1)
            return dp[i][mask];
        int res=INT_MAX;
        for(int j=0;j<n;j++)
        {
            int bit=1&(mask>>j);
            if(!bit)
            {
                int mask2=mask;
                mask2|=(1<<j);
                res=min(res,(a[i]^b[j])+get(i+1,mask2,a,b));
            }
        }
        return dp[i][mask]=res;
    }
    int minimumXORSum(vector<int>& a, vector<int>& b) 
    {
        n=a.size();
        memset(dp,-1,sizeof(dp));
        return get(0,0,a,b);
    }
};