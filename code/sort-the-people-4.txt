/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
struct info
{
    /* data */
    char name[21];
    int height;
};
typedef struct info info;
int comparator(const void *a, const void *b){
    info *x = (info *)a;
    info *y = (info *)b;
    if(x->height < y->height) return 1;
    return -1;
}
    
char ** sortPeople(char ** names, int namesSize, int* heights, int heightsSize, int* returnSize){
    info People[namesSize];
    char **peopleSorted = (char **)malloc((namesSize+1)*sizeof(char*));
    for (int i = 0; i < namesSize; i++)
    {
        /* code */
        strcpy(People[i].name, names[i]);
        People[i].height = heights[i];
    }
    qsort(People, namesSize, sizeof(info), comparator);
    for (int i = 0; i < namesSize; i++)
    {
        /* code */
        peopleSorted[i] = (char *)malloc(21*sizeof(char*));
        strcpy(peopleSorted[i], People[i].name);
    }
    *returnSize = namesSize;
    return peopleSorted;
}