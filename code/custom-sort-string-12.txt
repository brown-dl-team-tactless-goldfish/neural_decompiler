
void q_sort(int*older,char*T,int l,int r){
    if(l>=r)
        return;
    int i=l;
    int j=r;
    int base=older[T[i]-'a'];
    char temp=T[i];
    while(i<j){
        while(i<j&&older[T[j]-'a']>base)j--;
        if(i<j)
            T[i++]=T[j];
        while(i<j&&older[T[i]-'a']<base)i++;
        if(i<j)
            T[j--]=T[i];
    }
    T[i]=temp;
    q_sort(older,T,l,i-1);
    q_sort(older,T,i+1,r);
}
char * customSortString(char * S, char * T){
    int older[26];
    memset(older,-1,26*sizeof(int));
    int len_T=strlen(T);
    int len_S=strlen(S);
    char mi;
    for(int i=0;i<len_S;i++)
        older[S[i]-'a']=i;
    q_sort(older,T,0,len_T-1);
    return T;
}

