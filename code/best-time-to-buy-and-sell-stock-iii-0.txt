

int maxProfit(int* prices, int pricesSize)
{
    int* profit = (int*) malloc (sizeof(int) * pricesSize);
    int* profitTwo = (int*) malloc (sizeof(int) * pricesSize);
    int res = INT_MIN;
    if (pricesSize <= 1) return 0;
    int extreme = INT_MAX, maxProfit = 0;
    
    for (int i = 0; i < pricesSize; i++)
    {
        if (extreme > prices[i]) extreme = prices[i];
        if (maxProfit <= prices[i] - extreme) 
        {
            maxProfit = prices[i] - extreme;
        }
        profit[i] = maxProfit;
    }
    
    extreme = INT_MIN, maxProfit = 0;
    for (int i = pricesSize - 1; i >= 0; i--)
    {
        if (extreme < prices[i]) extreme = prices[i];
        if (maxProfit <= extreme - prices[i]) 
        {
            maxProfit = extreme - prices[i];
        }
        profitTwo[i] = maxProfit;
    }
    
    for (int i = 0; i < pricesSize - 1; i++)
    {
        if (res < (profit[i] + profitTwo[i])) res = profit[i] + profitTwo[i];
    }
    
    return res;
}