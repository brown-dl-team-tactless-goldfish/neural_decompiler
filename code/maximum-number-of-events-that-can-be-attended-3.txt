class Solution {
public:
    const int INF = INT_MAX / 2;
    int maxEvents(vector<vector<int>>& events) {
        map<int,map<int,int>> t; 
        for(auto& e : events){
            t[e[0]][e[1]]++;
        }
        int ret = 0;
        int d = t.begin()->first; 
        while(t.size()){
            int k = INF;
            int x;
            for(auto ptr = t.begin();ptr!=t.end()&&ptr->first<=d;){
                map<int,int>& tmp = ptr->second; 
                auto p = tmp.begin();
                while(p!=tmp.end()){
                    if(p->first<d){
                        p = tmp.erase(p);
                    } else {
                        if(p->first < k){
                            k = p->first;
                            x = ptr->first;
                        }
                        break;
                    }
                }
                if(tmp.empty()){
                    ptr = t.erase(ptr);
                } else {
                    ptr++;
                }
            }
            if(k!=INF){
                ret++;
                t[x].begin()->second--;
                if(t[x].begin()->second == 0){
                    t[x].erase(t[x].begin());
                }
                if(t[x].empty()){
                    t.erase(x);
                }
            }
            d++;
        }
        return ret; 
    }
};