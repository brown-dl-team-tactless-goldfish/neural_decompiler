/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int>ans; // the level sums :-);
    void bfs(TreeNode*root){
        if(!root)return ;
        queue<TreeNode*>q;
        q.push(root);
        while(!q.empty()){
            int sz = q.size();
            int sums = 0;
            while(sz){
                auto top = q.front();
                q.pop();
                sums += top->val;
                if(top->left)q.push(top->left);
                if(top->right)q.push(top->right);
                --sz;
            }
            ans.push_back(sums);
        }
        return ;
    }
    
    int maxLevelSum(TreeNode* root) {
        if(!root)return 0;
        bfs(root);
        int mx = *max_element(ans.begin(), ans.end());
        int idx = 0;
        while(ans[idx]!=mx){
            ++idx;
        }
        return ++idx;
        
    }
};