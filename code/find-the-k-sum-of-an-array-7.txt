typedef long long ll;

class Solution {
public:
    long long kSum(vector<int>& nums, int k) {

        int n = nums.size();
        ll tot = 0;
        for(int i=0;i<n;i++){
            if(nums[i]>0)
                tot += nums[i];
            if(nums[i]<0)
                nums[i] *= -1;
        }
        
        if(k==1)
            return tot;

        k--;
        sort(nums.begin(),nums.end());
        
        priority_queue<pair<ll,int>,vector<pair<long long,int>>, greater<pair<long long,int>>>pq;
        
        int cur = 0;
        
        ll ans = nums[0];
        
        pq.push({(ll)nums[0],1});
        
        while(cur<=k){
            cur++;
            auto a = pq.top();
            pq.pop();
            
            if(cur==k)
                return tot- a.first;
            
            if(a.second != n){
                
                ll x = a.first;
                int y = a.second;
                x -= nums[y-1];
                pq.push({x+nums[y],y+1});
                
                x += nums[y-1];
                pq.push({x+nums[y],y+1});
            }
        }
        return 1;
    }
};