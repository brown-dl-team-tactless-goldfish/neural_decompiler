the pointer to pointer code is difficult to correctly write.

int CnvtNum(char *p, char **pNext){
    int i, A = 0;
    int SignA = p[0] == '-' ? (-1) : 1;
    i = SignA == 1 ? 0 : 1;
    while(isdigit(p[i])){
        A = p[i] - '0' + A * 10;
        i++;
    }
    A = SignA * A;
    *pNext = p + i + 1;
    return A;
}
char* complexNumberMultiply(char* a, char* b) {
    char *c = (char *)malloc(sizeof(char) * 14);
    char *pNext, *pTmp;
    int aReal = CnvtNum(a, &pNext);
    int aImag = CnvtNum(pNext, &pTmp);
    int bReal = CnvtNum(b, &pTmp);
    int bImag = CnvtNum(pTmp, &pNext);
    int cReal = aReal * bReal - aImag * bImag;
    int cImag = aReal * bImag + aImag * bReal;
    sprintf(c,"%d+%di", cReal, cImag);
    return c;
}