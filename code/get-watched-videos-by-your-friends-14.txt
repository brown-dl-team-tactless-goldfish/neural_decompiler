    vector<string> watchedVideosByFriends(vector<vector<string>>& vids, 
                                          vector<vector<int>>& frens, int id, int lvl) {
        
        vector<vector<int>> g(vids.size());
        for(int i = 0 ; i < frens.size() ; i++)
            for(auto n : frens[i]) g[i].push_back(n);
         
        map<string, int> res; queue<int> q; q.push(id); 
        set<int> vis; int k = 0;
        
        while(q.size() && k <= lvl) {
            
            int sz = q.size();
            while(sz--) {
                
                auto n = q.front(); q.pop();
                if(vis.count(n)) continue;
                vis.insert(n);
                if(k == lvl) for(auto v : vids[n]) res[v]++;
                for(auto nbr : g[n]) q.push(nbr);
            }
            
            k++;
        }
        
        vector<string> v;
        for(auto e : res) v.push_back(e.first);
        sort(v.begin(), v.end(), [&](auto& a, auto& b) {
            if(res[a] == res[b]) return a < b;
            return res[a] < res[b];
        });
        return v;
    }