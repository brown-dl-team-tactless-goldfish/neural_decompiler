
void swap(int *a,int *b)
{
    int t;
    t=*a;
    *a=*b;
    *b=t;
}

int partition(int *arr,int l,int h)
{
    int pivot=arr[l];
    int i=l;
    int j=h;
    do{
        while(pivot>=arr[i] && i<h)
            i++;
        while(pivot<arr[j] && j>0)
            j--;
        if(i<j)
            swap(&arr[i],&arr[j]);
    }while(i<j);
    swap(&arr[j],&arr[l]);
    return j;
}

void sort(int *arr,int l,int h)                 //quick sort
{
    if(l<h)
    {
        int index=partition(arr,l,h);
        sort(arr,l,index-1);
        sort(arr,index+1,h);
    }
}

int findContentChildren(int* g, int gSize, int* s, int sSize)
{
    int i=0,j=0;
    sort(g,0,gSize-1);                      //sort both array
    sort(s,0,sSize-1);
    while(i<gSize && j<sSize)
    {
        if(g[i]<=s[j])                      //if cookies are enough(s[j]) for child(g[i]) then increment child index
            i++;
        j++;                                //increment source index
    }
    return i;                               //return child index which 
}