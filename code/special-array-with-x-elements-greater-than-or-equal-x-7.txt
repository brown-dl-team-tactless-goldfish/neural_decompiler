int specialArray(int* nums, int numsSize){
mergeSort(nums,0,numsSize-1);
     int prev = -1;
     printf("%d",numsSize);
    for(int i = 0; i<numsSize ; i++){
        if(numsSize-i<=nums[i] && numsSize-i > prev) return numsSize-i;
        prev = nums[i];
    }
    printf("%d",numsSize);
    return -1;
}

void mergeSort(int arr[],int left,int right)
{
    if(left<right)
    {
        int mid = (left+right)/2;
        
        mergeSort(arr,left,mid);
        mergeSort(arr,mid+1,right);
        
        merge(arr,mid,left,right);
    }
}
int b[501];
void merge(int arr[],int mid, int left,int right)
{
    int start=left;
    int end = mid+1;
    int k=left;
    while(start<=mid && end<=right)
    {
        if(arr[start]<arr[end])
        {
            b[k]=arr[start];
            start++;
        }
        else 
        {
            b[k]=arr[end];
            end++;
        }
        k++;
    }
    if(start>mid)
    {
        while(end<=right)
        {
            b[k]=arr[end];
        k++;
            end++;
        }
    }
    else 
    {
        while(start<=mid)
        {
            b[k]=arr[start];
            k++;
            start++;
        }
    }
    for(int k =left;k<=right;k++)
        arr[k]=b[k];
}