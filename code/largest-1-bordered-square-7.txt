int largest1BorderedSquare(vector<vector<int>>& grid) {
  auto sz_x = grid.size(), sz_y = grid[0].size();
  vector<vector<int>> sx(sz_x, vector<int>(sz_y)), sy(sz_x, vector<int>(sz_y));
  for (auto x = 0; x < sz_x; ++x)
    for (auto y = 0; y < sz_y; ++y)
      if (grid[x][y] == 0) sx[x][y] = sy[x][y] = 0;
      else {
        sx[x][y] = 1 + (y == 0 ? 0 : sx[x][y - 1]);
        sy[x][y] = 1 + (x == 0 ? 0 : sy[x - 1][y]);
      }
  for (int sz_s = min(sz_y, sz_x) - 1; sz_s >= 0; --sz_s)
    for (auto x = 0; x + sz_s < sz_x; ++x)
      for (auto y = 0; y + sz_s < sz_y; ++y) {
        if (sx[x][y + sz_s] > sz_s && sx[x + sz_s][y + sz_s] > sz_s &&
          sy[x + sz_s][y] > sz_s && sy[x + sz_s][y + sz_s] > sz_s) return (sz_s + 1) * (sz_s + 1);
      }
  return 0;
}