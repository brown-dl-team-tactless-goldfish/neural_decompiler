
class Solution {
public:
    unordered_map<string, int> mp;
    int longestPalindrome(vector<string>&v) 
    {
        int n=v.size();
        int m=2;
        int ans=0;
        // even case
	for (int i = 0; i <n; i++) {
		string str=v[i];
		string b(str);
		reverse(b.begin(), b.end());
		if (mp[b]) {
			mp[b]--, ans += 2*m;
			continue;
		}
		else mp[str]++;
	}
        //odd case
	for (auto &v : mp) {
		if (!v.second) continue;
		string b(v.first);
		reverse(b.begin(), b.end());
		if (b == v.first) {
			ans += m;
			break;
		}
	}
	return ans;
    }
};