int cmp(const void* a, const void* b)
{
	return *(int*) a - *(int*)b;
}

bool isPossible(int* target, int targetSize){
	long int sum;
	int max;
	int min;
	qsort(target, targetSize, sizeof(int), cmp);
	max = target[targetSize - 1];
	min = target[0];
	while(max > 1 && min >= 1)
	{
		sum = 0;
		for(int i = 0; i < targetSize - 1; i++){
			sum += target[i];
		}
		if(max - sum <= 0 || sum == 0) return 0;
		if(sum == 1){
			target[targetSize - 1] = 1;
		}else{
			target[targetSize - 1] = max % sum;
		}
		qsort(target, targetSize, sizeof(int), cmp);
		max = target[targetSize - 1];
		min = target[0];
	}
	if(max == 1 && target[0] == 1){
		return 1;
	}
	return 0;
}