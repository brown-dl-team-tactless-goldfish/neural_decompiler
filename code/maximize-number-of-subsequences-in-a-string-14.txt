public long MaximumSubsequenceCount(string text, string pattern) 
{
	int a = pattern[0], b = pattern[1];
	long result = Math.Max(before(a, b, text), after(a, b, text));
	return result;
}

private long before(int a, int b, string text)
{        
	int abefore = 1;
	long sum = 0L;

	foreach(char c in text)
	{
		if(c == b)
		{
			sum += abefore;
		}

		if(c == a)
		{
			abefore++;
		}
	}

	long result = sum;
	return result;        
}

private long after(int a, int b, string text)
{        
	int abefore = 0;
	long sum = 0L;

	foreach(char c in text)
	{
		if(c == b)
		{
			sum += abefore;
		}

		if(c == a)
		{
			abefore++;
		}
	}

	sum += abefore;        
	long result = sum;
	return result;        
}