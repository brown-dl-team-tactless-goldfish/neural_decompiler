int maxArea(int* height, int heightSize){
    int max_h = 0;

    //find max of heights
    for(int i = 0; i < heightSize; i++)
    {
        if(height[i] > max_h)
        {
            max_h = height[i];
        }
    }

    int max_area = 0;
    int start = 0;
    int end = heightSize - 1;

    if(max_h == 0)
    {
        return 0;
    }

    //i is the "horizontal line" described in the approach section
    for(int i = 1; i <= max_h; i++)
    {
        int start_found = 0;
        int end_found = 0;
        int max_relative_h = 0;
        
        //look for the first block from the left that is higher than the line
        int j = start;
        while(!start_found)
        {
            if(height[j] >= i)
            {
                max_relative_h = height[j];
                start_found = 1;
                start = j;
                break;
            }
            
            j++;
        }

        //look for the first block from the right that is higher than the line
        j = end;
        while(!end_found)       //only one boolean could be used (start_found)...
        {
            if(height[j] >= i)
            {
                if(height[j] < max_relative_h)
                {
                    max_relative_h = height[j];
                }

                end_found = 1;
                end = j;
                break;
            }
            
            j--;
        }

        //see if new max area for this height of the line is greater than overall max area
        if(max_relative_h * (end - start) > max_area)
        {
            max_area = max_relative_h * (end - start);
        }
    }

    return max_area;
}