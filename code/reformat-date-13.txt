public class Solution {
    public string ReformatDate(string date) {
        
        // time: O(1)
		// String.Split() takes O(N). But the input string date contains at most 13 chars, so the time complexity is O(13) = O(1).
        string[] strs = date.Split(' ', StringSplitOptions.RemoveEmptyEntries);
        
        // time: O(1)
		// StringBuilder.Append takes O(1) to append a character at the end and takes O(N) to append a string.
		// year only contains 4 chars, so the time complexity is O(4) = O(1)
        StringBuilder sb = new StringBuilder();       
        sb.Append(strs[2]);
        sb.Append("-");
             
        // time: O(1)
		// search in a dictionary takes O(1)
		// space O(1)
		// dictionary contains 12 key-value paris, which has O(12) = O(1) space complexity.
        Dictionary<string,string> months = new Dictionary<string,string>()
        {{"Jan", "01"}, {"Feb", "02"}, {"Mar", "03"}, {"Apr", "04"}, {"May","05"}, {"Jun", "06"},
         {"Jul", "07"}, {"Aug", "08"}, {"Sep", "09"}, {"Oct", "10"}, {"Nov", "11"}, {"Dec", "12"}};
        sb.Append(months[strs[1]]);
        sb.Append("-");
        
        // time: O(1)
		// String.Substring() takes O(N) time complexity. day contains at most 4 chars, so the time complexity is O(1)
        string day = strs[0].Substring(0, strs[0].Length - 2);
        if(day.Length == 1)
            day = "0" + day;
        sb.Append(day);
        
        return sb.ToString();
    }
}