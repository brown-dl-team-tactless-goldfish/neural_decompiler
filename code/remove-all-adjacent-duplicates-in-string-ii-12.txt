class Solution {
public:
    using Pair = pair<char, int>;
    using Stack = vector<Pair>;
    string removeDuplicates(string A, int K, Stack S = {{'\0', 0}}, string ans = {}) {
        for (auto c: A)
            if (S.back().first == c && ++S.back().second == K)
                S.pop_back();
            else if (S.back().first != c)
                S.emplace_back(c, 1);
        for (auto& pair: S)
            generate_n(back_inserter(ans), pair.second, [&]() { return pair.first; });
        return ans;
    }
};