bool check(string &s, string &t, int k)
{
   int n = s.size(), j = 0, count = 0;
    
    for(int i=0; i<n; i++)
    {
        if(s[i] == t[j])
        {
            j++;
            
            if(j == t.size())
            {
                count++;
                j = 0;
            }
            
            if(count == k)
            {
                return true;
            }
        }
    }
    
    return false;
}
string longestSubsequenceRepeatedK(string s, int k) 
{
    
    queue<string> q;
    
    q.push("");
    
    string ans;
    
    while(!q.empty())
    {
        int n = q.size();
        
        while(n--)
        {
            auto cur = q.front();
            q.pop();
            
            for(char ch ='a'; ch <= 'z'; ch++)
            {
                string temp = cur + ch;
                
                if(check(s,temp, k))
                {
                    ans = temp;
                    
                    q.push(temp);
                }
                    
            } 
            
        }
    }
 
return ans;
    