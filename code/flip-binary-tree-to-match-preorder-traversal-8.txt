class Solution {
    vector<int>ret ;
    bool helper(TreeNode* root, int& i, vector<int>& voyage){
        if(root == nullptr)
            return true ;
        if(root->val != voyage[i])
            return false ;
        i++ ;
        if(root->left){
            if(root->left->val == voyage[i])
                return helper(root->left, i, voyage) && helper(root->right, i, voyage) ;
            else{
                ret.push_back(root->val) ;
                return helper(root->right, i, voyage) && helper(root->left, i, voyage) ;
            }
        }
        else
            return helper(root->right, i, voyage) ;
            
    }
public:
    vector<int> flipMatchVoyage(TreeNode* root, vector<int>& voyage) {
        int i = 0 ;
        return   helper(root, i, voyage) == true  ? ret : vector<int>{-1} ;
    }
};