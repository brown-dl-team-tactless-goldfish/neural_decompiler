public:
    SmallestInfiniteSet() {
        
    }
    
    int popSmallest() {
        int co = count;
        
        if(!have_check.empty()){
            if(have_check.top() < co){
                co = have_check.top();
                have_check.pop();
                have_set.erase(co);
                dont_have_set.insert(co);
            }else{
                count ++;
                dont_have_set.insert(co);
            }
        }else{
            count ++;
            dont_have_set.insert(co);
        }
        
        return co;
    }
    
    void addBack(int num) {
        if(dont_have_set.find(num) != dont_have_set.end()){
            have_set.insert(num);
            dont_have_set.erase(num);
            have_check.push(num);
        }
    }
private:
    int count = 1;
    unordered_set<int> dont_have_set;
    unordered_set<int> have_set;
    priority_queue<int, vector<int>, greater<int>> have_check;