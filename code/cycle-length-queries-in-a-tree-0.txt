/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int find_root(int j, int k){
    int p = 1;
    while (j != k){
        if (j > k){
            j >>= 1;
        } else {
            k >>= 1;
        }
        p++;
    }
    return p;
}


int* cycleLengthQueries(int n, int** queries, int queriesSize, int* queriesColSize, int* returnSize){
    int* ans = malloc(sizeof(int)*queriesSize);
    *returnSize = queriesSize;

    for (int i = 0 ; i < queriesSize ; i++){
        ans[i] = find_root(queries[i][0], queries[i][1]);
    }
    return ans;
}