class Solution:
    def buddyStrings(self, A: str, B: str) -> bool:
        # print("A = ", A)

        def helper(curA, curB):
            # print("curA = ", curA)
            # print("curB = ", curB)

            len_A = len(curA)
            len_B = len(curB)

            if (len_A != len_B):
                return False

            if (curA == curB):
                if (len(set(curA)) < len(curA)):
                    return True
                else:
                    return False

            if (len_A < 2):
                return False
            elif (len_A == 2):
                if (curA[::-1] == curB):
                    return True
                else:
                    return False
            else:
                if (curA[0] == curB[0]):
                    return helper(curA[1:], curB[1:])
                else:
                    idx = 1
                    while (idx < len_A):
                        if (curA[idx] == curB[idx]):
                            break
                        idx += 1

                    print(" after break, idx = ", idx)

                    if (idx >= len_A):
                        # print("not valid idx")
                        return False
                    elif (idx == len_A - 1):
                        # print("this is last character")
                        return False
                    else:
                        return helper(curA[:idx]+curA[idx+1:], curB[:idx]+curB[idx+1:])

        res = helper(A, B)
        # print("res = ", res)
        return res