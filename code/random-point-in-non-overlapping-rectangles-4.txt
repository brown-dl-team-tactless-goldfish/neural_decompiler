class Solution {
    map<int, int> m;
    vector<vector<int>> arrs;
    int sum;
    
public:
    Solution(vector<vector<int>>& rects) {
        arrs = rects;
        sum = 0;
        
        for(int i = 0; i < rects.size(); i++){
            auto rect = rects[i];
            sum += (rect[2] - rect[0] + 1) * (rect[3] - rect[1] + 1);
            m[sum] = i;
        }
    }
    
    vector<int> pick() {
        auto i = m.upper_bound(rand() % sum + 1);
        int c = i->first;
        return pickInRect(arrs[m[c]]);
    }
    vector<int> pickInRect(vector<int> rect){
        int left = rect[0], right = rect[2], bot = rect[1], top = rect[3];
        return {left + rand() % (right - left + 1), bot + rand() % (top - bot + 1)};
    }
};
