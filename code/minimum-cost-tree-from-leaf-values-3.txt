public class Solution {
    private int[,] max = null,
                   res = null;    
    public int MctFromLeafValues(int[] arr) {
        max = new int[arr.Length, arr.Length];
        res = new int[arr.Length, arr.Length];
        
        for (int i = 0; i < arr.Length; i++)
        {
            int cur = Int32.MinValue;
            
            for (int j = i; j < arr.Length; j++)
            {
                cur = Math.Max(cur, arr[j]);
                max[i, j] = cur;
            }
        }
        
        for (int i = 0; i < arr.Length; i++)
            for (int j = 0; j < arr.Length; j++)
                    if (i == j)
                        res[i, j] = 0;
                    else
                        res[i, j] = Int32.MaxValue;
        
        return Helper(arr, 0, arr.Length - 1);
    }
    
    private int Helper(int[] arr, int i, int j)
    {
        if (res[i, j] != Int32.MaxValue)
            return res[i, j];
        
        for (int k = i; k < j; k++)
            res[i, j] = Math.Min(res[i, j], max[i, k] * max[k + 1, j] + Helper(arr, i, k) + Helper(arr, k + 1, j));
        
        return res[i, j];
    }
}