class Solution {
public:
    vector<vector<int>> reconstructMatrix(int u, int l, vector<int>& num) {
        int n = size(num), c = 0;
        vector<vector<int>> ans(2, vector<int>(n, 0));
        c = accumulate(begin(num), end(num), c);
        if(c != u + l) return {};

        //row 1 : first fill those columns which has sum value 2
        for(int i = 0; i < n and u; i++) {
            if(num[i] == 2) {
                ans[0][i] = 1;
                u--;
            }
        }

        //row 1 : now fill those columns which has sum value 1
        for(int i = 0; i < n and u; i++) {
            if(num[i] == 1) {
                ans[0][i] = 1;
                u--;
            }
        }
        
        //row 2 : now fill row 2 while checking some condition
        for(int i = 0; i < n and l; i++) {
            if(num[i] == 2 or (num[i] == 1 and ans[0][i] != 1)) {
                ans[1][i] = 1;
                l--;
            }
        }

        if(u or l) return {};
        return ans;
    }
};