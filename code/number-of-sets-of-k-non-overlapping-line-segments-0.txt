public class Solution {
        public int NumberOfSets(int n, int k)
        {
            long[,,] dp = new long[k + 1, n, 2];

            for (int i = 0; i < n; i++)
            {
                dp[0, i, 0] = 1;
                dp[0, i, 1] = i == 0 ? 1 : dp[0, i - 1, 1] + dp[0, i, 0];
            }

            for (int i = 1; i <= k; i++)
                for (int j = 1; j < n; j++)
                {
                    dp[i, j, 0] += (dp[i - 1, j - 1, 1] + dp[i, j - 1, 0]) % 1000000007;
                    dp[i, j, 1] += j == 0 ? 0 : (dp[i, j - 1, 1] + dp[i, j, 0]) % 1000000007;
                }

            return (int)(dp[k, n - 1, 0] % 1000000007);
        }
}