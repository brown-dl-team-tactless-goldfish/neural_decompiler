class Solution {
public:
    
    long long gcd(long long a, long long b){
        if(b == 0){
            return a;
        }
        return gcd(b, a%b);
    }
    
    long long lcm(long long a, long long b){
        if(a<b){
            swap(a,b);
        }
        return a*b / gcd(a,b);
    }
    
    template<typename T>
    void sort3(T& a, T& b, T& c){
        if (a > c)
            swap(a, c);
        if (a > b)
            swap(a, b);
        if (b > c)
            swap(b, c);
    }
    
    int nthUglyNumber(int n, int a, int b, int c) {
        sort3(a,b,c);
        long long ab = lcm(a,b);
        long long bc = lcm(b,c);
        long long ac = lcm(a,c);
        long long abc = lcm(a,lcm(b,c));
        auto f = [&](long long x){
            return x/a + x/b + x/c - x/ab - x/ac - x/bc + x/abc;
        };
        long long l = a;
        long long r = a*n;
        while(l<r){
            long long m = (l+r)/2;
            int _n = f(m);
            if(_n == n){
                r = m;
                break;
            }
            else if (_n<n){
                l = m + 1;
            } else {
                r = m - 1;
            }
        }
        while(r){
            if(r%a == 0 || r%b == 0 || r%c == 0){
                return r;
            }
            r--;
        }
        return 0;
    }
};