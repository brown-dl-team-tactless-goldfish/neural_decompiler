    int minMalwareSpread(vector<vector<int>>& g, vector<int>& initial) {
        vector<int> root, malwareCount(g.size(), 0), count(g.size(), 0);
        for(int i = 0; i < g.size(); i++) root.push_back(i);
        
        for(int i = 0; i < g.size(); i++) {
            for(int j = 0; j < g[i].size(); j++) {
                if(g[i][j]) {
                    root[findP(root, i)] = findP(root, j);
                }
            }
        }
        for(int i = 0; i < g.size(); i++) count[findP(root, i)]++;
        for(auto m : initial) malwareCount[findP(root, m)]++;
        
        vector<int> res = {1, 0};
        for(auto m : initial) res = min(res, {-(malwareCount[findP(root, m)] == 1)*count[findP(root, m)], m});
        return res[1];
    }
    
    int findP(vector<int>& root, int i) {
        while(root[i] != i) {
            root[i] = root[root[i]];
            i = root[i];
        }
        return i;
    }