
bool checkInclusion(char * s1, char * s2){
    int countS1Map['z'-'a'+1]={0};  //count s1 character show how many times
    int countS2Map['z'-'a'+1]={0};  //count s2 character show how many times
    int len1=strlen(s1);
    int len2=strlen(s2);
    if(len1>len2)
        return false;
    for(int j=0;j<len1;j++){    //count [0,len1) every character show how many times
        countS1Map[s1[j]-'a']++;
        countS2Map[s2[j]-'a']++;
    }
    
    for(int i=0;i<len2-len1+1;i++){
        bool isTheSame=true; //check s1 [0,len1) and s2 [i,len1+i) is the same(permutation is the same)
        for(char c='a';c<='z';c++){
            if(countS1Map[c-'a']!=countS2Map[c-'a']){
                isTheSame=false;
                break;
            }
        }
        if(isTheSame){
            return true;
        }
        if(len1+i<len2){    //countS2Map result delete s2[i] and add s2[len1+i] will get next slide window
            countS2Map[s2[i]-'a']--;
            countS2Map[s2[len1+i]-'a']++;
        }
    } 

    return false;
}