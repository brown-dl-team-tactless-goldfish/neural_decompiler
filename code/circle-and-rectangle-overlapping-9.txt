    public class Solution
    {
        private bool CircleSegmentIntersection(int radius, int xCenter, int yCenter, int x1, int y1, int x2, int y2)
        {
            checked
            {

                if (x1 == x2)
                {
                    //y - aligned

                    if (x1 > xCenter + radius)
                    {
                        return false;
                    }

                    if (x1 < xCenter - radius)
                    {
                        return false;
                    }

                    double r = radius;
                    var xDiff = (double) x1 - xCenter;
                    var sqYdiff = r * r - xDiff * xDiff;

                    var sqr = Math.Sqrt(sqYdiff);

                    var first = sqr + yCenter;
                    var second = -sqr + yCenter;

                    if (first >= y1 && first <= y2)
                    {
                        return true;
                    }

                    if (second >= y1 && second <= y2)
                    {
                        return true;
                    }

                    return false;
                }
                else
                {
                    //x - aligned

                    if (y1 > yCenter + radius)
                    {
                        return false;
                    }

                    if (y1 < yCenter - radius)
                    {
                        return false;
                    }

                    double r = radius;
                    var yDiff = (double) y1 - yCenter;
                    var sqXDiff = r * r - yDiff * yDiff;

                    var sqr = Math.Sqrt(sqXDiff);

                    var first = sqr + xCenter;
                    var second = -sqr + xCenter;

                    if (first >= x1 && first <= x2)
                    {
                        return true;
                    }

                    if (second >= x1 && second <= x2)
                    {
                        return true;
                    }

                    return false;
                }
            }
        }

        public bool CheckOverlap(int radius, int xCenter, int yCenter, int x1, int y1, int x2, int y2)
        {
            checked
            {
                //circle inside rect
                if (xCenter + radius <= x2 && xCenter - radius >= x1 && yCenter + radius <= y2 &&
                    yCenter - radius >= y1)
                {
                    return true;
                }

                if (CircleSegmentIntersection(radius, xCenter, yCenter, x1, y1, x2, y1))
                {
                    return true;
                }

                if (CircleSegmentIntersection(radius, xCenter, yCenter, x1, y1, x1, y2))
                {
                    return true;
                }

                if (CircleSegmentIntersection(radius, xCenter, yCenter, x1, y2, x2, y2))
                {
                    return true;
                }

                if (CircleSegmentIntersection(radius, xCenter, yCenter, x2, y1, x2, y2))
                {
                    return true;
                }

                //rect inside circle
                double midX = (double) x1 + (double) (x2 - x1) / 2;
                double midY = (double) y1 + (double) (y2 - y1) / 2;

                if (midX >= xCenter - radius && midX <= xCenter + radius && midY >= yCenter - radius &&
                    midY <= yCenter + radius)
                {
                    return true;
                }

                return false;
            }
        }
    }