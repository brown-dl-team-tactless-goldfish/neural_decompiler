int cmp(const void* a, const void* b)
{
  return (*(int*) a) - (*(int*) b);
}

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* answerQueries(int* nums, int numsSize, int* queries, int queriesSize, int* returnSize)
{
  qsort(nums, numsSize, sizeof(int), cmp);

  int *result = malloc(queriesSize*sizeof(int));
  memset(result, 0, queriesSize*sizeof(int));
  *returnSize = queriesSize;

  for(int i=0;i<queriesSize;i++)
  {
    int count = 0;
    int temp = 0;
    for(int k=0;k<numsSize;k++)
    {
      if(temp + nums[k] <= queries[i])
      {
        temp += nums[k];
        count ++;
      }
      else
      {
        break;
      }
    }
    result[i] = count;
  }

  return result;
}
