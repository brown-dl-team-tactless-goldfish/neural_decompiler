class Solution {
public:
    std::vector<std::vector<int>> imageSmoother(std::vector<std::vector<int>>& M) {
        std::vector<std::vector<int>> result;
        for (int i = 0; i < M.size(); ++i) {
            result.emplace_back();
            result.back().reserve(M[i].size());
            for (int j = 0; j < M[i].size(); ++j) {
                int qty = 1, sum = M[i][j];
                
                if (0 != i) {
                    sum += M[i - 1][j];
                    ++qty;
                    if (0 != j) {
                        sum += M[i - 1][j - 1];
                        ++qty;
                    }
                }

                if (M.size() - 1 != i) {
                    sum += M[i + 1][j];
                    ++qty;
                    if (M[i].size() - 1 != j) {
                        sum += M[i + 1][j + 1];
                        ++qty;
                    }
                }
                
                if (0 != j) {
                    sum += M[i][j - 1];
                    ++qty;
                    if (M.size() - 1 != i) {
                        sum += M[i + 1][j - 1];
                        ++qty;
                    }
                }

                if (M[i].size() - 1 != j) {
                    sum += M[i][j + 1];
                    ++qty;
                    if (0 != i) {
                        sum += M[i - 1][j + 1];
                        ++qty;
                    }
                }
                
                result.back().push_back(sum / qty);
            }
        }
        return result;
    }
};