if (numsSize)
{
	firstMax = secMax = thirdMax = LLONG_MIN;

	for (int i = 0; i < numsSize; i++)
	{
		if (nums[i] >= firstMax)
		{
			if (firstMax != nums[i])
			{
				if (LLONG_MIN != secMax )
				{
					thirdMax = secMax;
				}
				
				secMax = firstMax;
			}

			firstMax = nums[i];
		}

		else if (nums[i] >= secMax)
		{
			if ((nums[i] != secMax) && (LLONG_MIN != secMax))
			{
				thirdMax = secMax;
			}

			secMax = nums[i];
		}

		else if (nums[i] >= thirdMax)
		{
			thirdMax = nums[i];
		}
	}

	return ((firstMax != LLONG_MIN) ? (secMax != LLONG_MIN) ? ((thirdMax != LLONG_MIN) && (secMax != thirdMax)) ? 
		thirdMax : firstMax : firstMax : firstMax);
}

return 0;