int longestValidParentheses(char* s) {
	while (s[0] == ')') s = s + 1;
	int len = strlen(s);
	if (len == 0 || len == 1) return 0;
	int front = 0, back = 0, start = 0, maxf = 0, maxb = 0, flen = 0, blen = 0;
	for(int i=0;i<len;i++)
	{
		if (s[i] == '(') front++;
		else front--;
		if (front < 0) { 
			front = 0;
			flen = 0;
			start = i + 1;
		}
		if (front == 0) {
			flen += (i + 1 - start);
			maxf = maxf > flen ? maxf : flen;
			start = i + 1;
		}
	}
	start = len - 1;
	for (int i = len-1;i>=0;i--)
	{
		if (s[i] == ')') back++;
		else back--;
		if (back < 0) { 
			back = 0; 
			blen = 0;
			start = i - 1;
		}
		if (back == 0) {
			blen += (start + 1 - i);
			maxb = maxb > blen ? maxb : blen;
			start = i - 1;
		}
	}
	return maxf > maxb ? maxf : maxb;
}