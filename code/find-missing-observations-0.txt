int* missingRolls(int* rolls, int rollsSize, int mean, int n, int* returnSize){
    int sum = 0;
    for(int i = 0; i < rollsSize; i++){
        sum += rolls[i];
    }
    
    int target = mean *(rollsSize + n);
    int diff = target - sum;
    if( diff < n || diff > 6*n ){
        *returnSize = 0;
        return NULL;
    }
    
    int* ans = malloc(n * sizeof(int));
    *returnSize = n;
    for(int i = 0; i < n; i++){
        ans[i] = diff/n;
    }
    diff -= n* (diff/n);
    
    int pos = 0;
    while(diff > 0){
        if(diff > (6 - ans[pos]) ){
            diff -= ( 6 - ans[pos] );
            ans[pos] = 6;            
        }
        else{
            ans[pos] += diff;
            diff = 0;
        }
        pos++;
    }
    return ans;
}