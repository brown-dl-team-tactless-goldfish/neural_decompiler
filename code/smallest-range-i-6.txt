#if 0
/* qsort */
int cmp(const void *a, const void *b){ return (*(int*)a - *(int*)b); }
int smallestRangeI(int* nums, int numsSize, int k){
    qsort(nums, numsSize, sizeof(int), cmp);
    if((nums[numsSize-1] - nums[0]) > 2*k){ return (nums[numsSize-1] - nums[0] - 2*k); }
    else return 0;    
}

#else
/* linear for min and max */
#define MAX(a, b) ((a>b)?a:b)
#define MIN(a, b) ((a<b)?a:b)

int smallestRangeI(int* nums, int numsSize, int k){
    int minValue = INT_MAX, maxValue = INT_MIN;
    for(int i = 0; i < numsSize; i++)
    {
        minValue = MIN(minValue, nums[i]);
        maxValue = MAX(maxValue, nums[i]);
    }
    if((maxValue - minValue) > 2*k){ return (maxValue - minValue - 2*k); }
    else return 0;
}
#endif