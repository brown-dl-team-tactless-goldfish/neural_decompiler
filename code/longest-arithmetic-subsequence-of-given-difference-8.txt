class Solution {
public:
    int longestSubsequence(vector<int>& arr, int difference) {
        int n = arr.size() ;
        vector<int>dp(n, 1) ;
        unordered_map<int, int>Map ;
        int ans = 1 ;
        Map[arr[0]] = 0 ;
        for(int i = 1 ; i < n; i++){
            int last = arr[i] - difference ;
            if(Map.find(last) != Map.end() ){
                int id = Map[last] ;
                dp[i] += dp[id] ;
                ans = max(ans, dp[i]) ;
            }
            Map[arr[i]] = i ;
        }
        return ans ;   
    }
};