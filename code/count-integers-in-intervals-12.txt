class CountIntervals {
    map<int, int> intervals; 
    int number = 0; 
public:
    CountIntervals() {}
    
    void add(int left, int right) {
        auto it = intervals.upper_bound(left); 
        if (it != intervals.begin() && prev(it)->second >= left) {
            number -= prev(it)->second - prev(it)->first + 1; 
            left = prev(it)->first; 
            right = max(right, prev(it)->second); 
            intervals.erase(prev(it)); 
        }
        while (it != intervals.end() && right >= it->first) {
            number -= it->second - it->first + 1; 
            right = max(right, it->second); 
            intervals.erase(it++); 
        }         
        intervals.insert({left, right}); 
        number += right - left + 1; 
    }
    
    int count() {
        return number; 
    }
};