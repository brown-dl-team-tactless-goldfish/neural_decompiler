vector<string> wordSubsets(vector<string>& A, vector<string>& B, vector<int> needed = vector<int>(26), vector<string> res = {}) {
	for (string &b : B) {
		vector<int> curNeeded(26);
		for (char c : b) ++curNeeded[c - 'a'];
		for (int i = 0; i < 26; ++i) needed[i] = max(needed[i], curNeeded[i]);
	}

	for (string &a : A) {
		vector<int> has(26);
		for (char c : a) ++has[c - 'a'];
		for (int i = 0; i < 26 && has[i] >= needed[i]; ++i)
			if (i == 25) res.push_back(a);
	}
	return res;
}