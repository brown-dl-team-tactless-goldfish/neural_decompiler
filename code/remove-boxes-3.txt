int removeBoxes(vector<int>& boxes) {
    
    memset(dp,-1,sizeof(dp));
    
    return solve(boxes, 0, boxes.size() - 1, 0);
    
}
int solve(vector<int>& boxes, int left, int right, int streak) {
    
    int res;
    
    if (left > right)
    {
        return 0;
        
    }
    
   else if (dp[left][right][streak] != -1) 
    {
        return dp[left][right][streak];
        
    }
    
    else if(left == right)
    {
        return  (streak+1)*(streak+1);
    }
    
    else
    {
         res = (streak+1)*(streak+1) + solve(boxes,left+1,right, 0);
        
        for(int i=left+1; i<=right; i++)
        {
            if(boxes[left] == boxes[i])
            {
                res = max(res,solve(boxes,left+1,i-1,0)+solve(boxes,i,right,streak+1));
            }
        }
    }
    
    dp[left][right][streak] = res;
    
    return res;
    
 
}