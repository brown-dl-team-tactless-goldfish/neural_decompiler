class Solution {
public:
    int numberOfPaths(vector<vector<int>>& g, int k) {
        int m = g.size(), n = g[0].size(), dp[50001][51]{};
        auto dfs = [&](auto && self, int i, int j, int mod)->int {
            if(i >= m || j >= n) return 0;
            if(i == m-1 && j == n-1) return (g[i][j]+mod)%k ? 0 : 1;
            int nxt_mod = (g[i][j]+mod)%k, key = i*n+j;
            if(!dp[key][nxt_mod]) {
                dp[key][nxt_mod] = (self(self, i+1, j, nxt_mod)+ self(self, i, j+1, nxt_mod))%1000000007;
            }
            return dp[key][nxt_mod];
        };

        return dfs(dfs, 0, 0, 0);
    }
};