char* intToRoman(int num) {
    
    char* str = NULL;
    char* rt = NULL;
    int k = 0, n = 0;
    int i, x, c, m, v, l, d;
    // 3999 ~ MMM CM XC IX
    // 3888 ~ MMM DCCC LXXX VIII, 11 digits at most
    
    str = (char*) malloc(12*sizeof(char));
    rt = str;
    
    v = num % 5; // mod five
    i = num % 10; // ones
    num /= 10;
    
    l = num % 5; // mod fifty
    x = num % 10; // tens
    num /= 10;
    
    d = num % 5; // mod five hundred
    c = num % 10; // hundreds
    
    m = num/10; // thousand
        
    if(m){
        for(n=0; n<m; n++){
            *str = 'M';
            str++;
        }
    }// thousand end

    if(c){
        if(d!=4){
            if(c>d){
                *str = 'D';
                str++;
            }
            for(n=0; n<d; n++){
                *str =  'C';
                str++;
            }
        }else{
            if(c>d){
                *str = 'C';
                str++;
                *str = 'M';
                str++;
            }else{
                *str = 'C';
                str++;
                *str = 'D';
                str++;
            }
        }
    }// hundred end

    if(x){
        if(l!=4){
            if(x>l){
                *str = 'L';
                str++;
            }
            for(n=0; n<l; n++){
                *str =  'X';
                str++;
            }
        }else{
            if(x>l){
                *str = 'X';
                str++;
                *str = 'C';
                str++;
            }else{
                *str = 'X';
                str++;
                *str = 'L';
                str++;
            }
        }
    }// ten end

    if(i){
        if(v!=4){
            if(i>v){
                *str = 'V';
                str++;
            }
            for(n=0; n<v; n++){
                *str =  'I';
                str++;
            }
        }else{
            if(i>v){
                *str = 'I';
                str++;
                *str = 'X';
                str++;
            }else{
                *str = 'I';
                str++;
                *str = 'V';
                str++;
            }
        }
    }// one end
    
    *str = 'ï¿½';
    // ALL DIGITS END
    
    return rt;
}