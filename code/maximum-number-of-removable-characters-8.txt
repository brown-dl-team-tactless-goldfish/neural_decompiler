class Solution {
public:
    //check --> tells if lcs between s and t is t
    bool check(string s,string t){
        int i=0,j=0;
        while(i<s.length() && j<t.length()){
            if(s[i]==t[j] ){
                i++;
                j++;
            }
            else 
                i++;
        }
        return j==t.length();
    }
    
    int maximumRemovals(string s, string p, vector<int>& rem) {
        int low = 0 , high = rem.size()-1;
        string temp = s;
        while(low<=high){
            int mid = low+(high-low)/2;
            //remove all characters from rem[0] to rem[mid] in temp;
            for(int i=0;i<=mid;i++)
                temp[rem[i]] = '*';
            if(check(temp,p)) //if p is still a subsequence in temp, try removing more characters 
                low = mid+1;
            else {
                for(int i=0;i<=mid;i++){
                    temp[rem[i]] = s[rem[i]];
                }                
                high = mid-1;                
            }
        }
        return low;
    }
};