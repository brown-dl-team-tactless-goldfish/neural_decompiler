class Solution {
public:
    vector<int> findAllPeople(int n, vector<vector<int>>& meetings, int firstPerson) {
        
        int nn=meetings.size();
        vector<pair<int,int>>ve[n+1];
        int i,j;
        
        for(i=0;i<nn;i++)
        {
            ve[meetings[i][0]].push_back({meetings[i][1],meetings[i][2]});
            ve[meetings[i][1]].push_back({meetings[i][0],meetings[i][2]});
            
            
        }
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>pq;
        
        vector<int>vis(n,0);
        
        pq.push({0,0});
        pq.push({0,firstPerson});
        
        while(!pq.empty())
        {
            int person=pq.top().second;
            int time=pq.top().first;
            pq.pop();
            if(vis[person])
                continue;
            vis[person]=1;
            
            for(auto it:ve[person])
            {
                if(!vis[it.first] and it.second>=time)
                {
                    pq.push({it.second,it.first});
                }
            }
        }
        vector<int>ans;
        for(i=0;i<n;i++)
        {
            if(vis[i])
                ans.push_back(i);
        }
        return ans;
        
    }
};