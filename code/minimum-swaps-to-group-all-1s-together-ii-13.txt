public class Solution {
	public int MinSwaps(int[] nums) {
		int i = 0, j = 0;
		int onesCount = 0, zerosCount = 0, swaps = nums.Length - 1;
		foreach(var num in nums) {
			if(num == 1)
				onesCount++;
		}

		for(i = 0, j = 0; i < nums.Length; i++) {
			if(nums[i] == 0)
				zerosCount++;
			if(i - j + 1 == onesCount) {
				swaps = Math.Min(swaps, zerosCount);
				if(nums[j++] == 0)
					zerosCount--;
			}
		}

		i = 0;
		j = nums.Length;
		zerosCount = 0;

		while(i < onesCount) {
			if(nums[i++] == 0)
				zerosCount++;
		}

		i--;
		swaps = Math.Min(swaps, zerosCount);

		while(i >= 0) {
			if(nums[i--] == 0)
				zerosCount--;
			if(nums[--j] == 0)
				zerosCount++;
			swaps = Math.Min(swaps, zerosCount);
		}

		return swaps;
	}
}