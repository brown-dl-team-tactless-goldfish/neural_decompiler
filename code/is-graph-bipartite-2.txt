class Solution {
public:
    bool mark(vector<vector<int>>& graph, int node, vector<int>& groupOf, int group) {
        if (groupOf[node]) return groupOf[node] == group;
        groupOf[node] = group;
        for (int connectedNode : graph[node]) {
            if (!mark(graph, connectedNode, groupOf, 3 - group)) return false;
        }
        return true;
        
    }

    bool isBipartite(vector<vector<int>>& graph) {
        int n = graph.size();
        vector<int> groupOf(n); 
        for (int i = 0; i < n; ++ i) {
            if (groupOf[i]) continue;
            if (!mark(graph, i, groupOf, 1)) return false;
        }
        return true;
    }
};