class Solution {
public:
    int countUnguarded(int m, int n, vector<vector<int>>& guards, vector<vector<int>>& walls) {
        vector<vector<int>> g(m,vector<int>(n,0));
        int count = 0;
        for(auto it: guards) g[it[0]][it[1]]=1;
        for(auto it: walls) g[it[0]][it[1]]=2;
        
        for(auto it : guards){
            int r = it[0] , c = it[1];
            
            for(int i = r+1 ; i<m ; i++){
                if(g[i][c]==2 || g[i][c]==1) break;
                g[i][c] = 3;
            }
            for(int i = r-1 ; i>=0 ; i--){
                if(g[i][c]==2 || g[i][c]==1) break;
                g[i][c] = 3;
            }
            
            for(int i = c+1 ; i<n ; i++){
                if(g[r][i]==2 || g[r][i]==1) break;
                g[r][i] = 3;
            }
            for(int i=c-1 ; i>=0 ; i--){
                if(g[r][i]==2 || g[r][i]==1) break;
                g[r][i] = 3;
            }
        }
        
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(g[i][j]==0) count++;
            }
        }
        return count;
    }
};