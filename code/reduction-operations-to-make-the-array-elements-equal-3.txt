  int reductionOperations(vector<int>& nums) {
        std::map<int, int> M; 
        for (int i=0;i<nums.size();++i) {
            ++M[nums[i]];
        }
        
        if (M.size()<=1) {
            return 0;
        }
    
        int nops = 0;
        
        while (true) {
            if (M.size()==1) {
                break;
            }
            
            auto largest = std::prev(M.end());
            int largest_val = largest->first;
            int c = largest->second;
            nops += c; 
            M.erase(largest_val);
            
            auto next_largest = std::prev(largest);
            int next_largest_val = next_largest->first;
            M[next_largest_val] += c; 
        }
        return nops;
    }