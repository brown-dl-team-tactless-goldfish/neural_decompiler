class Solution {
public:
  vector<int> nodesBetweenCriticalPoints(ListNode* head) {
    if(!head || !head->next || !head->next->next) return {-1, -1};
    ListNode *a = head, *b = head->next, *c = head->next->next;
    vector<int>v;
    int i = 0;
    while(c){
      if( (a->val < b->val && b->val > c->val) || (a->val > b->val && b->val < c->val) ) v.push_back(i); 
      i++, a = a->next, b = b->next, c = c->next;
    }
    if(v.size() < 2) return {-1, -1};
    int mini = v[1] - v[0];
    for(int i = 2; i != v.size(); i++) mini = min(mini, v[i] - v[i-1]);
    return{mini, v.back() - v[0]};
  }
};