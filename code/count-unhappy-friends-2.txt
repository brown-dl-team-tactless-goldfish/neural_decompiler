    int unhappyFriends(int n, vector<vector<int>>& preferences, vector<vector<int>>& pairs) {
        vector<vector<int>> vv;
        vector<bool> vUnhappy(n);
        for(auto& v:preferences){
            vector<int> dis(n,0);
            for(int i=0;i<v.size();i++) dis[v[i]] = i+1;
            vv.emplace_back(move(dis));
        }
        
        auto countUnhappy = [&](int x, int y, int u, int v){
            if(vv[x][y] > vv[x][u] && vv[u][v] > vv[u][x]) vUnhappy[x] = vUnhappy[u] = true;};
        
        
        for(int i=0;i<pairs.size();i++) for(int j=0;j<i;j++){
            int x=pairs[i][0], y=pairs[i][1], u=pairs[j][0], v=pairs[j][1];
            countUnhappy(x,y,u,v);
            countUnhappy(y,x,u,v);
            countUnhappy(x,y,v,u);
            countUnhappy(y,x,v,u);            
        }
        return count(vUnhappy.begin(), vUnhappy.end(), true);
    }