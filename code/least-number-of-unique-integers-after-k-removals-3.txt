int cmpfunc (const void * a, const void * b)
{
   return ( *(int*)a - *(int*)b );
}

int findLeastNumOfUniqueInts(int* arr, int arrSize, int k){
    qsort(arr, arrSize, sizeof(int), cmpfunc);
    int unique =0;
    int mapping[arrSize];
    int total_count =0;
    memset(mapping,0,sizeof(mapping));
    mapping[0]=1;
    for(int i=1; i<arrSize;i++){
        if(arr[i]!=arr[i-1]) total_count+=1;
        mapping[total_count]+=1;
    }
    
    unique=total_count+1;
    int temp[unique];
    
    for(int i=0; i<total_count+1;i++) temp[i]=mapping[i];

    qsort(temp,total_count+1, sizeof(int),cmpfunc);
    for(int i=0;i<total_count+1,k>0;i++){
        if(temp[i]<=k){
         k-=temp[i];
         unique-=1;
        }
        else return unique;
    }
    return unique;
}