public int NumPrimeArrangements(int n)
{
	int mod = 1000000007;
	bool IsPrime(int num)
	{
		if(num <= 1) return false;
		for (int i = 2; i <= num / 2; i++)
			if (num % i == 0)
				return false;

		return true;
	}

	int primeCount = Enumerable.Range(1, n).Where(IsPrime).Count();

	int MultiplyMod(int input, int mult) 
		=> (int)(((long)input * (long)mult) % mod);


	int Factorial(int count)
		=> Enumerable.Range(1, count).Aggregate(1, MultiplyMod);

	int x = Factorial(primeCount);
	int y = Factorial(n - primeCount);

	return MultiplyMod(x, y);
}