static struct RandomListNode * clone(struct RandomListNode * node) {
    struct RandomListNode * ret = malloc(sizeof(struct RandomListNode));
    
    ret -> label = node -> label;
    ret -> next = node -> next;
    ret -> random = node -> random;
    
    return ret;
}

struct RandomListNode *copyRandomList(struct RandomListNode *head) {
    
    if(!head) return head;

    for(struct RandomListNode * node = head ; node ;) {
        struct RandomListNode * clone_node = clone(node);
        //save next ptr
        struct RandomListNode * next = node -> next;        
        node -> next = clone_node;        
        node = next;
    }

    
    //fix random pointer of cloned node
    for(struct RandomListNode * node = head -> next ; node ; ) {
        if(node -> random) {
            node -> random = node -> random -> next;
        }
        node = node -> next ? node -> next -> next : NULL;
    }

    struct RandomListNode * result = head -> next;
    
    //untangle cloned list from original list.
    for(struct RandomListNode * node = head ; node ;) {
        struct RandomListNode * next = node -> next;
        if(node -> next) {
            node -> next = node -> next -> next;
        }
        node = next;
    }

    return result;   
}
