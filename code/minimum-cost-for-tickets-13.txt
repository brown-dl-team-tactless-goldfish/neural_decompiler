class Solution {
public:
    int solve(vector<int>& arr, vector<int>& costs, int i, vector<int>& dp){
        if(i >= arr.size()){
            return 0;
        }
        if(dp[i] != -1){
            return dp[i];
        }
        if(arr[i] == 0){
            return dp[i] = 0 + solve(arr, costs, i+1, dp);
        }
        // 1-day
        int a = costs[0] + solve(arr, costs, i+1, dp);
        // 7-day
        int b = costs[1] + solve(arr, costs, i+7, dp);
        // 30-day
        int c = costs[2] + solve(arr, costs, i+30, dp);
        return dp[i] = min(a, min(b,c));
    }
    int mincostTickets(vector<int>& days, vector<int>& costs) {
        vector<int> arr(366, 0);
        for(int i=0; i<days.size(); i++){
            arr[days[i]] = 1;
        }
        vector<int> dp(366, -1);
        return solve(arr, costs, 1, dp);
    }
};