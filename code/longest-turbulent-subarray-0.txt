int maxTurbulenceSize(int* arr, int arrSize){
    int cn = 1; 
    int max = 1;
    int diff;
//caseu 1;
    for(int i = 1; i < arrSize; i++){
        diff= arr[i] - arr[i-1];
        if(i%2 == 0){
            if(diff > 0){
                cn++;
            }
            else{
                max = (cn > max) ? cn : max;
                cn = 1;
            }
        }
        else{
            if(diff < 0){
                cn++;
            }
            else{
                max = (cn > max) ? cn : max;
                cn = 1;
            }            
        }
    }
    max = (cn > max) ? cn : max;
    
//case 2:
    cn = 1;
    for(int i = 1; i < arrSize; i++){
        diff= arr[i] - arr[i-1];
        if(i%2 == 0){
            if(diff < 0){
                cn++;
            }
            else{
                max = (cn > max) ? cn : max;
                cn = 1;
            }
        }
        else{
            if(diff > 0){
                cn++;
            }
            else{
                max = (cn > max) ? cn : max;
                cn = 1;
            }            
        }
    }  
    max = (cn > max) ? cn : max;
    return max;

}