class Solution {
public:
    bool dfs(vector<string>&w, string& r,int wordi, int wi, int ri, int rest, vector<int>&t, vector<int>&nt) {
        if(ri==r.size()) {
            if(rest==0 && t[r.back()-'A']!=0) {
                bool flag=true;
                for(string &s:w) {
                    if(t[s.back()-'A']==0 && s.size()>1) {
                        flag=false;break;
                    }
                }
                if(flag) return true;
            }
            return false;
        }
        if(wordi==w.size()) {
            int di=r[ri]-'A';
            if(t[di]==-1 && (nt[rest%10]==-1)) {
                t[di]=rest%10;
                nt[rest%10]=1;
                if(dfs(w,r,0,wi+1,ri+1,rest/10,t,nt)) return true;
                t[di]=-1;
                nt[rest%10]=-1;
            } else if(rest%10==t[r[ri]-'A']) {
                if(dfs(w,r,0,wi+1,ri+1,rest/10,t,nt)) return true;                
            }
            return false;
        }

        if(wi<w[wordi].size()) {
            int val=w[wordi][wi]-'A';
            if(t[val]!=-1) {
                if(dfs(w,r,wordi+1,wi,ri,rest+t[val],t,nt)) return true;    
            } else {
                for(int i=0;i<10;i++) {
                    if(nt[i]==-1) {
                        t[val]=i;
                        nt[i]=i;
                        if(dfs(w,r,wordi+1,wi,ri,rest+i,t,nt)) return true;
                        t[val]=-1;
                        nt[i]=-1;
                    }
                }                 
            } 
        } else {
            if(dfs(w,r,wordi+1,wi,ri,rest,t,nt)) return true;
        }
        return false;

    }
    bool isSolvable(vector<string>& words, string result) {
    vector<int> t(26,-1),nt(10,-1);
    int md=0;
    for(string t:words) md=max(md,(int)t.size());
    if(md>result.size()) return false;
    reverse(begin(result),end(result));
    for(string &tt:words) reverse(begin(tt),end(tt));
    return dfs(words,result,0,0,0,0,t,nt);
    }
};