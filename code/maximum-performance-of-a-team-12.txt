public int MaxPerformance(int n, int[] speed, int[] efficiency, int k) {
	long maxPerf = 0L, sumSpeed = 0L;
	var highestSpeeds = new SortedSet<(int Speed, int Index)>();
	var orderedIndices = Enumerable.Range(0, n)
		.OrderByDescending(i => efficiency[i]);
	foreach (int i in orderedIndices) {
		if (highestSpeeds.Count < k) {
			sumSpeed += speed[i];
			highestSpeeds.Add((speed[i], i));
		}
		else if (highestSpeeds.Min.Speed < speed[i]) {
			sumSpeed += speed[i] - highestSpeeds.Min.Speed;
			highestSpeeds.Remove(highestSpeeds.Min);
			highestSpeeds.Add((speed[i], i));
		}
		maxPerf = Math.Max(maxPerf, sumSpeed * efficiency[i]);
	}
	return (int)(maxPerf % 1_000_000_007L);
}