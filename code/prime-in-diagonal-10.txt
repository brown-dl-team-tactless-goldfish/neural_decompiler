public class Solution {
    private static bool isPrime(int value) {
        if (value <= 1)
            return false;

        if (value % 2 == 0)
            return value == 2;

        for (int d = 3; ; d += 2) {
            (int q, int r) = Math.DivRem(value, d);

            if (q < d)
                return true;
            if (r == 0)
                return false;
        }
    }

    public int DiagonalPrime(int[][] nums) {
        int result = 0;

        for (int i = 0; i < nums.Length; ++i)
            if (nums[i][i] > result && isPrime(nums[i][i]))
                result = nums[i][i];

        for (int i = 0; i < nums.Length; ++i)
            if (nums[nums.Length - 1 - i][i] > result && isPrime(nums[nums.Length - 1 - i][i]))
                result = nums[nums.Length - 1 - i][i];

        return result;
    }
}