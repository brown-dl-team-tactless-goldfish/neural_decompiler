class Solution {
public:
    int numTilePossibilities(string tiles) {
        unordered_map<char,int> myv;
        for(char c : tiles) myv[c-'A']++;
        int res = 0;
        for(int i = 1 ; i <= tiles.length() ; i++)
            res += dfs(myv,i);
        return res;
    }
    int dfs(unordered_map<char,int>& myv, int reminder){
        if(reminder == 0) return 1;
        int res = 0;
        for(auto& it : myv){
            if(it.second > 0){
                it.second--;
                res += dfs(myv,reminder-1);
                it.second++;
            };
        }
        return res;
    }
};