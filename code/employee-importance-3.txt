
class Solution {
public:
    
    void dfs(int& totalImportance, int curId, unordered_map<int, Employee*> adjList)
    {
        totalImportance += adjList[curId]->importance;
        
        for(auto& subordinate: adjList[curId] -> subordinates)
        {
            dfs(totalImportance, subordinate, adjList);
        }
    }
    
    int getImportance(vector<Employee*> employees, int id) {
     
        int totalImportance{0};
        
        unordered_map<int, Employee*> adjList;
        
        for(int i = 0; i < employees.size(); i++)
        {
            adjList[employees[i] -> id] = employees[i];
        }

        dfs(totalImportance, id, adjList);

        return totalImportance;
    }
};