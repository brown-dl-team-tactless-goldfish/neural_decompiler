    public class Solution
    {
        int res = int.MaxValue;
        public int MinimumTimeRequired(int[] jobs, int k)
        {
            DFS(jobs, jobs.Length - 1, new int[k], 0);
            return res;
        }
        
        private void DFS(int[] jobs, int idx, int[] sum, int max)
        {
            if (idx < 0)
            {
                res = Math.Min(res, max);
                return;
            }
            if (max >= res) return;
            for (int i = 0; i < sum.Length; i++)
            {
                if (i > 0 && sum[i - 1] == 0) continue;
                sum[i] += jobs[idx];
                DFS(jobs, idx - 1, sum, Math.Max(max, sum[i]));
                sum[i] -= jobs[idx];
            }
        }
    }