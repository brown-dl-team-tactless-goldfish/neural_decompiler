class Solution {
public:
    // O(NlogN) - time
    // O(N) - space
    int findMaxValueOfEquation(vector<vector<int>>& points, int k) {
        int n = points.size();
        
        auto comp = [&points](const pair<int,int>& p1, const pair<int,int>& p2){
            return p1.first < p2.first;
        };
        priority_queue<pair<int,int>, vector<pair<int,int>>, decltype(comp)> pq(comp);
        
        int ans = INT_MIN;
        for(int i=0; i<n; i++)
        {
            while(!pq.empty() && points[i][0] - pq.top().second > k)
            {
                pq.pop();
            }
            
            if(!pq.empty())
            {
                auto& p = pq.top();
                ans = max(ans, p.first + points[i][0] + points[i][1]);
            }
            
            pq.push({points[i][1] - points[i][0], points[i][0]});
        }
        
        return ans;
    }
};