class Solution {
public:
    bool findout(vector<int>& ranks, int totalcars, unsigned long long minutes){
        long long  n=0;
        
        for(auto x: ranks){
            unsigned long long curr = minutes / x;
            n+= (long long)sqrt(curr);
        }
        
        return n>= totalcars ;
    }
    long long repairCars(vector<int>& ranks, int cars) {
        int n= ranks.size();
        
        unsigned long long l=1, r= 1e18;
        
        long long ans=1;
        while(l <= r){
            unsigned long long midminutes= l+ (r-l)/2;
            cout<<midminutes<<endl;
            bool can= findout(ranks, cars, midminutes);
            if( can ){
                ans= midminutes;
                r= midminutes -1;
            }
            else
                l= midminutes+1;
        }
        
        return ans;
    }
};r