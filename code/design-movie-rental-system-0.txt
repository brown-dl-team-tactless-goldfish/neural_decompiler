class MovieRentingSystem {
public:
    
    map<int ,set<pair<int,int>>> mp;      // movie : { price ,shop }
    map< pair<int,int> ,int > pr;               // { shop ,movie } : price
    set<vector<int>> rented;                   // { price ,shop ,movie }
    
    // entry ={ shop ,movie ,price }
    MovieRentingSystem(int n, vector<vector<int>>& entries) {
        for( auto &val : entries ){
            pr[ { val[0] ,val[1] } ] = val[2];
            mp[val[1]].insert( { val[2] ,val[0] } );
        }
    }
    
    vector<int> search(int movie) {
        int c = 1;
        vector<int> ans = {};
        for( auto &val : mp[movie] ){
            ans.push_back( val.second );
            if( c == 5 ) break;
            c++;
        }
        return ans;
    }
    
    void rent(int shop, int movie) {
        int paisa = pr[ { shop ,movie } ];
        mp[movie].erase( { paisa ,shop } );
        rented.insert( { paisa ,shop ,movie } );
    }
    
    void drop(int shop, int movie) {
        int paisa = pr[ { shop ,movie } ];
        rented.erase( { paisa ,shop ,movie } );
        mp[movie].insert( { paisa ,shop } );
    }
    
    vector<vector<int>> report(){
        vector<vector<int>> ans;
        int c = 1;
        
        for( auto &val : rented ){
            ans.push_back( { val[1] ,val[2] }  );
            if( c == 5 ) break;
            c++;
        }
        return ans;
    }
};