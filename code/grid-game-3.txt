class Solution {
public:
    long long gridGame(vector<vector<int>>& grid) {
       long long  m=2,n=grid[0].size(),ans=LLONG_MAX,sum=0,upper=0,lower=0;
        vector<vector<long long>>mat(m,vector<long long>(n,0));
        for(int i=0;i<n;i++)
           sum=mat[0][i]=sum+grid[0][i];// store prefix sum from starting for 0th row
        sum=0;
      for(int i=n-1;i>=0;i--)
          sum=mat[1][i]=grid[1][i]+sum;  //store prefix sum from end  for 1st row
        upper=mat[0][n-1];//sum of 0th row
        lower=mat[1][0]; //sum of 1st row
        for(int i=0;i<n;i++){
         long long temp=max(upper-mat[0][i],lower-mat[1][i]); /* at any position i the second robot can choose either 0th row to maximize the sum or 1st row*/
            ans=min(ans,temp); /* we will force second robot to take minimum of all the max that we calculate in above line. */
        }
        return ans;
        
    }
};