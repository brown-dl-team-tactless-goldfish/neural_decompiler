class Solution {
public:
    vector<bool>vis;
    int n;
    int dfs(int u,int ignore,vector<vector<int>>& graph)
    {
        int res=1;
        vis[u]=true;
        for(int v=0;v<n;v++)
        {
            if(v==ignore)
                continue;
            if(!vis[v] && graph[u][v])
                res+=dfs(v,ignore,graph);
        }
        return res;
    }
    int minMalwareSpread(vector<vector<int>>& graph, vector<int>& initial) 
    {
        n=graph.size();
        int M=INT_MAX,node;
        for(auto &x:initial)
        {
            vis.clear();
            vis.resize(n,false);
            int curr=0;
            for(auto &y:initial)
            {
                if(x==y)
                    continue;
                if(!vis[y])
                    curr+=dfs(y,x,graph);
            }
            if(curr<M || (curr==M && x<node))
            {
                M=curr;
                node=x;
            }
        }
        return node;
    }
};