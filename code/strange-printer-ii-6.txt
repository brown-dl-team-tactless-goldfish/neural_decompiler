class Solution:
    def isPrintable(self, targetGrid: List[List[int]]) -> bool:
        m = len(targetGrid)
        n = len(targetGrid[0])
        left = [n] * 65
        right = [0] * 65
        top = [m] * 65
        bottom = [0] * 65
        cnt = [0] * 65
        colors = set([])
        for i in range(m):
            for j in range(n):
                colors.add(targetGrid[i][j])
                left[targetGrid[i][j]] = min(left[targetGrid[i][j]],j)
                right[targetGrid[i][j]] = max(right[targetGrid[i][j]],j)
                top[targetGrid[i][j]]=min(top[targetGrid[i][j]],i)
                bottom[targetGrid[i][j]]=max(bottom[targetGrid[i][j]],i)
                cnt[targetGrid[i][j]]+=1
        while colors:
            to_delete = None
            # Update unknown.
            unknown = [[0 for _ in range(n)] for _ in range(m)]
            for i in range(m):
                for j in range(n):
                    if i==0 and j==0:
                        unknown[i][j]=1 if targetGrid[i][j]==0 else 0
                    elif i==0:
                        unknown[i][j]=unknown[i][j-1]
                        if targetGrid[i][j]==0:
                            unknown[i][j]+=1
                    elif j==0:
                        unknown[i][j]=unknown[i-1][j]
                        if targetGrid[i][j]==0:
                            unknown[i][j]+=1
                    else:
                        unknown[i][j]=unknown[i][j-1]+unknown[i-1][j]-unknown[i-1][j-1]
                        if targetGrid[i][j]==0:
                            unknown[i][j]+=1
            for color in colors:
                # Check if possible to remove color.
                l, r, t, b = left[color], right[color], top[color], bottom[color]
                unknown_cnt = unknown[b][r]
                if l and t:
                    unknown_cnt +=unknown[t-1][l-1]
                if l:
                    unknown_cnt -= unknown[b][l-1]
                if t:
                    unknown_cnt-=unknown[t-1][r]
                if unknown_cnt + cnt[color] == (r-l+1)*(b-t+1):
                    to_delete=color
                    break
            if not to_delete:
                return False
            colors.remove(to_delete)
            for i in range(m):
                for j in range(n):
                    if targetGrid[i][j]==to_delete:
                        targetGrid[i][j]=0
        return True