// max length is 10000
int hashxy(int x, int y) {
    return (x*16384)+y;
}

bool isPathCrossing(char *path){
    int length = strlen(path);
    int *hash = (int *)malloc(length*sizeof(int));
    int cnt = 0;

    int x = 0;
    int y = 0;
    for(int i=0;i<length;i++) {
        switch (path[i]) {
            case 'N':
                y++;
                break;
            case 'S':
                y--;
                break;
            case 'E':
                x++;
                break;
            case 'W':
                x--;
                break;
        }
        // Origin
        if(x == 0 && y == 0) return true;
        for(int j=0;j<cnt;j++) {
            if(hashxy(x, y) == hash[j]) {
                free(hash);
                return true;
            }
        }
        hash[cnt++] = hashxy(x, y);
        
        // printf("%d, %d\n", x, y);
    }
    free(hash);            
    return false;
}
