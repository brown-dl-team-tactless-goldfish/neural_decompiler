public class Solution {
    public int MinimumEffort(int[][] tasks) {
     
        Array.Sort(tasks, (a,b) => (b[1] - b[0]) - (a[1] - a[0]));
        
        int res = 0, remainingEnergy = 0;
        foreach(var task in tasks)
        {
            // remainingEnergy is not enough to start tasks[i]
            if(remainingEnergy < task[1])
            {
                // add (task[1] - remainingEnergy) to the total needed energe
                res += task[1] - remainingEnergy;
                // remainingEnergy after done tasks[i] 
                remainingEnergy = task[1] - task[0];
            }
            else
            {
                // if remainingEnergy is enough to start tasks[i]
                // then use remainingEnergy to do tasks[i] 
                remainingEnergy -= task[0];
            }
        }
        
        return res;
    }
}