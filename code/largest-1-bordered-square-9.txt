public class Solution {
    public int Largest1BorderedSquare(int[][] grid) {
        int r = grid.Length;
        int c = grid[0].Length;
        
        int[][] rgrid = new int[r][];
        int[][] cgrid = new int[r][];
        int ans = 0;
        for (int i = 0; i < r; i++)
        {
            rgrid[i] = new int[c];
            cgrid[i] = new int[c];
            
            for (int j = 0; j < c; j++)
            {
                if (grid[i][j] == 1)
                {
                    rgrid[i][j] = 1 + (j > 0 ? rgrid[i][j - 1] : 0);
                    cgrid[i][j] = 1 + (i > 0 ? cgrid[i - 1][j] : 0);
                    
                    int temp = Math.Min(rgrid[i][j], cgrid[i][j]);
                    
                    for (int k = temp - 1; k >= 0; k--)
                    {
                        if (cgrid[i][j-k] >= k + 1 && rgrid[i-k][j] >= k + 1)
                        {
                            ans = Math.Max(ans, (k + 1) * (k + 1));
                            break;
                        }
                    }
                    
                }
            }
        }
        
        return ans;
    }
}