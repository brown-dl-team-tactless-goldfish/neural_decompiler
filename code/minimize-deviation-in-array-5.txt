class Solution {
public:
    int minimumDeviation(vector<int>& nums) {
        int res = INT_MAX;
        int xmax = 0;
        priority_queue<pair<int,int>> q; //store cur value and max possible current value
        for(auto x:nums){
            int y = x;
            if(x % 2 == 0){
                while(x%2 == 0) x/=2;
            }
            else{
                y = x*2;
            }            
            q.push(pair(-x, y));
            xmax = max(xmax, x);
        }
        
        int originMax = xmax;
        while(1){
            auto [x,y] = q.top(); q.pop();
            x = -x;
            res = min(res, xmax-x);
            if(x<y){
                q.push(pair(-x*2, y));
                xmax = max(xmax, x*2);
            }
            else break; //the current smallest cannot be any larger.     
        }
        return res;
    }
};