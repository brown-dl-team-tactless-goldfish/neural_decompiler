/**
 * Definition for a Node.
 * struct Node {
 *     int val;
 *     int numChildren;
 *     struct Node** children;
 * };
 */

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
void postordertravel(struct Node* root, int* returnSize,int*ptr);

void postordertravel(struct Node* root, int* returnSize,int*ptr){
    if(!root){
        return;
    }
    for(int i=0;i<root->numChildren;i++){
        postordertravel(root->children[i], returnSize,ptr);
    }
    ptr[(*returnSize)++]=root->val;

}

int* postorder(struct Node* root, int* returnSize) {
    *returnSize=0;
    int *ptr=(int*)malloc(sizeof(int)*10000);
    postordertravel(root, returnSize,ptr);
    return ptr;
}
