class Solution {
public:
    double maxAverageRatio(vector<vector<int>>& classes, int k) {
        int n = classes.size();
        priority_queue<pair<double , pair<int ,int> >> pq;
        double sum = 0;
        
        for(auto & x : classes){
            double avg = (double)x[0]/(double)x[1];
            sum += avg;
            
            double next = (double)(x[0]+1)/(double)(x[1]+1);
            
            double diff = next - avg;
            
            pq.push({diff , {x[0] , x[1]}});
        }
        
        while(k > 0){
            auto x = pq.top();
            pq.pop();
            auto p = x.second;
            sum -= (double)p.first/p.second;
            p.first = p.first +1;
            p.second = p.second + 1;
            
            double avg = (double)p.first/(double)p.second;
            sum += avg;
            double next = (double)(p.first + 1)/(double)(p.second + 1);
            
            double diff = next - avg;
            
            pq.push({diff , p});
            k--;
        }
        
        return (double)sum/n;
    }
};