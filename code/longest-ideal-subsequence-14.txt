class Solution {
public:
    int longestIdealString(string s, int k) {
        int n = s.length();
        vector<long long> dp(n,1);
        vector<int> pos(26, -1);
        long long maxi = 1;
        for(int i = 0; i < n; i++){
            for(int c = max(0,(s[i]-'a' - k)); c <= min(25,(s[i]-'a' + k)); c++){
                if(pos[c] != -1){
                    dp[i] = max(dp[i], 1 + dp[pos[c]]);
                }
            }
            maxi = max(maxi, dp[i]);
            pos[s[i]-'a'] = i;
        }
        
        return maxi;
    }
};