class Solution {
public:

// marr= modified array it contains  no of customer present during shopkeeper is grumpy
// find maximum subarray given size X 
// add the sum to c ( it represent sum during shopkeeper is not grumpy)

    
        
    int maxSatisfied(vector<int>& c, vector<int>& g, int X) 
    {
        
        
        int n=c.size();
        int marr[n];
        int ans=0;
        memset(marr,0,sizeof(marr));
		
        for(int i=0;i<n;i++)  
        {
            if(g[i]==1) marr[i]=c[i];
            else ans+=c[i];
        }
        int wsum=0;
        for(int i=0;i<X;i++) wsum+=marr[i];
        int mwsum=wsum;
        
        for(int i=X;i<n;i++)
        {
            wsum-=marr[i-X];
            wsum+=marr[i];
            mwsum=max(mwsum,wsum);
        }
        
        return ans+mwsum;
        
        
        
        
        
        return  0;
       
        
        
        
        
        
    }
};