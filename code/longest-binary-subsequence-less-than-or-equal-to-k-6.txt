class Solution {
public:
    int longestSubsequence(string s, int k) {
        const int N = s.size();
        
        int zeros = 0;
        for (int i = 0; i < N; ++i) {
            if (s[i] == '0') {
                ++zeros;
            }
        }
        
        int ones = 0;
        long tmp = 0;
        for (int i = N-1, j = 0; i >= 0 && j <= 30; --i) {
            if (s[i] == '1') {
                if (tmp + (1L << j) <= k) {
                    tmp += (1L << j);
                    ++ones;
                    ++j;
                } else {
                    break;
                }
            } else {
                ++j;
            }
        }
        
        return zeros + ones;
    }
};