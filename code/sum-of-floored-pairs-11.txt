int sumOfFlooredPairs(vector<int>& nums) {
        long long ans=0,mod=1000000007,p=0;
        sort(nums.begin(),nums.end());
        int n=nums.size();
        for(int i=0;i<n;i++)
        {
            if(i>0 && nums[i]==nums[i-1])
            {
                ans=(ans+p)%mod;
                continue;
            }
            int k=1;
            p=0;
            while(nums[i]*k<=nums[n-1])
            {
                int l=lower_bound(nums.begin()+i,nums.end(),nums[i]*k)-nums.begin();
                int r=lower_bound(nums.begin()+l,nums.end(),nums[i]*(k+1))-nums.begin();
                p=(p+ (long long) k*(r-l) )%mod;
                if(r==n)
                    break;
                k=nums[r]/nums[i];
            }
            ans=(ans+p)%mod;
        }
        return ans;
    }