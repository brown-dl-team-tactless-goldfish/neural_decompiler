  string longest_common_substring( string &s1 , string &s2)
    {
        int m=s1.size();
        int n=s2.size();
        
        vector<vector<string>> dp(m+1 , vector<string>(n+1 , ""));
      //  string ans="";
         for(int i=1;i<=m;i++)
         {
             for(int j=1;j<=n;j++)
             {
                 if(s1[i-1]==s2[j-1])
                 {
                     dp[i][j] = dp[i-1][j-1] + s1[i-1];
                 }
                 else
                 {
                     if(dp[i-1][j].size()>dp[i][j-1].size())
                     {
                         dp[i][j]=dp[i-1][j];
                     }
                     else
                     {
                         dp[i][j]=dp[i][j-1];
                     }
                 }
             }
         }
          
          return dp[m][n];
        
        
    }
    string shortestCommonSupersequence(string str1, string str2) {
        
        string ans=longest_common_substring(str1 , str2);
        string res="";
        int i=0 , j=0;
        for(char c : ans)
        {
            while( c!=str1[i])
            {
                res+=str1[i];
                i++;
            }
            
            while(c!=str2[j])
            {
                res+=str2[j];
                j++;
            }
            
            res+=c;
            i++;
            j++;
        }
        
        while(i<str1.size())
        {
            res+=str1[i];
            i++;
        }
        
         while(j<str2.size())
        {
            res+=str2[j];
            j++;
        }
        
        return res;
        
    }