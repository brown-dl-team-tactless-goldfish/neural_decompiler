//
//find each row peaks
//
int* findRowPeakElement(int* nums, int numsSize, int* returnSize);

int* findPeakGrid(int** mat, int matSize, int* matColSize, int* returnSize){
    int i, j;
    
    int* ans = malloc(2 * sizeof(int));
    *returnSize = 2; 
    
    int* rowPeak;  
    int* rowPeakSize = malloc(sizeof(int));
    
    for(i = 0; i < matSize; i++){
        rowPeak = findRowPeakElement(mat[i], * matColSize, rowPeakSize);
        int col =0;
        for(j = 0; j < (*rowPeakSize); j++){
            col = rowPeak[j];
            if( i > 0 && mat[i][col] < mat[i-1][col])
                continue;

            if(i < (matSize -1) && mat[i][col] < mat[i+1][col])
                continue;

            ans[0] = i;
            ans[1] = col;
            goto exit;
        }
    }
    
    exit:
    free(rowPeak);
    free(rowPeakSize);
    return ans;
}


int* findRowPeakElement(int* nums, int numsSize, int* returnSize){ 
    
    int i;
    int* ans = malloc((numsSize/2 + 1)* sizeof(int));  //peark no more than (half + 1)
    int idx = 0;
    for(i = 0; i < numsSize; i++){
        if(i > 0 && nums[i] < nums[i-1])
            continue;
        if(i < (numsSize -1) && nums[i] < nums[i+1])
            continue;
        ans[idx] = i;
        idx++;
    }
    
    ans = (int*)realloc(ans, idx *sizeof(int));
    * returnSize = idx;
    
    return ans;
}