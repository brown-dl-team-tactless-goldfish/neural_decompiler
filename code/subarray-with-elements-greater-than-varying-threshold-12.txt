int validSubarraySize(vector<int>& nums, int threshold) 
{
	vector<pair<int,int>> s1,s2;
	int n=nums.size(),r1[n],r2[n];
	for(int i=0;i<n;i++)
	{
		while(!s1.empty()&&nums[i]<=s1.back().first) s1.pop_back();
		r1[i]=s1.empty() ? -1 : s1.back().second;
		s1.push_back({nums[i],i});

		while(!s2.empty()&&nums[n-i-1]<=s2.back().first) s2.pop_back();
		r2[n-i-1]=s2.empty() ? n : r2[n-i-1]=s2.back().second;

		s2.push_back({nums[n-i-1],n-i-1});
	}
	for(int i=0;i<n;i++)
		if(nums[i]>threshold/(r2[i]-r1[i]-1)) return r2[i]-r1[i]-1;

	return -1;
}