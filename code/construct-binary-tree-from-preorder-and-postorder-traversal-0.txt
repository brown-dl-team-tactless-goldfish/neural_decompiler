struct TreeNode* helper(int* pre, int preS, int preE, int* post, int poS, int poE);

struct TreeNode* constructFromPrePost(int* pre, int preSize, int* post, int postSize) {
    return helper(pre, 0, preSize - 1, post, 0, postSize - 1);
}

struct TreeNode* helper(int* pre, int preS, int preE, int* post, int poS, int poE) {
    if(preS > preE) return NULL;
    struct TreeNode* root = malloc(sizeof(struct TreeNode));
    memset(root, 0, sizeof(struct TreeNode));
    root->val = pre[preS];
    if(preS != preE) {
        int i = 0;
        for (i = poS; i <= poE; i++) if(post[i] == pre[preS + 1]) break;
        int lenL = i - poS + 1;
        root->left = helper(pre, preS + 1, preS + lenL, post, poS, i);
        root->right = helper(pre, preS + lenL + 1, preE, post, i + 1, poE - 1);
        
    }
    return root;
}