int measurePrefix(char ** strs, int strsSize, char * referenceStr) {
    int charCounter;
    int strCounter;

    for(charCounter = 0; referenceStr[charCounter] != '\0'; ++charCounter) {
        
        for(strCounter = 1; strCounter < strsSize; ++strCounter) {
            if(referenceStr[charCounter] != strs[strCounter][charCounter]) {
                return charCounter;
            }
        }
    }
    return charCounter;
}

char * longestCommonPrefix(char ** strs, int strsSize){
    char * referenceStr;
    int prefixLen = 0;
    char * prefixStr;
    int i;
    
    if(strsSize != 0) {
        referenceStr = strs[0];
        prefixLen = measurePrefix(strs, strsSize, referenceStr);
    }
    
    prefixStr = malloc(prefixLen +1);
    for(i = 0; i < prefixLen; ++i) {
        prefixStr[i] = referenceStr[i];
    }
    prefixStr[i] = '\0';
    return prefixStr;
}