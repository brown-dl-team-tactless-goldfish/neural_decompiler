class Solution {
public:
    const int mod = 1e9 + 7;
    void mul(int& a, int b) {
        a = ((long long)a * b) % mod;
    }
    int numberOfWays(string corridor) {
        int n = corridor.size();
        int seat = 0;
        for (char c : corridor) {
            if (c == 'S') ++seat;
        }
        if (seat & 1 || seat == 0) return 0;
        int sol = 1;
        int count = 0;
        for (int i = 0; i < n; i++) {
            if (corridor[i] == 'S') {
                ++count;
            }
            if (corridor[i] == 'S' && i + 1 < n && corridor[i + 1] == 'P') {
                if (count % 2 == 0) {
                    int j = i + 1;
                    while (j < n && corridor[j] == 'P') {
                        ++j;
                    }
                    if (j < n) {
                        int len = j - i;
                        mul(sol, len);
                    }
                }
            }
        }
        return sol;
    }
};