
class Solution {
  public:
    int numMatchingSubseq(string S, vector<string> &words) {
        int res = 0;
        vector<vector<int>> alpha(26);
        for (int i = 0; i < S.size(); i++) {
            alpha[S[i] - 'a'].push_back(i);
        }
        for (string word : words) {
            res += isMatch(word, alpha);
        }
        return res;
    }
    int isMatch(string &word, vector<vector<int>> &alpha) {
        int index = 0;
        for (int c : word) {
            auto it = lower_bound(alpha[c - 'a'].begin(), alpha[c - 'a'].end(),
                                  index);
            if (it == alpha[c - 'a'].end() || index > *it) {
                return 0;
            }
            index = *it + 1;
        }
        return 1;
    }
};