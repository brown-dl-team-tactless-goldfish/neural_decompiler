#include <stdlib.h>
#include <string.h>

int* dp;
int helper(int*, int, int);

int combinationSum4(int* nums, int numsSize, int target){
    int size = target + 1;
    dp = (int*) malloc(size * sizeof(int));
    memset(dp, -1, size * sizeof(*dp));
    dp[0] = 1;

    return helper(nums, numsSize, target);
}

int helper(int* nums, int numsSize, int target) {
    if (dp[target] != -1) {
        return dp[target];
    }

    int count = 0;
    for (int i = 0; i < numsSize; i++) {
        if (nums[i] <= target) {
            count += helper(nums, numsSize, target - nums[i]);
        }
    }
    dp[target] = count;
    return count;
}