/* Write your T-SQL query statement below */
-- create a CTE for all player with column: player_id,  next  (the date after first logged in)
-- CTE left join activity on player_id = player_id, event_date=next 
        --(meaning the person logged in on the next day will be joined) 
        --(using left join cus you want to keep everyone logged in even they didn't comeback the next day)
-- count(p2)/count(*)  
    -- (if a person returned, player_id will be joined, otherwise will be null)
    -- (so counting it will return the numer of player comeback the next day)
    -- (basically counting other columns will works too)



with cte as (
    select player_id
        , dateadd(day, 1,min(event_date)) as next  -- get the date after first event_date
    from activity
    group by player_id
)
, two_day as(
    select c.player_id as p1, a.player_id as p2  -- select any column from each tabel would work as well
    from cte c left join activity a 
    on c.player_id  = a.player_id and c.next = a.event_date  -- joining the player who come back on the next day
)
select cast(count(p2)*1.0/count(*) as decimal(5,2)) as fraction from two_day  -- using 1.0 to avoid int calculation
