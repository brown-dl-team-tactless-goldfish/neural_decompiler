class Solution {
private:
    int solve(vector<int>& A, int l, int r, int t){
        if(l > r) return -1;
        int mi = *min_element(A.begin()+l, A.begin()+(r+1));
        double tar = t/(r-l+1);
        if(mi > tar) return r-l+1;
        int prev = l;
        for(int i = l; i <= r; i++){
            if(A[i] <= tar){
                int res = solve(A, prev, i-1, t);
                if(res != -1) return res;
                prev = i+1;
            }
        }
        if(A[r] > tar) return solve(A, prev, r, t);
        return -1;
    }
public:
    int validSubarraySize(vector<int>& A, int t) {
        return solve(A, 0, A.size()-1, t);
    }
};