int minFlipsMonoIncr(char * S) {
    if (*S == '\0') return 0;
    int size = strlen(S);
    
    // Each index of each array has a number indicating how many 1's or 0's there are to the left or right of that same position on the string
    int ArrayOnes[size];
    int ArrayZeros[size];
    
    // Itirate through string and fill above arrays 
    int count1 = 0;
    int count0 = 0;
    int index0 = size - 1;
    char *Tracker1 = S;
    char *Tracker0 = S + size - 1;
    for (int i = 0; i < size; ++i) {
        if (*Tracker1 == '1') {
            ++count1;
            ArrayOnes[i] = count1;
        } else {
            ArrayOnes[i] = count1;
        }
        Tracker1 += 1;
        
        if (*Tracker0 == '0') {
            ++count0;
            ArrayZeros[index0] = count0;
        } else {
            ArrayZeros[index0] = count0;
        }
        Tracker0 -= 1;
        --index0;
    }
    
    // At each position, add up the # of 0's to the right and the # of 1's to the left and compare to MinFlips
    int MinFlips = count1; // count1 also represents the number of flips needed to make the whole string 0's 
    for (int i = 0; i < size; ++i) {
        if ((ArrayOnes[i]+ArrayZeros[i]-1) < MinFlips) {
            MinFlips = ArrayOnes[i]+ArrayZeros[i]-1; // Minus 1 because the '1' or '0' at the current position does not count towards the flips
        }
    }
    
    return MinFlips;
}