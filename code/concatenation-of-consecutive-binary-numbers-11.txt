class Solution {
public:
    int mod = 1e9 + 7 ; 
    #define ll long long int 
    void FastIO()
 {
 ios_base::sync_with_stdio(0);cin.tie(0);

  }
    int concatenatedBinary(int n) {
        FastIO();
       ll ans = 0 ; 
        int cur =0 ;
        for(int i = 1 ; i <= n; i++)
        {
            // check if the no. is power of 2 if yes increase cur by as 1 extra bit added 
            if((i & (i-1)) == 0)
                cur++;
        
            //shift the current no. curr bits forward 
            ans = (ans << cur)%mod;
           // like 6 << 2 gives 11000 
            // 11000 = 24 + 3 = 27
            ans += i%mod;
           // cout<<ans<<" ";
        }
        return ans;
    }
};