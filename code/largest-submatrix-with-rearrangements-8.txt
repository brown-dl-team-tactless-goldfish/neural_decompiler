class Solution {
    void printm(const vector<vector<int>>& mat) {
        int m = mat.size();
        int n = mat[0].size();
        for (int i=0; i<m; i++) {
            for (int j=0; j<n; j++) {
                cout << mat[i][j] << ", ";
            }
            cout << endl;
        }
    }
public:
    int largestSubmatrix(vector<vector<int>>& matrix) {
        int m = matrix.size();
        int n = matrix[0].size(), ans=0;
        for (int j=0; j<n; j++) {
            for (int i=1; i<m; i++) {
                if (matrix[i-1][j]>=1 && matrix[i][j]==1)
                    matrix[i][j] = matrix[i-1][j]+1;
            }
        }
        //printm(matrix);
        for (int i=0; i<m; i++) {
            map<int, int> mp;
            for (int j=0; j<n; j++) {
                if (matrix[i][j]>0) {
                    mp[matrix[i][j]]++;
                }
            }
            int val = 0;
            for (auto it=mp.rbegin(); it!=mp.rend(); it++) {
                val += it->second;
                int curr = (it->first) * val;
                ans = max(ans, curr);
            }
        }
        return ans;
    }
};