// this is a math problem.
// sum a * x + b * y ... = 1
// means the Greatest Common Divisor (gcd) x, y ... is 1.
// those subset exist unless the gcd of all nums greater than 1.
// remenber to handle duplicate and special case.

int gcd(int a, int b) {
    // Greatest Common Divisor
    while (b) {
        int r = a % b;
        a = b;
        b = r;
    }
    return a;
}

class Solution {
public:
    bool isGoodArray(vector<int>& nums) {
        // sort and remove duplicate.
        auto nums_set = set<int>(nums.begin(), nums.end());
        nums = vector<int>(nums_set.begin(), nums_set.end());
        
        // special case.
        if(nums[0] == 1) { return true; }
        else if(nums.size() < 2) { return false; }
        
        // calculate gcd
        int c = gcd(nums[0], nums[1]), i = 2;
        while(c != 1 and i < nums.size()) {
            c = gcd(c, nums[i]);
            i++;
        }
        return c == 1;
    }
};