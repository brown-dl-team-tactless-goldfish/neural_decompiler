class Solution {
public:
    int tallestBillboard(vector<int>& rods) {
        auto sum = accumulate(rods.begin(), rods.end(), 0);
        unordered_map<int, State> pre = {{0, State{}}}, cur;
        for(auto x:rods){
            for(const auto& [val, state] :pre){
                cur[val].update(state, 0);
                cur[val+x].update(state, x);
                cur[val-x].update(state, -x);
            }
            pre = move(cur);
        }
        return pre[0].max_positive;
    }
    
    struct State{
        void update(State s, int x){
            if(x>0) s.max_positive += x;       
            max_positive = max(max_positive, s.max_positive);
        }
        int max_positive = 0;
    };
};