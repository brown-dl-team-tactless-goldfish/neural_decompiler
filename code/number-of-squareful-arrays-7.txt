int numSquarefulPerms(vector<int> A, int p = -1, int res = 0) {
  if (p == A.size() - 1) return 1;
  unordered_set<int> s;
  for (auto i = p + 1; i < A.size(); ++i) {
    if (s.insert(A[i]).second && (p == -1 || pow((int)sqrt(A[i] + A[p]), 2) == A[i] + A[p])) {
      swap(A[i], A[p + 1]);
      res += numSquarefulPerms(A, p + 1);
    }
  }
  return res;
}