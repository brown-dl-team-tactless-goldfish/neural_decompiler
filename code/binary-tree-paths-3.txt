
//code for god
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<string> res;
    
    void treePath( TreeNode* root, string pt)
    {
          if( root == NULL)
              return;
        if( pt.size() == 0) pt += to_string(root->val);
        else
        pt += ( "->" + to_string(root->val));
        if( root->left == NULL && root->right == NULL)
            res.push_back(pt);
        treePath( root->left,pt);
        treePath( root->right,pt);
        
        
    } 
    
    vector<string> binaryTreePaths(TreeNode* root) {
        string pt = "";
      treePath( root, pt);
     return res;   
    }
};

