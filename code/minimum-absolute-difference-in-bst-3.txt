#define MIN(a,b) ((a>b)?b:a)
void DFS(struct TreeNode* root, int* minVal){
    if(root->left){
        /* find left->right->....->right node due to the value closed to the root->val */
        struct TreeNode* p = root->left;
        while(p->right){
            p = p->right;
        }
        int leftVal = (p->val == root->left->val)?root->left->val : p->val;
        *minVal = MIN(*minVal, root->val - leftVal);
        DFS(root->left, minVal);
    }
    
    if(root->right){
		/* find right->left->....->left node due to the value closed to the root->val */
        struct TreeNode* p = root->right;
        while(p->left){
            p = p->left;
        }
        int rightVal = (p->val == root->right->val)?root->right->val : p->val;
        *minVal = MIN(*minVal, rightVal - root->val);      
        DFS(root->right, minVal);
    }
}

int getMinimumDifference(struct TreeNode* root){
    int minVal = INT_MAX;
    DFS(root, &minVal);
    return minVal;
}