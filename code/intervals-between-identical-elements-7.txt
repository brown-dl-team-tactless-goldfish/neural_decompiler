class Solution {
public:
    vector<long long> getDistances(vector<int>& arr) {
        // map --> sum of indices , count
        unordered_map<int,pair<long long,long long>>mp;
        vector<long long>ans(arr.size());
        for(int i=0;i<arr.size();i++)
        {
            if(mp.find(arr[i])==mp.end())
            {
                mp[arr[i]].first+=i;
                mp[arr[i]].second++;
                ans[i]=0;
            }
            else 
            {
                long long int count=mp[arr[i]].second;
                long long int sum=mp[arr[i]].first;
                long long val=count*i-sum;
                ans[i]=val;
                mp[arr[i]].first+=i;
                mp[arr[i]].second++;
            }
        }
        mp.clear();
        for(int i=arr.size()-1;i>=0;i--)
        {
            if(mp.find(arr[i])==mp.end())
            {
                mp[arr[i]].first+=i;
                mp[arr[i]].second++;
            }
            else
            {
                long long int count=mp[arr[i]].second;
                long long int sum=mp[arr[i]].first;
                long long val=sum-count*i;
                ans[i]+=val;
                mp[arr[i]].first+=i;
                mp[arr[i]].second++;
            }
        }
        return ans;
    }
};