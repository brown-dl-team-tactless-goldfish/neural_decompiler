class Solution {
public:
    int minFlips(string s) {
        int n = s.size();
        vector<int> l[2], r[2];
        l[0] = l[1] = r[0] = r[1] = vector<int>(n);
        
        for (int i = 0; i < 2; ++ i)
            for (int j = 0, c = 0, k = i; j < n; ++ j, k ^= 1)
            {
                if (k != s[j] - '0') c ++ ;
                l[i][j] = c; // s[0..i] prefix与以i开头模式串的编辑距离
            }
        for (int i = 0; i < 2; ++ i)
            for (int j = n - 1, c = 0, k = i; j >= 0; -- j, k ^= 1)
            {
                if (k != s[j] - '0') c ++ ; 
                r[i][j] = c;
            }
        
        int ret = min(r[0][0], r[1][0]);
        if (n % 2 == 0) return ret;
        else
        {
            for (int i = 0; i + 1 < n; ++ i)
            {
                ret = min(ret, l[0][i] + r[1][i + 1]);
                ret = min(ret, l[1][i] + r[0][i + 1]);
            }
            return ret;
        }
    }
};