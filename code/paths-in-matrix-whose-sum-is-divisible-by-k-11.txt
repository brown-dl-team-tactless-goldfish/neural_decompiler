    int numberOfPaths(vector<vector<int>>& grid, int k) {
        const int n = grid.size(), m = grid[0].size();
        const long long mod = 1e9+7;
        auto dp = vector(n+1, vector(m+1, vector(k, 0LL)));
        dp[1][1][grid[0][0] % k] = 1;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                for(int k1 = 0; k1 < k; k1++){
                    int x = (k1 - grid[i][j]%k + k ) % k;
                    dp[i+1][j+1][k1] += (dp[i][j+1][x] + dp[i+1][j][x]) % mod;
                }
            }
        }
        return dp[n][m][0];
    }