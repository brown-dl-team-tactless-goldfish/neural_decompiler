/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int sumEvenGrandparent(TreeNode* root) {
        if (!root) {
            return 0;
        }
        int sum = 0;
        queue<pair<pair<TreeNode*, int>, int>> q;
        q.push(make_pair(make_pair(root, 0), 0));
        while (!q.empty()) {
            int size = q.size();
            for (int i = 0; i < size; i ++) {
                auto temp = q.front();
                int gParent = temp.second;
                int parent = temp.first.second;
                auto node = temp.first.first;
                q.pop();
                if (gParent) {
                    sum += node -> val;
                }
                if (node -> left) {
                    q.push(make_pair(make_pair(node -> left, node -> val & 1 ? 0 : 1), parent));
                }
                if (node -> right) {
                    q.push(make_pair(make_pair(node -> right, node -> val & 1 ? 0 : 1), parent));
                }
            }
        }
        return sum;
    }
};