class Solution {
    void helper(TreeNode* root,vector <int> &ans){
        if(!root)
            return;
        helper(root->left,ans);
        ans.push_back(root->val);
        helper(root->right,ans);
    }
public:
    vector<vector<int>> closestNodes(TreeNode* root, vector<int>& queries) {
        vector <int> ans;
        helper(root,ans);
        int n = ans.size();
        vector<vector<int>> fans;
        for(auto &it:queries){
            vector <int> tmp;
            int i = lower_bound(ans.begin(),ans.end(),it) - ans.begin();
            if(i == n)
                tmp.push_back(ans[i-1]),tmp.push_back(-1);
            else if(ans[i] == it)
                tmp.push_back(it),tmp.push_back(it);
            else if(i == 0 && ans[i] != it)
                tmp.push_back(-1),tmp.push_back(ans[0]);
            else 
                tmp.push_back(ans[i-1]),tmp.push_back(ans[i]);
            fans.push_back(tmp);
        }
        return fans;
    }
};