vector<int> restoreArray(vector<vector<int>>& adjacentPairs) {
    std::map<int, vector<int>> neib;
    for(auto& c : adjacentPairs) {
        neib[c[0]].push_back(c[1]);
        neib[c[1]].push_back(c[0]);
    }
    
    int n = adjacentPairs.size() + 1;
    vector<int> res(n, -1);
    int index = 0;
    for(auto& it : neib){
        if (it.second.size() == 1) {
            res[0] = it.first;
            ++index;
            break;
        }
    }
    
    while(index < n) {
        vector<int> current = neib[res[index - 1]];
        
        if (current.size() == 1) {
            res[index++] = current[0];
        } else {
            int prev = res[index - 2];
            res[index++] = current[0] == prev ? current[1] : current[0];
        }
    }
    
    return res;
}