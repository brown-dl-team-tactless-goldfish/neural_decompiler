    if root.left:
        left = self.minDiffInBST(root.left)
        
        tmpNode = root.left
        while tmpNode.right:
            tmpNode = tmpNode.right
        left_root = abs(root.val -tmpNode.val)
    else:
        left = float('inf')
        left_root = float('inf')
        
    if root.right:
        right = self.minDiffInBST(root.right)
        
        tmpNode = root.right
        while tmpNode.left:
            tmpNode = tmpNode.left
        right_root = abs(root.val - tmpNode.val)
    else:
        right = float('inf')
        right_root = float('inf')
        
    return min(left, left_root, right, right_root)
        