class Solution {
public:
	int longestPalindromeSubseq(string s) {
		int n=s.size();
		vector<vector<int>> dp(n+1,vector<int>(n,0));
		for(int i=0;i<n;i++){
			dp[1][i]=1;
		}
		for(int l=2;l<=n;l++){
			for(int j=0;j<=n-l;j++){
				if(s[j]==s[j+l-1]){
					dp[l][j+l-1]=dp[l-2][j+l-2]+2;
				}
				else{
					dp[l][j+l-1]=max(dp[l-1][j+l-1],dp[l-1][j+l-2]);
				}
			}
		}   
		return *max_element(dp[n].begin(),dp[n].end());
	}
};