void checkPath(int** grid, int rlen, int clen, int r, int c, int nextNum, int* checkCnt){
    if(r < 0 || c < 0 || r >= rlen || c >= clen || grid[r][c] == -1 || grid[r][c] != nextNum)
        return;
    grid[r][c] = -1;
    (*checkCnt)++;
    checkPath(grid, rlen, clen, r+2, c+1, nextNum+1, checkCnt);
    checkPath(grid, rlen, clen, r+1, c+2, nextNum+1, checkCnt);
    checkPath(grid, rlen, clen, r-1, c+2, nextNum+1, checkCnt);
    checkPath(grid, rlen, clen, r-2, c+1, nextNum+1, checkCnt);    
    checkPath(grid, rlen, clen, r-2, c-1, nextNum+1, checkCnt);
    checkPath(grid, rlen, clen, r-1, c-2, nextNum+1, checkCnt);
    checkPath(grid, rlen, clen, r+1, c-2, nextNum+1, checkCnt);
    checkPath(grid, rlen, clen, r+2, c-1, nextNum+1, checkCnt);     
}

bool checkValidGrid(int** grid, int gridSize, int* gridColSize){
    int checkCnt = 0;
    checkPath(grid, gridSize, *gridColSize, 0, 0, 0, &checkCnt);
    return checkCnt != gridSize * *gridColSize? false : true;
}