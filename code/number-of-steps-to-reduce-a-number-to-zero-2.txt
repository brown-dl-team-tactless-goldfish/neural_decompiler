--Python3
class Solution:
    count = 0
    
    def numberOfSteps (self, num):
        if num == 0: 
            out,Solution.count = Solution.count,0
            return out
        
        Solution.count += 1
        return Solution.numberOfSteps(self, num/2) if num%2 == 0 else Solution.numberOfSteps(self, num-1)

--Runtime: 20 ms, faster than 96.48% less than 100.00%
		
		
--C				
int numberOfSteps (int num){
    
    int count = 0;
    
    int steps (int num){
        if (num == 0) {return count;}
        
        count += 1;
        if (num%2 == 0){return steps(num/2);}
        return steps(num-1);
        
    }
    steps(num);
    return count;
}

--Runtime: 0 ms, faster than 100.00% of C online submissions for Number of Steps to Reduce a Number to Zero.
--Memory Usage: 5 MB, less than 100.00% of C online submissions for Number of Steps to Reduce a Number to Zero.	