public static IList<IList<int>> ReconstructMatrix(int upper, int lower, int[] colsum)
        {
            int[][] arr = new int[2][];
            int n = colsum.Length, count = 0;
            arr[0] = new int[n];
            arr[1] = new int[n];

            var set = new HashSet<int>();
            for (int i = 0; i < n; i++)
            {
                if (colsum[i] == 2)
                {
                    arr[0][i] = 1;
                    arr[1][i] = 1;
                    lower--;
                    upper--;
                }
                else if (colsum[i] == 1)
                {
                    count++;
                    set.Add(i);
                }
            }

            if (lower < 0 || upper < 0 || count != lower + upper) 
                return new List<IList<int>>();

            int c = 0;
            foreach (var index in set)
            {
                if (c < upper)
                    arr[0][index] = 1;
                else arr[1][index] = 1;
                c++;
            }

            return arr;
        }