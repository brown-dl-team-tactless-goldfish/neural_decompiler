int* goodDaysToRobBank(int* security, int securitySize, int time, int* returnSize){ 
    if(securitySize-2*time <= 0){
        *returnSize = 0;
        return NULL;
    }    
    int* prefix = malloc(securitySize * sizeof(int));
    int* suffix = malloc(securitySize * sizeof(int));
    
    prefix[0] = 0;
    for(int i = 1; i < securitySize; i++){
        if(security[i] <= security[i-1])
            prefix[i] = prefix[i-1] + 1;
        else
            prefix[i] = 0;
    }
    
    suffix[securitySize-1] = 0;
    for(int i = securitySize-2; i >= 0; i--){
        if(security[i] <= security[i+1])
            suffix[i] = suffix[i+1] + 1;  
        else
            suffix[i] = 0;
    }

    int* ans = malloc((securitySize-2*time) * sizeof(int));
    int idx = 0;
    for(int i = time; i < securitySize-time; i++){
        //printf("%d, %d ", prefix[i], suffix[i]);
        if(prefix[i] >= time && suffix[i] >= time){
            ans[idx] = i;
            idx++;
        }
    }
    free(prefix);
    free(suffix);
    *returnSize = idx;
    ans = realloc(ans, idx * sizeof(int));
    return ans;
    
}