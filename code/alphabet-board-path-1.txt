using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _1138_votrubac_Java
{
    class Program
    {
        static void Main(string[] args)
        {
            var result = AlphabetBoardPath("leet");            
        }

        /// <summary>
        /// Code review:
        /// We have to go through two case studies: d -> z and z -> c
        /// so that there are two choices in terms of priority:
        /// L > D > U > R or L > U > D > R
        /// Please avoid 'z' special discussion in the code to avoid redundant code
        /// </summary>
        /// <param name="target"></param>
        /// <returns></returns>
        public static string AlphabetBoardPath(string target)
        {
            if (target == null || target.Length == 0)
            {
                return "";
            }

            var sourceRow = 0;
            var sourceCol = 0;

            var sb = new StringBuilder();

            foreach (var c in target) {
                var position = c - 'a';

                var targetRow = position / 5;
                var targetCol = position % 5;

                if (targetCol < sourceCol)
                {
                    sb.Append('L', sourceCol - targetCol);
                }

                if (targetRow < sourceRow)
                {
                    sb.Append('U', sourceRow - targetRow);
                }

                if (targetRow > sourceRow)
                {
                    sb.Append('D', targetRow - sourceRow);
                }

                if (targetCol > sourceCol)
                {
                    sb.Append('R', targetCol - sourceCol);
                }

                sb.Append("!");

                // reset two variables
                sourceRow = targetRow;
                sourceCol = targetCol;
            }

            return sb.ToString();
        }       
    }
}