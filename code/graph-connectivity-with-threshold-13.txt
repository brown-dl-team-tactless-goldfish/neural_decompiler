class Solution {
    int find(vector<int> &parents, int x) {
        if (parents[x] != x)
            parents[x] = find(parents, parents[x]);
        return parents[x];
    }
public:
    vector<bool> areConnected(int n, int threshold, vector<vector<int>>& queries) {
        vector<int> parents(n+1);
        for (int i=1; i<=n; i++)
            parents[i] = i;
        vector<bool> visited(n+1);
        for (int i=threshold+1; i<n; i++) {
            if (visited[i])
                continue;
            visited[i] = true;
            int p1 = find(parents, i);
            for (int j=2*i; j<=n; j+=i) {
                int p2 = find(parents, j);
                parents[p2] = p1;
            }
        }
        
        vector<bool> ans;
        for (auto &q: queries)
            ans.push_back(find(parents, q[0]) == find(parents, q[1]));
        return ans;
    }
};