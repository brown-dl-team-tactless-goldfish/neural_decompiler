class Solution {
public:
    int minimumTime(string s) {
        int n = s.size();
        vector<int> dp1(n);
        vector<int> dp2(n);
        for(int i = 0; i < n; i++) {
            if(s[i] == '1') {
                dp1[i] = min((i == 0 ? 0 : dp1[i - 1]) + 2, i + 1);
            }
            else {
                dp1[i] = (i == 0 ? 0 : dp1[i - 1]);
            }
        }
        for(int i = n - 1; i >= 0; i--) {
            if(s[i] == '1') {
                dp2[i] = min((i == n - 1 ? 0 : dp2[i + 1]) + 2, n - i);
            }
            else {
                dp2[i] = (i == n - 1 ? 0 : dp2[i + 1]);
            }
        }
        int sol = min(dp1[n - 1], dp2[0]);
        for(int i = 0; i < n - 1; i++) {
            sol = min(sol, dp1[i] + dp2[i + 1]);
        }
        return sol;
        
    }
};