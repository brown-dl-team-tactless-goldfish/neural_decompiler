/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
 typedef struct ListNode node;
 int length(node * head){
     int cnt = 0;
     while(head != NULL){
         cnt++;
         head = head->next;
     }
     return cnt;
 }
struct ListNode* removeNodes(struct ListNode* head){
    int len = length(head);
    int stack[len];
    int in = -1;
    while(head != NULL){
        while( in != -1 && stack[in] < head->val){
            in--;
        }
        stack[++in] = head->val;
        head = head->next;
    }
    head = NULL;
    node * tail = NULL;
    node * n = NULL;
    int i =0 ;
    while(i <= in){
        n = (node*)malloc(sizeof(node));
        n->val = stack[i];
        n->next = NULL;
        if(head == NULL){
            head = tail = n;
        }else{
            tail->next = n;
            tail = n;
        }
        i++;
    }
    return head;
}