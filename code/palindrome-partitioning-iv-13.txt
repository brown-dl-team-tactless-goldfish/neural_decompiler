
class Solution {
public:
    bool checkPartitioning(string s) {
        int n=s.size();
        vector<vector<int>>dp(n,vector<int>(n));
        for(int i=0;i<n;i++){
            dp[i][i]=1;
        }
        for(int l=2;l<=n;l++){
            for(int i=0;i<=n-l;i++){
                int j=i+l-1;
                if(l==2 && s[i]==s[j]){
                    dp[i][j]=1;
                }
                else{
                    if(s[i]==s[j] && dp[i+1][j-1]){
                        dp[i][j]=1;
                    }
                }
            }
        }
        
        for(int i=0;i<n-1;i++){
            int x=dp[0][i];
            int y=dp[i+1][n-1];
            if(x && !y){
                for(int k=i+1;k<n-1;k++){
                    if(dp[i+1][k] && dp[k+1][n-1]){
                        return true;
                    }
                }
            }
            else if(y && !x){
                for(int k=0;k<i-1;k++){
                    if(dp[0][k] && dp[k+1][i]){
                        return true;
                    }
                }
            }
            else if(x && y){
                  for(int k=i+1;k<n-1;k++){
                    if(dp[i+1][k] && dp[k+1][n-1]){
                        return true;
                    }
                }
                for(int k=0;k<i-1;k++){
                    if(dp[0][k] && dp[k+1][i]){
                        return true;
                    }
                }
            }
        }
        return false;
    
    }
};