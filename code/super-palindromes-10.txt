class Solution {
public:
    int superpalindromesInRange(string L, string R) {
        const long long l = stoll(L), r = stoll(R), r2 = sqrt(r);
        int cnt = 0;
        for(int i=0;i<1e6;i++){
            auto p1 = genPalin(i, true), p2 = genPalin(i, false);
            if(p1 > r2) break;
            countSuper(l, r, p1, cnt);
            countSuper(l, r, p2, cnt);
        }
        return cnt;
    }
    
    bool isPalin(const string& s){
        for(int i=0,j=s.size()-1; i<j; i++,j--){
            if(s[i] != s[j]) return false;
        }
        return true;
    }
    
    long long genPalin(int i, bool flag){
        auto s = to_string(i);
        auto t = s;
        reverse(t.begin(), t.end());
        if(flag) s.pop_back();
        return stoll(s+t);
    }
    
    void countSuper(long long l, long long r, long long x, int& sum){
        auto y = x*x;
        if(y>=l && y<=r && isPalin(to_string(y))) sum++;
    }
};