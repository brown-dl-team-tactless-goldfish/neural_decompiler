void helper(struct TreeNode* root,int **retArray,int *len){
	if(root==NULL) return;
	helper(root->left,retArray,len);
	*retArray=(int *)realloc(*retArray,(*len+1)*sizeof(int));
	(*retArray)[*len]=root->val;
	*len+=1;
	helper(root->right,retArray,len);
}

int* findMode(struct TreeNode* root, int* returnSize) {
    int *retArray=(int *)calloc(0,sizeof(int));
    int len=0;
    helper(root,&retArray,&len);
    int *ret=(int *)calloc(0,sizeof(int));
    int maxsum=0,i=0,j=0;
    for(i=0;i<len;){
    	for(j=i+1;j<len;j++){
    		if(retArray[i]!=retArray[j]) break;
    	}
    	int tmp=j-i;
    	if(tmp==maxsum){
    		ret=(int *)realloc(ret,(*returnSize+1)*sizeof(int));
    		ret[*returnSize]=retArray[i];
    		*returnSize+=1;
    	}
    	else if(tmp>maxsum){
    		if(ret!=NULL) free(ret);
    		maxsum=tmp;
    		*returnSize=1;
    		ret=(int *)calloc(1,sizeof(int));
    		ret[0]=retArray[i];    		
    	}
    	i=j;
    }
    return ret;
}