
char * minRemoveToMakeValid(char * s){
    struct stack_node{
        char ch;
        int idx;
    };
    int len = strlen(s), top = -1;
    //printf("len = %d | top = %d\n", len, top);
    struct stack_node *stack = (struct stack_node*)calloc(len, sizeof(struct stack_node));
    
    for(int i = 0; i < len; i++){
        if(s[i] == '('){
            ++top;
            stack[top].ch = '(';
            stack[top].idx = i;
        }
        else if(s[i] == ')'){
            if(top > -1 && stack[top].ch == '('){
                --top;
            }
            else{
                ++top;
                stack[top].ch = ')';
                stack[top].idx = i;                
            }
        }
    }
    
    //printf("top = %d\n");
    if(top == -1){
        free(stack);
        return s;
    }
    else{
        char *result = (char*)calloc(len+1, sizeof(char));
        int j = 0, k = 0;
        for(int i = 0; i <= len; i++){
            if((j <= top) && (i == stack[j].idx)){
                j++;
                continue;
            }
            result[k++] = s[i];
        }
        result[k] = '\0';
        
        free(stack);
        return result;
    }
}