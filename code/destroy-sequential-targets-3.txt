class Solution {
public:
    int destroyTargets(vector<int>& nums, int space) {
        //vector<pair<int, int>> vp(space, {0, 1e9 + 1});
        unordered_map<int, pair<int, int>> vp;
        for(const auto& num : nums){
            if(!vp.count(num % space)){
                vp[num % space] = {1, num};
            }
            else{
                vp[num % space].first++;
                vp[num % space].second = min(vp[num % space].second, num);
            }
        }
        int cnt = 0;
        int res = 1e9 + 1;
        for(const auto& [mod, node] : vp){
            int left = node.first;
            int right = node.second;
            if(left > cnt){
                cnt = left;
                res = right;
            }
            else if(left == cnt){
                res = min(res, right);
            }
        }
        return res;
    }
};