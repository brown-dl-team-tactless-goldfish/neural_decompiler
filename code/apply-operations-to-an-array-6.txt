class Solution {
public:
    //this helper function is as similar as LC# 283, moving the zeroes
    // for more detail, you can see the solution for LC# 283
    void helper(vector<int>& nums){
        int c = 0;
        for(auto i = 0; i < nums.size(); i++){
            if(nums[i] != 0){
                nums[c] = nums[i];
                c++;
            }
        }
        
        while(c < nums.size()){
            nums[c] = 0;
            c++;
        }
    }
    
    vector<int> applyOperations(vector<int>& nums) {
        int n = nums.size(), zero = 0;
        vector<int> res{nums};
        
        for(int i = 0; i < n-1; i++){
            // just follow the requirement
            if(res[i] == res[i+1]){
                res[i] = res[i] * 2;
                res[i+1] = 0;
            }
        }
        
        helper(res);
        
        return res;
    }
};