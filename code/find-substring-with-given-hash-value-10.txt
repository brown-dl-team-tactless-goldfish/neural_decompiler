public class Solution {
    public string SubStrHash(string s, int p, int m, int k, int hv) {
        HashSet<string> v = new HashSet<string>();
        int[] mp = new int[k];
        mp[0] = 1;
        for (int i = 1; i < k; ++i) mp[i] = (mp[i - 1] * p) % m;
        
        for (int i = 0; i <= s.Length - k; ++i) {
            if (v.Contains(s.Substring(i, k))) continue;
            int val = 0, j = i;
            for (; j < i + k; ++j) {
                val += ((s[j] - 'a') + 1) * mp[j - i];
            }
            
            if (val % m == hv)
                return s.Substring(i, j - i);
            
            v.Add(s.Substring(i, j - i));
        }
        
        return string.Empty;
    }
}