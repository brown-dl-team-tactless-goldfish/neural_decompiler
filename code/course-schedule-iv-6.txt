public class Solution 
{
    public IList<bool> CheckIfPrerequisite(int n, int[][] prerequisites, int[][] queries) 
    {
        
        var graph = new Dictionary<int, HashSet<int>>();
        for(int i = 0; i < n; i++)
            graph[i] = new HashSet<int>();
        foreach(var prerequisite in prerequisites)
        {
            int u = prerequisite[0], v = prerequisite[1];
            graph[u].Add(v);
        }
        
        var result = new List<bool>();
        
        var memo = new Dictionary<string, bool>();
        foreach(var query in queries)
        {
            int u = query[0], v = query[1];
            result.Add(DFS(graph, u, v, memo));
        }
        
        return result;
    }
    
    private bool DFS(Dictionary<int, HashSet<int>> graph, int start, int end, Dictionary<string, bool> memo)
    {
        var key = start + ":" + end;
        if(memo.ContainsKey(key))
            return memo[key];
        
        if(start == end)
            return memo[key] = true;
        
        foreach(var next in graph[start])
            if(DFS(graph, next, end, memo))
                return memo[key] = true;
        
        return memo[key] =false;
    }
}