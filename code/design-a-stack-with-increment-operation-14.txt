class CustomStack {
private:
    vector<int> st, inc;
    int n;
public:
    CustomStack(int maxSize) {
        n = maxSize;
    }
    
    void push(int x) {
        if (st.size() == n) return;
        st.push_back(x);
        inc.push_back(0);
    }
    
    int pop() {
        if (st.empty()) return -1;
        int sz = st.size();
        int res = st[sz-1] + inc[sz-1];
        if (sz-2 >= 0) inc[sz-2] += inc[sz-1];
        st.pop_back(); inc.pop_back();
        return res;
    }
    
    void increment(int k, int val) {
        if (inc.empty()) return;
        int sz = inc.size();
        inc[min(sz, k)-1] += val;
    }
};