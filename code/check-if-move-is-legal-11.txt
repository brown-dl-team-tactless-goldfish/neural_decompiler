class Solution{
public:
    bool checkMove(vector<vector<char>>& board, int rMove, int cMove, char color)
    {

        char opp = 'W';
        if (color == 'W') opp = 'B'; //storing the opposite color

        int r = board.size();
        int c = board[0].size();

        // check in all eight direction if it is a good line

        bool firstTime = true; //variable for checking if entered the loop for first time .

        //up --------------
        for (int i = rMove - 1; i >= 0; i--)
        { //rMove -1 . Moving to the element just next(up) . Here lineLenght = 1
            if (firstTime)
            {
                if (board[i][cMove] != opp) break;//if this is not  oppsite color no point checking further. Here lineLenght = 2
            }
            else
            {
                if (board[i][cMove] == color) return true; //Here lineLength >= 3 . so now when ever same color appears it is a good line
                else if (board[i][cMove] == '.') break; // but if empty same occurs between colors , it can't be a line
            }
            firstTime = false;
        }

        //same for all other cases.

        firstTime = true;

        //down --------------
        for (int i = rMove + 1; i < r; i++)
        {
            if (firstTime)
            {
                if (board[i][cMove] != opp) break;
            }
            else
            {
                if (board[i][cMove] == color) return true;
                else if (board[i][cMove] == '.') break;
            }
            firstTime = false;
        }
        firstTime = true;

        //right ----------
        for (int i = cMove + 1; i < c; i++)
        {
            if (firstTime)
            {
                if (board[rMove][i] != opp) break;
            }
            else
            {
                if (board[rMove][i] == color) return true;
                else if (board[rMove][i] == '.') break;
            }
            firstTime = false;
        }
        firstTime = true;


        //left ------------
        for (int i = cMove - 1; i >= 0; i--)
        {
            if (firstTime)
            {
                if (board[rMove][i] != opp) break;
            }
            else
            {
                if (board[rMove][i] == color) return true;
                else if (board[rMove][i] == '.') break;
            }
            firstTime = false;
        }
        firstTime = true;

        //upleft ------------
        for (int i = rMove - 1, j = cMove - 1; i >= 0 && j >= 0; i--, j--)
        {
            if (firstTime)
            {
                if (board[i][j] != opp) break;
            }
            else
            {
                if (board[i][j] == color) return true;
                else if (board[i][j] == '.') break;
            }
            firstTime = false;
        }
        firstTime = true;

        //upright ---------------
        for (int i = rMove - 1, j = cMove + 1; i >= 0 && j < c; i--, j++)
        {
            if (firstTime)
            {
                if (board[i][j] != opp) break;
            }
            else
            {
                if (board[i][j] == color) return true;
                else if (board[i][j] == '.') break;
            }
            firstTime = false;
        }
        firstTime = true;

        //downright ---------------
        for (int i = rMove + 1, j = cMove + 1; i < r && j < c; i++, j++)
        {
            if (firstTime)
            {
                if (board[i][j] != opp) break;
            }
            else
            {
                if (board[i][j] == color) return true;
                else if (board[i][j] == '.') break;
            }
            firstTime = false;
        }
        firstTime = true;

        //downleft ---------------
        for (int i = rMove + 1, j = cMove - 1; i < r && j >= 0; i++, j--)
        {
            if (firstTime)
            {
                if (board[i][j] != opp) break;
            }
            else
            {
                if (board[i][j] == color) return true;
                else if (board[i][j] == '.') break;
            }
            firstTime = false;
        }


        return false;

    }
};
