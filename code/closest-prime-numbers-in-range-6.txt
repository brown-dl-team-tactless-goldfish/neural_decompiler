class Solution {
public:
    bool checkPrime(int x)
    {
        if(x == 1) 
        {
            return false;
        }
        for (int i = 2; i*i <= x; i++)
        {
            if (x % i == 0)
            {
                return false;
            }
        }
        return true;
    }
    vector<int> primesInRange(int l, int r)
    {
        vector<int> primes;
        int sum = 0;
        for (int i = l; i <= r; i++)
        {
            bool isPrime = checkPrime(i);
            if (isPrime) 
            {
                primes.push_back(i);
            }
        }
        return primes;
    }
    vector<int> closestPrimes(int left, int right) 
    {
        vector<int> primes = primesInRange(left,right);
        int n = primes.size();
        if(n == 1 or n == 0)return {-1,-1};
        int minDiff = INT_MAX;
        int x,y;
        for(int i = 0; i < n-1; i++)
        {
            if(primes[i+1]-primes[i] < minDiff)
            {
                minDiff = primes[i+1]-primes[i];
                x = primes[i+1];y = primes[i];
            }
        }
        return {y,x};
        
    }
};