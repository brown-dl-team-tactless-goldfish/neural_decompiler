// Take the smallest value from A, that is greater than B[i] or take the smallest value from A that is not yet used
vector<int> advantageCount(vector<int>& A, vector<int>& B) {
	multiset<int> msA(A.begin(), A.end());
	for (int i = 0; i < A.size(); i++) {
		auto curIt =  msA.upper_bound(B[i]);
		if (curIt == msA.end())
			curIt = msA.begin();
		A[i] = *curIt;
		msA.erase(curIt);
	}
	return A;
}