class Solution {
    long long countNumber(long long root, long long n) {
        long long son = root+1;
        long long count = 0;
        while (root <= n) {
            count += min(son, n+1) - root;
            root *= 10;
            son *= 10;
        }
        
        return count;
    }
    long long dfs(long long root, long long n, long long k) {
        if (k == 0)
            return root;
        
        long long next = root+1;
        long long count = countNumber(root, n);
        
        if (count > k) {
            return dfs(root*10, n, k-1);
        } else {
            return dfs(root+1, n, k-count);
        }
    }
public:
    int findKthNumber(int n, int k) {
        return dfs(1, n, k-1);
    }
};