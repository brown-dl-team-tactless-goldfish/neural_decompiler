vector<long long> getDistances(vector<int>& nums) {
    int n = nums.size();
    vector<long long> result(n);

    map<int, vector<int>> mp;          // counts occurances
    map<int, long long> sumMap;        // maps "num" -> "aggregate index sum"
	
	// First we aggregate result for left-er elements only - moving from left -> right
    for (int i = 0; i < n; ++i) {
        mp[nums[i]].push_back(i);
        sumMap[nums[i]] += i;
        result[i] = mp[nums[i]].size() * i - sumMap[nums[i]];
    }

    mp.clear();
    sumMap.clear();
	
	// Now, we aggregate result for right-er elements - moving from right -> left
	// same code, but from opposite side.
    for (int i = n - 1; i >= 0; --i) {
        mp[nums[i]].push_back(i);
        sumMap[nums[i]] += i;
		
		// Here we are adding the left-er and right-er result to get total index sum
        result[i] += abs((long long) (mp[nums[i]].size() * i - sumMap[nums[i]])); 
    }

    return result;
}