char findMostChar(int* cnt);
bool check(char * S);

char *reorganizeString(char * S){
    
    int len = strlen(S); 
    int* cnt = calloc(26, sizeof(int));
    for (int i=0;i<len;i++) {
        cnt[S[i]-'a']++;
    }
    char ch = findMostChar(cnt);
    // fill 0, 2, 4, ...
    for (int i=0;i<len;i=i+2) {
        S[i] = ch;
        cnt[ch-'a']--;
        if (cnt[ch-'a']==0) {
            ch = findMostChar(cnt);
        }
    }
    // fill 1, 3, 5, ...
    for (int i=1;i<len;i=i+2) {
        S[i] = ch;
        cnt[ch-'a']--;
        if (cnt[ch-'a']==0) {
            ch = findMostChar(cnt);
        }
    }
    
    if (check(S)==false) return "";
    
    return S;
}
char findMostChar(int* cnt) {
    int max = 0;
    char ch = 'a';
    for (int c=0;c<26;c++) {
        if (cnt[c]>max) {
            max = cnt[c];
            ch = c+'a';
        }
    }
    return ch;
}
bool check(char * S){
   
    int len = strlen(S);
    for (int i=0;i<len-1;i++) {
        if(S[i]==S[i+1]) return false;
    }
    return true;
}