class Solution {
public:
    long long maxTaxiEarnings(int n, vector<vector<int>>& rides) {
        auto cmp = [](vector<int>& v1, vector<int>& v2) {
            return v1[1] < v2[1];
        };
        sort(rides.begin(), rides.end(), cmp);
        
        vector<long long> dp(n+1, 0);
        
        long long mx = 0;
        long long last = 0;
        for(int i=0; i<rides.size(); ++i) {
            vector<int> r = rides[i];
            while(last < r[1]) {
                dp[last] = mx;
                last++;
            }
            dp[r[1]] = max(mx, dp[r[0]] + r[2] + r[1] - r[0]);
            mx = max(mx, dp[r[1]]);
        }
        return mx;
    }
};