#define max(a,b) (((a) > (b))?(a) : (b))
#define min(a,b) (((a) > (b))?(b) : (a))

typedef struct {
    int standing;
    int right;
    char *url[5000];
} BrowserHistory;

BrowserHistory* browserHistoryCreate(char * homepage) {
    BrowserHistory* his = (BrowserHistory*) malloc(sizeof(BrowserHistory));
    his->url[0] =  homepage;
    his->standing = 0;
    his->right = 0;
    return his;
}

void browserHistoryVisit(BrowserHistory* obj, char * url) {
    obj->standing = obj->standing + 1;
    obj->right = obj->standing;
    obj->url[obj->standing] = url;
}

char * browserHistoryBack(BrowserHistory* obj, int steps) {
    obj->standing = max(obj->standing - steps, 0);
    return obj->url[obj->standing];
}

char * browserHistoryForward(BrowserHistory* obj, int steps) {
    obj->standing = min(obj->standing + steps, obj->right);
    return obj->url[obj->standing];
}

void browserHistoryFree(BrowserHistory* obj) {
    free(obj);
}

/**
 * Your BrowserHistory struct will be instantiated and called as such:
 * BrowserHistory* obj = browserHistoryCreate(homepage);
 * browserHistoryVisit(obj, url);
 
 * char * param_2 = browserHistoryBack(obj, steps);
 
 * char * param_3 = browserHistoryForward(obj, steps);
 
 * browserHistoryFree(obj);
*/