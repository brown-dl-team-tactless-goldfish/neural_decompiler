class Solution {
public:
#define ll long long
unordered_map<ll int,int>dp;
 ll int solve(ll int x, ll int target){
    if(target==0) return 0;
    if(2*target<=x) return 2*target-1;
    if(target<x) return (x-target)*2;
    if(target==x)  return 0;
    if(target==1) return 1;
    
     if(dp.find(target)!=dp.end()) return dp[target];
     ll int num=x;
     ll  int c=0;
     while(num<=target){
       if(num==target) return dp[target]= c;
       num=num*x;
       c++;
     }
     ll int p= num/x;
    
    
     ll int ans =min(c +solve(x,target-p),(((num-target)<target)? c+1+solve(x,num-target):INT_MAX));
     return dp[target]=ans;
     
   }
  
  
    int leastOpsExpressTarget(int x, int target) {
      return solve(x,target);
    }
};
