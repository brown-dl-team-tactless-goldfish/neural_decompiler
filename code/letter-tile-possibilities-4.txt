public class Solution
{
	public int NumTilePossibilities(string tiles)
	{
		var ct = new int[26];

		int dc = 0, total = 0;

		foreach (var c in tiles) ct[c - 'A']++;

		dc += ct.Count(i => i != 0);

		for (var i = 1; i <= tiles.Length; i++) total += Calculate(i, ct, dc);

		return total;
	}

	private int Calculate(int digit, int[] ct, int dc)
	{
		if (digit == 1) return dc;

		var total = 0;

		for (var i = 0; i < ct.Length; i++)
		{
			if (ct[i] == 0) continue;

			var nc = new int[26];

			Array.Copy(ct, 0, nc, 0, ct.Length);

			var ndc = dc;

			nc[i]--;

			if (nc[i] == 0) ndc--;

			total += Calculate(digit - 1, nc, ndc);
		}

		return total;
	}
}