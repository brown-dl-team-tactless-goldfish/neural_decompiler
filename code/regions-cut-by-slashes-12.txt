class Solution {
public:
    int regionsBySlashes(vector<string>& grid) {
        int n = grid.size() ;
        vector<vector<bool>>G(3*n, vector<bool>(3*n)) ;
        int ret = 0 ;
        for(int i = 0; i < n; i++){
            for(int j = 0; j < n; j++){
                if(grid[i][j] == '/'){
                    G[3*i][3*j+2] = true ;
                    G[3*i+1][3*j+1] = true ;
                    G[3*i+2][3*j] = true ;
                }
                else if(grid[i][j] == '\\'){
                    G[3*i][3*j] = true ;
                    G[3*i+1][3*j+1] = true ;
                    G[3*i+2][3*j+2] = true ;
                }
            }
        }
                        
        for(int i = 0; i < 3*n; i++){
            for(int j = 0; j <3*n; j++){
                if(G[i][j] == false){
                    ret++ ;
                    dfs(G, i, j) ;
                }
            }
        }
        return ret ;
    }
    
    void dfs(vector<vector<bool>>&G, int x, int y){
        int n = G.size() ;
        if(x < 0 || y < 0 || x >= n || y >= n || G[x][y] == true)
            return ;
        G[x][y] = true ;
        dfs(G, x+1, y) ;
        dfs(G, x-1, y) ;
        dfs(G, x, y+1) ;
        dfs(G, x, y-1) ;
    }
};