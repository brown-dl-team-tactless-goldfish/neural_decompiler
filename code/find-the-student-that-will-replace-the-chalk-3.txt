class Solution:
    def chalkReplacer(self, chalk: List[int], k: int) -> int:
        n = len(chalk)
        sum1 = sum(chalk)
        
        
        while (k >= sum1):
            k = k % sum1
        
        
        def helper(curID, remainK):
            if (curID == n):
                curID = 0
            
            curChalk = chalk[curID]
            print ("curID = ", curID, " curChalk = ", curChalk, " remainK = ", remainK)
            
            if (curChalk <= remainK):
                return helper(curID+1, remainK - curChalk)
            else:
                return curID
            
        res = helper(0, k)
        
        print ("res = ", res)
        
        return res