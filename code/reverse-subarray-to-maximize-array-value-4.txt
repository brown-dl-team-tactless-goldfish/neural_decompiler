    public class Solution
    {
        public int MaxValueAfterReverse(int[] nums)
        {
            if (nums.Length == 1)
            {
                return nums[0];
            }

            checked
            {
                long sum = 0;
                for (int i = 0; i < nums.Length - 1; i++)
                {
                    sum += Math.Abs(nums[i + 1] - nums[i]);
                }

                long res = sum;

                //reverse prefix
                for (int j = 0; j < nums.Length - 1; j++)
                {
                    res = Math.Max(res, sum + Math.Abs(nums[0] - nums[j + 1]) - Math.Abs(nums[j] - nums[j + 1]));
                }

                //reverse suffix
                for (int i = 1; i < nums.Length; i++)
                {
                    res = Math.Max(res, sum + Math.Abs(nums[nums.Length - 1] - nums[i - 1]) - Math.Abs(nums[i] - nums[i - 1]));
                }

                long x1 = long.MinValue;
                long x2 = long.MinValue;
                long x3 = long.MinValue;
                long x4 = long.MinValue;

                long y1 = long.MinValue;
                long y2 = long.MinValue;
                long y3 = long.MinValue;
                long y4 = long.MinValue;

                for (int i = 1; i < nums.Length - 1; ++i)
                {
                    x1 = Math.Max(x1, -Math.Abs(nums[i] - nums[i - 1]) - nums[i - 1] - nums[i]);
                    y1 = Math.Max(y1, -Math.Abs(nums[i] - nums[i + 1]) + nums[i] + nums[i + 1]);
                    x2 = Math.Max(x2, -Math.Abs(nums[i] - nums[i - 1]) + nums[i] - nums[i - 1]);
                    y2 = Math.Max(y2, -Math.Abs(nums[i] - nums[i + 1]) + nums[i] - nums[i + 1]);
                    x3 = Math.Max(x3, -Math.Abs(nums[i] - nums[i - 1]) + nums[i - 1] - nums[i]);
                    y3 = Math.Max(y3, -Math.Abs(nums[i] - nums[i + 1]) + nums[i + 1] - nums[i]);
                    x4 = Math.Max(x4, -Math.Abs(nums[i] - nums[i - 1]) + nums[i] + nums[i - 1]);
                    y4 = Math.Max(y4, -Math.Abs(nums[i] - nums[i + 1]) - nums[i] - nums[i + 1]);
                }

                res = Math.Max(res, sum + x1 + y1);
                res = Math.Max(res, sum + x2 + y2);
                res = Math.Max(res, sum + x3 + y3);
                res = Math.Max(res, sum + x4 + y4);
                
                return (int) res;
            }
        }
    }