class Solution {
    void make(const int x, const int step, unordered_map<long long, int>& have, queue<int> &q) {
        const auto t = have.find(x);
        if (t != have.end()) return;
        q.push(x);
        have[x] = step;
    }
public:    
    int minDays(int n) {
        unordered_map<long long, int> have;
        have[n] = 0;
        queue<int> q;
        for (q.push(n);;) {
            const int x = q.front();
            q.pop();
            int step = have[x];
            if (x == 0) return step;
            ++step;
            make(x - 1, step, have, q);
            if (x % 2 == 0) make(x / 2, step, have, q);
            if (x % 3 == 0) make(x / 3, step, have, q);
        }
        return 0;
    }
};