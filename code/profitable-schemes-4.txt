class Solution {
    public:
    int profitableSchemes(int G, int P, vector<int> group, vector<int> profit) {
        vector<vector<int>> dp(G+1, vector<int>(P+1, 0));
        int mod = pow(10, 9) + 7;
        dp[0][0] = 1;
        int sum = 0;
        for(int k = 0; k < group.size(); k++){
            for(int i = G; i >= group[k]; i--){
                for(int j = P; j>= 0; j--){
                    dp[i][j] = (dp[i][j] + dp[i - group[k]][max(0, j - profit[k])])%mod;
                }    
            }
        }
        for(int i = 0; i < dp.size(); i++){
            sum = (sum + dp[i][P])%mod;
        }
        return sum;
    }
};