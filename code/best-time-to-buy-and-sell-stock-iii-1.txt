int max(int a, int b)
{
    return a > b ? a : b;
}

int maxProfit(int* prices, int pricesSize)
{
    if(pricesSize == 1 || pricesSize == 0)
    {
        return 0;
    }
    
    int* global = (int*)malloc(sizeof(int) * 3);
    int* local = (int*)malloc(sizeof(int) * 3);
    
    for(int i = 0; i < 3; ++i)
    {
        global[i] = 0;
        local[i] = 0;
    }
    
    for(int i = 0; i < pricesSize - 1; ++i)
    {
        int diff = prices[i+1] - prices[i];
        
        for(int j = 2; j >= 1; --j)
        {
            local[j] = max(global[j-1] + max(diff, 0), local[j] + diff);
            global[j] = max(global[j], local[j]);
        }
    }
    
    return global[2];
}