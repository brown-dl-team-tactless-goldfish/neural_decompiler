long int getSum(int *row, int index){
    long int s = 0;
    for (int i=0; i<index; i++){
        s += row[i];
    }
    return s;
}

long int getSumCol(int **col, int index, int column){
    long int s = 0;
    for (int i=0; i<index; i++){
        s += col[i][column];
    }
    return s;
}

int** restoreMatrix(int* rowArray, int rowS, int* colArray, int colS, int* returnSize, int** returnColumnSizes){
    long int sumRow = 0, sumRow1 = 0;
    int w1=0, w2=0, w3=0;
    bool f = false;
    int **matrix = (int **)malloc(rowS*sizeof(int *));
    *returnColumnSizes = (int *)malloc(rowS*sizeof(int));
    
    //set the matrix
    for (int i=0; i<rowS; i++){
        matrix[i] = (int *)malloc(colS*sizeof(int));
        (*returnColumnSizes)[i] = colS;
    }
    //matrix to zero
    for (int i=0; i<rowS; i++){
        for (int k=0; k<colS; k++){
            matrix[i][k] = 0;
        }
    }
    
    //first row of the matrix = column array values
    for (int k=0; k<colS; k++){
            matrix[0][k] = colArray[k];
    }
    
    for (int i=0; i<rowS; i++){
        sumRow = 0;
        f = false;
        
        //we scan one column at time to compare with the sum in the arrayRow[i]
        for (int k=0; k<colS; k++){
            sumRow += matrix[i][k];
        }
        
        if (sumRow > rowArray[i]){
            w1 = 0;
            w2 = 0;
            sumRow1 = 0;
            while (w1 < colS && f == false){
                sumRow1 += matrix[i][w1];
                
                if (sumRow1 > rowArray[i]){
                    if (w1 == 0)
                        matrix[i][w1] = rowArray[i];
                    else
                        matrix[i][w1] = rowArray[i]-(getSum(matrix[i], w1));
                    
                    if ((i+1) < rowS){
                        //in the same column but row+1 we set what is needed to compplete this column sum (row sum full)
                        matrix[i+1][w1] = colArray[w1]-(getSumCol(matrix, i+1, w1));
                        w3 = i+2;
                        //put every row under this to zero if we reached the column sum
                        if (w3 < rowS){
                            while (w3 < rowS){
                                matrix[w3][w1] = 0;
                                w3++;
                            }
                        }
                        //from this column+1 we put every value down a row because this row's sum is full
                        w2 = w1+1;
                        if (w2 < colS){
                            while (w2 < colS){
                                if ((i+1) < rowS){
                                    matrix[i+1][w2] = matrix[i][w2];
                                } 
                                matrix[i][w2] = 0;
                                w2++;
                            }
                        }
                        f = true;
                    }
                }
                w1++;
                
            }
            
        }
    }
    *returnSize = rowS;
    return matrix;
}