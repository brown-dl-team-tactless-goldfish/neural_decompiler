int max_element(int* row, int gridRowSize)
{
    int result = 0;
    
    for(int i = 0; i < gridRowSize; i++)
    {
        result = (result < row[i]) ? row[i] : result;     
    }
    
    return result;
}

int getMax(int a, int b)
{
    return (a > b) ? a :b;
}

// Time: O(n), Space: O(cols)
// 4 ms
int projectionArea(int** grid, int gridRowSize, int *gridColSizes) 
{
    if(gridRowSize == 0 && *gridColSizes == 0) return 0;
    
    int top =0;
    int side = 0;
    int front =0;
    
    int* frontVals = (int*)malloc(sizeof(int) * (*gridColSizes));
    
    // initialize
    for(int i =0; i < *gridColSizes; i++)
    {
        frontVals[i] = grid[0][i];
    }
    
    for(int i =0; i < gridRowSize; i++)
    {
        side += max_element(grid[i], gridRowSize);
        
        for(int j =0; j < *gridColSizes; j++)
        {
            if(grid[i][j] >0)
            {
                top++;
            }
            
            if(i >=1)
            {
                frontVals[j] = getMax(frontVals[j], grid[i][j]);
            }
        }
    }
    
    // update front
    for(int i =0; i < *gridColSizes; i++)
    {
        front += frontVals[i];
    }
    
    free(frontVals);
    
    return top +front +side;
}