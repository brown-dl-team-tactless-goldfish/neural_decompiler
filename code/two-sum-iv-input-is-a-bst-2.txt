int NodeNums(struct TreeNode* root) {
    if(root == NULL) return 0;
    return NodeNums(root->left) + NodeNums(root->right) + 1;
}

void BST2Array(struct TreeNode* root, int* array, int* pos) {
    if(!root) return;
    BST2Array(root->left, array, pos);
    array[(*pos)++] = root->val;
    BST2Array(root->right, array, pos);
}

bool findTarget(struct TreeNode* root, int k) {
    if(!root) return false;

    int nodeNums = NodeNums(root);
    int* nodes = (int*)malloc(sizeof(int)*nodeNums);
    int pos = 0;
    BST2Array(root, nodes, &pos);
    for (int i = 0; i < pos; ++i) {
        printf("%d ", nodes[i]);
    }
    int i = 0, j = pos-1;
    while(i < j) {
        int temp = nodes[i] + nodes[j];
        if(k == temp) return true;
        else if(k < temp) j--;
        else i++;
    }
    free(nodes);
    return false;
}