/**
 * Definition for a Node.
 * struct Node {
 *     int val;
 *     struct Node *left;
 *     struct Node *right;
 *     struct Node *next;
 * };
 */

struct Node* connect(struct Node* root) {
    if(root == NULL) return root;
    
    struct Node* pstCurrRoot = root;
    struct Node* pstFirstValidLeftMostLeaf = NULL;
    struct Node* pstLastValidLeaf = NULL;
    while(pstCurrRoot != NULL)
    {
        if(pstCurrRoot->left != NULL)
        {
            if(pstLastValidLeaf != NULL) pstLastValidLeaf->next = pstCurrRoot->left;
            pstLastValidLeaf = pstCurrRoot->left;
            
            if(pstFirstValidLeftMostLeaf == NULL) pstFirstValidLeftMostLeaf = pstLastValidLeaf;
        }

        if(pstCurrRoot->right != NULL)
        {
            if(pstLastValidLeaf != NULL) pstLastValidLeaf->next = pstCurrRoot->right;
            pstLastValidLeaf = pstCurrRoot->right;
            
            if(pstFirstValidLeftMostLeaf == NULL) pstFirstValidLeftMostLeaf = pstLastValidLeaf;
        }

        pstCurrRoot = pstCurrRoot->next;
    }

    connect(pstFirstValidLeftMostLeaf);
    
    return root;
}