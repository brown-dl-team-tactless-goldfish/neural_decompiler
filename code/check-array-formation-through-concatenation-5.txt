bool canFormArray(int* arr, int arrSize, int** pieces, int piecesSize, int* piecesColSize){

    int pmap[101];    
    for(int i=0; i<piecesSize; ++i){
        int j=0;
        while(j<piecesColSize[i]){
            if(j-1<0){
                // First (and possibly only) value, has no previous neighbour
                pmap[pieces[i][j]] = -1;
            }else{ 
                pmap[pieces[i][j]] = pieces[i][j-1];
            }
            ++j;
        }
    }
    
    // Check if value exists and is piece-togetherable 
    for(int i=0; i<arrSize; ++i){
        if(pmap[arr[i]]==0){
            return false;
        }
        // has a neighbour. peek one value back and check equality
        if(pmap[arr[i]]>0){
            if(i==0 || arr[i-1]!=pmap[arr[i]]) return false;
        }
    }
    return true; 
}