int cmp(int *a, int* b)
{
    int abit = 0;
    int bbit = 0;
    int aclone = *a;
    int bclone = *b;
    
    while(aclone)
    {
        if(aclone % 2)
            abit++;
        aclone /= 2;
    }
    
    while(bclone)
    {
        if(bclone % 2)
            bbit++;
        bclone /= 2;
    }
    
    if(abit != bbit)
        return abit - bbit;
    else
        return *a - *b;
}

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* sortByBits(int* arr, int arrSize, int* returnSize){

    qsort(arr, arrSize, sizeof(int), cmp);
    *returnSize = arrSize;
    return arr;
    
}