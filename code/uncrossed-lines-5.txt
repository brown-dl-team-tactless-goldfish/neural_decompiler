int solve(int* A, int ASize, int* B, int BSize) {
    // BSize is smaller, or you may want to use int[500] instead of malloc
    int* line = malloc(sizeof(int) * BSize);
    if(line == NULL) {
        return -1;
    }
    // the first line A[0]
    int prev = 0;
    for(int j = 0; j < BSize; j++) {
        if(B[j] == A[0]) {
            prev = 1;
        }
        line[j] = prev;
    }
    for(int i = 1; i < ASize; i++) {
        prev = line[0];
        int corner = 0;
        for(int j = 0; j < BSize; j++) {
            if(B[j] == A[i]) {
                prev = prev>(corner+1)?prev:(corner+1);
            }
            prev = prev>line[j]?prev:line[j];
            corner = line[j];
            line[j] = prev;
        }
    }
    int result = line[BSize-1];
    free(line);
    return result;
}

int maxUncrossedLines(int* A, int ASize, int* B, int BSize) {
    if(ASize == 0 || BSize == 0) {
        return 0;
    }
    if(ASize > BSize) {
        return solve(A, ASize, B, BSize);
    } else {
        return solve(B, BSize, A, ASize);
    }
}