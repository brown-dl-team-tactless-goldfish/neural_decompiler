int max(int a, int b)
{
    return a > b ? a : b;
}

/*int maxProfit(int* prices, int pricesSize)
{
    if(pricesSize == 0 || pricesSize == 1)
    {
        return 0;
    }
    
    int* buy = (int*)malloc(sizeof(int) * (pricesSize + 1));
    int* sell = (int*)malloc(sizeof(int) * (pricesSize + 1));
    
    for(int i = 0; i < pricesSize + 1; ++i)
    {
        buy[i] = 0;
        sell[i] = 0;
    }
    
    buy[1] = -prices[0];
    
    for(int i = 2; i < pricesSize + 1; ++i)
    {
        buy[i] = max(buy[i-1], sell[i-2] - prices[i-1]);
        sell[i] = max(sell[i-1], buy[i-1] + prices[i-1]);
    }
    
    return sell[pricesSize];
}*/

int maxProfit(int* prices, int pricesSize)
{
    if(pricesSize == 0)
    {
        return 0;
    }
    
    int buy = -prices[0];
    int sell = 0;
    int pre_buy = 0;
    int pre_sell = 0;
    
    for(int i = 1; i < pricesSize; ++i)
    {
        pre_buy = buy;
        buy = max(buy, pre_sell - prices[i]);
        pre_sell = sell;
        sell = max(sell, pre_buy + prices[i]);
    }
    
    return sell;
}