class Solution {
    int n, t;
    unordered_map<int,int> m;
    queue<int> q;
public:
    int snakesAndLadders(vector<vector<int>>& board) {
        n = board.size();    
        t = n*n;
        m[1] = 0;
        q.push(1);
        while(!q.empty())
        {
            int c = q.front();
            q.pop();
            for (int k=1;k<=6;k++)
            {
                if (c+k > t)
                    break;
                int i = (c+k-1)/n;
                int j = (i%2==0)?(c+k-1)%n:n-1-(c+k-1)%n;
                int v = board[n-1-i][j];
                if (v == -1) v = c+k;
                if (m.count(v) == 0)
                {
                    m[v] = m[c] + 1;
                    if (v == t) return m[v];
                    q.push(v);
                }
            }
        }
        return -1;
    }
};