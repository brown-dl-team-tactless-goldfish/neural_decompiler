class Solution {
public:
	vector<int> nodesBetweenCriticalPoints(ListNode* head) {
		ListNode* prev = head;
		ListNode* curr = head -> next;
		ListNode* next = head -> next -> next;
		vector<int> temp;
		int index = 1;
		while(next){
			if(curr -> val > next -> val && curr -> val > prev -> val){
				temp.push_back(index);
			}
			if(curr -> val < next -> val && curr -> val < prev -> val){
				temp.push_back(index);
			}
			prev = prev -> next;
			curr = curr -> next;
			next = next->next;
			index++;
		}
		int n = temp.size();
		if(n < 2){
			return {-1, -1};
		}
		int maxDistance = temp[n - 1] - temp[0];
		int minDistance = INT_MAX;
		for(int i = 1; i < n; i++){
			minDistance = min(temp[i] - temp[i - 1], minDistance);
		}
		return {minDistance, maxDistance};
	}
};