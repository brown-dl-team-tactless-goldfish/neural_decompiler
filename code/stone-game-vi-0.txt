int cmp(const void* a, const void* b){
    int* A = *(int**)a;
    int* B = *(int**)b;
    return B[1] - A[1];
}
int stoneGameVI(int* aliceValues, int aliceValuesSize, int* bobValues, int bobValuesSize){
    int n = aliceValuesSize;
    int** merge = malloc(n * sizeof(int*));
    for(int i = 0; i < n; i++){
        merge[i] = malloc(2 * sizeof(int));
        merge[i][0] = i;
        merge[i][1] = aliceValues[i] + bobValues[i];
    }
    qsort(merge, n , sizeof(int*), cmp);
    int score = 0;
    for(int i = 0; i < n; i++){
        if(i%2 == 0)
            score += aliceValues[merge[i][0]];
        else
            score -= bobValues[merge[i][0]];
    }
    //free memory
    for(int i = 0; i < n; i++){
        free(merge[i]);
    }
    free(merge);
    
    if(score > 0)
        return 1;
    else if(score < 0)
        return -1;
    else
        return 0;
}