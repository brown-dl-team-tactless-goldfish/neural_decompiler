/*
The concept really here is take destinationa and compare with source of each, if found then break.
Which means we have an outgoing path from dest to source. If not found, then isCitrPresent will be zero
and we will break from the outer loop. The destination city will be the actual answer then.
*/
char * destCity(char *** paths, int pathsSize, int* pathsColSize){

    int destIndex = 0, srcIndex = 0, isCityPresent = 0;
    for(destIndex = 0; destIndex < pathsSize; destIndex++)
    {
        for(srcIndex = 0; srcIndex < pathsSize; srcIndex++)
        {
            if(!strcmp(paths[srcIndex][0],paths[destIndex][1]))
            {
                isCityPresent = 1;
                break;
            }
        }
        if(!isCityPresent)
            break;
        isCityPresent = 0;
    }
    return paths[destIndex][1];
}