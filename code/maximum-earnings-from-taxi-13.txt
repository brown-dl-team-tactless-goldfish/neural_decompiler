public class Solution {
    public long MaxTaxiEarnings(int n, int[][] rides) {
        Array.Sort(rides, (x,y) => x[0].CompareTo(y[0]));
        return max(0, rides, new long[rides.Length]);
    }
    
    private long max(int i, int[][] r, long[] memo)
    {
        if(i >= r.Length) return 0;
        if(memo[i] > 0) return memo[i];
        
        long profit = r[i][1]-r[i][0]+r[i][2];
        long sum = Math.Max(max(i+1, r, memo), profit);
        int next = search(i, r);        
        sum = Math.Max(sum, max(next, r, memo) + profit);
        
        memo[i] = sum;
        return memo[i];
    }
    
    private int search(int i, int[][] r)
    {
        int lo = i, hi = r.Length;
        while(lo < hi)
        {
            int mid = lo+(hi-lo)/2;
            if(r[i][1] <= r[mid][0])
                hi = mid;
            else
                lo = mid+1;
        }
        return lo;
    }
}