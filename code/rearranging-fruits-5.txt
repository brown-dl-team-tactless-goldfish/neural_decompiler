class Solution {
public:
    long long minCost(vector<int>& bas1, vector<int>& bas2) {
        map<int,int> mp,mp1,mp2;
        int mn=INT_MAX;
        for(auto x:bas1){
            mp[x]++;
            mp1[x]++;
            mn=min(mn,x);
        }
        for(auto x:bas2){
            mp[x]++;
            mp1[x]--;
            mn=min(mn,x);
        }
        
        for(auto x:mp){
            if(x.second%2==1){
                return -1;
            }
        }
        
       vector<vector<int>> reduce1,reduce2;

       for(auto x:mp1){
           int diff=abs(mp1[x.first]-mp2[x.first])/2;
           if(diff!=0){
               if(mp1[x.first]>mp2[x.first]){
                   reduce1.push_back({x.first,diff});
               }
               else{
                    reduce2.push_back({x.first,diff});
               }
           }
           mp1.erase(x.first);
           mp2.erase(x.first);
       } 

        for(auto x:mp2){
           int diff=abs(mp1[x.first]-mp2[x.first])/2;
           if(diff!=0){
               if(mp1[x.first]>mp2[x.first]){
                   reduce1.push_back({x.first,diff});
               }
               else{
                    reduce2.push_back({x.first,diff});
               }
           }
       } 

        sort(reduce1.begin(),reduce1.end());
        sort(reduce2.begin(),reduce2.end());
        int i=0,j=reduce2.size()-1;
        long long ans=0;
        while(i<reduce1.size() && j>=0){
            int mi=min(reduce1[i][1],reduce2[j][1]);
            reduce1[i][1]-=mi;
            reduce2[j][1]-=mi;
            ans+=1ll*mi*min({1ll*reduce1[i][0],1ll*reduce2[j][0],2ll*mn});
            if(reduce1[i][1]==0){
                i++;
            }
            if(reduce2[j][1]==0){
                j--;
            }
        }
        return ans;

    }
};