class Solution {
public:
    string maximumNumber(string num, vector<int>& change) {
      int c=0;
        for(int i=0;i<num.length();i++)
        {            
            char tmp=change[num[i]-48]+48;//mapping to the required value from vector change
            if(tmp>=num[i])//if the mapped value greater than or equal to the current value of tmp we change the value of the tmo ti the new value
            {
                if(tmp!=num[i])//We increase value of 'c' if and only if new mapped value is greater than older one
                    c++;
                num[i]=tmp;                
               
            }else
            {
                if(c!=0)//SInce our answer should be a contagious substring we break as soon as the current element is smaller than the mapped value if we have changed our 'num' earlier(i.e : c not equal to 0)
                    break;
            }
          //  cout<<num<<" ";      
        }
        return num;
    }
};