bool checkPath(struct ListNode* head, struct TreeNode* root, bool is_start)
{
    if(head == NULL)
        return true;

    if(root == NULL)
        return false;

    // If the value are not the same and not the start node of list, then return false
    if(root->val != head->val && !is_start)
        return false;

    bool answer = false;

    if(root->val == head->val) {
        answer |= checkPath(head->next, root->left, false);
        answer |= checkPath(head->next, root->right, false);
    }

    // If the start node fail at root value, then try the next of tree
    if(!answer && is_start) {
        answer |= checkPath(head, root->left, true);
        answer |= checkPath(head, root->right, true);
    }

    return answer;
}


bool isSubPath(struct ListNode* head, struct TreeNode* root){

    //Add the third variable to check if the start of linked list or not
    return checkPath(head, root, true);
}
