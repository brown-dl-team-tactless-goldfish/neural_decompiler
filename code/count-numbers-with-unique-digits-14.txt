class Solution {
public:
    int countNumbersWithUniqueDigits(int n) {
        
        if(n == 0) return 1; //handles edge case where 10^0 == 1;
        
        int total = 0;
        for(int i = 1; i <= n; i++){ //each loop, add in unique digit numbers of length i digits, up to i = n
            if(i == 1){ //handles 10 single digit numbers, which include 0
                total += 10;
                continue;
            }
            int sub_total = 9; //numbers with multiple digits must not start with zero, so have 9 possibilities for first digit
            for(int j = 1; j < i; j++)
                sub_total *= 10-j; //options for subsequent digits decrease b/c each digit must be unique. But 0 is available (so count back from 10)
            total += sub_total;
        }
        return total;
    }  
};