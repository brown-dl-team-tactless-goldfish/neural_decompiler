	int max_val(int a, int b){
		return (a>b?a:b);
	}

	int findMaxLength(int* nums, int numsSize){

		int sum=0;
		int max=0;
		int i=0;

		int** hash_map=(int**)(calloc(sizeof(int*),numsSize+2));
		for(i=0;i<numsSize+2;i++){
			hash_map[i]=(int*)(calloc(sizeof(int),2));
			hash_map[i][0]=-1;
			hash_map[i][1]=-1;
		}

		for(i=0;i<numsSize;i++){
			if(nums[i]==0)
				sum-=1;
			else
				sum+=1;

			if(sum==0){
				max=max_val(max, i+1);
			}

			else{
				if(sum<0){
					if(hash_map[(-1)*sum][1]>=0){
						max=max_val(max, i-hash_map[(-1)*sum][1]);
					}
					else    
						hash_map[(-1)*sum][1]=i;
				}
				else{
					if(hash_map[sum][0]>=0){
						max=max_val(max, i-hash_map[sum][0]);
					}
					else
						hash_map[sum][0]=i;
				}
			}
		}
		free(hash_map);
		return max;
	}