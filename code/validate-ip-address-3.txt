class Solution {
 public:
  string validIPAddress(string IP) const {
    if (IP.size() > 39) return "Neither";

    const char* p = IP.data();
    while (*p and *p != '.' and *p != ':') ++p;

    if (*p == '.' and validIPv4(IP.data()))
      return "IPv4";
    else if (*p == ':' and validIPv6(IP.data()))
      return "IPv6";
    else
      return "Neither";
  }
private:
  static inline bool validIPv4(const char* q) {
    int count = 0;
    while (*q) {
      int n = 0;
      if ((*q == '0' and q[1] != '.') or *q == '.') return false;

      while (*q >= '0' and *q <= '9') {
        n = n *10 + (*q++ - '0');
        if (n > 255) return false;
      }
      if (++count > 4) return false;
      if (*q and *q != '.') return false;
      if (*q) q++;
    }

    return count == 4 and q[-1] != '.';
  }

  static inline bool validIPv6(const char* q) {
    int count = 0;
    while (*q) {
      if (*q == ':') return false;
      int x = 0;
      while ((*q >= '0' and *q <= '9') or (*q >= 'a' and *q <= 'f') or
             (*q >= 'A' and *q <= 'F')) {
        q++;
        if (++x > 4) return false;
      }
      if (++count > 8) return false;
      if (*q and *q != ':') return false;
      if (*q) q++;
    }

    return count == 8 and q[-1] != ':';
  }
};