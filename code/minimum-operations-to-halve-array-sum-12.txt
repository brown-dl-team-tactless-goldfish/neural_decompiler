class Solution {
public:
    int halveArray(vector<int>& nums) {
        double sum = accumulate(nums.begin(), nums.end(), 0L), half = sum / 2, reduce = 0;
        int ans = 0;
        priority_queue<double> q;
        for (auto& i : nums)
            q.push(i);
        while (reduce < half)
        {
            double i = q.top();
            q.pop();
            if (q.empty())
            {
                while (reduce < half)
                {
                    i /= 2;
                    reduce += i;
                    ans++;
                }
                break;
            }
            else
            {
                double j = q.top();
                while (reduce < half && i >= j)
                {
                    i /= 2;
                    reduce += i;
                    ans++;
                }
                q.push(i);
            }
        }
        return ans;
    }
};