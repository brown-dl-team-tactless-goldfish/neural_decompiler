int function(int N,int *map,int *count,int *ret){    
    for(int i=1;i<=N;i++){
        if(map[i]==1){continue;}
        if(i%(*count)==0||(*count)%i==0){
            map[i]=1;
            (*count)++;
            if((*count)>N){
                map[i]=0;
                (*ret)++;
                (*count)--;
                continue;
            }
            if(function(N,map,count,ret)==0){
                 map[i]=0;
                if((*count)<1){
                    return 0;
                }
                continue;
            }
        }
    }
    if((*count)<=N){
        (*count)--;
    }
    return 0;
}
int countArrangement(int N) {
    int *map=(int*)malloc(sizeof(int)*(N+1));
    memset(map,0,N+1);
    int count=1;
    int ret=0;
    if(N==1){
        ret++;
        return ret;
    }
    function(N,map,&count,&ret);    
    return ret;
}