class ATM {
public:
    vector<long long> m = {20, 50, 100, 200, 500};
    vector<long long> c = {0, 0, 0, 0, 0};
    ATM() {
        
    }
    
    void deposit(vector<int> b) {
        for (int i = 0; i < b.size(); ++i) c[i] += b[i];
    }
    
    vector<int> withdraw(int amount) {
        vector<int> taken = {0, 0, 0, 0, 0};
        for (int i = taken.size() - 1; i >= 0 && amount > 0; --i){
            long long d = amount / m[i];
            long long smaller = min(d, c[i]);
            amount -= smaller * m[i];
            taken[i] = smaller;
        }
        if (amount == 0){
            for (int i = 0; i < taken.size(); ++i)
                c[i] -= taken[i];
            return taken;
        }
        return {-1};
    }
};