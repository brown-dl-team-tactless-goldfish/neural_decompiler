bool check(char * s, char * sub, bool** list, int i, int len){
    int now = 1;
    for (int k = i ; k < len ; k++){
        if (list[sub[now]][s[k]]){
            now++;
        } else {
            return false;
        }
    }
    return true;
}

bool matchReplacement(char * s, char * sub, char** mappings, int mappingsSize, int* mappingsColSize){
    int lens = strlen(s);
    int len_sub = strlen(sub);
    bool** list = malloc(sizeof(int*)*125);
    for (int i = 48 ; i < 125 ; i++){
        list[i] = calloc(125,sizeof(int));
        list[i][i] = true;
    }
    for (int i = 0 ; i < mappingsSize ; i++){
        list[mappings[i][0]][mappings[i][1]] = true;
    }
    int last = lens - len_sub;
    for (int i = 0 ; i <= last ; i++){
        if (list[sub[0]][s[i]]){
            if (check(s, sub, list, i+1, i+len_sub)){
                return true;
            }
        }
    }
    return false;
}