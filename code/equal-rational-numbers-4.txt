class Solution {
    double convert_string(string &s)
    {
        int state = 0;
        long long x = 0;
        long long devide = 1;
        vector<int> repeat;
        for (auto c : s)
        {
            if (isdigit(c))
            {
                if (state < 2)
                {
                    x = x*10 + c -'0';
                    if (state == 1)
                        devide *= 10;
                }
                else
                {
                    repeat.push_back(c-'0');
                }
            }
            else if (c=='.')
                state = 1;
            else if (c=='(')
                state = 2;
            else if (c==')')
            {
                state = 3;
                while (devide <= 100000000)
                {
                    for(auto r:repeat)
                    {
                        x = x*10 + r;
                        devide *= 10;
                        if (devide > 100000000) break;
                    }
                }
                break;
            }
        }
        double d = ((double)x) / devide;
        return d;    
    }
public:
    bool isRationalEqual(string s, string t) {
        double d = abs (convert_string(s) - convert_string(t));
        // cout << std::fixed << std::setprecision(14) << (double)d << endl;
        // cout << std::fixed << std::setprecision(14) << (double)0.000000001 << endl;
        return (d < 0.000000002);
        
    }
};
/*
"15.(9)"
"16"

"1"
"0.(9)"

"0.(52)"
"0.5(25)"

"0.1666(6)"
"0.16666666"

"0.1666(6)"
"0.166(66)"
*/