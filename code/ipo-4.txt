public int FindMaximizedCapital(int k, int w, int[] profits, int[] capital)
{
    var minCapital = new PriorityQueue<int, int>(capital.Select((c, i) => (i, c)));
    var maxProfits = new PriorityQueue<int, int>(Comparer<int>.Create((x, y) => y.CompareTo(x)));
    for (int i, c, p; k > 0; k--)
    {
        while (minCapital.TryPeek(out i, out c) && c <= w)
        {
            minCapital.Dequeue();
            maxProfits.Enqueue(i, profits[i]);
        }
        if (!maxProfits.TryDequeue(out i, out p))
        {
            break;
        }
        w += p;
    }
    return w;
}