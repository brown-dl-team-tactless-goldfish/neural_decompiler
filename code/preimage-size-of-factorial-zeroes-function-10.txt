    public class Solution
    {
        private ulong TrailingZeroes(ulong n)
        {
            if (n < 5)
            {
                return 0;
            }

            checked
            {

                ulong res = 0;

                for (ulong i = 5; (n / i) >= 1; i *= 5)
                {
                    res += (n / i);
                }

                return res;
            }
        }

        private ulong Helper(ulong k)
        {
            checked
            {
                ulong left = 0;
                ulong right = long.MaxValue;

                while (right - left > 1)
                {
                    ulong mid = left + (right - left) / 2;
                    var tz = TrailingZeroes(mid);

                    if (tz <= k)
                    {
                        left = mid;
                    }
                    else
                    {
                        right = mid;
                    }
                }

                if (TrailingZeroes(right) == k)
                {
                    return right;
                }

                return left;
            }
        }

        public int PreimageSizeFZF(int k)
        {
            checked
            {
                if (k == 0)
                {
                    return (int)Helper((ulong)k) + 1;
                }

                return (int) (Helper((ulong)k) - Helper((ulong)k - 1));
            }
        }
    }