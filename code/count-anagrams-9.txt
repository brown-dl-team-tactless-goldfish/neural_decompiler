typedef long long ll;
class Solution {
public:
   ll power(ll x,ll y, ll p)
    {
        ll res = 1; 
        x = x % p;
        while (y > 0)
        {
            if (y & 1)
                res = (res * x) % p;
            y = y >> 1; 
            x = (x * x) % p;
        }
        return res;
    }

    ll modInverse(ll n, ll p)
    {
        return power(n, p - 2, p);
    }
    int countAnagrams(string s) 
    {
        int mod = 1e9+7;
        int n = s.length();
       vector<int>v(n+1,0);
        
        v[0]=1;
        
        for(int i=1;i<=n;i++)
        {
            v[i]=(1LL*i*v[i-1])%mod;
        }
        
        string p="";
        map<char,int>mp;
        int ans =1;
        for(int i=0;s[i];i++)
        {
            if(s[i]==' '||i==s.length()-1)
            {
                if(i==s.length()-1)
                {
                    p+=s[i];
                    mp[s[i]]++;
                }
                int l = p.length();
                l = v[l];
                
                int r =1;
                
                for(auto x:mp)
                {
                    r= (1LL*r*v[(x.second)])%mod;
                }
    
                ans=(1LL*ans*(1LL*l*modInverse(r,mod)%mod))%mod;
                ans%=mod;
                p="";
                mp.clear();  
            }
            else
            {
               p+=s[i];
               mp[s[i]]++;
            }
        }
        
        return ans;
    }
};