/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int DFS(int x, int y, int** grid, int gridSize, int* gridColSize){
    if(x == gridSize){
        return y;
    }
    if(grid[x][y] == 1){
        if(y == gridColSize[0] - 1 || grid[x][y + 1] == -1){
            return -1;
        }else{
            return DFS(x + 1, y + 1, grid, gridSize, gridColSize);
        }
    }else{
        if(y == 0 || grid[x][y - 1] == 1){
            return -1;
        }else{
            return DFS(x + 1, y - 1, grid, gridSize, gridColSize);
        }
    }
}

int* findBall(int** grid, int gridSize, int* gridColSize, int* returnSize){
    int* ans = malloc(sizeof(int) * (*gridColSize));
    *returnSize = *gridColSize;
    for(int i = 0; i < gridColSize[0]; i++){
        ans[i] = DFS(0, i, grid, gridSize, gridColSize);
    }
    return ans;
}