class Solution {
    int n;
    unordered_map<string, int> um;
    void dfs(string &tiles, int idx, string &s, int bitmaps)
    {
        if(idx == n)
        {
            if(s.size() != 0)
            {
                um[s]++;
            }
            return;
        }
        if(idx > n)
            return;
        dfs(tiles, idx+1, s, bitmaps);
        for(int i = 0; i < n; i++)
        {
            if(bitmaps & (1 << i))
                continue;
            s.push_back(tiles[i]);
            dfs(tiles, idx+1, s, bitmaps | (1 << i));
            s.pop_back();
        }
        return;
    }
public:
    int numTilePossibilities(string tiles) {
        string s = "";
        n = tiles.size();
        dfs(tiles, 0, s, 0);
        return um.size();
    }
};