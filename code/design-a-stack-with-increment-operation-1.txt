typedef struct {
    int arr[1001];
    int top;
    int maxSize;
} CustomStack;

CustomStack* customStackCreate(int maxSize) {
    CustomStack* obj = (CustomStack*) calloc(1, sizeof(CustomStack));
    obj->maxSize = maxSize;
    return obj;
}

void customStackPush(CustomStack* obj, int x) {
    if (obj->top == obj->maxSize) return;
    obj->arr[(obj->top)++] = x;
}

int customStackPop(CustomStack* obj) {
    if (obj->top == 0) return -1;
    int ans = obj->arr[(obj->top) - 1];
    (obj->top)--;
    return ans;
}

void customStackIncrement(CustomStack* obj, int k, int val) {
    int end = fmin(obj->maxSize, k);
    for (int i = 0; i < end; i++) {
        obj->arr[i] += val;
    }
}

void customStackFree(CustomStack* obj) {
    free(obj);
}