size_t
diff(const char *const s, const size_t n)
{
	size_t i, j;

	if (n < 2)
		return SIZE_MAX;
	for (i = 0, j = n - 1; i < j; ++i, --j)
		if (s[i] != s[j])
			return i;

	return SIZE_MAX;
}

bool
validPalindrome(const char *const s)
{
	size_t n, d;

	n = strlen(s);
	d = diff(s, n);
	if (d == SIZE_MAX)
		return true;
	n -= d * 2 + 1;

	return diff(s + d, n) == SIZE_MAX || diff(s + d + 1, n) == SIZE_MAX;
}