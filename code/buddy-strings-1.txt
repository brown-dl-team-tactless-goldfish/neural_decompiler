bool buddyStrings(char * s, char * goal){
    
    int len = 0, duplicate = 0;
    int ar[26] = {0};
    
    if(strlen(s) == strlen(goal))
    {
        len = strlen(goal);
    } else {
        return false;
    }
    
    int first = -1;
    int second = -1;
    
    for(int i = 0; i < len; ++i)
    {
        ar[s[i]-'a']++;
       
        if(ar[s[i]-'a']>1)
            duplicate = 1;
        
        if(s[i] != goal[i])
        {
            if(first == -1)
            {
                first = i;
            } else if(second == -1) {
                second = i;
            } else if(first != -1 && second != -1) {
                return false;
            }
        }       
    }
    
    if(first != -1 && second != -1) {
        s[first] = s[first] + s[second];
        s[second] = s[first] - s[second];
        s[first] = s[first] - s[second];
        
        if(strcmp(s,goal) == 0) return true;
    }
    
    if(duplicate)
        if(strcmp(s,goal) == 0) return true;
    
    return false;

}