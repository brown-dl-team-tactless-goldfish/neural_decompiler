void swap(int *a, int *b){
    int temp;
    temp = *a;
    *a = *b;
    *b = temp;}

void quicksort(int array[], int maxlen, int begin, int end){
    int i, j;
    if(begin<end){
        i=begin + 1;
        j=end;
        while(i<j){  
            if(array[i]>array[begin]){
                swap(&array[i], &array[j]);
                j--;}
            else{i++;}}
        if(array[i] >= array[begin]){
            i--;  }  
  
        swap(&array[begin], &array[i]);          
        quicksort(array, maxlen, begin, i);  
        quicksort(array, maxlen, j, end);}}

int findUnsortedSubarray(int* nums, int numsSize) {
    int a[10000];
    for(int i=0;i<numsSize;++i){a[i]=nums[i];}
    int start=0,end=0;
    quicksort(a,numsSize,0,numsSize-1);
    for(int i=0;i<numsSize;i++){
        if(nums[i]==a[i]){start++;if(start==numsSize-1)return 0;}
        else
            break;}
    for(int i=numsSize-1;i>0;i--){
        if(nums[i]==a[i]){end++;if(end==numsSize-1)return 0;}
        else
            break;}
    return numsSize-start-end;
}