class Solution {
public:
    int lenLongestFibSubseq(vector<int>& arr) {
        if(arr.size() == 0)
            return 0;
       int n = arr.size();
       int dp[n][n];
       map<int,int>interim;
        for(int i = 0;i<n;i++)
        {
            interim[arr[i]] = i;
            for(int j = i+1;j<n;j++)
            dp[i][j] = 2;
        }
        for(int i = 0;i<n;i++)
        {
            for(int j = i+1;j<n;j++)
            {
                int val = arr[i]+arr[j];
                if(interim.find(val)!= interim.end())
                {
                    int index = interim[val];
                    dp[j][index] = dp[i][j]+1;
                }
            }
        }
        int result = 0;
        for(int i = 0;i<n;i++)
        {
            for(int j = i+1;j<n;j++)
                result = max(result,dp[i][j]);
            
        }
        if(result == 2)
            return 0;
        return result;
    }
};