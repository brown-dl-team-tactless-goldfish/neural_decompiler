class Solution {
public:
    vector<int> powerfulIntegers(int x, int y, int bound) {
        
        set<int> record;
        
        // Log2(10^6) = 19.93
        // 2^10 = 1024 ~= 10^3
        
        for (int i = 0; i <= 20 && pow(x, i) <= bound; i++)
        {
            for (int j= 0; j <= 20 && pow(y, j) <= bound; j++)
            {
                int sum = pow(x, i) + pow(y, j);
                
                if (sum <= bound)
                    record.insert(sum);
            }
        }
        
        vector<int> ans;
        
        for (const auto item : record)
        {
            ans.push_back(item);
        }
        
        return ans;
    }
};