vector<bool> canEat(vector<int>& candiesCount, vector<vector<int>>& queries) {
    
    vector<long long> accsum;
    for(auto& c : candiesCount){
        if (accsum.empty()) accsum.push_back((long long)c);
        else accsum.push_back((long long)c + *accsum.rbegin());
    }
    
    vector<bool> res;
    for(auto& c : queries) {
        long long sum = accsum[c[0]];
        
        if (1 * c[1] >= sum) { // even we eat 1 each day, we have eaten up target
            res.push_back(false);
        } else if ((long long)c[2] * (c[1] + 1) <= (c[0] > 0 ? accsum[c[0] - 1] : 0)) { // even we eat daily cap, we still haven't finished previous type of target
            res.push_back(false);
        } else { // otherwise, true
            res.push_back(true);
        }
    }
    
    return res;
}