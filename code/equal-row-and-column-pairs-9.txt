int equalPairs(vector<vector<int>>& grid) {
        map<vector<int>,int> mp;
        for (auto &v : grid) {
            mp[v]++;
        }
        int n = grid.size();
        int result = 0;
        for (int i = 0; i < n; i++) {
            vector<int> row(n,0);
            for (int j = 0; j < n; j++) {
                row[j] = grid[j][i];
            }
            auto it = mp.find(row);
            if (it != mp.end()) {
                result += it->second;
            }
        }
        return result;
    }
    
    int equalPairs1(vector<vector<int>>& grid) {
        unordered_map<int,vector<int>> colMap;
        int r = grid.size(); int c = grid[0].size();
        // Collect all values that belong to particular column
        for (int i = 0; i < c; i++) {
            colMap[grid[0][i]].push_back(i);
        }
        
        int result = 0;
        for (int i = 0; i < r; i++) {
            auto it = colMap.find(grid[i][0]);
            if (it != colMap.end()) {
                for (auto &c : it->second) {
                    bool fullMatch = true;
                    for (int j = 0; (j < r) && fullMatch ; j++) {
                        if (grid[j][c] != grid[i][j]) {
                            fullMatch = false;
                        }
                    }
                    result += fullMatch;
                }
            }
        }
        return result;
    }
	```