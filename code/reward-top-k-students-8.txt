class comp{
    public:
        bool operator()(pair <int,int> &a,pair <int,int> &b){
            if(a.first == b.first)
                return a.second > b.second;
            return a.first < b.first;
        }
};

class Solution {
public:
    vector<int> topStudents(vector<string>& positive_feedback, vector<string>& negative_feedback, vector<string>& report, vector<int>& student_id, int k) {
        unordered_map <string,int> feedBack;
        priority_queue <pair<int,int> , vector<pair<int,int>> , comp> pq;
        vector <int> ans;
        for(auto &it:positive_feedback)
            feedBack[it] = 3;
        for(auto &it:negative_feedback)
            feedBack[it] = -1;
        for(int i=0;i<report.size();i++){
            int cnt = 0;
            string tmp = "";
            for(int j=0;j<report[i].length();j++){
                if(report[i][j] == ' '){
                    if(feedBack.find(tmp) != feedBack.end())
                        cnt += feedBack[tmp];
                    tmp = "";
                }
                else
                    tmp += report[i][j];
            }
            if(feedBack.find(tmp) != feedBack.end())
                cnt += feedBack[tmp];
            pq.push({cnt,student_id[i]});
        }
        while(!pq.empty() && k--){
            ans.push_back(pq.top().second);
            pq.pop();
        }
        return ans;
    }
};