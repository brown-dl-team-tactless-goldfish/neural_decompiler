class Solution {

private:
    int digitSum(int number)
    {
        int sum = 0;
        
        while (number)
        {
            sum += number % 10;
            
            number /= 10;
        }
        
        return sum;
    }
    
public:
    int countLargestGroup(int n) {
        
        int size = 0;
        unordered_map<int, vector<int>> record;
        
        for (int i = 1; i <= n; i++)
        {
            record[digitSum(i)].push_back(i);
            
            size = max(size, (int)record[digitSum(i)].size());
        }
        
        int count = 0;
        
        for (const auto item : record)
        {
            if (item.second.size() == size)
                count++;
        }
        
        return count;
    }
};