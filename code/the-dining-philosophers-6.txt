#include <semaphore.h>
class DiningPhilosophers {
    vector<sem_t> fork;
public:
    DiningPhilosophers() {
        fork.resize(5);
        for(int i=0;i<5;i++) {
            sem_init(&fork[i], 0, 1);//binary semaphores
        }
    }
    
    ~DiningPhilosophers() {
        for(int i=0;i<5;i++) {
            sem_destroy(&fork[i]);//binary semaphores
        }
    }

    void wantsToEat(int philosopher,
                    function<void()> pickLeftFork,
                    function<void()> pickRightFork,
                    function<void()> eat,
                    function<void()> putLeftFork,
                    function<void()> putRightFork) {
        //Handles starvation deadlock
        int id1 = min(philosopher % 5, (philosopher + 1) % 5);
        int id2 = max(philosopher % 5, (philosopher + 1) % 5);
        sem_wait(&fork[id1]);
        sem_wait(&fork[id2]);
        pickLeftFork();
        pickRightFork();
        eat();
        putRightFork();
        putLeftFork();
		sem_post(&fork[id2]);
        sem_post(&fork[id1]);
    }
};