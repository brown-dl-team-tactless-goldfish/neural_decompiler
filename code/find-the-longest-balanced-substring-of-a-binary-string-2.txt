public class Solution {
    public int FindTheLongestBalancedSubstring(string str) {
        Stack<char> s = new();
        int count = 0, max = 0;
        char prev = 'a'; //Random char to hold prev value
        
        foreach(var c in str)
        {
            if(c == '0')
            {
                if(prev == '1')
                    s = new(); //if prev is 1 and curr is 0, we reset stack
                s.Push(c);
                count = 0; //reset
            }
            else //c == '1'
            {
                if(s.Any())
                {
                    if(s.Peek() == '0')
                    {
                        s.Pop();
                        ++count;
                        max = Math.Max(max, count);
                    }
                    else
                        s.Push(c);
                }
            }
            prev = c; //store prev value at end of iteration
        }
        
        return max * 2; total length
    }
}