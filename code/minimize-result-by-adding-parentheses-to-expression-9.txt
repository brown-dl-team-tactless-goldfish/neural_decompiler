class Solution {
public:
    long long toi(string s)
    {
        long long ans = 0;
        for(char c:s)
        {
            ans = ans * 10 + (c - '0');
        }
        return ans;
    }
    string minimizeResult(string expression) {
        int n = expression.length();
        int pivot = 0;

        for(int i=0;i<n;i++)
        {
            if(expression[i] == '+')
                pivot = i;
        }

        long long mn = 1e10;
        int A;
        int B;
        for(int before = 0;before <= pivot - 1;before++)
        {
            for(int after = pivot + 1;after < n;after++)
            {
                long long a,b,c,d;

                a = toi(expression.substr(0,before));
                b = toi(expression.substr(before,pivot - before));

                c = toi(expression.substr(pivot + 1,after - pivot));
                d = toi(expression.substr(after + 1,n - after - 1));
                
                if(a == 0)a = 1;
                if(d == 0)d = 1;
                long long value = a * (b + c) * d;
                if(value < mn)
                {
                    mn = value;
                    A = after;
                    B = before;
                }
            }
        }

        string ans;

        for(int i=0;i<n;i++)
        {
            if(i == B)
            {
                ans += "(";
            }

            ans += expression[i];

            if(i == A)
                ans += ")";
        }
        return ans;


    }
};