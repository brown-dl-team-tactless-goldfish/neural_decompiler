int compare(const void* xp, const void* yp){
    return *((int*)xp) - *((int*)yp);
}
int** minimumAbsDifference(int* arr, int arrSize, int* returnSize, int** returnColumnSizes){
    qsort(arr, arrSize, sizeof(int), compare);
    int len = 0;
    int** res = calloc(arrSize, sizeof(int*));
    *returnColumnSizes = (int*)malloc(arrSize * sizeof(int));
    int diff = INT_MAX;
    int refer = INT_MAX;
    res[0] = (int*)malloc(2 * sizeof(int));
    for(int i = 0; i < arrSize - 1; i++){
        if(arr[i + 1] - arr[i] < diff){
            diff = arr[i + 1] - arr[i];
            len = 1;
            res[0][0] = arr[i];
            res[0][1] = arr[i + 1];
            returnColumnSizes[0][0] = 2;
            refer = arr[i];
        }
        else if(arr[i + 1] - arr[i] == diff && arr[i] != refer){
            if(res[len] == NULL){
                res[len] = malloc(2 * sizeof(int));
            }
            res[len][0] = arr[i];
            res[len][1] = arr[i + 1];
            returnColumnSizes[0][len++] = 2;
            refer = arr[i];
        }
    }
    *returnSize = len;
    return res;
    
}