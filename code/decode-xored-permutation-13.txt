class Solution {
public:
    vector<int> decode(vector<int>& encoded) {
        
        vector<int> perm;
        int n = encoded.size() + 1;
        
        // Idea is to get the first element. After that it becomes a piece of cake
        int first = 0;
        for(int i = 0; i <= n; i++) {
            first = first ^ i;           // 1^2^3^......^n
            if(i < n and i % 2 == 1) {
                // enc[1] = a2^a3, enc[3] = a3^a4, enc[5]....
                first = first ^ encoded[i];
            }
        }
        
        perm.push_back(first);
        
        // Find all other numbers
        for(int i = 0; i < encoded.size(); i++) {
            perm.push_back(encoded[i] ^ perm[i]);
        } 
        
        return perm;
    }
};