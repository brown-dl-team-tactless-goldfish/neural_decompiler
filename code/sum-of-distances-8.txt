class Solution {
  using ll=long long;
public:
    vector<ll> distance(vector<int>& nums) {
        map<ll,vector<ll>> mp;
        for(int i=0;i<nums.size();i++)mp[nums[i]].push_back(i);
        map<ll,vector<ll>> prefix;
        for(auto [val,indices]:mp){
          prefix[val]=indices;
          int n=prefix[val].size();
          for(int i=1;i<n;i++)prefix[val][i]=prefix[val][i-1]+prefix[val][i];
        }
        vector <ll> ans;
        for(int i=0;i<nums.size();i++){
          ll total=mp[nums[i]].size();
          ll ind=lower_bound(mp[nums[i]].begin(),mp[nums[i]].end(),i)-mp[nums[i]].begin();
          ll low=0;
          if(ind)low=prefix[nums[i]][ind-1];
          ll up=prefix[nums[i]].back()-prefix[nums[i]][ind];
          ll l=ind*i-low;
          ll r=up-(total-ind-1)*i;
          ans.push_back(l+r);
        }
        return ans;
    }
};