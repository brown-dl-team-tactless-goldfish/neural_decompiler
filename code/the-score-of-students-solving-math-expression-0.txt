class Solution {
public:
    vector<vector<unordered_set<int>>> dp;
    
    int scoreOfStudents(string s, vector<int>& answers) {
        int n = s.size();
        dp.resize(n, vector<unordered_set<int>>(n));
        
        unordered_set<int> m =  find(0, n-1, s);
        
        int real = solve(s);
        int sum = 0;
        
        for(int& x : answers){
            if(x == real) sum += 5;
            else if(m.find(x) != m.end()) sum += 2;
        }
        
        return sum;
        
    }
    
    int solve(string& s){
        int p = 1;
        vector<int> v;
        for(char& c : s){
            if(c == '+'){
                v.push_back(p);
                p = 1;
            }
            else if(c != '*') p *= (c-'0');
        }
        for(int& x : v) p += x;
        return p;
    }
    
    unordered_set<int> find(int l, int r, string& s){
        if(!dp[l][r].empty()) return dp[l][r];
        
        unordered_set<int> tmp;
        if(l == r) {tmp.insert(s[l]-'0'); return tmp;}
        
        for(int i = l+1; i < r; i+=2){
            char c = s[i];
            unordered_set<int> left = find(l, i-1, s);
            unordered_set<int> right = find(i+1, r, s);
            for(auto& x : left){
                for(auto& y : right){
                    int val;
                    if(c == '+') val = x+y;
                    else val = x*y;
                    if(val <= 1000) tmp.insert(val);
                }
            }
        }
        return dp[l][r] = tmp;
    }
};