class Solution:
    def removeDuplicates(self, s: str, k: int) -> str:
        s_set = set(s)
        # print ("s_set = ", s_set)
        maps = {}
        for c in s_set:
            tmpN = s.count(c)
            if (tmpN >= k):
                maps[c] = tmpN

        # print("maps = ", maps)
        self.res = ""

        while s:
            # print("s = ", s)
            tmpN = len(s)
            if (tmpN < k):
                break

            flag_return = True
            for i in range(tmpN - k + 1):
                if (s[i] not in maps):
                    continue
                tmpS = s[i:i+k]
                # print("i = ", i, " tmpS = ", tmpS)
                if (tmpS == s[i]*k):
                    # print("need remove ", tmpS)
                    s = (s[:i] + s[i+k:])
                    flag_return = False
                    break

            if (flag_return == True):
                break

        print("s = ", s)
        return s