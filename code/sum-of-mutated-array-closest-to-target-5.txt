class Solution {
public:
    #define abs(a) ((a>0)?a:-(a))
    int findBestValue(vector<int>& arr, int target) {
        sort(arr.begin(), arr.end());
        int n = arr.size();
        int dp[n+2] = {}; dp[0] = arr[0];
        for (int i = 1; i < n; i++) dp[i] = dp[i-1] + arr[i];
        long long bestdiff = dp[n-1]+2, bestcurr = -1000;
        for (int val = -1000; val < 1e5+1000; val++) {
            int curr = upper_bound(arr.begin(),arr.end(),val) - arr.begin();
            long long currdiff;
            if (curr == 0) {
                currdiff = abs(target - n*val);
            } else {
                currdiff = abs(target - dp[curr-1] - (n-curr)*val);
            }
            if (currdiff < bestdiff || (currdiff <= bestdiff && val < bestcurr)) {
                bestcurr = val;
                bestdiff = currdiff;
            }
        }
        return bestcurr;
    }
};