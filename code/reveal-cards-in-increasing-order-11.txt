class Solution {
public:
    vector<int> deckRevealedIncreasing(vector<int>& deck) {
        deque<int> ans;
        if( deck.size() == 1 )
            return deck;
        sort( deck.begin(), deck.end() );
        ans.push_front( deck.back() );
        deck.pop_back();
        ans.push_front( deck.back() );
        deck.pop_back();
        while( ! deck.empty() ){
            ans.push_front( ans.back() );
            ans.pop_back();
            ans.push_front(deck.back());
            deck.pop_back();
        }
        return { ans.begin(), ans.end() };
    }
};