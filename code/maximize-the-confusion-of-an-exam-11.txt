
class Solution {
public:
    int maxConsecutiveAnswers(string answerKey, int k) {
       return max(visit(answerKey, k, true), visit(answerKey, k, false));
    }

    int visit(string& answerKey, int k, bool tureToFalse)
    {
        int n = answerKey.size();
        int r = 0;
        char targetChar = tureToFalse ? 'T' : 'F';
        char viceChar = tureToFalse ? 'F' : 'T';

        int consecutiveCount = 0;
        int changeCount = 0;        
        
        for (int i = 0; i < n; ++i)
        {
            if (answerKey[i] == targetChar)
            {
                changeCount++;
                consecutiveCount++;

                if (changeCount == k)
                {
                    for (int j = i + 1; j < n; ++j)
                    {
                        if (answerKey[j] == viceChar)
                            consecutiveCount++;
                        else
                            break;
                    }

                    break;
                }
            }
            else
            {
                consecutiveCount++;
            }
        }

        r = max(r, consecutiveCount);

        for (int i = 1; i < n; ++i)
        {
            char preChar = answerKey[i - 1];
            if (preChar == viceChar)
            {
                consecutiveCount--;
                continue;
            }
            else
            {
                int k = i + consecutiveCount - 1;
                if (k >= n) break;

                for (int j = k + 1; j < n; ++j)
                {
                    if (answerKey[j] != viceChar) break;
                    
                    consecutiveCount++;
                }

            }

            r = max(r, consecutiveCount);
        }

        return r;
    }
};