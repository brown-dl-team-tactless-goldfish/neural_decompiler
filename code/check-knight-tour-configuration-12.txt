class Solution {
public:
    bool checkValidGrid(vector<vector<int>>& grid) {
        int cur_x = 0;
        int cur_y = 0;
        int cur_val = 0;
        int n = grid.size();
        int last = n * n;
        vector<vector<int>> dir = {{2,1},{-2,1},{2,-1},{-2,-1},{1,2},{1,-2},{-1,2},{-1,-2}};
        
        
        for(int i = 0; i < last-1; i++)
        {
            //cout<<"Current Postion : "<<cur_x<<" "<<cur_y<<"\n";
            bool not_found = true;
            for(auto x : dir)
            {
                int next_x = cur_x + x[0];
                int next_y = cur_y + x[1];
                //cout<<"Next Postion : "<<next_x<<" "<<next_y<<"\n";
                if(next_x < 0 || next_x >= n) continue;
                if(next_y < 0 || next_y >= n) continue;
                if(grid[next_x][next_y] != cur_val + 1) continue;
                not_found = false;
                cur_val = grid[next_x][next_y];
                cur_x = next_x;
                cur_y = next_y;
                break;
            }
            
            if(not_found)
                return false;
        }
        
        
        return true;
        
    }
};