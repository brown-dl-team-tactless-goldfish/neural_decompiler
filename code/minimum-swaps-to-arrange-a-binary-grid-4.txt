class Solution {
public:
    int minSwaps(vector<vector<int>>& grid) {
        
        //store the number of zeroes in every row of grid
        int rows=grid.size();
        int cols=grid[0].size();
        vector<int> arr;
        for(int i=0;i<rows;i++)
        {
            int cnt=0;
            int j=cols-1;
            while(j>=0 && grid[i][j]==0)
                cnt++,j--;
            arr.push_back(cnt);
        }
       
        
        int req=cols-1;
        int swaps=0;
        //now try to swap the rows
        for(int i=0;i<arr.size();i++)
        {
            int j;
            for(j=i;j<arr.size();j++)
            {
               if(arr[j]>=req)
                  break;
            }
            if(j==arr.size())
                return -1;
            swaps+=j-i;
            //now swap the values
            while(j>i){
                swap(arr[j],arr[j-1]);j--;
            }
            req--;
        }
        return swaps;
    }
};