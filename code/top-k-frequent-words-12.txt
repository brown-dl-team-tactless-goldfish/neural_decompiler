struct am { char *w, f; };

int cmp(const void *x, const void *y){
    const struct am *a = x, *b = y;
    return a->f != b->f ? b->f - a->f : strcmp(a->w, b->w);
}

char ** topKFrequent(char ** words, int wordsSize, int k, int* returnSize){
    char **a = malloc(sizeof(char *[wordsSize])), **w = words, l, n = -1;
    struct am m[100] = { { .f = 0, } };
    for (int i = 0, j ; i < wordsSize ; m[j].w = w[i++], m[j].f++, n = n < j ? j : n)
        for (j = 0 ; j < 100 && m[j].w && strcmp(m[j].w, w[i]) ; j++);
    qsort(m, n + 1, sizeof(struct am), cmp);
    for (l = -1 ; ++l < k ; a[l] = m[l].w);
    return *returnSize = l, a;
}