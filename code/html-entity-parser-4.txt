class Solution {
    public:
        using Map = unordered_map<string, char>;
        string entityParser(string text, int i = -1, int j = -1, string ans = {}) {
            Map map{{"&quot;",'"'},{"&apos;",'\''},{"&amp;",'&'},{"&gt;",'>'},{"&lt;",'<'},{"&frasl;",'/'}};
            for (auto k{ 0 }; k < text.size(); ++k) {
                auto c = text[k];
                ans.push_back(c);
                if (c == '&') i = k;
                if (c == ';') j = k;
                if (i < j) {
                    auto N = int(ans.size()) - (j - i + 1); // N is the index of text[i..j] (+1 for i..j inclusive)
                    auto T = ans.substr(N); // target ðŸŽ¯
                    if (map.find(T) != map.end()) {
                        ans = ans.substr(0, N); // remove text[i..j]
                        ans.push_back(map[T]); // add corresponding html entity
                    }
                    i = j = -1;
                }
            }
            return ans;
        }
    };