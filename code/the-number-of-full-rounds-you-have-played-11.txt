class Solution {
public:
    int fullRoundBefore(int h, int m) {
        return h * 4 + m / 15;    
    }
    
    int numberOfRounds(string startTime, string finishTime) {
		// Time O(1), Space O(1)
        int h0 = stoi(startTime.substr(0,2));
        int m0 = stoi(startTime.substr(3,2));
        int h1 = stoi(finishTime.substr(0,2));
        int m1 = stoi(finishTime.substr(3,2));
        if (h1 < h0 or (h1 == h0 and m1 < m0)) {
            h1 += 24;
        }
        return max(0, fullRoundBefore(h1, m1) - fullRoundBefore(h0, m0) - (m0 % 15 != 0));
    }
};