int getMin3(int a, int b, int c) {
    return (a<b?a:b)<c?(a<b?a:b):c;
}
int getMin4(int a, int b, int c, int d) {
    return (a<b?a:b)<(c<d?c:d)?(a<b?a:b):(c<d?c:d);
}
struct TreeNode* getLeftMostChild(struct TreeNode* root) {
    if(root==NULL) return NULL;
    if(root->left!=NULL) return getLeftMostChild(root->left);
    return root;
}
struct TreeNode* getRightMostChild(struct TreeNode* root) {
    if(root==NULL) return NULL;
    if(root->right!=NULL) return getRightMostChild(root->right);
    return root;
}
int getMinimumDifference(struct TreeNode* root) {
    if(root->left==NULL && root->right==NULL) return 100000;
    if(root->right==NULL) return getMin3(getMinimumDifference(root->left), root->val-root->left->val, root->val-getRightMostChild(root->left)->val);
    if(root->left==NULL) return getMin3(getMinimumDifference(root->right), root->right->val-root->val, getLeftMostChild(root->right)->val-root->val);
    return getMin4(getMinimumDifference(root->left), getMinimumDifference(root->right), root->val-getRightMostChild(root->left)->val, getLeftMostChild(root->right)->val-root->val);
}