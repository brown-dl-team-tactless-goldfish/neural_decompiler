/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    void f(TreeNode* root, map<int,TreeNode*>& dp){
        if(root == nullptr){
            return;
        }
        dp[root->val] = root;
        f(root->left,dp);
        f(root->right,dp);
    }
    int count(TreeNode* root){
        if(root == nullptr){
            return 0 ;
        }
        return 1 + count(root->left) + count(root->right);
    }
    bool btreeGameWinningMove(TreeNode* root, int n, int x) {
        map<int,TreeNode*> m;
        f(root,m);
        auto tmp = m[x];
        int t = max(count(tmp->left),count(tmp->right));
        int t1 = n - count(tmp);
        int maxColored = max(t,t1);
        if(maxColored > n - maxColored){
            return true;
        }
        return false;
    }
};