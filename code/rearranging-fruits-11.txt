class Solution {
public:
    long long minCost(vector<int>& a, vector<int>& b) {
        
        map<int,int> m,p,q;
        int mn = 1e9;
        for(auto x:a)
            m[x]++,q[x]++,mn = min(mn,x);
        for(auto x:b)
            m[x]++,p[x]++,mn = min(mn,x);
        for(auto x:m)
        {
            if(x.second%2)
                return -1;
        }
        vector<int> l,r;
        for(auto x:p)
        {
            int e = x.first;
            if(q[e]<p[e])
            {
                int j = (q[e]+p[e])/2 - q[e];
                while(j--)
                    l.push_back(e);
            }
        }
        for(auto x:q)
        {
            int e = x.first;
            if(p[e]<q[e])
            {
                int j = (q[e]+p[e])/2 - p[e];
                while(j--)
                    r.push_back(e);
            }
        }
        int y = l.size();
        reverse(r.begin(),r.end());
        long long ans= 0; 
        for(int i=0;i<y;i++)
            ans+=min(mn*2,min(l[i],r[i]));
         

        return ans;
    }
};