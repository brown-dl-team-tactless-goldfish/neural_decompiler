int digArtifacts(int n, vector<vector<int>>& artifacts, vector<vector<int>>& dig) {
	vector<vector<int>> grid(n, vector<int>(n, -1));
	vector<int> covered_cells(artifacts.size());
	for(int i=0; i < artifacts.size(); ++i) {
		const auto& zone = artifacts[i];
		covered_cells[i] = (zone[2] - zone[0]+1) * (zone[3] - zone[1]+1);
		for(int r = zone[0]; r <= zone[2]; ++r)
			for(int c = zone[1]; c <= zone[3]; ++c)
				grid[r][c] = i;
	}
	for(const auto& cell: dig) {
		if(int artifact = grid[cell[0]][cell[1]]; artifact != -1)
			--covered_cells[artifact];
	}
	return count_if(covered_cells.begin(), covered_cells.end(),[](int n){return n==0;});
}