class Solution {
public:
    int kthLargestValue(vector<vector<int>>& arr, int k) {
        int r = arr.size();int c = arr[0].size();
        
        vector<int> res;vector<vector<int>> dp(r+1,vector<int>(c+1,0));
        
        for(int i = 0;i < r;i++)
        {
            for(int j = 0;j < c;j++)
            {
                if(i == 0 && j == 0)
                {
                    dp[i][j] = arr[i][j];
                }
                else if(i == 0)
                {
                    dp[i][j] = arr[i][j]^dp[i][j-1];
                }
                else if(j == 0)
                {
                    dp[i][j] = arr[i][j] ^ dp[i-1][j];
                }
                else
                {
                  dp[i][j] = arr[i][j] ^ dp[i-1][j] ^ dp[i][j-1] ^ dp[i-1][j-1];
                }
                res.push_back(dp[i][j]);
            }
        }
        sort(res.begin(),res.end(),greater<int>());
        return res[k-1];
    }
};