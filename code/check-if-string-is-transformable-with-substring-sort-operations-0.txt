class Solution {
public:
    bool isTransformable(string s, string t) {
        for(char c = '0'; c<='9'; c++){
            if(!verifyAndReduce(s, t, c)) return false;
        }
        return true;
    }
    
    bool verifyAndReduce(string& s, string& t, char c){
        if(count(s.begin(), s.end(), c) != count(t.begin(), t.end(), c)) return false;
        queue<int> index;
        for(int i=0;i<s.size();i++) if(s[i] == c) index.push(i);
        for(int i=0;i<t.size();i++) {
            if(t[i] == c){
                auto j = index.front(); index.pop();
                if(j < i) return false;
            }
        }
        s.erase(remove(s.begin(), s.end(), c), s.end());
        t.erase(remove(t.begin(), t.end(), c), t.end());
        return true;
    }
};