int cmpfunc(const void* a, const void* b){
    return *(int*)a - *(int*)b;
}

int minOperations(int* nums, int numsSize){
    int n = numsSize;
    qsort(nums, n, sizeof(int), cmpfunc);
    int* arr = malloc(n * sizeof(int));
    arr[0] = nums[0];
    int idx = 1;
    for(int i = 1; i < n; i++)
    {
        if(nums[i] != nums[i-1])
        {
            arr[idx] = nums[i];
            idx++;
        }    
    }
    int ans = INT_MAX;
    int j = 0;
    for(int i = 0; i < idx; i++)
    {
        while(j < idx && (arr[j] - arr[i] + 1) <= n)
        {
            ans = fmin(ans , n - (j - i + 1));
            j++;
        }
    }
    return ans;
}