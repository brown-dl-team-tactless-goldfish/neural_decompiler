
int compareTo(const void* first,const void* second){
    int* a=(int*) first;
    int* b=(int*) second;
    if(*a>*b){
        return 1;
    }
    else if(*a<*b){
        return -1;
    }
    else{
        return 0;
    }
}


int* relativeSortArray(int* arr1, int arr1Size, int* arr2, int arr2Size, int* returnSize){
    int i; // To access arr1.
    int j=0; // To access arr2.
    int m=0; // To access result array.
    int* result=(int*) malloc(arr1Size*sizeof(int));
    while(j<arr2Size){
        int temp=arr2[j];
        int count=0;
        i=0;
        while(i<arr1Size){
            if(arr1[i]==temp){
                arr1[i]=-1;
                count++;
            }
            i++;
        }
        int k=0; //To put temp count no. of times only.
        while(k<count){
            result[m]=temp;
            m++;
            k++;
        }
        j++;
    }
    int n=m; // To remeber m as further m will be lost.
    for(i=0;i<arr1Size;i++){
        if(arr1[i]!=-1){
            result[m]=arr1[i];
            m++;   
        }
    }
    qsort((result+n),(arr1Size-n),sizeof(int),compareTo);
    *returnSize=arr1Size;
    return result;
}
