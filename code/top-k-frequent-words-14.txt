static bool compare(pair<int,string>p1, pair<int,string>p2)
{
    if(p1.first == p2.first)
    {
        return p1.second < p2.second;
    }
    else
    {
        return p1.first > p2.first;
    }
    
}
vector<string> topKFrequent(vector<string>& words, int k) {
    
    
    map<string,int> m;

    vector<string> res;


    for(auto x : words)
    {
        m[x]++;
    }

    vector<pair<int,string>> v;

    for(auto x : m)
    {
        auto c = make_pair(x.second,x.first);

        v.push_back(c);
    }

    sort(v.begin(),v.end(),compare);

    for(int i=0; i<k; i++)
    {
        res.push_back(v[i].second);
    }

    return res;
    
}