bool wordBreak(char* s, char** wordDict, int wordDictSize) 
{
	if(wordDict == NULL || wordDictSize==0) 
	{
		return false;
	}
	if (s == NULL) 
	{
		return true;
	}
	int len1 = strlen(s);
	int len2 = len1 +1;
	
	bool *possible=calloc(len2,sizeof(bool));
	possible[0] = true;
	for (int i = 0; i < len2; i++)
	{
		for (int k = 0; k< wordDictSize; k++)
		{            
            if(possible[i])
            {
                int tmp=strlen(wordDict[k]);
                char str[tmp+1];
                strncpy(str,s+i,tmp);
                str[tmp]='\0';               
              
                if(strcmp(str,wordDict[k])==0)
                {                   
                    possible[i+tmp]=true;                    
                }
            }
			
		}
        
	}    
	return possible[len2-1];
}