class Solution {
public:
    
    int get_index(vector<int>& arr, int K){
        int n = arr.size();
        
        auto it = find(arr.begin(),arr.end(),K);
        
        if(it != end(arr)){
            return it - arr.begin();
        } else{
            return -1;
        }
    }
    
    
    bool canFormArray(vector<int>& arr, vector<vector<int>>& pieces) {
        int c = arr.size();
        int n = pieces.size();
        
        if( c != 0 && n == 0){
            return false;
        }
        
        for(int i =0;i < n;++i){
            int k = get_index(arr, pieces[i][0]);
            if(k == -1){
                return false;
            }
            for(int j =0;j<pieces[i].size();++j){
                if(arr[k] != pieces[i][j]){
                    return false;
                }
                k++;
            }
        }
        return true;
    }
};