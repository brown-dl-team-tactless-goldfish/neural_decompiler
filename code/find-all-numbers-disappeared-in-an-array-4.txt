int comp(const void* a, const void* b)
{
    if (*(int*)a > *(int*)b) {
        return 1;
    }
    else if (*(int*)a < *(int*)b) {
        return -1;
    }
    else
        return 0;
}

int* findDisappearedNumbers(int* nums, int numsSize, int* returnSize){
    int *ret;
    int prev = 0;
    int cur;
    int i;
 
    if (numsSize == 0) {
        *returnSize = 0;
        return NULL;
    }
    
    *returnSize = 0;
    
    qsort((void*)nums, numsSize, sizeof(*nums), comp);
            
    for (i = 0; i < numsSize; i++) {
        cur = nums[i];
        
        if (cur != prev) {
            if (prev + 1 < cur) {
                *returnSize += (cur - prev - 1);
            }
            prev = cur;
        }
    }
    
    i--;
 
   /* check for the last element in array. it may be smaller than 'n' */
    if (nums[i] < numsSize) {
        *returnSize += (numsSize-nums[i]);
    }
    
    ret = (int*)malloc(sizeof(int) * (*returnSize));
    
    *returnSize = 0;
    prev = 0;
    
    for (i = 0; i < numsSize; i++) {
        cur = nums[i];
        
        if (cur != prev) {
            if (prev + 1 < cur) {
                int j;
                for (j = prev+1; j < cur; j++) {
                    ret[*returnSize] = j;
                    (*returnSize)++;
                }
            }
            prev = cur;
        }
    }
 
    i--;
    if (nums[i] < numsSize) {
        int j;
        for (j = nums[i]+1; j <= numsSize; j++) {
            ret[*returnSize] = j;
            (*returnSize)++;
        }
    }
        
    return ret;
}