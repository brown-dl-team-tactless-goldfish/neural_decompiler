struct ListNode* tempA = headA;
struct ListNode* tempB = headB;

if ((NULL != tempA) && (NULL != tempB))
{
    lenA = 1;
    while (NULL != tempA->next)
    {
        lenA++;
        tempA = tempA->next;
    }
    
    lenB = 1;
    while (NULL != tempB->next)
    {
        lenB++;
        tempB = tempB->next;
    }
    
    /*< last element base address should be same if the list has intersection */
    if (tempA == tempB)
    {
        tempLen = abs(lenA - lenB);
        
        if (lenA > lenB)
        {
            while (tempLen)
            {
                headA = headA->next;
                
                tempLen--;
            }
        }
        else
        {
            while (tempLen)
            {
                headB = headB->next;
                
                tempLen--;
            }
        }
        
        while ((headA != NULL) && (headB != NULL))
        {
            if (headA == headB)
            {
                break;
            }
            
            headA = headA->next;
            headB = headB->next;
        }
    }
    else
    {
        headA = NULL;
    }
}
else
{
    headA = NULL;
}

return headA;