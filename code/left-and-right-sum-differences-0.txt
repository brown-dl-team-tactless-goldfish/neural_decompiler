/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* leftRigthDifference(int* nums, int numsSize, int* returnSize){
    int n = numsSize ;
    int* ans = malloc(n * sizeof(int)) ;
    long long* preSum = malloc((n + 2) * sizeof(long long)) ;
    long long* sufSum = malloc((n + 2) * sizeof(long long)) ;
    
    preSum[0] = 0 ;
    for(int i = 1; i <=n; i++){
        preSum[i] = preSum[i-1] + nums[i-1] ;
    }

    sufSum[n+1] = 0 ;
    for(int i = n; i > 0; i--){
        sufSum[i] = sufSum[i+1] + nums[i-1] ;    
    }
    
    for(int i = 0; i < n; i++){
        ans[i] = fabs(preSum[i] - sufSum[i+2]) ;    
    }
    
    *returnSize = n ;
    return ans ;
}