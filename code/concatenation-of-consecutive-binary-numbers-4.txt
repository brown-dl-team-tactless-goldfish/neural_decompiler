int concatenatedBinary(int n){
    long res = 0; // long so that intermediate results fit in memory
    int modnum = pow(10, 9) + 7;
    int numbits;
	
    for ( int i=1; i<=n; i++ ){
		// Get number of bits in binary representation
        numbits = 32 - __builtin_clz(i); 
		// right shift result by number of bits, add i, then take modulus
        res = ((res<<numbits) + i)%modnum; 
    }
    
    return(res);
}