class Node{
public:
    Node *zero;
    Node *one;
};

class Solution {
public:
    Node *root = new Node();
    
    int findMaximumXOR(vector<int>& nums) {
        for (auto num:nums){
            build(num);
        }

        int res = 0, cur;
        Node *node;
        for (auto num:nums){
            cur = 0;
            node = root;
            for (int i = 30; i >= 0; --i){
                int c = (num >> i) & 1;

                if (c){
                    if (node->zero){
                        cur |= (1<<i);
                        node = node->zero;
                    }
                    else node = node->one;
                }
                else {
                    if (node->one){
                        cur |= (1<<i);
                        node = node->one;
                    }
                    else node = node->zero;
                }
            }
            res = max(res, cur);
        }
        return res;
    }
    
    void build(int num){
        Node *node = root;
        for (int i = 30; i >= 0; --i){
            int c = (num >> i) & 1;
            if (c){
                if (!node->one) node->one = new Node();
                node = node->one;
            }
            else {
                if (!node->zero) node->zero = new Node();
                node = node->zero;
            }
        }
    }
    
};