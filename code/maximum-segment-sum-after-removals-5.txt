class Solution {
public:
    vector<long long> maximumSegmentSum(vector<int>& nums, vector<int>& removeQueries) {
        int n = nums.size();
        set<int> used;
        vector<long long> res;
        multiset<long long> val;
        vector<long long> pre(n+1, 0);
        for(int i = 1; i <= n; i++) {
            pre[i] = pre[i-1] + nums[i-1];
        }
        used.insert(-1);
        used.insert(n);
        val.insert(pre[n]);
        for(auto idx : removeQueries) {
            long long hi = *used.upper_bound(idx);
            long long lo = *(--used.lower_bound(idx));
            long long sum = pre[hi] - pre[lo+1];
            long long sump1 = pre[idx]-pre[lo+1];
            long long sump2 = pre[hi] - pre[idx+1];
            used.insert(idx);
            val.insert(sump1);
            val.insert(sump2);
            val.erase(val.lower_bound(sum));
            res.push_back(*(--val.end()));
        }
        return res;
    }
};