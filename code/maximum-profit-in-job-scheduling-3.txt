int n=startTimeSize;

int dp[n];
for(int i=0;i<n;i++){
    dp[i]=0;
}

node**array=(node**)malloc(n*sizeof(node*));

for(int i=0;i<n;i++){
    node* temp=newNode(startTime[i], endTime[i], profit[i]);
    array[i]=temp;
}

sort(array,n);

dp[0]=array[0]->profit;

for(int i=1;i<n;i++){
    dp[i]=max(array[i]->profit,dp[i-1]);
    
    for(int j=i-1;j>=0;j--){
        if(array[j]->end<=array[i]->start){
            dp[i]=max(dp[i],array[i]->profit+dp[j]);
            break;
        }
    }
}

int maxProfit=0;
for(int i=0;i<n;i++){
    if(maxProfit<dp[i]){
        maxProfit=dp[i];
    }
}

return maxProfit;