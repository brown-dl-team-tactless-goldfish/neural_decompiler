class Solution {
public:
    int scoreOfStudents(string s, vector<int>& answers) {
        int l = s.length(), nd = l / 2 + 1, m = answers.size(), ans = 0, correct = 0;
        vector<vector<set<int>>> cal(nd, vector<set<int>>(nd));
        for (int i = 0; i < nd; i++)
            cal[i][i].insert(s[2 * i] - '0');
        for (int i = nd - 1; i >= 0; i--)
            for (int j = i + 1; j < nd; j++)
            {
                for (int k = i + 1; k <= j; k++)
                {
                    if (s[2 * k - 1] == '+')
                    {
                        for (auto jj : cal[i][k - 1])
                            for (auto kk : cal[k][j])
                            {
                                int p = jj + kk;
                                if (p <= 1000)
                                    cal[i][j].insert(p);
                            }
                    }
                    else
                    {
                        for (auto jj : cal[i][k - 1])
                            for (auto kk : cal[k][j])
                            {
                                int p = jj * kk;
                                if (p <= 1000)
                                    cal[i][j].insert(p);
                            }
                    }
                }
            }
        stack<int> st;
        st.push(s[0] - '0');
        for (int i = 1; i < l; i += 2)
        {
            if (s[i] == '+')
                st.push(s[i + 1] - '0');
            else
            {
                int t = st.top();
                st.pop();
                st.push(t * (s[i + 1] - '0'));
            }
        }
        while (!st.empty())
        {
            correct += st.top();
            st.pop();
        }
        for (int i = 0; i < m; i++)
        {
            if (answers[i] == correct)
                ans += 5;
            else if (cal[0][nd - 1].find(answers[i]) != cal[0][nd - 1].end())
                ans += 2;
        }
        return ans;
    }
};