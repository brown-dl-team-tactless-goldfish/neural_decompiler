class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int K) {
        vector<pair<int,int> > v_dis;
        vector<vector<int> > ans;
        int i = 0; 
        for(vector<int> v : points){
            v_dis.push_back(pair<int,int>(((v[0] * v[0]) + (v[1] * v[1])) , i));
            i ++;
        }
        sort(v_dis.begin(), v_dis.end());
        for(int i = 0; i < K ;i ++){
            ans.push_back(points[v_dis[i].second]);
        }
        return ans;
    }
};
static int fastio = []() {
    #define endl '\n'
    std::ios::sync_with_stdio(false);
    std::cin.tie(NULL);
    std::cout.tie(0);
    return 0;
}();