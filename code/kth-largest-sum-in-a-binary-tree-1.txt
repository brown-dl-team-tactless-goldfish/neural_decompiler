/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */
int max(int a,int b){
    return a>b?a:b;
}
int height(struct TreeNode* root){
    if(!root)return 0;
    return 1+max(height(root->left),height(root->right));
}
int cmp(const void*a,const void*b){
    return *(long long*)a>*(long long*)b;
}
long long kthLargestLevelSum(struct TreeNode* root, int k){
    int h=height(root);
    printf(">-- height : %d\n",h);
    if(h<k) return -1;
    long long *res=(long long *)calloc(h,sizeof(long long));
    int res_idx=0;
    struct TreeNode *queue[100000];
    int idx=0;
    queue[idx++]=root;
    while(idx){
        struct TreeNode *pop[idx];
        int pop_idx=0;
        long long sum=0;
        for(int i=0;i<idx;i++){
            pop[pop_idx++]=queue[i];
            sum+=queue[i]->val;
        }
        res[res_idx++]=sum;
        idx=0;
        for(int i=0;i<pop_idx;i++){
            if(pop[i]->left) queue[idx++]=pop[i]->left;
            if(pop[i]->right) queue[idx++]=pop[i]->right;
        }
    }
    qsort(res,h,sizeof(long long),cmp);
    
    return res[h-k];
    
}