    vector<int> getCoprimes(vector<int>& nums, vector<vector<int>>& edges) {
        const int n = nums.size();
        vector<vector<int>> g(n);
        for(auto& e:edges) {
            g[e[0]].push_back(e[1]);
            g[e[1]].push_back(e[0]);
        }
        vector<int> res(n, -1);
        set<int> st(nums.begin(), nums.end());        
        for(auto x:st) dfs(g, nums, 0, -1, x, -1, res);
        return res;
    }

    
    void dfs(const vector<vector<int>>& g, const vector<int>& nums, int i, int par, int x, int coprimePar, vector<int>& res){
        if(x == nums[i]) res[i] = coprimePar;        
        if(gcd(x, nums[i]) == 1) coprimePar = i;
        for(auto j:g[i])
            if(j != par) dfs(g, nums, j, i, x, coprimePar, res);
    }