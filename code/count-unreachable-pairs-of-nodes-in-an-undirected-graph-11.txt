class Solution {
    int dfs(int node, vector<int> adj[], vector<int> &vis) {
        int cnt = 1;
        vis[node] = 1;
        for(int ad : adj[node]) {
            if(!vis[ad]) cnt += dfs(ad, adj, vis);
        }
        return cnt;
    }
public:
    long long countPairs(int n, vector<vector<int>>& edges) {
        vector<int> adj[n];
        for(auto e : edges) adj[e[0]].push_back(e[1]), adj[e[1]].push_back(e[0]);

        vector<int> vis(n);
        long long total = n, ans = 0;
        for(int i=0; i<n; i++) {
            if(!vis[i]) {
                int cnt = dfs(i, adj, vis);
                total -= cnt;
                ans += cnt * total;
            }
        }
        return ans;
    }
};
