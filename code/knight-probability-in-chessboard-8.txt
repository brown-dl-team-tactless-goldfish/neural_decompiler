class Solution {
public:
    double memo[105][105][105];
    double knightProbability(int N, int K, int r, int c) {
        if(K == 0) return 1;
        if(memo[r][c][K]) return memo[r][c][K];
        
        double ans = 0;
        int x[] = {2, 2, -2, -2, 1, 1, -1, -1};
        int y[] = {1, -1, 1, -1, 2, -2, 2, -2};
        
        for(int k = 0; k < 8; k++) {
            int nx = r + x[k];
            int ny = c + y[k];
            if(nx >= 0 && nx < N && ny >= 0 && ny < N) {
                ans += knightProbability(N, K-1, nx, ny)/8;
            }
        }
        return memo[r][c][K] = ans;
    }
};