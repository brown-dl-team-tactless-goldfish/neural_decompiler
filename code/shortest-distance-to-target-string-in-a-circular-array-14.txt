class Solution {
public:
    int closetTarget(vector<string>& words, string target, int st) {
       if(words[st]==target)return 0;
        int i = st, j = st,n=words.size();
        int c=0,right=0,left=0;
       while(true) {
           if(c==1 && i==st)break;//will check for the count of i returing to its same position thus completing one loop
           i=(i + 1) % n; right++;
           j=(j - 1 + n) % n; left++;
           //going left and right and returning the one which ever comes first thus shortest distance
           if(words[i]==target)return right;
           if(words[j]==target)return left;
            c=1;
        }
        return -1;
    }
};