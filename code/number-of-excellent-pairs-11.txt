class Solution {
public:
    long long countExcellentPairs(vector<int>& nums, int k) {
		unordered_set<int> st;
		for (int &x: nums) {
			st.insert(x);
		}
		long long ans = 0;
	    
        nums.clear();
        for (const int &x: st) {
			nums.push_back(__builtin_popcount(x));
		}
		sort(nums.begin(), nums.end());
		auto get = [&](int x) {
			int t = k - x;
			int lo = 0, hi = (int) nums.size() - 1;
			while (lo < hi) {
				int mid = lo + (hi - lo) / 2;
				if (nums[mid] >= t) hi = mid;
				else lo = mid + 1;
			}
            
			if (nums[lo] < t) {
                return 0;
            }
			return (int) nums.size() - lo;
		};
		for (int &x: nums) ans += get(x);
		return ans;
    } 
};
