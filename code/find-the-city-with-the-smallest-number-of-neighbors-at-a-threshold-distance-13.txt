class Solution {
public:
    int findTheCity(int n, vector<vector<int>>& edges, int d) {
        
        vector<vector<long>> graph(n,vector<long>(n,INT_MAX));
        
        for(auto e:edges){
             graph[e[0]][e[1]]=e[2];
             graph[e[1]][e[0]]=e[2];
            
        }
        
        for(int k=0;k<n;k++){
            for(int i=0;i<n;i++){
                for(int j=0;j<n;j++){
                    if(i==k||j==k||i==j) continue;
                     graph[i][j]=min( graph[i][j],graph[i][k]+graph[k][j]);
                     graph[j][i]=min( graph[j][i],graph[j][k]+graph[k][i]);
                     
                }
            }
        }
        
        int ans,reachable=INT_MAX;
        for(int i=0;i<n;i++){
            int reach=0;
            for(int j=0;j<n;j++){
                if(j!=i){
                    if(graph[i][j]<=d) reach++;
                }
            }
            if(reach<=reachable) {
                ans=i; reachable=reach;
            }
             
        }
        return ans;
         
    }
};