class Solution {
public:
    vector<int> par;
    
    int findp(int v) {
        if(par[v] == -1)
            return v;
        return par[v] = findp(par[v]);
    }
    
    void connect(int a, int b) {
        int p1 = findp(a), p2 = findp(b);
        if(p1 != p2)
            par[p1] = p2;
    }
    
    vector<bool> areConnected(int n, int k, vector<vector<int>>& qrs) {
        par = vector<int>(n+1, -1);
        
        
        for(int cur = k+1; cur*2 <= n; cur++) {
            if(par[cur] == -1)
            {
                for(int t=cur*2; t<=n; t+=cur)
                    connect(cur, t);
            }
        }
        
        int qn = qrs.size();
        vector<bool> ret(qn, false);
        
        for(int i=0; i<qn; i++) {
            if(findp(qrs[i][0]) == findp(qrs[i][1]))
                ret[i] = true;
        }
        
        return ret;
    }
};