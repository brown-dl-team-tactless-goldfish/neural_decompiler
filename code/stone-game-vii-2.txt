int dp[1001][1001];
int max(int a, int b)
{
 return (a > b)? a: b;   
}

int make_dp(int i, int j, int* prefixSum)
{
    if(dp[i][j] != -1)
        return dp[i][j];
    if(i == j)
    {
        dp[i][i] = 0;
        return 0;
    }
    int take_i_cost = prefixSum[j + 1] - prefixSum[i + 1];
    int take_j_cost = prefixSum[j] - prefixSum[i];
    
    dp[i][j] = max(take_i_cost - make_dp(i + 1, j, prefixSum), take_j_cost - make_dp(i, j - 1, prefixSum));
    return dp[i][j];
}

int stoneGameVII(int* stones, int stonesSize)
{
    int* prefixSum = (int*)malloc(sizeof(int) * (stonesSize + 1));
    prefixSum[0] = 0;
    int i;
    for(i = 0; i < stonesSize; i++)
        prefixSum[i + 1] = prefixSum[i] + stones[i];
    
    memset(dp, -1, sizeof(dp));
    return make_dp(0, stonesSize - 1, prefixSum);
}