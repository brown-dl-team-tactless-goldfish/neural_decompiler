int comp(const void** a, const void** b){
    if ((*(int**)a)[0] == (*(int**)b)[0]){
        return (*(int**)b)[1]-(*(int**)a)[1];
    }
    return (*(int**)a)[0]-(*(int**)b)[0];
}

int** reconstructQueue(int** people, int peopleSize, int* peopleColSize, int* returnSize, int** returnColumnSizes){
    *returnSize = peopleSize;
    (*returnColumnSizes) = malloc(sizeof(int)*peopleSize);
    int** ans = malloc(sizeof(int*)*peopleSize);
    for (int i = 0 ; i < peopleSize ; i++){
        (*returnColumnSizes)[i] = 2;
        ans[i] = malloc(sizeof(int)*2);
    }
    bool* list = calloc(peopleSize+1,sizeof(bool));
    qsort(people, peopleSize, sizeof(int*), comp);
    int now = 0;
    for (int i = 0 ; i < peopleSize ; i++){
        int j = now;
        int count = 0;
        while (count < people[i][1]){
            if (list[j]){
                j++;
            } else {
                count++;
                j++;
            }
        }
        while (list[j]){
            j++;
        }
        list[j] = true;
        ans[j][0] = people[i][0];
        ans[j][1] = people[i][1];
        while (list[now]){
            now++; 
        }
    }
    free(list);
    return ans;
}