int i=0;

vector<int> res;

bool help(TreeNode* root, vector<int>& v)
{
    if(!root)
    {
        return true;
    }
    
    if(root->val != v[i++])
    {
        return false;
    }
    
    if(root->left && root->left->val != v[i])
    {
        res.push_back(root->val);
        
        return help(root->right,v) && help(root->left, v);
    }
    return help(root->left,v) && help(root->right,v);
}

vector<int> flipMatchVoyage(TreeNode* root, vector<int>& voyage) {
    
    return help(root,voyage)? res : vector<int>{-1};
    
}