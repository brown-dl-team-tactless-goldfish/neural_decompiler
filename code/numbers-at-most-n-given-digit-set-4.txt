class Solution {
public:
    int atMostNGivenDigitSet(vector<string>& D, int N) {
        for(auto& s:D) this->D.push_back(s[0]);
        string s = to_string(N);
        int sum = 0;
        for(int i=1;i<s.size();i++)
            sum += pow(D.size(), i);
        return sum + atMostNGivenDigitSet(s);
    }

    int atMostNGivenDigitSet(string N){
        if(N.empty()) return 1;
        int sum = 0;
        for(auto c:D){
            if(c < N[0])
                sum += pow(D.size(), N.size()-1);
            else if(c == N[0])
                sum += atMostNGivenDigitSet(N.substr(1));
            else break;
        }
        return sum;
    }
    
    vector<char> D;
};