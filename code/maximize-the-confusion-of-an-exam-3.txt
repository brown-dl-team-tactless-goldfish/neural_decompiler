class Solution {
public:
	int lone(string s, int K) {

		int n = s.size();
		int i = 0, j = 0;
		int c = 0;
		int ans = 0;
		for (j = 0; j < n; j++)
		{
			if (s[j] == 'F')
				c++;
			if (c > K)
			{
				if (s[i] == 'F')
					c--;
				i++;
			}
			ans = max(ans, j - i + 1);
		}
		return ans;
	}
	int lzero(string s, int K) {

		int n = s.size();
		int i = 0, j = 0;
		int c = 0;
		int ans = 0;
		for (j = 0; j < n; j++)
		{
			if (s[j] == 'T')
				c++;
			if (c > K)
			{
				if (s[i] == 'T')
					c--;
				i++;
			}
			ans = max(ans, j - i + 1);
		}
		return ans;
	}
	int maxConsecutiveAnswers(string ak, int m) {


		return max(lzero(ak, m), lone(ak, m));
	}
};