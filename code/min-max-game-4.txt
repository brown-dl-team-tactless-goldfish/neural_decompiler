int solve(vector<int> &nums,int n){
    if(n == 1)
            return nums[0];
        
        vector<int> temp;
        int c = 0;
        for(int i = 0;i<nums.size();i+=2){
            if(c%2==0)
                temp.push_back(min(nums[i],nums[i+1]));
            if(c%2)
                temp.push_back(max(nums[i],nums[i+1]));
            c++;
        }
        return solve(temp,n/2);
    }
	int minMaxGame(vector<int>& nums) {
	int ans = solve(nums,nums.size());
        return ans;
    }
	
	
	
	
	**Itertive solution**
	
	
	
	 int minMaxGame(vector<int>& nums) {
        int ans = 0;
        int size = nums.size();
        if(size == 1)
            return nums[0];
        while(size != 1){
            vector<int> temp;
            int c = 0;
            for(int i = 0;i<size;i+=2){
                if(c%2==0)
                temp.push_back(min(nums[i],nums[i+1]));
                if(c%2==1)
                    temp.push_back(max(nums[i],nums[i+1]));
                c++;
            }
            if(temp.size() == 1)
                return temp[0];
            size = size/2;
            nums = temp;
        }
        return 0;
		}