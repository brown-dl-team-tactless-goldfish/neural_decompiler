class Solution {
public:
    using VI = vector<int>;
    int maxScore(string S, VI A = {}, int max = 0) {
        transform(S.begin(), S.end(), back_inserter(A), [](auto c) { return c - '0'; });
        int N = A.size();
        VI L(N),
           R(N);
        for (auto i{ 0 }; i < N; ++i)
            L[i] = (A[i] == 0) + (i > 0 ? L[i - 1] : 0);     // prefix sums from ðŸ‘‰ (L)eft-to-right
        for (auto i{ N - 1 }; i >= 0; --i)
            R[i] = (A[i] == 1) + (i < N - 1 ? R[i + 1] : 0); // prefix sums from ðŸ‘ˆ (R)ight-to-left
        for (auto i{ 1 }; i < N; ++i)
            max = std::max(max, L[i - 1] + R[i]);
        return max;
    }
};