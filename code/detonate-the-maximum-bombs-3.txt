#define ll long long

class Solution {
public:
    
    void dfs(int src, vector<int> adj[], vector<int> &vis, int &c){
        vis[src] = 1;
        c++;
        for(auto i: adj[src]){
            if(!vis[i]){
                dfs(i, adj, vis, c);
            }
        }
    }
    
    int maximumDetonation(vector<vector<int>>& graph) {
        
        int n = graph.size();
        vector<int> adj[n];
        
        for(int i=0; i<n; i++){
            
            ll x1 = graph[i][0];
            ll y1 = graph[i][1];
            ll r1 = graph[i][2];
            
            for(int j=0; j<n; j++){
                
                if(i != j){
                
                    ll x2 = graph[j][0];
                    ll y2 = graph[j][1];

                    ll s = pow(x2-x1, 2) + pow(y2-y1, 2);

                    if(s <= r1*r1){
                        adj[i].push_back(j);
                    }
                }
            }
        }
        
        // for(int i=0; i<n; i++){
        //     cout<<i<<" -> ";
        //     for(auto j: adj[i]){
        //         cout<<j<<" ";
        //     }cout<<endl;
        // }
        
        int ans = INT_MIN;
        for(int i=0; i<n; i++){
            vector<int> vis(n, 0);
            int c = 0;
            dfs(i, adj, vis, c);
            ans = max(ans, c);
        }
        
        return ans;
    }
};