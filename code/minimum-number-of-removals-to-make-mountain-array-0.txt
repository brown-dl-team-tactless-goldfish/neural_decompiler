class Solution {
public:
    int minimumMountainRemovals(vector<int>& nums) {
        int n = nums.size();
        vector<int>fwd(n, 1), bck(n, 1);
        vector<int>temp1;
        for(int i = 0; i < n; ++i){
            auto it = lower_bound(temp1.begin(), temp1.end(), nums[i]);
            if(it == temp1.end())temp1.push_back(nums[i]);
            else *it = nums[i];
            fwd[i] = (int)temp1.size();
        }
        temp1.clear();
        for(int i = n - 1; i >= 0; --i){
            auto it = lower_bound(temp1.begin(), temp1.end(), nums[i]);
            if(it == temp1.end())temp1.push_back(nums[i]);
            else *it = nums[i];
            bck[i] = (int)temp1.size();
        }
        int ans = n;
        for(int i = 1; i < n - 1; ++i){
            ans = min(ans, n - (fwd[i] + bck[i] - 1));
        }
        return ans;
    }
};