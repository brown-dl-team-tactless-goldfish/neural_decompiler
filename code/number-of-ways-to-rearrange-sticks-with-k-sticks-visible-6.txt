// OJ: https://leetcode.com/problems/number-of-ways-to-rearrange-sticks-with-k-sticks-visible/
// Author: github.com/lzl124631x
// Time: O(NK)
// Space: O(K)
class Solution {
public:
    int rearrangeSticks(int n, int k) {
        long mod = 1e9 + 7;
        vector<long> dp(k + 1);
        for (int i = 1; i <= n; ++i) {
            dp[0] = i == 1; // Note that dp[i][0] = 1 only if i == 0; otherwise dp[i][0] = 0.
            for (int j = min(i, k); j >= 1; --j) {
                dp[j] = (dp[j - 1] + dp[j] * (i - 1) % mod) % mod;
            }
        }
        return dp[k];
    }
};