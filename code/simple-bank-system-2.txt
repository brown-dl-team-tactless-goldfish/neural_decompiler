class Bank {
public:
    int n; 
    vector<long long> balance; 
    Bank(vector<long long>& balance) { 
        this->balance = balance; 
        n = balance.size();
    }
    
    bool valid(int acc) {
        return (acc>=1 && acc<=n);  
    }
    
    bool enough(long long money ,  int acc) {
        return balance[acc-1]>=money; 
    }
    
    bool transfer(int account1, int account2, long long money) {
        if(!valid(account1) || !valid(account2) || !enough(money , account1)) 
            return 0 ; 
        balance[account1-1] -= money; 
        balance[account2-1] += money; 
        return 1; 
    }
    
    bool deposit(int account, long long money) {
        if(!valid(account))
            return 0; 
        balance[account-1] += money; 
        return 1; 
    }
    
    bool withdraw(int account, long long money) {
        if(!valid(account) || !enough(money , account))
            return 0; 
        balance[account-1] -= money;
        return 1; 
    }
};

/**
 * Your Bank object will be instantiated and called as such:
 * Bank* obj = new Bank(balance);
 * bool param_1 = obj->transfer(account1,account2,money);
 * bool param_2 = obj->deposit(account,money);
 * bool param_3 = obj->withdraw(account,money);
 */