class Allocator {
public:
    vector<int> arr;
    Allocator(int n) {
        for(int i=0; i<n; i++) arr.push_back(0);
    }
    
    int allocate(int size, int mID) {
        if(size > arr.size()) return -1;
        vector<int> prev = arr;
        int i = 0;
        for(int j=0; j<arr.size(); j++) {
            if(!arr[j]) arr[j] = mID;
            else {
                while(i <= j) arr[i] = prev[i], i++;
            }
            if(j - i + 1 == size) break;
        }
        if(arr.size() - i < size) {
            while(i < arr.size()) arr[i] = prev[i], i++;
            return -1;
        }
        return i == arr.size() ? -1 : i;
    }
    
    int free(int mID) {
        int cnt = 0;
        for(int i=0; i<arr.size(); i++) {
            if(arr[i] == mID) arr[i] = 0, cnt++;
        }
        return cnt;
    }
};

/**
 * Your Allocator object will be instantiated and called as such:
 * Allocator* obj = new Allocator(n);
 * int param_1 = obj->allocate(size,mID);
 * int param_2 = obj->free(mID);
 */