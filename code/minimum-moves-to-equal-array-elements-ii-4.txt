int partition(int* array,int low,int high)
{
    int temp_1=array[low];
    while(low<high)
    {
        while(low<high&&array[high]>=temp_1)
        {high--;}
        if(low<high) 
        {
            array[low]=array[high];
            low++;
        }
        while(low<high&&array[low]<temp_1)
        {low++;}
        if(low<high)
        {
            array[high]=array[low];
            high--;
        }
    }
    array[low]=temp_1;
    return low;
}
void quick_sort(int* array,int s,int t)
{   
    int i=0;
    if(s<t)
    {
        i=partition(array,s,t);
        quick_sort(array,s,i-1);
        quick_sort(array,i+1,t);
    }
}
int minMoves2(int* nums, int numsSize) {
    quick_sort(nums,0,numsSize-1);
    int temp=numsSize/2;
    int mid=nums[temp];
    int i=0;
    int ret=0;
    while(i<temp){
        ret=ret+nums[temp]-nums[i];
        i++;
    }
    i++;
    while(i<numsSize){
        ret=ret+nums[i]-nums[temp];
        i++;
    }
    return ret;
}