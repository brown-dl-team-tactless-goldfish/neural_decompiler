int cmp(const void *a, const void *b) {
    return *(int*)a - *(int*)b;
}

bool isPossible(int* target, int targetSize){
	long int sum = 0;
    qsort(target, targetSize, sizeof(int), cmp);
	int max = target[targetSize - 1];
	int min = target[0];
    if (max == 1 & min == 1) {return 1;}
    
    for (int i = 0; i < targetSize; i++){
			sum += target[i];
	}
	while(max > 1 && min >= 1)
	{
		sum -= max;
		if (max - sum <= 0 || sum == 0) return 0;
		if (sum == 1) {
			target[targetSize - 1] = 1;
            sum += 1;
		}
        else {
			target[targetSize - 1] = max % sum;
            sum += target[targetSize - 1];
		}
		qsort(target, targetSize, sizeof(int), cmp);
		max = target[targetSize - 1];
		min = target[0];
	    if (max == 1 & min == 1) {return 1;}
    }
	return 0;
}