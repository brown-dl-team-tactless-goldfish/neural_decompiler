class Solution {
public:
    
    int fun ( int target , vector < int > v1 , vector < int > v2 )
    {
        
        
        int flag = 1 , c = 0 ;  
        for ( int i = 0 ; i < v1.size() ; i ++ )
        {
            if ( v1 [ i ] == target )
                    continue ; 
            else if ( v2 [ i ] == target )
                    c++ ; 
            else 
                    flag = 0 ; 
        }
        
        
        return flag == 0 ? INT_MAX : c ; 
        
    }
    
    
    
    int minDominoRotations(vector<int>& A, vector<int>& B) {
        
        
        if ( A.empty() )
                return 0 ; 
        
        int ans = INT_MAX ; 
        ans = min ( ans , min ( fun( A [ 0 ] , A , B ) , fun( A [ 0] , B , A ) ) ) ;
        ans = min ( ans , fun( B [ 0 ] , A , B ) ) ; 
        ans = min ( ans , fun( B [ 0 ] , B , A ) ) ; 
       
        return ans == INT_MAX ? -1: ans ; 
        
    }
};