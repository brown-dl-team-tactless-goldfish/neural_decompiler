struct t{
    int nums;
    int edge;
};
int cmp(const void *a,const void *b){
    struct t aa=*(struct t*)a;
    struct t bb=*(struct t*)b;
    return aa.nums < bb.nums; 
}
long long maximumImportance(int n, int** roads, int roadsSize, int* roadsColSize){
    struct t *map=(struct t*)calloc(n,sizeof(struct t));
    for(int i=0;i<n;i++){
        map[i].edge=i;
    }
    for(int i=0;i<roadsSize;i++){
        map[roads[i][0]].nums++;
        map[roads[i][1]].nums++;
    }
    
    qsort(map,n,sizeof(struct t),cmp);
    // for(int i=0;i<n;i++){
    //     printf("%d : %d ",map[i].edge,map[i].nums);
    //     printf("\n");
    // }
    int mapped[n];
    int size=n;
    for(int i=0;i<n;i++) mapped[map[i].edge]=size--;
    // for(int i=0;i<n;i++) printf("%d : %d \n",i,mapped[i]);
    long long res=0;
    for(int i=0;i<roadsSize;i++){
        res+=mapped[roads[i][0]];
        res+=mapped[roads[i][1]];
    }
    free(map);
    return res;

}