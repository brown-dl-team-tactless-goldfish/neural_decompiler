public class TimeMap {    
            private Dictionary<string, List<(int, string)>> dict = new Dictionary<string, List<(int, string)>>();

            public void Set(string key, string value, int timestamp)
            {
                if (!dict.ContainsKey(key))
                    dict.Add(key, new List<(int, string)>());

                dict[key].Add((timestamp, value));
            }

            public string Get(string key, int timestamp)
            {
                if (!dict.ContainsKey(key))
                    return string.Empty;
                
                List<(int stamp, string val)> l = dict[key];
                int i = 0,
                    j = l.Count - 1,
                    k = 0;
                bool found = false;
                
                if (l[0].stamp > timestamp)
                    return string.Empty;
                else if (l[l.Count - 1].stamp < timestamp)
                    return l[l.Count - 1].val;
                else
                {
                    while (i <= j)
                    {
                        k = i + (j - i) / 2;

                        if (l[k].stamp == timestamp)
                        {
                            found = true;
                            break;
                        }
                        else if (l[k].stamp > timestamp)
                            j = k - 1;
                        else
                            i = k + 1;
                    }

                    if (!found)
                        k = k - 1 < 0 ? 0 : k - 1;
                }

                return l[k].val;
            }
}