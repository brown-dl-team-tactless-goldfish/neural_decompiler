public class Solution {
    private int res = 0;
    
    public int LongestZigZag(TreeNode root) {
        if (root == null)
            return res;
        
        DFS(root, 'o', 0);
        
        return res;
    }
    
    private void DFS(TreeNode node, char direction, int len)
    {
        if (node.left != null && (direction == 'r' || direction == 'o'))
            DFS(node.left, 'l', len + 1);
        
        if (node.left != null && direction == 'l')
        {
            res = Math.Max(res, len);
            DFS(node.left, 'l', 1);
        }
            
        if (node.right != null && (direction == 'l' || direction == 'o'))
            DFS(node.right, 'r', len + 1);
        
        if (node.right != null && direction == 'r')
        {
            res = Math.Max(res, len);
            DFS(node.right, 'r', 1);
        }
        
        if (node.left == null && node.right == null)
            res = Math.Max(res, len);
    }
}