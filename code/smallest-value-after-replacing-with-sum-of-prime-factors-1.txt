#include<math.h>
int isprime(int n);
int isprime(int n){
    int flag=0;
    for(int i=2;i<=sqrt(n);i++){
        if(n%i==0){
            flag=1;
            break;
        }
    }
    if(flag==1){
        return 0;
    }
    else{
        return 1;
    }
}
    int smallestValue(int n){
        if(n==4){
            return 4;
        }
        else{
        int f=0;
        while(1){
            if(isprime(n)){
                return n;
            }
            int N=n;
            int arr[n/2];
            int k=0;
            int size=0;
            while(N>0){
                if(isprime(N)){
                    arr[k]=N;
                    size++;
                    break;
                }
                int i=2;
                int index;
                while(i<N){
                    if(isprime(i)){
                        if(N%i==0){
                            arr[k]=i;
                            index = i;
                            k++;
                            size++;
                            break;
                        }
                    }
                    i++;
                }
                N=N/index;
            }
            int res = sumofarr(arr,size);
            n = res ;
            f++; 
        }
    }
}
int sumofarr(int arr[],int size){
    int sum =0;
    for(int i=0;i<size;i++){
        sum = sum + arr[i];
    }
    return sum;
}