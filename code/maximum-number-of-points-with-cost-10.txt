class Solution {
public:
    long long maxPoints(vector<vector<int>>& ps) {
        int m = ps.size(), n = ps[0].size();
        long long ans = 0;
        vector<vector<long long>> dp(2, vector<long long>(n));
        long long rdp[n];
        for (int c = 0; c < n; c++) dp[0][c] = ps[0][c];
        for (int r = 1; r < m; r++) {
            rdp[n - 1] = dp[0].back();
            for (int i = n - 2; i >= 0; i--) rdp[i] = max(rdp[i + 1] - 1, dp[0][i]);
            long long l = 0;
            for (int i = 0; i < n; i++) {
                l = max(l - 1, dp[0][i]);
                dp[1][i] = max(l, rdp[i]) + ps[r][i];
            }
            swap(dp[0], dp[1]);
        }
        for (int i = 0; i < n; i++) ans = max(ans, dp[0][i]);
        return ans;
    }
};