int help(vector<int>& nums, int firstLen,int secondLen)
{
    int left_sum = 0, right_sum = 0;
    
    for(int i=0; i<firstLen; i++)
    {
        left_sum += nums[i];
    }
    
    int left_util = left_sum;
    
    for(int i=firstLen ; i<firstLen+secondLen; i++)
    {
        right_sum += nums[i];
    }
    
   int  ans = left_sum + right_sum;
    
    int i = 0, j = firstLen, k = firstLen + secondLen;
    
    while(k < nums.size())
    {
        left_sum -= nums[i];
        left_sum += nums[j];
        
        right_sum -= nums[j];
        right_sum += nums[k];
        
        left_util = max(left_sum,left_util);
        
        ans = max(ans, left_util+right_sum);
                  
        i++;
        j++;
        k++;
    }
    
    return ans;
}
int maxSumTwoNoOverlap(vector<int>& nums, int firstLen, int secondLen) {
    
    return max(help(nums,firstLen,secondLen),help(nums,secondLen,firstLen));
    
}