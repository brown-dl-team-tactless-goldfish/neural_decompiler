#include <string.h>
int longestCommonSubsequence(char * text1, char * text2){
    int n = strlen(text1);
    int m = strlen(text2);
    //This is partially aligned to return the longest subsequence string itself, but not fully done
    int c[n+1][m+1];
    char h[n+1][m+1];
    for(int i = 0; i < n+1; i++){
        c[i][0] = 0;
        h[i][0] = '|';
    }
    for(int j = 1; j < m+1; j++){
        c[0][j] = 0;
        h[0][j] = '-';
    }
    int count = 0;
    for(int i = 1; i < n+1; i++){
        for(int j = 1; j < m+1; j++){
            if(text1[i-1]==text2[j-1]){
                c[i][j] = c[i-1][j-1] + 1;
                h[i][j] = '\\';
            }
            else if(c[i-1][j] >= c[i][j-1]){
                c[i][j] = c[i-1][j];
                h[i][j] = '|';
            }
            else{
                c[i][j] = c[i][j-1];
                h[i][j] = '-';
            }
        }
    }
    return c[n][m];

    int i = n;
    int j = m;
    while(i!=0 && j!=0){
        if(h[i][j]=='\\')
        {
            i--;
            j--;
        }
        else if(h[i][j]=='|'){
            i--;
        }
        else{
            j--;
        }
    }

}