

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* partitionLabels(char * S, int* returnSize){
    
    
    int *ans;
    int count = 0;//count no of partition
    int rem[26] = {0};
    int len;
    int last;
    
    if(S == NULL) {
        *returnSize = 0;
        return NULL;
    }
    
    len = strlen(S);
    
    ans = calloc(sizeof(int), len);
    
    //remember the last position
    for(int i=0; i < len; i++)
        rem[S[i] - 'a'] = i;
    
    for(int i=0; i<len; ) {
        
        last = rem[S[i]-'a'];
        int j = i+1;
        
        while( j < last) {
            
            if(rem[S[j]-'a'] > last)
                last = rem[S[j]-'a'];
            j++;
            
        } //end of loop
        
        ans[count++] = last-i+1;
        i = last+1;
    }//end of processing loop
    
    *returnSize = count;
    return ans;
}