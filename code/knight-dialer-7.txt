class Solution {
public:
	int knightDialer(int N) {
		int kmod=pow(10,9)+7;
		if(N<=0) return 0;
		if(N==1) return 10;
		vector<vector<int>> dir{{1,2},{2,1},{-1,2},{-2,1},{1,-2},{2,-1},{-1,-2},{-2,-1}};
		vector<vector<int>> dp(4,vector<int> (3,1));
		dp[3][0]=0;
		dp[3][2]=0;
		for(int i=1;i<N;i++){
			vector<vector<int>> tem(4,vector<int>(3,0));
			for(int j=0;j<4;j++){
				for(int k=0;k<3;k++){
					if((j==3 && k==0) || (j==3 && k==2)) continue;
					for(int v=0;v<8;v++){
						int x=j+dir[v][0];
						int y=k+dir[v][1];

						if(x<0 || y<0 || x>=4 || y>=3) continue;
						tem[j][k]=(tem[j][k]+dp[x][y])%kmod;
					}

				}
			}
			dp=tem;

		}
		int res=0;
		for(int i=0;i<4;i++)
			for(int j=0;j<3;j++){
				res=(res+dp[i][j])%kmod;
			}
		return res;
	}
};