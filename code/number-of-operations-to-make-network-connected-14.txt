class Solution {
    vector<int> g;
    
    int find(int i) {
        if(g[i] == i) return i;
        g[i] = find(g[i]);
        return g[i];
    }
    
    void merge(int x, int y) {
        x = find(x);
        y = find(y);
        g[x] = y;
    }
public:
    int makeConnected(int n, vector<vector<int>>& connections) {
        if(connections.size() < n - 1) return -1;
        
        g.resize(n, 0);
        for(int i=0; i<n; i++) g[i] = i;
        
        for(auto c : connections) {
            merge(c[0], c[1]);
        }
        
        unordered_set<int> s;
        for(auto a : g) {
            s.insert(find(a));
        }
        
        return s.size() - 1;
    }
};