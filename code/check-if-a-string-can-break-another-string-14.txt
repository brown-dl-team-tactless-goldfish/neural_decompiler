public class Solution
{
    public bool CheckIfCanBreak(string s1, string s2)
    {
        int[] s1Arr = GetCharCount(s1);
        int[] s2Arr = GetCharCount(s2);
        
        string s1Sorted = Sort(s1Arr);
        string s2Sorted = Sort(s2Arr);
        
        if(IsBreak(s1Sorted, s2Sorted))
        {
            return true;
        }
        
        return IsBreak(s2Sorted, s1Sorted);
    }
    
    private static int[] GetCharCount(string s)
    {
        int[] output = new int[26];
        
        for(int i = 0; i < s.Length; i++)
        {
            output[s[i] - 'a']++;
        }
        
        return output;
    }
    
    private static string Sort(int[] arr)
    {
        StringBuilder sb = new StringBuilder();
        
        for(int i = 0; i < arr.Length; i++)
        {
            int c = i + 'a';
            
            for(int j = 0; j < arr[i]; j++)
            {
                sb.Append((char)c);
            }
        }
        
        return sb.ToString();
    }
    
    private static bool IsBreak(string a, string b)
    {
        for(int i = 0; i < a.Length; i++)
        {
            if(a[i] < b[i])
            {
                return false;
            }
        }
        
        return true;
    }
}