class Solution {
private:
    vector<vector<int>> preprocess(vector<vector<int>>& tires) {
        sort(tires.begin(), tires.end());
        vector<vector<int>> new_tires;
        for (auto& t : tires) {
            if (new_tires.empty() || new_tires.back()[1] > t[1]) {
                new_tires.push_back(t);
            }
        }
        return new_tires;
    }
public:
    int minimumFinishTime(vector<vector<int>>& tires, int changeTime, int numLaps) {
        // remove those will never be used
        tires = preprocess(tires);
        int n = tires.size();
		
		// ... (rest are the same)
		
		return dp[numLaps];
	}
}