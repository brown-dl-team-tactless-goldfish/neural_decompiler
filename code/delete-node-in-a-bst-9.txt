// help function to find following number
struct TreeNode* minValueNode(struct TreeNode * node)
{
	struct TreeNode * current = node;
    while (current && current->left != NULL)
        current = current->left;
 
    return current;
}

struct TreeNode* deleteNode(struct TreeNode* root, int key)
{
	if (!root)
		return root;
 
    // find node to remove
    if (key < root->val)
        root->left = deleteNode(root->left, key);

  	else if (key > root->val)
        root->right = deleteNode(root->right, key);

    // node found
    else
    {
        if (root->left == NULL) // no left child
        {
            struct TreeNode *temp = root->right;
            free(root);
            return temp;
        }
        else if (root->right == NULL) // no right child
        {
    		struct TreeNode *temp = root->left;
    		free(root);
    		return temp;
        }
        
        // if there are two children:
        // find successor, exchange values and remove the one we exchanged
        struct TreeNode * temp = minValueNode(root->right);
        root->val = temp->val;
 
        root->right = deleteNode(root->right, temp->val);
    }
    return root;
}