class Solution {
public:
    bool possibleBipartition(int n, vector<vector<int>>& dislikes) {
        vector<int> color(2005, -1);
        vector<int> g[2005];
        for(auto x: dislikes) {
            g[x[0]].push_back(x[1]);
            g[x[1]].push_back(x[0]);
        }
	    for(int s=1; s<=n; s++) {
            if(color[s] == -1) {
                color[s] = 1;
                queue<int> q;
                q.push(s);
                while(!q.empty()) {
                    int u = q.front();
                    q.pop();
                    for(int v: g[u]) {
                        if(color[v] == -1) {
                            color[v] = color[u] ^ 1;
                            q.push(v);
                        }
                        else {
                            if(color[u] == color[v]) return false;
                        }
                    }
                }
            }
        }
	    return true;
    }
};