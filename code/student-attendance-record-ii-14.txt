class Solution {
public:
    const int m=1e9+7;
    long long int n;
    long long int dp[100001][2][3];
    long long int go(int pos,int a,int l){
        if(pos==n)return 1LL;
        if(dp[pos][a][l]!=-1)return dp[pos][a][l];
        if(a==1){
            if(l==2)return dp[pos][a][l]=go(pos+1,1,0)%m;
            return dp[pos][a][l]=(go(pos+1,1,l+1)%m+go(pos+1,1,0)%m)%m;
        }
        if(l==2)return dp[pos][a][l]=(go(pos+1,1,0)%m+go(pos+1,0,0)%m)%m;
        return dp[pos][a][l]=(go(pos+1,1,0)%m+go(pos+1,a,0)%m+go(pos+1,a,l+1)%m)%m;
    }
    int checkRecord(int k) {
        n=k;
        memset(dp,-1,sizeof(dp));
        return go(0,0,0);
        return 0;
    }
};