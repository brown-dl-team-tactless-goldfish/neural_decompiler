class Solution {
public:
    int numSubarrayBoundedMax(vector<int>& A, int L, int R) {
        int l = 0, c = 0, res = 0, d = 0, e = 0;
        ios::sync_with_stdio(false);
        for(int i = 0; i < A.size(); i++){
            if(A[i] > R){
                res += (l * (l + 1) >> 1) - d - (e * (e + 1) >> 1);
                d = 0;
                e = 0;
                l = 0;
            }
            else if(A[i] < L){
                e++;
                l++;
            }
            else{
                d += (e * (e + 1)) >> 1; 
                e = 0;
                l++;
            }
        }
        return res + ((l * (l + 1)) >> 1) - d - ((e * (e + 1)) >> 1);
    }
};