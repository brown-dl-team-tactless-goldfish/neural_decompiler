class Solution {
public:
    int subarraysWithKDistinct(vector<int>& nums, int k) {
        return fun(nums,k)-fun(nums,k-1);
    }
    double fun(vector<int>&nums,int k)
    {
        int i=0;
        int j=0;
        int count=0;
        double result=0;
        int n=nums.size();
        vector<int>v(n+1,0);
        
        // Variable size window problem
        while(j<n)
        {
            // Do pre-calculatioin
            v[nums[j]]++;
            if(v[nums[j]]==1)
                count++;
            
            // Play with condition
           
                while(count>k)
                {
                // remove calculation for i
                    v[nums[i]]--;
                    if(v[nums[i]]==0)
                        count--;
                    i++;
                }
                result+=(j-i+1);
                j++;
            
        }
        return result;
    }
};

Time Complexity: O(2*n)
Space Complexity: O(n)