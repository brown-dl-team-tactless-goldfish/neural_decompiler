class ThroneInheritance {
public:
    string king;
    unordered_map<string, queue<string>> mp;
    unordered_map<string, bool> life;
    ThroneInheritance(string kingName) {
        king=kingName;
        mp={};
        life={};
        life[king]=1;
    }
    void birth(string p, string c) {
        mp[p].push(c);
        life[c]=1;
        return;
    }
    
    void death(string name) {
        life[name]=0;
    }
    void dfs(string& c, vector<string>& res, unordered_map<string, queue<string>>& mp, unordered_map<string, bool>& life){
        auto q=mp[c];
        while(!q.empty()){
            string top=q.front();
            q.pop();
            if(life[top])
                res.push_back(top);
            dfs(top, res, mp, life);
        }
        return;
    }
    vector<string> getInheritanceOrder() {
        vector<string> res={};
        if(life[king])
            res.push_back(king);
        dfs(king, res, mp, life);
        return res;
    }
};