bool f=false;
bool prime[1000001];
vector<int> total;
class Solution 
{
    public:
    vector<int> closestPrimes(int left, int right) 
    {
        if(!f)
        {
            f=true;
            memset(prime,true,sizeof(prime));
            prime[0]=false,prime[1]=false;
            for(long i=2;i<1000001;i++)
            {
                if(prime[i])
                {
                    total.push_back(i);
                    for(long j=i*i;j<1000001;j+=i) prime[j]=false;
                }
            }
        }
        vector<int>::iterator low=lower_bound(total.begin(),total.end(),left);
        vector<int> result;
        int minimum=INT_MAX,index=(int)(low-total.begin());
        for(int i=index+1;i<total.size();i++)
        {
            if(total[i]>right) break;
            if(total[i]-total[i-1]<minimum)
            {
                minimum=total[i]-total[i-1];
                result={total[i-1],total[i]};
            }
        }
        return result.empty() ? vector<int>({-1,-1}) : result;
    }
};