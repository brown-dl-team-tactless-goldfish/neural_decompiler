int res;
void backtracking(int idx, int total, int size, int *nums, int target);
int findTargetSumWays(int* nums, int numsSize, int target){
    
    res=0;
    backtracking(0,0,numsSize,nums,target);
    return res;

}


void backtracking(int idx, int total, int size, int *nums, int target)
{
    int k;

    if (idx >= size)
    {
        if (total == target)
        {
            res++;
        }
        return;
    }
    int i=idx;
    k = total + (-1*nums[i]);
    backtracking(i+1,k,size,nums,target);
    k = total + (1*nums[i]);
    backtracking(i+1,k,size,nums,target);
    return;
    
}