int minimumOneBitOperations (int n) {
	int ans = 0;
	int sign = 1;

	while (n > 0) {
		int position = 32 - __builtin_clz(n);
		if (sign) {
			ans = ans + pow(2, position) - 1;
			sign = 0;
		}
		else {
			ans = ans - (pow(2, position) - 1);
			sign = 1;
		}
		n = n ^ (1 << (position - 1));
	}

	return ans;
}