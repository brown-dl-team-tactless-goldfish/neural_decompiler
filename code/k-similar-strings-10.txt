class Solution {
public:
    int kSimilarity(string a, string b) {

        
priority_queue<pair<int,pair<int,string>>,vector<pair<int,pair<int,string>>>,greater<pair<int,pair<int,string>>> >pq;
        
        pq.push(make_pair(0,make_pair(0,a)));
        pair<int,pair<int,string>>p;
        int cnt=1;
        
        while(!pq.empty()){
            p=pq.top();
            pq.pop();
            int val=p.first;
            int x=p.second.first;
            string s=p.second.second;
            if(s==b){
                return val;
            }
            
            while(s[x]==b[x]){
                x++;
            }
            
            for(int i=x+1;i<s.length();i++){
                if(s[i]==b[x]){
                    string t=s;
                    swap(t[x],t[i]);
                    pq.push(make_pair(val+1,make_pair(x+1,t)));
                    if(b[i]==s[x]) break;
                }    
            }   
        }
        return -1;
    }
};