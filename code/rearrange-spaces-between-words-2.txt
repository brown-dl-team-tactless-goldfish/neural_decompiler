char * reorderSpaces(char * text){
	char tmp[100];
	memset(tmp,0,sizeof(tmp));
	int i, j, k , index = 0, space_count = 0, word_count = 0, interspace = 0;
	int first = 0;
	for(i = 0; i < strlen(text); i++)
	{
		if(text[i] == ' '){
			space_count++;
		}
		if(text[i] >= 97 && text[i] <= 122) 
		{
			if(i == 0)
				word_count++;
			else if(text[i - 1] == ' ')
				word_count++;
		}
	}
	if(word_count == 1)
		interspace = space_count;
	else
		interspace = space_count/(word_count - 1);
	for(i = 0; i < strlen(text); i++)
	{
		if(text[i] >= 97 && text[i] <= 122) 
		{
			tmp[index] = text[i];
			if(i != strlen(text) - 1)
				index++;
			else if(i == strlen(text) - 1)
			{
				if(space_count == 0)
				{
					for(k = 0; k < strlen(text); k++)
					{
						text[k] = tmp[k];
					}
				}
				else
				{
					for(j = 0; j < space_count; j++)
					{
						if(index + 1 < strlen(text))
						tmp[++index] = ' ';
					}	
					for(k = 0; k < strlen(text); k++)
					{
						text[k] = tmp[k];
					}
				}
				return text;
			}
			
			if(text[i + 1] == ' ')
			{
				if(space_count == 0 && (index == strlen(text) - 1)){
						for(k = 0; k < strlen(text); k++)
						{
							text[k] = tmp[k];
						}
						return text;
					}
				else 
				{
					for(j = 0; j < interspace; j++)
					{
						tmp[index] = ' ';
						space_count--;
						if(space_count == 0 && (index == strlen(text) - 1)){
							for(k = 0; k < strlen(text); k++)
							{
								text[k] = tmp[k];
							}
							return text;
						}
						else
							index++;
					}
				}
			}
		}
	}
	for(k = 0; k < strlen(text); k++)
	{
		text[k] = tmp[k];
	}
	return text;
}


