class Solution {
public:
    string fractionToDecimal(int numerator, int denominator) {
        long A = numerator ;
        long B = denominator ;
        if(A == 0)
            return "0" ;
        int sign = 1 ;
        if(A < 0){
            sign *= -1 ;
            A = -1 * A ;
        }
        if(B < 0){
            sign *= -1 ;
            B = -1 * B ;
        }
        string ret ;
        if(sign == -1)
            ret = "-" ;
        ret += to_string(A/B) ;
        long C = A % B ;
        if(C == 0)
            return ret ;
        ret.push_back('.') ;
        unordered_map<int, int>Map ; //{mod, pos}
        while(C != 0 && Map.find(C) == Map.end()){
            Map[C] = ret.size() ;
            ret.push_back(C*10/B + '0') ;
            C = C*10 % B ;
        }
        
        if(C == 0)
            return ret ;
        ret.insert(ret.begin() + Map[C] , '(') ;
        ret.push_back( ')' ) ;
        
        return ret ;
    }
};