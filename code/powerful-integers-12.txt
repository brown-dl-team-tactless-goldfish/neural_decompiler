class Solution {
public:
    vector<int> powerfulIntegers(int x, int y, int bound) {
        vector<int> accx, accy;
        for(int s{1}, i{0}; s < bound && i < 21; s*=x, ++i) accx.emplace_back(s);
        for(int s{1}, i{0}; s < bound && i < 21; s*=y, ++i) accy.emplace_back(s);
        
        unordered_set<int> m;
        for(int i{0}, sizeX{(int)accx.size()}, sizeY{(int)accy.size()}; i < sizeX; ++i)
            for(int j{0}; j < sizeY && accx[i]+accy[j] <= bound; ++j)
                m.insert(accx[i]+accy[j]);
        
        return vector<int>(m.begin(), m.end());
    }
};