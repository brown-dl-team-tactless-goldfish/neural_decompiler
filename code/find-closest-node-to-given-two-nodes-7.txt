class Solution {
public:
    int closestMeetingNode(vector<int>& edges, int node1, int node2) {
        int n = edges.size(); 
        
        auto bfs = [&](int u, int k = 0) {
            vector<int> dist(n, INT_MAX); 
            for (; u != -1 && dist[u] == INT_MAX; u = edges[u]) 
                dist[u] = k++; 
            return dist; 
        }; 
        
        vector<int> d1 = bfs(node1), d2 = bfs(node2); 
        int ans = -1, m = INT_MAX; 
        for (int i = 0; i < n; ++i) 
            if (max(d1[i], d2[i]) < m) {
                ans = i; 
                m = max(d1[i], d2[i]); 
            }
        return ans; 
    }
};