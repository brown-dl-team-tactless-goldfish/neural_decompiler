    public int MinOperationsMaxProfit(int[] customers, int boardingCost, int runningCost) {
        
        int waiting = 0;
        int maxProfit = -1;
        int profit = 0;
        int rotations = 0;
        int result = 0;
        int p;
        
            
        for(int i=0; i< customers.Length; i++)
        {
            waiting += customers[i];
            p = (waiting > 4)? 4 : waiting % 4;
            waiting -=p;
            
            profit += p * boardingCost - runningCost;
            rotations++;
            
            if (profit > maxProfit) { maxProfit =  profit; result = rotations; }
        }
        
        if (waiting > 0)
        {
            int rem = waiting % 4;
            int div = waiting / 4;
            
            if (div > 0)
            {
                profit += div * (4 * boardingCost - runningCost);
                rotations += div; 
                
                if (profit > maxProfit) { maxProfit =  profit; result = rotations; }
            }
            
            if (rem > 0)
            {
                profit += rem * boardingCost - runningCost;
                rotations++; 
                
                if (profit > maxProfit) { maxProfit =  profit; result = rotations; }
            }            
        }

        
        return (maxProfit == -1)? -1 : result;
    }