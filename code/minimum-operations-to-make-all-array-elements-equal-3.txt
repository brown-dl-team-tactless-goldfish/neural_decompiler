class Solution {
public:
    vector<long long> minOperations(vector<int>& nums, vector<int>& queries) {
        sort(nums.begin(), nums.end()) ;
        int n = nums.size() ;
        vector<long long>preSum(n+1) ;
        for(int i = 0; i < n; i++){
            preSum[i+1] = preSum[i] + nums[i] ;
        }
        vector<long long>ret ;
        for(int i = 0; i < queries.size(); i++){
            auto it = lower_bound(nums.begin(), nums.end(), queries[i]) ;
            int idx = it - nums.begin() ;
            long long ans =  (long long)idx*queries[i] - preSum[idx] ;
            ans +=  (preSum[n] - preSum[idx]) - (long long)(n- idx)*queries[i] ;
            ret.push_back(ans) ;
        }
        return ret ;
    }
};