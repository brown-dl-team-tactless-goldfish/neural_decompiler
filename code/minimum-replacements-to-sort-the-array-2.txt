// every split <= next element
// first element of current split as max as possible

class Solution {
public:
    long long minimumReplacement(vector<int>& nums) {
        long long ans = 0;
        int n = nums.size();
        int right = nums[n-1];
        for(int i = n-2; i >= 0; i--) {
            if(nums[i] <= right) {
                right = nums[i];
                continue;
            }
            int k = (nums[i]+right-1)/right;
            ans += k-1;
            // as max as possible
            right = nums[i]/k;
        }
        return ans;
    }
};
