int minimumOperations(vector<int>& nums) {
        int n = nums.size();
        unordered_map<int, int> oddMap, evenMap;
        for(int i=0; i<n; i++)
            if(i%2) oddMap[nums[i]]++;
            else evenMap[nums[i]]++;
        for(auto x: oddMap)
            if(evenMap.count(x.first))
                if(evenMap[x.first] > x.second) oddMap[x.first] = 0;
                else evenMap[x.first] = 0;
        int oddNum = 0, evenNum = 0;
        for(auto x: oddMap) oddNum = max(oddNum, x.second);
        for(auto x: evenMap) evenNum = max(evenNum, x.second);
        return n - evenNum - oddNum;
    }