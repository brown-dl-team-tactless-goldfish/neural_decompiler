typedef struct {
    int ptr;
    int size;
    char** value;
} OrderedStream;


OrderedStream* orderedStreamCreate(int n) {
    OrderedStream *orderedStream = (OrderedStream*)malloc(sizeof(OrderedStream));
    orderedStream->ptr=1;
    orderedStream->size=n;
    orderedStream->value=(char**)malloc(sizeof(char*)*n);
    for(int i=0;i<n; i++){
        *(orderedStream->value+i)=NULL;
    }
    return orderedStream;
}

char ** orderedStreamInsert(OrderedStream* obj, int id, char * value, int* retSize) {
    *(obj->value+id-1)=value;
    int count=0;
    if(id==obj->ptr){
        while(id-1+count<obj->size&&*(obj->value+id-1+count)!=NULL)
            count++;
        obj->ptr=id+count;
    }
    *retSize=count;
    return obj->value+id-1;
}

void orderedStreamFree(OrderedStream* obj) {
    free(obj->value);
    free(obj);
}