typedef struct Node{
    char content;
    int loc;
}Node;

int longestValidParentheses(char* s) {
    int len = (int)strlen(s);
    Node *stack = (Node *)malloc(sizeof(Node)*len);
    int *numList = (int*)malloc(sizeof(int)*len);
    int top = -1;
    for(int i=0;i<len;i++){
        if(top >= 0 && s[i]==')' && stack[top].content == '(' ){
            top--;
            numList[i] = (top>=0)? stack[top].loc:-1;
        } else{
            top++;
            stack[top].content = s[i];
            stack[top].loc = i;
            numList[i] = i;
        }

    }

    for(int i = 0;i<len;i++)
        numList[i] = i-numList[i];

    int max = 0;
    for(int i=0;i<len;i++){
        if(numList[i]>max)
            max = numList[i];
    }
    return max;
}