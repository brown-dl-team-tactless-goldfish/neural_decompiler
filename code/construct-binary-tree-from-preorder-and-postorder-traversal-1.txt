/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */
/**
 * something wrong in case:
 *      [7,14,3,15,6,9,4,12,11,10,2,5,13,8,1]
 *      [10,2,11,12,4,13,5,9,6,1,8,15,3,14,7]
 *
 * click Run Code will output the correct answer,
 * but submit solution will get Runtime Error.
 */

struct TreeNode* preorder(int* pre,int preSize, int* post, int postSize,int* postMap, int *count){
    if((*count)==preSize){
        return NULL;
    }
    struct TreeNode* root=(struct TreeNode*)malloc(sizeof(struct TreeNode));
    root->val=pre[(*count)++];
    post[postMap[pre[(*count)-1]]]=0;
    root->left=NULL;
    root->right=NULL;
    if(postMap[pre[(*count)-1]]-1>-1&&post[postMap[pre[(*count)-1]]-1]>0){
        root->left=preorder1(pre,preSize,post,postSize,postMap,count);   
        if(postMap[root->val]>postMap[pre[(*count)]]){
            root->right=preorder1(pre,preSize,post,postSize,postMap,count);
        }
    }
    return root;
}
struct TreeNode* constructFromPrePost(int* pre, int preSize, int* post, int postSize) {
    int *postMap=(int*)calloc(postSize+1,sizeof(int));
    for(int i=0;i<postSize;i++){
        postMap[post[i]]=i;
    }
    int *count=(int*)calloc(1,sizeof(int));
    struct TreeNode* root=preorder(pre,preSize,post,postSize,postMap,count);
    return root;
}