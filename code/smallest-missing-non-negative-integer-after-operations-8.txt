class Solution {
public:
    int findSmallestInteger(vector<int>& nums, int value) {
        int n=nums.size();
        for(int i=0;i<n;i++)
        {
            int x=nums[i]/value;
            if(nums[i]>=0)
            {
                nums[i]-=x*value;
            }
            else{
                if(nums[i]-x*value==0)
                    nums[i]-=x*value;
                else nums[i]-=(x-1)*value;
            }
        }
        sort(nums.begin(),nums.end());
        // for(auto it:nums)
        // cout<<it<<" ";
        cout<<endl;
        map<int,int>m;
        for(int i=0;i<n;i++)
        {
            m[i]=-1;
            m[nums[i]]=-1;
        }
        for(int i=0;i<n;i++)
        {
            if(m[nums[i]]>=0)
            {
                int x=nums[i];
                nums[i]=m[nums[i]];
                while(m[nums[i]]>=0 and nums[i]<n+2)
                {
                    nums[i]+=value;
                }
                m[nums[i]]=nums[i];
                m[x]=nums[i];
            }
            else m[nums[i]]=nums[i];
            // if(m[i]==0)
            //     return i;
        }
        
        // return 0;
        sort(nums.begin(),nums.end());
        // for(auto it:nums)
        // cout<<it<<" ";
        for(int i=0;i<n;i++)
        {
            if(i!=nums[i])
            return i;
        }
       
        return n;
    }
};