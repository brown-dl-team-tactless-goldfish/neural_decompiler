

char * multiply(char * num1, char * num2){


    unsigned num1len = strlen(num1);
    unsigned num2len = strlen(num2);
        
    unsigned arrlen = num1len + num2len+1;
    char *ans = (char*)calloc(arrlen, sizeof(char)); 
    for (int i = 0; i < arrlen-1; i++)
        ans[i] = '0';
    ans[arrlen-1] = '\0';
    
    for (int i = num1len-1; i >=0; i--)
    {
        for (int j = num2len-1; j >=0; j--) 
        {
            // Remember there is a NUL at arrlen-1
            unsigned offset = arrlen-2-(num1len-1-i);
            unsigned k = offset - (num2len-1-j);
            
            int mult = ((num1[i]- '0') * (num2[j] - '0'));
            while(mult)
            {
                mult += (ans[k]-'0');
                ans[k--] = (mult % 10) + '0';
                mult /=10;
            }

        }
    }
    
    // Clear out leading zeros
    while (*ans == '0' && arrlen-- > 2) ans++;
    return ans;

    
}