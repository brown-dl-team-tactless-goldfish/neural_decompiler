vector<TreeNode*> tree;

CBTInserter(TreeNode* root) {
    
    tree.push_back(root);
    
    for(int i=0; i<tree.size(); i++)
    {
        if(tree[i]->left)
        {
            tree.push_back(tree[i]->left);
        }
        
        if(tree[i]->right)
        {
            tree.push_back(tree[i]->right);
        }
        
    }
    
}

int insert(int val) {
    
    int n = tree.size();
    
    TreeNode* new_node = new TreeNode(val);
    
    tree.push_back(new_node);
    
    int parent = (n-1) /2;
    
    if(n%2 == 0)
    {
        tree[parent]->right = new_node;
        
    }
    else
    {
        tree[parent]->left = new_node;
    }
    
    return tree[parent]->val;
    
}

TreeNode* get_root() {
    
    return tree[0];
    
}