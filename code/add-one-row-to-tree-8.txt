struct TreeNode* addOneRow(struct TreeNode* root, int val, int depth){
    if (depth == 1){ // case 1, add new root
        struct TreeNode* newRoot = malloc(sizeof(struct TreeNode));
        newRoot->val = val;
        newRoot->left = root;
        newRoot->right = NULL;
        return newRoot;
    } else if (depth == 2){ // case 2, add nodes
		// allocate new left node
        struct TreeNode* newleft = malloc(sizeof(struct TreeNode));
		newleft->val=val;
		newleft->left = root->left ? root->left : NULL;
		newleft->right = NULL;
		root->left = newleft;
        
		// allocate new right node
		struct TreeNode* newright = malloc(sizeof(struct TreeNode));
        newright->val=val;
        newright->right = root->right ? root->right : NULL;
        newright->left=NULL;
        root->right = newright;
		
    } else { // case 3, recurse
        if (root->left) addOneRow(root->left, val, depth-1);
        if (root->right) addOneRow(root->right, val, depth-1);
    }
    
    return root;
}