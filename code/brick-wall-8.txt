class Solution {
public:
    int leastBricks(vector<vector<int>>& wall) {
        // support variables
        int len = wall.size(), res = 0, c;
        unordered_map<int, int> um;
        // getting the frequencies of each gap
        for (auto &level: wall) {
            c = 0;
            for (int i = 0, lmt = level.size() - 1; i < lmt; i++) um[c += level[i]]++;
        }
        // getting the most frequent gap
        for (auto e: um) {
            res = max(res, e.second);
        }
        return len - res;
    }
};