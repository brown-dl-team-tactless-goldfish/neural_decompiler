using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _1542_test_one_case
{
    class Program
    {
        static void Main(string[] args)
        {
            var result = LongestAwesome("3242415");
        }

        public static int LongestAwesome(string s)
        {
            if (s == null || s.Length == 0)
            {
                return 0;
            }

            var map = new Dictionary<int, int>();

            map.Add(0, -1); //

            var length = s.Length;
            var bitsForDigits = 0;
            var maxLength = 0;

            // 0 ^ 0 = 0
            // 0 ^ 1 = 1
            // 1 ^ 1 = 1  // xor - determine odd or even in each bit
            for (int i = 0; i < length; i++)
            {
                var digit = s[i] - '0';
                bitsForDigits ^= 1 << digit;

                if (!map.ContainsKey(bitsForDigits))
                {
                    map.Add(bitsForDigits, i);
                }
                else
                {
                    maxLength = Math.Max(maxLength, i - map[bitsForDigits]);
                }

                // search odd matching 
                // brute force all digits with 1 - at most 10 cases
                for (int shift = 0; shift <= 9; shift++)
                {
                    var key = bitsForDigits ^ (1 << shift);  // remove one digit      
                      
                    if (map.ContainsKey(key))
                    {
                        maxLength = Math.Max(maxLength, i - map[key]);
                    }  
                }
            }

            return maxLength;
        }
    }
}