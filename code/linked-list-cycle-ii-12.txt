/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode *detectCycle(struct ListNode *head) {
    if (head==NULL || head->next==NULL)
        return NULL;
    if (head->next==head)
    {
        return head;
    }
    
    struct ListNode *fast = head;
    struct ListNode *slow = head;
    
    while (fast!=NULL && fast->next!=NULL)
    {
        slow = slow->next;
        fast = fast->next->next;
        if (slow == fast)
            break;
    }
    
    if (fast==NULL || fast->next==NULL ||fast->next->next==NULL)
        return NULL;
    
    fast=head;
    while (slow!=fast)
    {
        slow = slow->next;
        fast = fast->next;
    }
    return slow;
}