unordered_map<int,pair<string,int>> m;

map<pair<string,string>,vector<int>> mp;

UndergroundSystem() {
    
}

void checkIn(int id, string stationName, int t) {
    
    m[id] = {stationName,t};
    
}

void checkOut(int id, string stationName, int t)
{
    if(m.find(id) != m.end())
    {
        mp[{m[id].first,stationName}].push_back(t-m[id].second);
    }
}

double getAverageTime(string startStation, string endStation)
{
    double sum = 0, count = 0;
    
    for(auto x: mp[{startStation,endStation}])
    {
        sum += x;
        
        count++;
    }
    
    return sum / count;
    
}