#include <iostream>
using namespace std;

class PrefixTree {
public:
    int count = 0;
    unordered_map<char, PrefixTree*> map;
    PrefixTree() {
        this->count = 0;
    }; 
};

class Solution {
public:
    vector<int> sumPrefixScores(vector<string>& words) {
        PrefixTree* root = new PrefixTree();
        for(string& ele: words) {
            PrefixTree* cur = root;
            for(int i=0;i<ele.size();i++) {
                char c = ele[i];
                if(cur->map.count(c) == 0) {
                    cur->map[c] = new PrefixTree();
                }
                cur = cur->map[c];
                cur->count++;
            }
        }


        vector<int> res;
        for(int i=0;i<words.size();i++) {
            int temp = 0;
            PrefixTree* cur = root;
            for(int j=0;j<words[i].size();j++) {
                char c = words[i][j];
                cur = cur->map[c];
                temp += cur->count;
            }

            res.push_back(temp);
        }

        return res;
    }
};