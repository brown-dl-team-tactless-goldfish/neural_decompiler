typedef struct {
    int val;
    UT_hash_handle hh;
} Item1;

void dfs(struct TreeNode *root, Item1 *ht, int k, bool *ans) {
    if (root == NULL) {
        return;
    }
    int val = k - root->val;
    Item1 *tmp = NULL;
    HASH_FIND_INT(ht, &val, tmp);
    if (tmp) {
        *ans = true;
        return;
    } else {
        tmp = (Item1 *)malloc(sizeof(Item1));
        memset(tmp, 0, sizeof(Item1));
        tmp->val = root->val;
        HASH_ADD_INT(ht, val, tmp);
    }
    dfs(root->left, ht, k, ans);
    dfs(root->right, ht, k, ans);
}

bool findTarget(struct TreeNode* root, int k){
    bool ans = false;
    Item1 *ht = NULL;
    dfs(root, ht, k, &ans);
    
    return ans;
}