class Solution {
public:
 
 vector<int> successfulPairs(vector<int>& s, vector<int>& p, long long ss) {
    sort(p.begin(), p.end());
    int n = s.size(), m = p.size();
    vector<int> ans;
    for (int i = 0; i < n; i++){
        
        if( s[i]> ss){
             ans.push_back(m);
             continue;
             ;
        }
        long long a = (ss % (s[i] * 1ll)) == 0 ? ss / (s[i] * 1ll) : (ss / (s[i] * 1ll)) + 1;
        // cout << a << " ";

        auto c = lower_bound(p.begin(), p.end(), a);
        cout << c - p.begin() << " ";
        int ind = (c)-p.begin();

        ans.push_back(m - ind);
    }
        return ans;
}
};