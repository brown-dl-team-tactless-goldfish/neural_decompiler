const int mod = 1e9+7;
class Solution {
    int *a;
public:
    int findSum(int idx,int l,int r,int s,int e){
        if(l > e || r < s) return 0;
        else if(s <= l && r <= e) return a[idx];
        int mid = (l + r)/2;
        return findSum(2*idx + 1,l,mid,s,e) + findSum(2*idx + 2,mid+1,r,s,e);
    }
    void updateValue(int i,int idx ,int l,int r){
        if(l > i || r < i) return;
        if(l == r){
            a[idx] += 1;
            return;
        }
        int mid = (l + r)/2;
        if(i <= mid) updateValue(i,2*idx + 1,l,mid);
        else updateValue(i,2*idx + 2,mid+1,r);
        a[idx] = a[2*idx+1] + a[2*idx + 2];
    }
    int createSortedArray(vector<int>& nums) {
        int n = nums.size();
        int l = 0, r = *max_element(nums.begin(),nums.end());
        a = new int[4*r]{0};
        int ans = 0;
        for(int &i:nums){
            ans += min(findSum(0,l,r,l,i - 1),findSum(0,l,r,i + 1,r));
            ans %= mod;
            updateValue(i,0,l,r);
        }

        return ans;
    }
};