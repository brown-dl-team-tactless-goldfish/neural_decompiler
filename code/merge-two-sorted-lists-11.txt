//in C++
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) { 
        
        if( list1 == NULL)
            return list2;
        if (list2 == NULL)
            return list1;
        
        ListNode *mlist = list1;
        //judge which one is smaller
        if(list1->val > list2->val) {
            mlist = list2;
            list2 = list2->next;
        }
        else {
            list1 = list1->next;
        }
        
        ListNode *cur = mlist;
        
        //begin compare now
        while( list1 && list2) {
            
            if(list1->val > list2->val) {
                
                cur->next = list2;
                list2 = list2->next;
            }
            else {
                cur->next = list1;
                list1 = list1->next;
                    
            }
            //get next mlist pointer
            cur = cur->next;
            
        }
        
        //process the remaining 
        if(list1) {
            cur->next = list1;
        }
        else {
            cur->next = list2;
        }
        
        //return
        return mlist;
        
    }
};