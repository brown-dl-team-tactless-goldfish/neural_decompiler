class Solution {
public:
    int minimumDeletions(vector<int>& nums) {
        int maxpos = max_element(nums.begin(), nums.end()) - nums.begin();
        int minpos = min_element(nums.begin(), nums.end()) - nums.begin();
        int n = nums.size();
        
        int maxposLeftShift = maxpos + 1;
        int maxposRightShift = n - maxpos;
        int minposLeftShift = minpos + 1;
        int minposRightShift = n - minpos;
        
        int ans = min(
            min(maxposLeftShift, maxposRightShift), 
            min(minposLeftShift, minposRightShift));
        
        if (ans == maxposLeftShift) {
            ans += min(minposLeftShift - ans, minposRightShift);
        } else if (ans == minposLeftShift) {
            ans += min(maxposLeftShift - ans, maxposRightShift);
        } else if (ans == maxposRightShift) {
            ans += min(minposRightShift - ans, minposLeftShift);
        } else {
            ans += min(maxposRightShift - ans, maxposLeftShift);
        }
        
        return ans;
    }
};