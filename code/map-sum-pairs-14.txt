public class MapSum {
    class TrieNode
    {
        public TrieNode[] children = new TrieNode[26];
        public bool isEnd;
        public int sum;
    }
    
    Dictionary<string,int> dict = new Dictionary<string,int>();
    TrieNode root = new TrieNode();
    /** Initialize your data structure here. */
    public MapSum() {
        
    }
    
    public void Insert(string key, int val) 
    {
        int prev = 0;
        
        if(!dict.ContainsKey(key))
            dict.Add(key,val);
        else
        {
            prev = dict[key];
            dict[key] = val;
        }
        
        TrieNode cur = root;
        
        foreach(var c in key)
        {
            if(cur.children[c-'a']==null)
                cur.children[c-'a'] = new TrieNode();
            
            cur.sum+=val-prev;
            cur = cur.children[c-'a'];
        }
        cur.sum+=val-prev;
        cur.isEnd=true;
    }
    
    public int Sum(string prefix) {
        TrieNode cur = root;
        
        foreach(var c in prefix)
        {
            if(cur.children[c-'a']==null)
                return 0;
            
            cur = cur.children[c-'a'];
        }
        return cur.sum;
    }
}

/**
 * Your MapSum object will be instantiated and called as such:
 * MapSum obj = new MapSum();
 * obj.Insert(key,val);
 * int param_2 = obj.Sum(prefix);
 */