typedef struct ListNode Node;
Node* partion(Node** lists, int start, int end);
Node* mergeTwoLists(Node* l1, Node* l2);

struct ListNode* mergeKLists(struct ListNode** lists, int listsSize) {
    return partion(lists, 0, listsSize-1);
}

Node* partion(Node** lists, int start, int end) {
    if (start == end)
        return lists[start];
    if (start < end) {
        int middle = (start + end) / 2;
        Node* l1 = partion(lists, start, middle);
        Node* l2 = partion(lists, middle+1, end);
        return mergeTwoLists(l1, l2);
    } else {
        return NULL;
    }
}

Node* mergeTwoLists(struct ListNode* l1, struct ListNode* l2) {
    if(l1 == NULL && l2 == NULL)
        return NULL;
    if (l1 == NULL)
        return l2;
    if (l2 == NULL)
        return l1;
    Node* new_node;
    if (l1->val >= l2->val) {
        new_node = l2;
        new_node->next = mergeTwoLists(l1, l2->next);
    } else {
        new_node = l1;
        new_node->next = mergeTwoLists(l1->next, l2);
    }
    return new_node;
}