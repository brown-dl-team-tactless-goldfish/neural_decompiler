/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */

struct ListNode* reverse(struct ListNode* l) {
    struct ListNode *next = l->next;
    l->next = 0;
    
    while (next != 0) {
        struct ListNode *nextNext = next->next;
        next->next = l;
        l = next;
        next = nextNext;
    }
    
    return l;
}

struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2){
    l1 = reverse(l1);
    l2 = reverse(l2);
    
    struct ListNode* l3 = 0;
    struct ListNode* p1 = l1;
    struct ListNode* p2 = l2;
    
    bool c = 0;
    while (p1 || p2 || c) {
        int sum = c;
        if (p1) {
            sum += p1->val;
            p1 = p1->next;
        }
        if (p2) {
            sum += p2->val;
            p2 = p2->next;
        }
        
        struct ListNode* t = l3;
        l3 = (struct ListNode*)malloc(sizeof(struct ListNode));
        l3->next = t;
        l3->val = sum % 10;
        c = sum / 10;
    }
    l1 = reverse(l1);
    l2 = reverse(l2);
    
    return l3;
}