class Solution {
public:
    int minSumOfLengths(vector<int>& arr, int target) {
        
        int n = arr.size();
        unordered_map<int, int>hm;
        hm[0] = -1;
        int sum = 0;
        
        for (int i = 0; i < n; i++) {
            sum += arr[i];
            hm[sum] = i;
        }
        
        sum = 0;
        int msize = INT_MAX, res = INT_MAX;
        for (int i = 0; i < n; i++) {
            sum += arr[i];
            
            if (hm.find(sum-target) != hm.end())
                msize = min(msize, i-hm[sum-target]);
            
            if (hm.find(sum+target) != hm.end() && msize != INT_MAX)
                res = min(res, msize + hm[sum+target]-i);
        }
        
        return res == INT_MAX ? -1 : res;
    }
};