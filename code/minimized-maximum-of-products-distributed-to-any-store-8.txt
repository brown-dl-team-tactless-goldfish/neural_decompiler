// monotonicity => minimum maximum number of products given to any store
public class Solution {
    public int MinimizedMaximum(int n, int[] quantities) {
        int l = 1, r = 100000; // quantities
        while (l < r) {
            int m = l + (r - l) / 2, storeSum = 0;
            // num stores needed for this quantity at this number of products per store
            foreach (int quantity in quantities) storeSum += (quantity + m - 1) / m; 
            //Console.WriteLine("l: " + l + " r: " + r + " ss: " + storeSum);
            if (storeSum > n) { // store count requirement too high for how many stores we have, increase products per store
                l = m + 1;
            } else { // store count requirements fits the bill but drop products per store for minimum valid rate per store
                r = m; 
            }
        }
        
        return l;
    }
}