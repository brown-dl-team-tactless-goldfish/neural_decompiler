class Solution {
public:
    bool canReach(string s, int minJump, int maxJump) {
      queue<int>q;
        int size=s.size();
        if(s[size-1]=='1')
            return false;
        else
        {
            q.push(0);
            int far=0,m,n;
            while(!q.empty())
            {
                m=max(q.front()+minJump,far); /*  minimum index  fron current
				position we can reach(also check that if we
				have already visited that index then
				do not visit same index that's why minimum index 
				we can reach from current index is max of (q.front()+minJump,far)*/
                n=q.front()+maxJump;    /* max index we can reach from current index */
                far=n;
                 q.pop();
                while(m<size && m<=n)
                {
                    if(s[m]=='0')
                        q.push(m);
                    if(m==size-1)
                        return true;
                    m++;
                        
                }
            }
            return false;
        }
        
        
    }
};