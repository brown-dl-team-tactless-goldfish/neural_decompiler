class Solution {
public:
    bool possibleToStamp(vector<vector<int>>& grid, int h, int w) {
        const int m = grid.size(); 
        const int n = grid[0].size(); 
        vector<vector<int>> t(m + 2, vector<int>(n + 2));
        vector<vector<int>> u(m + 2, vector<int>(n + 2));
        for(int i = 0;i<m;i++) {
            for(int j = 0;j<n;j++) {
                if(grid[i][j] == 1) {
                    int a = max(0,i - h + 1); 
                    int b = max(0,j - w + 1);
                    t[a+1][b+1] += 1; 
                    t[a+1][j+2] -= 1; 
                    t[i+2][b+1] -= 1; 
                    t[i+2][j+2] += 1;
                }
            }
        }
        for(int i = 1;i<=m;i++) {
            for(int j = 1;j<=n;j++) {
                t[i][j] += t[i-1][j] + t[i][j-1] - t[i-1][j-1];
                if(t[i][j] == 0) {
                    if(i+h-1<=m && j + w - 1<= n) {
                        u[i][j] += 1; 
                        u[i+h][j] -= 1; 
                        u[i][j+w] -= 1; 
                        u[i+h][j+w] += 1; 
                    }
                }
            }
        }
        for(int i = 1;i<=m;i++) {
            for(int j = 1;j<=n;j++) {
                u[i][j] += u[i-1][j] + u[i][j-1] - u[i-1][j-1];
                if(u[i][j] == 0 && grid[i-1][j-1] == 0) {
                    return false; 
                }
            }
        }
        return true; 
    }
};