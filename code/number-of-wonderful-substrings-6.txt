class Solution {
public:
    
    long long wonderfulSubstrings(string word){
        unordered_map<int,int> indices ;
        int mask = 0 ; //can be upto 2^10 == 1024 ;
        long long ans = 0 ;
        indices[0] = 1 ;
        
        for(int i = 0 ; i < word.size() ; ++i ){
			//0->even occurence
			//1-> odd occurence
			//toggle the current bit 
            mask ^= 1 << (word[i]-'a') ;
            ans += indices[mask] ;
            indices[mask] ++ ;
            
			//now toggle one by one all the bits in mask
            for(int j = 0 ; j < 10 ; j++ ){
                int tester = mask ^ (1 << j) ;
                ans += indices[tester] ;
            }
        }
        
        return ans ;
    }
};