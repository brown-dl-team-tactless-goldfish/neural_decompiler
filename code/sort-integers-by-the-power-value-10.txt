    int getKth(int lo, int hi, int k) {
        unordered_map<int, int> mem;
        vector<vector<int>> res;
        mem[1] = 0;
        
        function<int(int)> dfs = [&](int v) {
            if(!mem.count(v)) {
                mem[v] = dfs(v%2 == 1 ? 3*v+1 : (v >> 1)) + 1;
            }
            return mem[v];
        };

        for(int i = lo; i <= hi; i++) {
            res.push_back({dfs(i), i});
        }

        nth_element(begin(res), begin(res) + k-1, end(res), [](auto& a, auto& b) {
            return a[0] == b[0] ? a[1] < b[1] : a[0] < b[0];
        });       
        return res[k-1][1];
    }