enum State {
    SPACE,
    WORD0,       // pre-hyphen
    HYPHEN,
    WORD1,       // post-hyphen
    PUNCTUATION,
    INVALID      // invalid token
};

class Solution {
public:
    int countValidWords(string sentence)
    {
        int count = 0;
        State state = SPACE;                
        for (auto c : sentence) {
            if (isalpha(c)) {                
                switch(state) {
                    case SPACE:  case WORD0: { state = WORD0;  break; }
                    case HYPHEN: case WORD1: { state = WORD1;  break; }
                    default:                 { state = INVALID;       }
                }
            } else if (c == '-') {    
                state = (state == WORD0) ? HYPHEN : INVALID;
            } else if (c == '.' || c == '!' || c == ',') {
                state = (state == SPACE || state == WORD0 || state == WORD1) ? PUNCTUATION : INVALID;
            } else if (c == ' ') {
                if (state == WORD0 || state == WORD1 || state == PUNCTUATION)
                    ++count;
                state = SPACE;
            } else {
                state = INVALID;
            }
        }
        if (state == WORD0 || state == WORD1 || state == PUNCTUATION)
            ++count;        
        return count;
    }
};