public class Solution 
{
    public int LeastOpsExpressTarget(int x, int target) 
    {
        if(target <= x/2) return 2 * target - 1;
        else if(target <= x) return 2 * (x - target);
        
        int curr = x, count = 1;
        while (curr * x <= target) 
        {
            curr *= x;
            count++;
        }
        
        if(curr * x == target) 
            return count;
        
        int left = count + LeastOpsExpressTarget(x, target - curr);
        int right = int.MaxValue;
        if((curr * x) - target < target) 
            right = count + 1 +LeastOpsExpressTarget(x, (curr * x) - target);
        
        return Math.Min(left,right);
    }
}