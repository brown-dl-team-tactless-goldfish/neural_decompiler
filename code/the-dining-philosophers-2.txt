#include <semaphore.h>

class DiningPhilosophers {
public:
    DiningPhilosophers() {
        for (int i=0; i<5; i++) {
            sem_t s;
            sem_init(&s, 0, 1);
            m_forks.push_back(s);
        }
    }

    void wantsToEat(int philosopher,
                    function<void()> pickLeftFork,
                    function<void()> pickRightFork,
                    function<void()> eat,
                    function<void()> putLeftFork,
                    function<void()> putRightFork) {
        //wait till left fork is available
		sem_wait(&m_forks[philosopher]);
        pickLeftFork();
        
        //wait till right fork is available
        sem_wait(&m_forks[(philosopher+1)%5]);
        pickRightFork();
        
        eat();
        
        putLeftFork();
        sem_post(&m_forks[philosopher]);
        
        putRightFork();
        sem_post(&m_forks[(philosopher+1)%5]);
    }
private:
    vector<sem_t> m_forks;
};