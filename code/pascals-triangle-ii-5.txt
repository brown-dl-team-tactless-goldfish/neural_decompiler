/**
 * Return an array of size *returnSize.
 * Note: The returned array must be malloced, assume caller calls free().
 */
int value(int rowIndex,int i)
{
    if(i==0)
    {return 1;}
    double numerator=1;
    double denominator=1;
    int temp=i;
    for(int k=0;k<temp;k++)
    {
        numerator=numerator*(rowIndex--);
        denominator=denominator*(i--);
    }
    double result=numerator/denominator;
    if(result-(int)result>0.5)
    {return (int)(result+1);}
    else
    {return (int)result;}
}
int* getRow(int rowIndex, int* returnSize) {
    *returnSize=rowIndex+1;
    int *result=(int*)malloc(sizeof(int)*(*returnSize));
    if(rowIndex==0)
    {
        result[0]=1;
        return result;
    }
    int len=*returnSize/2+*returnSize%2;
    for(int i=0;i<len;i++)
    {
        result[i]=value(rowIndex,i);
        result[*returnSize-i-1]=result[i];
    }
    return result;
}