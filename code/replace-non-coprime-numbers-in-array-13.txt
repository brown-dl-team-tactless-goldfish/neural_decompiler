class Solution {
public:
    vector<int> replaceNonCoprimes(vector<int>& nums) {
        list<long long> lt;
        
        for(auto &n:nums)
           lt.push_back(n);
        

            auto it1=lt.begin();
            
            while(it1!=lt.end()){
                if(it1==lt.begin()){
                    it1++;
                    continue;
                }
                
                auto it2=it1;
                it2--;
                
                int gcd1=__gcd(*it1,*it2);
                if(gcd1>1){
                    int lcm=((*it1)*(*it2))/gcd1;
                
                    lt.erase(it2);
                    *it1=lcm;
                    continue;
                    
                }
                
                auto it3=it1;
                it3++;
                
                if(it3==lt.end()) break;
                
                int gcd2=__gcd(*it1,*it3);
                
                if(gcd2>1){
                  int lcm=((*it1)*(*it3))/gcd2;
                    lt.erase(it3);
                    *it1=lcm;
                    continue;
                }
                
                it1++;
                
            }
           

        vector<int> ans;
        for(auto &n:lt)
            ans.push_back(n);
        
        return ans;
    }
};