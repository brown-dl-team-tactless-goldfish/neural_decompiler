int bestClosingTime(char * customers){
    int n = strlen(customers);
    int* preN = malloc((n+1) * sizeof(int));
    int* sufY = malloc((n+1) * sizeof(int));
    //preN
    preN[0] = 0;
    for(int i = 0; i < n; i++){
        preN[i+1] = preN[i] ;
        if(customers[i] == 'N')
            preN[i+1]++;
    }    
    //sufY
    sufY[n] = 0;
    for(int i = n-1; i>=0; i--){
        sufY[i] = sufY[i+1];
        if(customers[i] == 'Y')
            sufY[i]++;
    }
    int min = INT_MAX;
    int min_id = 0;
    for(int i = 0; i <= n; i++){
        int d = preN[i] + sufY[i];
        if(d < min){
            min = d;
            min_id = i;
        }
        if(min == 0)
            break;
    }
    free(preN);
    free(sufY);
    return min_id;
    
}