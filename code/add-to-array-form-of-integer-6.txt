int* addToArrayForm(int* A, int ASize, int K, int* returnSize){
    int carry = 0;
    
    // get the length of K
    int KSize = 0;
    int tmp = K;
    while(tmp>0){
        tmp /= 10;
        KSize++;
    }
    
    // define the return array, give it one more digit in case of ex.3 & ex.4
    *returnSize = (ASize>KSize?ASize:KSize) + 1;
    int* arr = malloc(*returnSize * sizeof(int));
    
    // calculate each digit, from the right most one
    for(int i=1; i<=*returnSize; i++){
        int res = carry;
        if(i<=ASize) res += A[ASize-i];
        if(K){
            res += K % 10;
            K /= 10;
        }
        carry = res / 10;
        arr[*returnSize-i] = res % 10;
    }
    
    // check if the first digit is 0
    if(arr[0]) return arr;
    (*returnSize)--;
    return arr + 1;
}