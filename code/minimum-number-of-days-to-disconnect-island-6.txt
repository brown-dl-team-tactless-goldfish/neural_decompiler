int fill(vector<vector<int>>& g, int i, int j, int col, bool top = false) {
    if (i < 0 || j < 0 || i >= g.size() || j >= g[i].size() || g[i][j] != col)
        return 0;
    g[i][j] = col + 1;
    int r = fill(g, i + 1, j, col), l = fill(g, i - 1, j, col);
    int d = fill(g, i, j + 1, col), u = fill(g, i, j - 1, col);
    if (top)
        return max({r, l, d, u}) == r + l + d + u ? 2 : 1;
    else 
        return 1 + r + l + d + u;
}
int minDays(vector<vector<int>>& g) {
    int res = 0;
    for (auto i = 0; i < g.size(); ++i)
        for (auto j = 0; j < g[i].size(); ++j) {
            if (g[i][j]) {
                if (g[i][j] == 1 && res != 0)
                    return 0;
                res = res == 1 ? 1 : fill(g, i, j, g[i][j], true);
            }
        }
    return res;
}