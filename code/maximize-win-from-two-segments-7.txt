class Solution {
public:
    int maximizeWin(vector<int>& pp, int k) {
        int n = pp.size();
        vector<vector<int>> dp(n + 1, vector<int>(3));

        for(int i=n-1; i>=0; i--) {
            for(int cnt=1; cnt<=2; cnt++) {
                int notPick = dp[i + 1][cnt], pick = 0;
                int pos = lower_bound(pp.begin() + i, pp.end(), pp[i] + k + 1) - pp.begin() - 1;
                pick = pos - i + 1 + dp[pos + 1][cnt - 1];
                dp[i][cnt] = max(pick, notPick);
            }
        }
        return dp[0][2];
    }
};