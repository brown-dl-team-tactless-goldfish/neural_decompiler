int cmp(const void *a, const void *b){
    char str1[10], str2[10];
    sprintf(str1, "%d", *(int*)a);
    sprintf(str2, "%d", *(int*)b);
    int i = 0, j = 0;
    while (str1[i] == str2[j]){
        i++;
        j++;
        if (str1[i] == 0) i %= strlen(str1);        // overflow
        else if (str2[j] == 0) j %= strlen(str2);   // overflow
    }
    return str2[j] - str1[i];                       // descending-order
}
char * largestNumber(int* nums, int numsSize){
    qsort(nums, numsSize, sizeof(int), cmp);
    char *res = calloc(500, sizeof(char));
    int idx = 0;
    for (int i = 0; i < numsSize; i++){
        char str[10];
        sprintf(str, "%d", nums[i]);
        memcpy(res+idx, str, strlen(str));
        idx += strlen(str);
        if (i == 0 && nums[i] == 0) break;
    }
    res[idx] = '\0';
    return res;
}