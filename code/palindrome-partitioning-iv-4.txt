class Solution {
    string s;
    bool isPalin(int start, int end) {
        int len = end - start + 1;
        if (len<=1) return true;
        while (start<end) {
            if (s[start]!=s[end]) return false;
            start++; end--;
        }
        return true;
    }
    void printv(const vector<int>& v) {
        for (int elem : v)
            cout << elem << ", ";
        cout << endl;
    }
public:
    bool checkPartitioning(string st) {
        s = st;
        int n = s.length();
        vector<int> va(1,0), vb(1,n-1);
        for (int i=1; i<n-2; i++) {
            if (isPalin(0,i))
                va.push_back(i);
        }
        for (int i=n-2; i>=2; i--) {
            if (isPalin(i,n-1))
                vb.push_back(i);
        }
        //printv(va); printv(vb);
        for (int ia : va) {
            for (int ib : vb) {
                if (isPalin(ia+1, ib-1))
                    return true;
            }
        }
        return false;
    }
};