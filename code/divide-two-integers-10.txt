int divide(int dividend, int divisor){
    int sign = (dividend >> 31) ^ (divisor >> 31);
    int quo = 0, i = 0;
    
    uint32_t udd = (dividend == -2147483648) ? 2147483648 : abs(dividend);
    uint32_t udr = (divisor == -2147483648) ? 2147483648 : abs(divisor);
    if (udr > udd)
        return 0;

    uint32_t temp_udr;
    
    while (i < 31) {
        if (udr <= (((uint32_t)INT_MAX + 1) >> (30 - i))) {
            temp_udr = udr << (30 - i);
            while (udd >= temp_udr) {
                udd -= temp_udr;
                quo+= 1 << (30 - i);
                if (quo >= INT_MAX - (1 << (30 - i)))
                    if (udd >= temp_udr)
                        return sign ? (-1 * INT_MAX - 1) : (INT_MAX);
            }
        }
        i++;
    }
    
    return sign ? (-1 * quo) : (quo);
}