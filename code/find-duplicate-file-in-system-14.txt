public IList<IList<string>> FindDuplicate(string[] paths) {
    var map = new Dictionary<string, IList<string>>();
    foreach (var path in paths) {
        var split = path.Split(' ');
        var dir = split[0];
        foreach (var info in split.Skip(1)) {
            var leftParen = info.IndexOf('(');
            var file = info.Substring(0, leftParen);
            var content = info.Substring(leftParen + 1, info.Length - leftParen - 2);
            if (!map.TryGetValue(content, out var list)) {
                map.Add(content, list = new List<string>());
            }
            list.Add($"{dir}/{file}");
        }
    }
    return map.Values.Where(x => x.Count > 1).ToList();
}