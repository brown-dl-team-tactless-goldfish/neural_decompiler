int findJudge(int n, int** trust, int trustSize, int* trustColSize){
    if(n == 1){
        return 1;
    }
    int numOfEdgesToNode[n+1] ;//creatin an array to store number of edges
    //that go to each nodenodes 
    
    //Initializing the array to zero
    memset(numOfEdgesToNode , 0, (n+1)*sizeof(numOfEdgesToNode[0]));
    
    //puting the number of edges go to a spacific node in the array
    //Example : [1,3] we will increase the value in index 3 by one
    for(int i = 0 ; i < trustSize ; i++) {
        numOfEdgesToNode[trust[i][1]] += 1 ;
    }
    
    //checking if there is a node that had n-1 edges go to it. it may be the judge node
    for(int i = 0 ; i <= n ; i++) {
        if(numOfEdgesToNode[i] == n - 1 ) {
            
            //checking the second condition which is if the node has and edge that 
            //goes to other nodes which will prevent the node from being the judge

            for(int j = 0 ; j < trustSize ; j++) {
                if(trust[j][0] == i) {
                    return -1;
                }
            }
            return i;  //this node will be the judge

        }
    }
    return -1;
}