class Solution {
public:
    long long maximumSubarraySum(vector<int>& nums, int k) {
        unordered_map<int,int>m;
        long long sum=0;
        long long res=0;
        for(int i=0; i<k; i++)
        {
            sum+=nums[i];
            m[nums[i]]++; 
        }
        if(m.size()==k)
            res=sum;
        for(int i=k; i<nums.size(); i++)
        {
            sum+=nums[i]; 
            sum-=nums[i-k];
            m[nums[i]]++;
            m[nums[i-k]]--;
            if(m[nums[i-k]]==0)
                m.erase(nums[i-k]);
            if(m.size()==k)
                res=max(res,sum);
        }
        return res;
    }
};