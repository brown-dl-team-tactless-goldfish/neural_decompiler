#define pls pair<long long, int>

class Solution {
public:
    long long kSum(vector<int>& nums, int k) {
        long long sum = 0;
        int len = nums.size();
        for (int i = 0; i < len; ++i) {
            if (nums[i] > 0) {
                sum += nums[i];
            }
            nums[i] = (int)(abs(nums[i]));
        }
        auto cmp = [](const pls &lhs, const pls &rhs) {
            return lhs.first > rhs.first;
        };
        sort(nums.begin(), nums.end());
        priority_queue<pls, vector<pls>, greater<>> que;
        que.push({nums[0], 0});
        long long minus = 0;
        while (--k > 0) {
            auto front = que.top();
            que.pop();
            minus = front.first;
            if (front.second < len - 1) {
                que.push({front.first - nums[front.second] + nums[front.second + 1], front.second + 1});
                que.push({front.first + nums[front.second + 1], front.second + 1});
            }
        }
        return sum - minus;
    }
};