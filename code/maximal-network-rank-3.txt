class Solution {
public:
    int maximalNetworkRank(int n, vector<vector<int>>& roads) {
        
        unordered_map<int,unordered_set<int>> neighborsPerCity;
        vector<size_t>inDegrees(n);
        for(int i=0;i<roads.size();i++)
        {
            neighborsPerCity[roads[i][0]].emplace(roads[i][1]);
            neighborsPerCity[roads[i][1]].emplace(roads[i][0]);
            inDegrees[roads[i][0]]++;
            inDegrees[roads[i][1]]++;
        }
        size_t res{0};
        for(int i=0;i<n;i++)
        {
            for(int j=i+1;j<n;j++)
            {
                if(neighborsPerCity[i].count(j))
                {
                     res= max (res,inDegrees[i]+inDegrees[j]-1);
                }
                else
                {
                     res=max(res,inDegrees[i]+inDegrees[j]);
                } 
            }
        }
        return res;
    }
};