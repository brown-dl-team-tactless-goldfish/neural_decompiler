class Solution {
public:
    
    set<vector<int>>ans;
    
    void subsequence(int prev,int i,int n,vector<int>&a,vector<int>tem){
        
        if(i==n){
            if(tem.size()>1)
            ans.insert(tem);
            return;
        }
        
        int f=0;
        
        if(prev<=a[i])
        {
             f=1;
             tem.push_back(a[i]);
             subsequence(a[i],i+1,n,a,tem);
        }
        
        if(f==1)tem.pop_back();
        
        subsequence(prev,i+1,n,a,tem);
    }
    
    vector<vector<int>> findSubsequences(vector<int>& a) {
        
        vector<int>tem;
    
        subsequence(INT_MIN,0,a.size(),a,tem);
        
        vector<vector<int>> out;
        for(auto x:ans)out.push_back(x);
        

        
        return out;
    }
};