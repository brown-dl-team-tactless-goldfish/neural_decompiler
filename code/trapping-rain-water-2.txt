#define MAX(a, b) ((a) > (b) ? (a) : (b))
#define MIN(a, b) ((a) < (b) ? (a) : (b))

int trap(int* height, int heightSize)
{
    int *max_heights_l2r = calloc(heightSize, sizeof(int));
    int *max_heights_r2l = calloc(heightSize, sizeof(int));
    int i, water = 0;
    
    if (heightSize == 0)
        return 0;
    
    max_heights_l2r[0] = height[0];
    for (i = 1; i < heightSize; i++) {
        max_heights_l2r[i] = MAX(max_heights_l2r[i - 1], height[i]);
    }
    
    max_heights_r2l[heightSize - 1] = height[heightSize - 1];
    for (i = heightSize - 2; i >= 0; i--) {
        max_heights_r2l[i] = MAX(max_heights_r2l[i + 1], height[i]);
    }
    
    for (i = 1; i < heightSize - 1; i++) {
        int curr_h = MIN(max_heights_l2r[i - 1], max_heights_r2l[i + 1]) - height[i];
        if (curr_h > 0)
            water += curr_h;
    }

    free(max_heights_l2r);
    free(max_heights_r2l);
    return water;
}