class Solution {
public:
    int minTrioDegree(int n, vector<vector<int>>& edges) {
        
         vector<vector<int>> adjmatrix(n+1,vector<int>(n+1,0));
         // map<int,int> degree; 
          vector<int> degree(n+1,0);
        
         //make an adjacency matrix //and also maintain the degree in a vector
         for(int i=0;i<edges.size();i++){  
                  adjmatrix[edges[i][0]][edges[i][1]] = 1;
                  adjmatrix[edges[i][1]][edges[i][0]] = 1;
             
                  degree[edges[i][0]]++;
                  degree[edges[i][1]]++;
         }
        
         //calculate the indegree for the trio
         int ans=INT_MAX;
         
          for(int i=1;i<=n;i++){
             for(int j=i+1;j<=n;j++){
                 for(int k=j+1;k<=n;k++){
                     //there exists a trio
                     if(adjmatrix[i][j]==1 && adjmatrix[j][k]==1 && adjmatrix[k][i]==1){
                         ans = min(ans, degree[i]+degree[j]+degree[k]-6);
                     }
                 }
             }
         }
       return ans==INT_MAX?-1:ans;
    }
};