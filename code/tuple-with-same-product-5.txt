typedef long long int lld;
class Solution {
public:
    map<int, int> M;
    map<lld, lld> F;
    lld cal_fact(int v) {
        lld V = (lld)v;
        if (F.find(V) != F.end()) {
            return F[V];
        }
        lld res = 1;
        lld key = V;
        while (V > 0) {
            res *= V;
            V--;
        }
        F[key] = res;
        return res;
    }
    int tupleSameProduct(vector<int>& nums) {
        int len = nums.size();
        for (int i = 0; i < len; i++) {
            for (int j = i + 1; j < len; j++) {
                int key = nums[i] * nums[j];
                if (M.find(key) != M.end()) {
                    M[key]++;
                }
                else {
                    M[key] = 1;
                }
            }
        }
        int res = 0;
        for (pair<int, int> p : M) {
            if (p.second > 1) {
                int sel = 2;
                int tot = p.second;
                res += (int)(cal_fact(tot) / ((cal_fact(sel) * cal_fact(tot - sel))) * 8);
            }
        }
        return res;
    }
};