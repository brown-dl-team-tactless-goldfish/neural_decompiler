# define MOD 1000000007

class Solution {
public:
    int maxProfit(vector<int>& inventory, int orders) {
        std::sort(inventory.begin(), inventory.end(), std::greater<int>());
        inventory.emplace_back(0);
        uint64_t profit{0}, r{0}, diff;
        for(int i{0}, stop{(int)inventory.size()-1}; i < stop; ++i) {
            diff = (inventory[i] - inventory[i+1]) * (i+1);
            if(diff >= orders) {
                uint64_t l{(uint64_t)orders/(i+1)}, r{(uint64_t)orders%(i+1)};
                profit = (profit + (((i+1)*(((uint64_t)inventory[i]+inventory[i]-l+1))*l/2)%MOD + (r*((uint64_t)inventory[i]-l))%MOD)%MOD)%MOD;
                return profit;
            } 
            
            profit = (profit + ((i+1)*((((uint64_t)inventory[i]+inventory[i+1]+1)*((uint64_t)inventory[i]-inventory[i+1])/2)%MOD)%MOD)%MOD)%MOD;
            orders -= diff;
        }
        
        return (int)profit;
    }
};