
class TreeAncestor {
public:
    const static int MAX = 20;
    vector<vector<int>> table;
    
    TreeAncestor(int n, vector<int>& parent) {
        table.resize(MAX,vector<int>(n+1,-1));
        for(int j=0;j<n;++j){
            table[0][j]=parent[j];
        }
        
        for(int i=1;i<MAX;++i){
            for(int j=0;j<n;++j){
                if(table[i-1][j]!=-1) table[i][j] = table[i-1][table[i-1][j]];
            }
        }
    }
    
    int getKthAncestor(int node, int k) {
        int len = (int)log2(k);
        
        for(int i=0;i<=len;++i){
            if(k&(1<<i)){
                node = table[i][node]; 
                if(node==-1) return -1;
            }
        }
        return node;
    }
};

/**
 * Your TreeAncestor object will be instantiated and called as such:
 * TreeAncestor* obj = new TreeAncestor(n, parent);
 * int param_1 = obj->getKthAncestor(node,k);
 */