// time: O(n * k)
// space: O(k)

int maxProfit(int k, int* prices, int pricesSize){
  int* profits = (int*) malloc((k + 1) * sizeof(int));
  int* costs = (int*) malloc((k + 1) * sizeof(int));
  
  int i, j;
  for (i = 0; i <= k; i++) {
    profits[i] = 0;
    costs[i] = INT_MAX;
  }
  
  for (i = 0; i < pricesSize; i++) {
    int price = prices[i];
    for (j = 1; j <= k; j++) {
      costs[j] = fmin(costs[j], price - profits[j-1]);
      profits[j] = fmax(profits[j], price - costs[j]);
    }
  }
  
  int result = profits[k];
  free(profits);
  free(costs);
  
  return result;
}