class Solution {
public:
    int countPartitions(vector<int>& nums, int k) {
        long long mod = 1e9+7, sum = accumulate(nums.begin(), nums.end(), 0LL);
        vector<long long> pre(k), cur(k);
        pre[0] = cur[0] = 1;
        for(auto x:nums){
            for(int i=0;i<k;i++)
                if(x+i<k) cur[x+i] = (cur[x+i] + pre[i]) % mod;
            pre = cur;
        }
        long long res = 1;
        for(int i=0;i<nums.size();i++) res = res*2 % mod;
        for(int i=0;i<k;i++) res -= pre[i] * (sum - i < k ? 1 : 2); 
        return (res + k*mod)% mod;
    }
};
