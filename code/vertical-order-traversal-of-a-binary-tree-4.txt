def verticalTraversal(self, root: Optional[TreeNode]) -> List[List[int]]:
  def helper(root: Optional[TreeNode], row: int, col: int) -> List[int]:
    return helper(root.left, row + 1, col - 1) + [[col, row, root.val]] + helper(root.right, row + 1, col + 1) if root else []
  tmp = helper(root, 0, 0);

  ret = []
  prev_col = tmp[-1][0] + 1 # Ensure prev_col is different for first loop
  for col, _, val in sorted(tmp):
    if prev_col != col:
      ret.append([])
      prev_col = col
    ret[-1].append(val)
  return ret