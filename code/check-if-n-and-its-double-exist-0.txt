int cmp(const void* a, const void* b) {
    return *(const int*) a - *(const int*) b;
}

bool search(int* arr, int start, int end, int tar) {
    if(arr[start] == tar || arr[end] == tar) return true;
    while(start < end) {
        int mid = start + (end - start) / 2;
        if(arr[mid] == tar) {
            return true;
        } else if(arr[mid] < tar) {
            start = mid + 1;
        } else {
            end = mid;
        }
    }
    return false;
}

bool checkIfExist(int* arr, int arrSize) {
    qsort(arr, arrSize, sizeof(int), cmp);
    int idx = -1;
    for(int i = 0; i+1 < arrSize; i++) {
        int tar = 2 * arr[i], start = i+1, end = arrSize-1;
        if(arr[i] < 0) idx = i;
        if(arr[i] >= 0 && search(arr, start, end, tar)) return true;
    }
    for(int i = idx; i >= 0; i--) {
        int tar = 2 * arr[i], start = 0, end = i;
        if(search(arr, start, end, tar)) return true;
    }
    return false;
}