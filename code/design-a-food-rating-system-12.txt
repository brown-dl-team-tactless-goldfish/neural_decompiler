class FoodRatings {

private:

map<string, map<int, set<string>>> mp;
unordered_map<string, string> c;
unordered_map<string, int> r;
public:
    FoodRatings(vector<string>& foods, vector<string>& cuisines, vector<int>& ratings) {
            for(int i = 0; i < foods.size(); i++){
                mp[cuisines[i]][ratings[i]].insert(foods[i]);
                c[foods[i]] = cuisines[i];
                r[foods[i]] = ratings[i];
            }
    }
    
    void changeRating(string food, int newRating) {
        string cuisine = c[food];
        int rating = r[food];
        r[food] = newRating;
        mp[cuisine][rating].erase(food);
        if(mp[cuisine][rating].size() == 0) mp[cuisine].erase(rating);
        mp[cuisine][newRating].insert(food);
    }
    
    string highestRated(string cuisine) {
        auto it = mp[cuisine].rbegin();
        return *(it->second.begin());
    }
};

/**
 * Your FoodRatings object will be instantiated and called as such:
 * FoodRatings* obj = new FoodRatings(foods, cuisines, ratings);
 * obj->changeRating(food,newRating);
 * string param_2 = obj->highestRated(cuisine);
 */