class Solution {
public:
    vector<int> ans;
    int maxi;
    void solve(int k,vector<int>& alice, vector<int>& temp, int idx, int curr)
    {
        if(k<0) return;
        if(idx == alice.size() && curr>maxi)
        {
            ans = temp;
            maxi = curr;
        }
        if(idx>=alice.size()) return;
        temp.push_back(0);
        solve(k,alice,temp,idx+1,curr);
        temp.pop_back();
        if(k>=alice[idx]+1)
        {
            temp.push_back(alice[idx]+1);
            solve(k-alice[idx]-1, alice,temp,idx+1,curr+idx);
            temp.pop_back();
        }
    }
    vector<int> maximumBobPoints(int arrows, vector<int>& alice) {
        vector<int> temp;
        maxi = 0;
        solve(arrows,alice,temp,0,0);
        int total = 0;
        for(auto it:ans)
            total += it;
        if(total < arrows)
            ans[ans.size()-1] += arrows-total;
        return ans;
    }
};