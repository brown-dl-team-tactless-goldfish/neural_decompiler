/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    // returns the sum of nodes.
    int findSum(TreeNode*root){
        if(!root)return 0 ;
        if(!root->left && !root->right)return root->val;
        
        int sum = root->val;
        sum += findSum(root->left);
        sum += findSum(root->right);
        return sum;
    }
    
    void dfs(TreeNode*root, int &curr){
        if(!root)return ;
        
        curr += abs(findSum(root->left) - findSum(root->right));
        
        dfs(root->left, curr);
        dfs(root->right, curr);
        return ;
    }
    
    int findTilt(TreeNode* root) {
        int ans = 0;
        // dfs2(root);
        dfs(root, ans);
        return ans;
    }
};