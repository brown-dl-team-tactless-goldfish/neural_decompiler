    int orderOfLargestPlusSign(int n, vector<vector<int>>& mines) {
        vector<vector<int>> dp(n, vector<int>(n, 0));
        
        set<pair<int, int>> banned;
        for (vector<int>& mine : mines) {
            banned.insert({mine[0], mine[1]});
        }
        
        int maxorder = 0;
        int count = 0;
        
        for(int r = 0; r < n; r++){
            count = 0;
            for(int c = 0; c < n; c++){
                count = banned.count({r, c}) ? 0 : count + 1;
                dp[r][c] = count;
            }           
            
            count = 0;
            for (int c = n - 1; c >= 0; c--) {
                count = banned.count({r, c}) ? 0 : count + 1;
                dp[r][c] = min(dp[r][c], count);
            }
        }

        // Top to Bottom and Bottom to Up
        for (int c = 0; c < n; c++) {
            count = 0;
            for(int r = 0; r < n; r++){
                count = banned.count({r, c}) ? 0 : count + 1;
                dp[r][c] = min(dp[r][c], count);
            }
            
            count = 0;
            for (int r = n - 1; r >= 0; r--) {
                count = banned.count({r, c}) ? 0 : count + 1;
                dp[r][c] = min(dp[r][c], count);
                maxorder = max(maxorder, dp[r][c]);
            }
            
        }

        return maxorder;
    }