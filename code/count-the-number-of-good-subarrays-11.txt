public class Solution 
{
    public long CountGood(int[] nums, int k)
    {
        int n = nums.Length;
        long result = 0;
        Dictionary<int, int> window = new Dictionary<int, int>();
        int windowGoodCount = 0;
        int left = 0;
        for (int right = 0; right < nums.Length; right++)
        {
            window.TryAdd(nums[right], 0);
            int numFreq = ++window[nums[right]];
            windowGoodCount += (numFreq - 1);
            while (windowGoodCount >= k)
            {
                result += n - right;
                numFreq = --window[nums[left]];
                windowGoodCount -= numFreq;
                left++;
            }
        }
        return result;
    }
}