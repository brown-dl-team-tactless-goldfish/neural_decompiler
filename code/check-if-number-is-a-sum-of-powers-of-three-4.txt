class Solution:
    def checkPowersOfThree(self, n: int) -> bool:
        print("n = ", n)

        power_of_three = [1]

        i = 0

        curN = 3 ** i

        while (curN <= n):
            print("curN = ", curN)
            curN *= 3
            if (curN <= n):
                power_of_three.append(curN)

        print("power_of_three = ", power_of_three)

        len_power_of_three = len(power_of_three)

        self.res = False

        def helper(curIdx, curSet, curSum):
            if (self.res == True):
                return

            if (curSum == n):
                self.res = True

            for idx in range(curIdx, len_power_of_three):
                helper(idx+1, curSet+[power_of_three[idx]],
                       curSum + power_of_three[idx])

        helper(0, [], 0)
        print("self.res = ", self.res)
        
        return self.res