int partition(int left,int right,int*nums){
    int pivot = nums[right-1];
    int j=left;
    for(int i=left;i<right;i++){
        if(nums[i]<=pivot){
            int temp = nums[i];
            nums[i] = nums[j];
            nums[j++] = temp;
        }
    }
    return j-1;
}
void quickSort(int left,int right,int*nums){
    if(left>=right){return;}
    int mid = partition(left,right,nums);
    quickSort(mid+1,right,nums);
    quickSort(left,mid,nums);
}

int maxCoins(int* piles, int pilesSize){
    int n=pilesSize;
    if(n <= 3) {
            return piles[1];
        }
    
    quickSort(0,pilesSize,piles);
    int ans = 0, i = 0, j = pilesSize - 1;
         while(i < j && (i < n/2 - 1)) {
            ans += piles[j - 1], i++, j-=2;
        }
        return ans;
    }
    