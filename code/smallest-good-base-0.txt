#include <stdlib.h>
void check_smallbase(long in, long div, int *ret) {
    ldiv_t ans = ldiv(in, div);

    if (ans.rem != 1) {
        *ret = 0;
        return;
    }
    if (ans.quot == 0) {
        *ret = 1;
        return;
    } else
        check_smallbase(ans.quot, div, ret);
}

char* smallestGoodBase(char* n) {
#define MAX_OUT_LEN (32)
    long int in = atol(n), i = 0;
    char *ret = malloc(MAX_OUT_LEN);
    int rev = 0;

    for (i = 2; i < in; i++) {
        check_smallbase(in, i, &rev);
        if (rev)
            break;
    }
    snprintf(ret, MAX_OUT_LEN, "%ld", i);
    return ret;
#undef MAX_OUT_LEN
}