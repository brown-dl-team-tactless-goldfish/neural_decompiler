class Solution {
public:
    bool canReach(vector<int>& arr, int start) {
        queue<int> q{{start}};
        unordered_set<int> visited{start};        
        while(!q.empty()) {                       
            auto cur = q.front(); q.pop();
            if(arr[cur] == 0) return true;
            for(int i = -1; i <= 1; i+=2){
                int next = cur + i * arr[cur];
                if(next >=0 && next < arr.size() && !visited.count(next)){
                    q.push(next);
                    visited.insert(next);
                }
            }
        }                    
        return false;
    }
};