char * sortString(char * s){
	int alpha[123][1] = {0, 0}; // ASCII a = 97; b = 98, c = 99, z = 122;
	int i = 96;
	int c = 0, len = 0;

	while (s[len]) 				 // if input is 'aaaabbbbcccc' then after all steps we get:
		alpha[s[len++]][0] += 1; // [97][0] = 4 (4x 'a'), [98][0] = 4 (4x 'b') and [99][0] = 4 (4x 'c')

	while (len-- >= 0){
		while (++i < 123 && s[c]){	//--> in first while we go from smallest to largest, overwriting s
			if (alpha[i][0] > 0)
				s[c++] = i; 		// i == 97 == 'a' in ASCII; we write 'a';
			alpha[i][0]--;      	// 97 cell contains '4'. We increase 97 to '3'
		} 
		while (--i >= 97 && s[c]){	//--> in second while we go from largest to smallest, overwriting s
			if (alpha[i][0] > 0)
				s[c++] = i;		
			alpha[i][0]--;			// i(97) contains '3', after this step we write 'a' and increase 97 to '2';
		}	//after the first waves (smallest->largest and largest->smallest) we check again!
	}
	return s;
}