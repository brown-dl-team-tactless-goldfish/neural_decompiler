class Solution {
typedef long long ll;
int mod = 1e9+7;    
private:
    ll f(int ind,string &s,char first,char second,int len,vector<vector<vector<vector<ll>>>> &dp){
        if(len == 5){return 1;}
        if(ind >= s.size()){return 0;}
        if(dp[ind][first-'0'][second - '0'][len] != -1){return dp[ind][first-'0'][second - '0'][len];}

        ll w1 = 0;
        ll w2 = 0; 
        ll w3 = 0; 
        ll w4 = 0; 
        ll w5 = 0; 
        if(len == 0){
            w1 = f(ind+1,s,s[ind],second,len+1,dp)% mod;
        }

        if(len == 1){
            w2 = f(ind+1,s,first,s[ind],len+1,dp)% mod;
        }

        if(len == 2){
            w3 = f(ind+1,s,first,second,len+1,dp)% mod;
        }

        if(len == 3 && s[ind] == second){
            w4 = f(ind+1,s,first,second,len+1,dp)% mod;
        }

        if(len == 4 && s[ind] == first){
            w5 = f(ind+1,s,first,second,len+1,dp)% mod;
        }
        return dp[ind][first-'0'][second - '0'][len] = w1 + w2 + w3 + w4 + w5 + f(ind+1,s,first,second,len,dp) % mod;
    }

public:
    int countPalindromes(string s) {
        int n = s.size();
        vector<vector<vector<vector<ll>>>> dp(n+1,vector<vector<vector<ll>>>(9+1,vector<vector<ll>>(9+1,vector<ll>(5+1,-1))));
        return f(0,s,'1','1',0,dp)% mod;
    }
};