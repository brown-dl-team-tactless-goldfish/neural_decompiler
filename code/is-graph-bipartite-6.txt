class Solution {
public:
    bool helper(vector<vector<int>>& graph, vector<int>& color, int start, int curr_clr) {
        color[start] = curr_clr;
        for(int edge: graph[start]) {
            if(color[edge] == -1 && not helper(graph, color, edge, 1 - curr_clr)) return false;
            else if(color[edge] == curr_clr) return false;
        }
        return true;
    }
    
    bool isBipartite(vector<vector<int>>& graph) {
        int n = graph.size();
        vector<int> color(n, -1);
        for(int i = 0; i < n; i++) {
            if(color[i] == -1 && not helper(graph, color, i, 0)) return false; // {start, color}
        }
        return true; 
    }
};