class Solution:
    def validSquare(self, p1: List[int], p2: List[int], p3: List[int], p4: List[int]) -> bool:
        points = [p1, p2, p3, p4]
        points.sort()
        p1 = points[0]
        p2 = points[1]
        p3 = points[2]
        p4 = points[3]
        
        print ("p1 = ", p1, " p2 = ", p2, " p3 = ", p3, " p4 = ", p4)
        
        
        p1p2 = (p1[0] - p2[0])*(p1[0] - p2[0]) + (p1[1] - p2[1])*(p1[1] - p2[1])
        p1p3 = (p1[0] - p3[0])*(p1[0] - p3[0]) + (p1[1] - p3[1])*(p1[1] - p3[1])
        p4p2 = (p4[0] - p2[0])*(p4[0] - p2[0]) + (p4[1] - p2[1])*(p4[1] - p2[1])
        p4p3 = (p4[0] - p3[0])*(p4[0] - p3[0]) + (p4[1] - p3[1])*(p4[1] - p3[1])

        p1p4 = (p1[0] - p4[0])*(p1[0] - p4[0]) + (p1[1] - p4[1])*(p1[1] - p4[1])
        
        if p1p2 == 0:
            return False
            
        if (p1p2 == p1p3 and p1p2 == p4p2 and p1p2 == p4p3 and p1p2 + p1p3 == p1p4):
            return True
        else:
            return False