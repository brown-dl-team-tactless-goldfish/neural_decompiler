class Solution {
public:
    int n;
    int minMalwareSpread(vector<vector<int>>& g, vector<int>& B) {
        n = g.size();
        int result = INT_MAX, index = -1;
        sort(B.begin(), B.end());
        for(int i = 0; i < B.size(); i++){
            int ans = helper(B[i], g, B);
            if(ans < result){
                result = ans;
                index = i;
            }
        }
        return B[index];
    }
    int counter(int cur, vector<vector<int>>& g, vector<bool> &vis){
        if(vis[cur]) return 0;
        vis[cur] = true;
        int sum = 1;
        for(int i = 0; i < n; i++)
            if(g[cur][i])
                sum += counter(i, g, vis);
        return sum;
    }
    int helper(int cur, vector<vector<int>>& g, vector<int>& B){
        int count = 0;
        vector<bool> vis(n);
        vis[cur] = true;
        for(auto& a: B){
            if(a != cur)
                count += counter(a, g, vis);
        }
        return count;
    }
};