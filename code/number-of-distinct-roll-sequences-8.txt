
 int mod = 1e9+7;
    long long getans(int n, int d1,int d2,vector<vector<int>>& patt,vector<vector<vector<long long>>>& vec){
        if(n == 0)return 1;
        
        if(d1!=-1 && d2!=-1 && vec[n][d1][d2]!=-1)return vec[n][d1][d2];
        
        long long count = 0;
        
        if(d1 == -1){
           
            for(int i =1;i<=6;i++){
            count = (count + getans(n-1,i,d1,patt,vec))%mod;
            }
           
        }
        else{
            
            for(int i=0;i<patt[d1].size();i++){
                if(d2 == patt[d1][i])continue;
                count = (count+getans(n-1,patt[d1][i],d1,patt,vec))%mod;   
            }   
        }
         if(d1!=-1 && d2!=-1 )vec[n][d1][d2] = count;
        return count;
        
        
    }
    
    int distinctSequences(int n) {
        
        vector<vector<int>> patt{{0},{2,3,4,5,6},{1,3,5},{1,2,4,5},{1,3,5},{1,2,3,4,6},{1,5}};
    
        vector<vector<vector<long long>>> vec(n+1, vector<vector<long long>>(7,vector<long long>(7,-1)));    
        
        long long ans = getans(n,-1,-1,patt,vec);
        return ans;
        
    }