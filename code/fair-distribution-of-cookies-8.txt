class Solution {
public:
    int res;
    void go(int i, int k, int mask, int val, int n, vector <int> &sum) {
      if (i == k) {
        // Make sure all of The cookies are finished.
        if (mask == 0) {
          res = min(res, val);
        } 
        return;
      }
      /*
        Iterate thrrugh all the subsets of cuurent avaialbe cookies
        an assgn to ith person
        And try all the possibiltes
      */
      for (int nmask = 1; nmask < (1 << n); nmask++) {
        if ((nmask & mask) == nmask) {
          go(i + 1, k, mask^(nmask), max(val, sum[nmask]), n, sum);
        }
      }
      return;
    }
    int distributeCookies(vector<int>& a, int k) {
        int n = a.size();
        vector <int> sum(1 << n);
        /*
          Calcaulte the sum of cookies for all the possible susbsets 
          given.
        */
        for (int mask = 0; mask < (1 << n); ++mask) {
          for (int i = 0; i < n; ++i) {
            if (mask >> i & 1) {
              sum[mask] += a[i];
            }
          }
        }
        res = 2e9;
        go(0, k, (1 << n) - 1, 0, n, sum);
        return res;
    }
};