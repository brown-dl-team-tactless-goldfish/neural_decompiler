class Solution {
public:
    int sumSubarrayMins(vector<int>& arr) {
        int n = arr.size();
        vector<int> left(n,0);
        vector<int> right(n,0);
        stack<int> sl, sr;
        for(int i = 0; i < n; i++)
        {
            while(!sl.empty() && arr[sl.top()] > arr[i])
            {
                sl.pop();
            }
            if(sl.empty())
                left[i] = i+1;
            else
                left[i] = i-sl.top();
            sl.push(i);
        }
        for(int i = n-1; i >= 0; i--)
        {
            while(!sr.empty() && arr[sr.top()] >= arr[i])
                sr.pop();
            if(sr.empty())
                right[i] = n-i;
            else
                right[i] = sr.top()-i;
            sr.push(i);
        }
        int ans = 0, mod = 1e9+7;
        for(int i = 0; i < n; i++)
        {
            ans = (ans + (long long)arr[i]*(long long)left[i]*(long long)right[i])%mod;
        }
        return ans;
    }
};