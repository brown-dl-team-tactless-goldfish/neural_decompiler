/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
/*
    the q.size() variable is of importance to determine the change in level of nodes. The for loop will run for the number of elements within a particular level.
*/
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
  
        std::vector<std::vector<int>> a;
        if (!root)
            return a;

        std::vector <int> temp;
        std::queue<struct TreeNode*> q;
        int len = 0;
        q.push(root);
        
        while (!q.empty()) {
            len = q.size();
            for (int i = 0; i < len; i++) {
                root = q.front();
                q.pop();
                temp.emplace_back(root->val);
                
                if (root->left)
                    q.push(root->left);
                if (root->right)
                    q.push(root->right);
            }
            a.emplace_back(temp);
            temp.clear();
        }
        
        return a;
    }
};