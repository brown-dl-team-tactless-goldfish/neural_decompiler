class Solution {
public:
    const int  mod = 1e9+7;
    int dp[(int)1e3+5][(int)1e3+5][3];
    int  numberOfSets(int n, int k) {
        memset(dp,-1,sizeof(dp));
       return solve( 0 , 0 , 0 , k , n ) ; 
    }
    int  solve(int inter , int cur_k , bool f , int k , int n ){
        if( cur_k == k ){
            return 1 ; 
        }
        if( inter >= n ) return 0 ; 
        int &ans = dp[inter][cur_k][f] ;
        if(~ans) return ans ;
        ans = 0 ;
        if( f == 0 )
        {
            ans = ( ans % mod + solve(inter + 1 , cur_k , 1 , k , n ) ) %mod ;
            ans = (ans%mod + solve(inter + 1 , cur_k , 0 , k , n )  ) %mod;
        }
        else
        {
            ans = (ans%mod + solve(inter  , cur_k + 1 , 0 , k , n )  )%mod;
            ans = (ans %mod+solve(inter + 1  , cur_k , 1 , k , n ) )%mod    ;
        }
        return ans  ;
    }
};