class Solution {
public:
    int mod = (1e9+7);
    int threeSumMulti(vector<int>& A, int target) {
        int count[101];
        memset(count, 0, sizeof(count));
        for(int a : A) count[a]++;
        int ans = 0;
        for(int i = 0; i < 101; i++){
            for(int j = 0; j < 101; j++){
                int k = target - i - j;
                if(k < 0 or k >= 101 or count[k] == 0) continue;
                if(i < j and j < k){
                    ans += (count[i] * count[j] * count[k]);
                }
                else if(i == j and j < k){
                    ans += count[i]*(count[i]-1)/2*count[k];
                }
                else if(i < j and j == k){
                    ans += count[i]*count[j]*(count[j]-1)/2;
                }
                else if(i == j and j == k){
                    ans =  (ans + ((long)count[i]*(count[i] - 1)*(count[i] - 2)/6) % mod ) % mod;
                }
            }
        }
        return ans % mod;
    }
};