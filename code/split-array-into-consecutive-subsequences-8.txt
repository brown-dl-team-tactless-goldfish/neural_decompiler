class Solution {
public:
    bool isPossible(vector<int>& nums) {
        unordered_map<int,int>mp;
        unordered_map<int,int>need;
        for(int num:nums)
            mp[num]++;
        for(auto n:nums)
        {
            if(mp[n]==0)
                continue;
            else
            {
                if(need[n]>0)
                {
                    mp[n]--;
                    need[n+1]++;
                    need[n]--;
                }
                else
                {
                    if(mp[n+1]&&mp[n+2])
                    {
                        mp[n]--;
                        mp[n+1]--;
                        mp[n+2]--;
                        need[n+3]++;
                    }
                    else
                        return false;
                }
            }
        }
        return true;
    }
};

Time Complexity: O(2n)
Space complexity: O(2n)