   /* int res = 0, n = nums.size();
    
    for (int i = 0; i < n; i++)
    {
        for (int j = i+1; j < n; j++)
        {
            for (int k = j+1; k < n; k++)
            {
                for (int l = k+1; l < n; l++)
                {
                    if (nums[i] + nums[j] + nums[k] == nums[l]) res++;
                    
                }
            }
        }
    }

    return res;*/
    
    unordered_map<int,int> mp;
    
    int count = 0;
    
    for(int a=1; a<nums.size(); a++)
    {
        for(int b=0; b<a; b++)
        {
            mp[nums[a]+nums[b]]++;
        }
        
        int c = a+1;
        
        for(int d = a+2; d<nums.size(); d++)
        {
           // count += mp[nums[d] - nums[c]];
            
            count+=mp[nums[d]-nums[c]];
        }
    }
    
    return count;
}