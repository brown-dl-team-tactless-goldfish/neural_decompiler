    if(root->val % 2 != 1) return false;
    
    queue<TreeNode *> q,p;
    q.push(root);
    int c = 0, pre = -1;
    while(!q.empty())
    {            
        int n = q.size(),pre = -1;
        
        while(n-- > 0)
        {
        TreeNode* t = q.front(); q.pop();
        if(c % 2 == 0)
        {
            if(t->val % 2 == 0) return false;
            
        	if(pre == -1)  
                  pre = t->val;
              else {
                  if(pre < t->val)
                  {
                  pre = t->val;
                  }
                  else
                  return false;
              }
        }
        else{
            
            if(t->val % 2 == 1) return false;
            
        	if(pre == -1) 
                  pre = t->val;
              else {
                  if(pre > t->val)
                  {
                  pre = t->val;
                  }
                  else
                  return false;
              }
        }
        if(t->left) q.push(t->left);
        if(t->right) q.push(t->right);
        }
        c++;
    }
    
    return true;
}