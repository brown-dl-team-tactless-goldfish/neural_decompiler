    string removeDuplicateLetters(string s) {
        string res;        
        unordered_map <char, int> counts;
        for (char c : s)
            counts[c] ++;        
        
        
        for (auto& c : s){
            if (--counts[c] == 0)
                counts.erase(c);                
     
            /*If the character is already done, we can just continue*/
            if (count(res.begin(), res.end(), c) > 0)
                continue;
            
            /*
            Each candidate tries to prove to be a better candidate
            It tries to remove all others which were bigger than him
            
            BUT, we can only remove a bigger candidate if we know that 
            he can occur again in future, as we have to include everyone only once (eg, bcbca)
            
            */
            while (!res.empty() && res.back() > c && (counts.find(res.back()) != counts.end() && counts[res.back()] >= 1))
                res.pop_back();
            
            res.push_back(c);
        }
        return res;
    }
