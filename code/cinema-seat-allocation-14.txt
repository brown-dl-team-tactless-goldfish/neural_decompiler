class Solution {
public:
    int maxNumberOfFamilies(int n, vector<vector<int>>& r) {
        int m = r.size(); 
        int mx = 0 ; 
        for(int i = 0 ; i < r.size() ; i++)
        {
          
            mx = max(mx , r[i][0]);
        }
        
        vector<vector<int>>seat(mx+1,vector<int>(11,0));
        
        for(int i = 0 ; i < r.size() ; i++)
        {
            seat[r[i][0]][r[i][1]] = 1 ;
           
        }
        long long ans = 0 ; 
        for(int i = 1 ; i <= mx ; i++)
        {
            
        // case 1 : 2 3 4 5
            if(seat[i][2] == 0 && seat[i][3] == 0 && seat[i][4] == 0 && seat[i][5] == 0)
            {
                ans += 1 ; 
                seat[i][2] = 1 ; seat[i][3]=1 ; seat[i][4]=1 ; seat[i][5] = 1 ; 
            }
        // case 2 : 4 5 6 7
             if(seat[i][4] == 0 && seat[i][5] == 0 && seat[i][6] == 0 && seat[i][7] == 0)
            {
                ans += 1 ; 
                seat[i][4] = 1 ; seat[i][5]=1 ; seat[i][6]=1 ; seat[i][7] = 1 ; 
            }
        // case 3 : 6 7 8 9
            if(seat[i][6] == 0 && seat[i][7] == 0 && seat[i][8] == 0 && seat[i][9] == 0)
            {
                ans += 1 ; 
                seat[i][6] = 1 ; seat[i][7]=1 ; seat[i][8]=1 ; seat[i][9] = 1 ; 
            }
        }
        ans += (n-mx)*2;
        return ans;
    }
};