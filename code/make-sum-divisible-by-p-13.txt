class Solution {
public:
    int minSubarray(vector<int>& nums, int p) {
        int n = nums.size();
        int res = INT_MAX;
        int sum = 0;
        for(int i = 0;i<n;i++) sum = (sum+nums[i])%p;
        int cur;
        int prev;
        map<int,int>mp;
        for(int i = 0;i<n;i++){
            if(i>0) cur = (prev+nums[i])%p;
            else cur = nums[i]%p;
            mp[cur] = i;
            int sum_1 = sum-cur;
            if(sum_1 < 0) sum_1+=p;
            int k = p-sum_1;
            if(k >= p) k%=p;
            if(mp.count(k)){
                res = min(res,i-mp[k]);
            }
            else if(sum_1%p == 0 && i < n-1){
                res = min(res,i+1);
            }
            prev = cur;
        }
        return res == INT_MAX ? -1:res;
    }
};