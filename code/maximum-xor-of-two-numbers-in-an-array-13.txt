public class Solution
{
    // a ^ b = c
    // a ^ c = b
    public int FindMaximumXOR(int[] nums)
    {
        if (nums.Length == 0)
            return 0;

        HashSet<int> prefixes = new();
        int mask = 0,
            maxXor = 0,
            newMaxXor;

        for (int i = 30; i >= 0; i--)
        {
            // 100000 110000 111000 ...
            mask |= (1 << i);

            // get prefixes from nums
            // mask & num = prefix
            // 111100 & 011001 = 011000
            foreach (int num in nums)
                prefixes.Add(num & mask);

            // New possible maxXor
            // 011000 | 0001000 = 0111000
            newMaxXor = maxXor | (1 << i);

            // newMaxXor ^ prefix
            // 0111000 ^ 011000 = 0001000

            // Try to find number that contais "newMaxXor" last '1' bit
            foreach (int prefix in prefixes)
                if (prefixes.Contains(prefix ^ newMaxXor))
                {
                    maxXor = newMaxXor;
                    break;
                }

            prefixes.Clear();
        }

        return maxXor;
    }
}