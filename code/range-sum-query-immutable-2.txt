typedef struct 
{
    int *array;
} NumArray;


NumArray* numArrayCreate(int* nums, int numsSize) 
{
    NumArray *num_array;
    num_array = malloc(sizeof(NumArray));
    num_array->array = malloc(sizeof(int) * (numsSize + 1));
    num_array->array[0] = 0;
    for(int i = 0; i < numsSize; i++)
    {
        num_array->array[i + 1] = num_array->array[i] + nums[i];
    }
    return num_array;
}

int numArraySumRange(NumArray* obj, int i, int j) 
{
         return obj->array[j+1] - obj->array[i];
}

void numArrayFree(NumArray* obj) 
{
    free(obj->array);
    free(obj);
}
