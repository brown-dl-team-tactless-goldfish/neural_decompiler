long long minimalKSum(vector<int>& v, int k) {
        long long int ans=0;
        v.push_back(0);
        sort(v.begin(),v.end());
        for(int i=1;i<v.size();i++){
            if(v[i]==v[i-1]) continue;
            long long int diff=min(k,v[i]-v[i-1]-1);
            long long int f=v[i-1]; long long int s=f+diff;
            ans += ((s*(s+1))/2)-((f*(f+1))/2);
            k=k-diff;
            if(k==0) break;
        }
       if(k){
           long long int f=v[v.size()-1]; long long int s=f+k;
            ans += ((s*(s+1))/2)-((f*(f+1))/2);
       }
    return ans;
    }