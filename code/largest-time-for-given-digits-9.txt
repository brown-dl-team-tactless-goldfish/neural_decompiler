class Solution {
    void perm(int i, vector<int>& arr, string &ans, int &a) {
        if(i == arr.size() - 1) {
            int hh = arr[0] * 10 + arr[1], mm = arr[2] * 10 + arr[3];
            if(hh >= 0 && hh < 24 && mm >= 0 && mm < 60) {
                string d = to_string(arr[0]) +  to_string(arr[1]) + to_string(arr[2]) +  to_string(arr[3]);
                int m = stoi(d);
                if(a < m) {
                    a = m;
                    ans = to_string(arr[0]) +  to_string(arr[1]) + ":" + to_string(arr[2]) +  to_string(arr[3]);
                }
            }
            return;
        }
        for(int j=i; j<4; j++) {
            swap(arr[i], arr[j]);
            perm(i + 1, arr, ans, a);
            swap(arr[i], arr[j]);
        }
    }
    
public:
    string largestTimeFromDigits(vector<int>& arr) {
        string ans;
        int a = INT_MIN;
        perm(0, arr, ans, a);
        return ans;
    }
};