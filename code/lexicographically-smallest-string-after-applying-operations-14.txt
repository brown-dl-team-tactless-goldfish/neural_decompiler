class Solution {
public:
    string findLexSmallestString(string s, int a, int b) {
        unordered_set<string> st;
        
        unordered_map<char, char> mp;
        for(int i=0; i<=9; i++) {
            char t = '0' + (i + a) % 10;
            mp['0' + i] = t;
        }
        
        queue<string> q;
        q.push(s);
        st.insert(s);
        string ans = s;
        while(!q.empty()) {
            string cur = q.front();
            q.pop();
            if(cur < ans) ans = cur;
            
			// Add operation.
            string add = cur;
            for(int i=1; i<add.size(); i+= 2) {
                add[i] = mp[add[i]];
            }
            if(!st.count(add)) {
                st.insert(add);
                q.push(add);
            }
            
			// Rotate operation.
            string shift = cur.substr(cur.size() - b) + cur.substr(0, cur.size() - b);
            if(!st.count(shift)) {
                st.insert(shift);
                q.push(shift);
            }
        }
        
        return ans;
    }
};