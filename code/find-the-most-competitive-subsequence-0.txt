/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* mostCompetitive(int* nums, int numsSize, int k, int* returnSize){
    *returnSize = k ;
    int n = numsSize ;
    int* stk = malloc(n * sizeof(int)) ;
    int s_idx = 0 ;
    stk[s_idx] = nums[0] ;
    s_idx++ ;
    for(int i = 1; i < n; i++ ){
        while(s_idx > 0 && nums[i] < stk[s_idx-1] && ((n-i) + s_idx) > k)
            s_idx-- ;
        stk[s_idx] = nums[i] ;
        s_idx++ ;

    }
    return stk ;

}