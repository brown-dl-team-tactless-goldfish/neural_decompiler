/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */

struct TreeNode *buildNode(int val){
    
    struct TreeNode *node;
    node = (struct TreeNode *)malloc(sizeof(struct TreeNode));
    node->val = val;
    node->left = NULL;
    node->right = NULL;
    return node;

}

struct TreeNode* buildBST(int *nums, int low, int high){
    
    if ( low == high){
        struct TreeNode *node;
        node = buildNode(nums[high]);
        return node;
    }
    if ( high - low == 1){
        struct TreeNode *root, *child;
        root = buildNode(nums[high]);
        child = buildNode(nums[low]);
        root->left = child;
        return root;
    }
    int mid = low + ( (high-low) >> 1);
    struct TreeNode *root;
    root = buildNode(nums[mid]);
    root->left = buildBST(nums, low, mid-1);
    root->right = buildBST(nums, mid+1, high);
    return root;
}


struct TreeNode* sortedArrayToBST(int* nums, int numsSize){
    if ( numsSize == 0){
        return NULL;
    }
    struct TreeNode *root;
    root = buildBST(nums, 0, numsSize -1);
    return root;
    

}
