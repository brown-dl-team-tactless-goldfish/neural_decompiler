#define max(a, b) ((a) > (b) ? (a) : (b))

void dfs(const char* s, int size, int* idx, int level, int len, int* res)
{
	while ((*idx) < size) {
		int lv = 0;
		while ((*idx) < size && s[(*idx)] == '\t') {
			(*idx)++, lv++;
		}

		if (lv < level) {
			*idx -= lv;
			return;
		}

		bool file = false;
		int l = len;
		while ((*idx) < size && s[(*idx)] != '\n') {
			(*idx)++, l++;
			file |= s[(*idx)] == '.';
		}
		++(*idx);
		if (file) {
			*res = max(l, *res);
		}
		dfs(s, size, idx, level + 1, l + 1, res);
	}
}

int lengthLongestPath(char* s) {
	int res = 0, idx = 0;
	dfs(s, strlen(s), &idx, 0, 0, &res);
	return res;
}
