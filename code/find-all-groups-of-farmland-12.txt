class Solution {
public:
    int dx[4] = {-1,1,0,0};
    int dy[4] = {0,0,1,-1};
    bool isValid(int x,int y,int n,int m,vector<vector<int>>& vis,
    vector<vector<int>>& land)
    {
        if(x>=0 && y>=0 && x<n && y<m && !vis[x][y] && land[x][y]==1)
        return true;
        return false;
    }
    void dfs(int x,int y,vector<vector<int>>& vis,vector<vector<int>>& land,int &r,int &c)
    {
        int n = land.size();
        int m = land[0].size();
        vis[x][y] = 1;
        for(int i=0;i<4;i++)
        {
            int newX = x+dx[i];
            int newY = y+dy[i];
            if(isValid(newX,newY,n,m,vis,land))
            {
                r = max(r,newX);
                c = max(c,newY);
                dfs(newX,newY,vis,land,r,c);
            }
        }
    }
    vector<vector<int>> findFarmland(vector<vector<int>>& land) {
        int n = land.size();
        int m = land[0].size();
        vector<vector<int>> ans;
        vector<vector<int>> vis(n,vector<int>(m,0));
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(land[i][j]==1 && !vis[i][j])
                {
                    vector<int> tmp;
                    tmp.push_back(i);
                    tmp.push_back(j);
                    int r = i,c = j;
                    dfs(i,j,vis,land,r,c);
                    tmp.push_back(r);
                    tmp.push_back(c);
                    ans.push_back(tmp);
                }
            }
        }
        return ans;
    }
};