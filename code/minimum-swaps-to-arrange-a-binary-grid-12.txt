int minSwaps(vector<vector<int>>& grid) 
{
	int steps = 0;

	for(int row = 0; row < grid.size(); ++row)
	{
		if(!hasOne(grid[row], row + 1))
		{
			continue;
		}

		bool found = false;

		for(int y = row + 1; y < grid.size(); ++y)
		{
			if(!hasOne(grid[y], row + 1))
			{
				while(y > row)
				{
					++steps;
					swap(grid[y], grid[y - 1]);
					--y;
				}

				found = true;
				break;
			}
		}

		if(!found)
		{
			return -1;
		}
	}

	return steps;
}

bool hasOne(const vector<int>& row, int i)
{
	for(int j = i; j < row.size(); ++j)
	{
		if(row[j] == 1)
		{
			return true;
		}
	}

	return false;
}