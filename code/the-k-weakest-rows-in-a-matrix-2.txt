/**
 * Note: The returned array must be malloced, assume caller calls free().
 */

struct info{
    int val;
    int index;
};

int compare(const void*a, const void*b){
    struct info a_ = *(struct info*)a;
    struct info b_ = *(struct info*)b;
    
    return a_.val - b_.val;
    
}
int* kWeakestRows(int** mat, int matSize, int* matColSize, int k, int* returnSize){
    int *ans = (int*)malloc(sizeof(int)*k);
    struct info arr[matSize];
    *returnSize = k;
    int j;
    
    for(int i=0;i<matSize;i++){
        j=0;
        while( j<*matColSize && mat[i][j]!=0) j++;        
        arr[i].val = j;
        arr[i].index = i;        
    }
	
    qsort(arr, matSize, sizeof(arr[0]), compare);
    
    for(int i=0;i<k;i++){        
        ans[i] = arr[i].index;
    }    
	
    return ans;
}