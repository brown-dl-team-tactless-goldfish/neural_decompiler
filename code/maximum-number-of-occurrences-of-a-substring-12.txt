    public class Solution
    {
        public int MaxFreq(string s, int maxLetters, int minSize, int maxSize)
        {
            IDictionary<string, int> substr2Count = new Dictionary<string, int>();
            StringBuilder sb = new StringBuilder();

            for (int start = 0; start < s.Length; start++)
            {
                int l = minSize;
                if (start + l - 1 >= s.Length)
                {
                    break;
                }

                int mask = 0;
                sb.Clear();
                for (int i = start; i < start + l; i++)
                {
                    sb.Append(s[i]);
                    mask = mask | (1 << (s[i] - 'a'));
                }

                int uniqueCharacters = 0;

                for (int i = 0; i < 32; i++)
                {
                    if ((mask & (1 << i)) != 0)
                    {
                        uniqueCharacters++;
                    }
                }

                if (uniqueCharacters <= maxLetters)
                {
                    var subStr = sb.ToString();
                    if (!substr2Count.ContainsKey(subStr))
                    {
                        substr2Count[subStr] = 0;
                    }

                    substr2Count[subStr]++;
                }
            }

            return substr2Count.Count != 0 ? substr2Count.Max(p => p.Value) : 0;
        }
    }