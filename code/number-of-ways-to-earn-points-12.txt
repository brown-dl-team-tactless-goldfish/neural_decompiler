#define MAX_TARGET (1000)

typedef struct Type{
	int count;
	int mark;
} Type;

int waysToReachTarget(
	const int target,
	const Type * const * const pTypeArr,
	const int pTypeArrLen,
	const void * const _unused
){
	(void)_unused;

	assert(target <= MAX_TARGET);

	int dp[2][MAX_TARGET + 1];

	memset( &dp[1], 0, sizeof (dp[1]) );
	dp[1][0] = 1;

	for (int i = 0; i < pTypeArrLen; i += 1){
		memcpy( &dp[0], &dp[1], sizeof (dp[1]) );
		memset( &dp[1], 0, sizeof (dp[1]) );

		for (int j = 0; j < sizeof (dp[0]) / sizeof (dp[0][0]); j += 1){
			if (dp[0][j] > 0){
				for (int k = 0; k <= pTypeArr[i]->count; k += 1){
					const int newPoint = j + pTypeArr[i]->mark * k;

					if (!( newPoint <= MAX_TARGET )){
						break;
					}

					dp[1][newPoint] += dp[0][j];
					dp[1][newPoint] %= 1000000007;
				}
			}
		}
	}

	return dp[1][target];
}