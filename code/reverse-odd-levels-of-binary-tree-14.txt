class Solution {
public:
    void solve(TreeNode* &root,int node,vector<int> &v){
        if(!root) return;
        
        root->val = v[node];
        
        solve(root->left,node*2+1,v);
        solve(root->right,node*2+2,v);
    }
    TreeNode* reverseOddLevels(TreeNode* root) {
        vector<vector<int>> v;
        queue<TreeNode*> q;
        q.push(root);
        while(q.size()){
            int sz = q.size();
            vector<int> temp;
            while(sz--){
                auto t = q.front(); q.pop();
                temp.push_back(t->val);
                if(t->left) q.push(t->left);
                if(t->right) q.push(t->right);
            }
            v.push_back(temp);
        }
        vector<int> vec;
        for(int i=0;i<v.size();i++){
            if(i%2){
                reverse(v[i].begin(),v[i].end());
                vec.insert(vec.end(),v[i].begin(),v[i].end());
            }else{
                vec.insert(vec.end(),v[i].begin(),v[i].end());
            }
        }
        solve(root,0,vec);
        return root;
    }
};