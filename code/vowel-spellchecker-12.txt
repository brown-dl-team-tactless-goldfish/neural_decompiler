class Solution {
 public:
  vector<char> vowels = {'a', 'e', 'i', 'o', 'u'};
  vector<string> spellchecker(vector<string>& wordlist,
                              vector<string>& queries) {
    unordered_set<string> perfect(wordlist.begin(), wordlist.end());
    unordered_map<string, string> c;
    for (auto s : wordlist) {
      string old = s;
      for (int i = 0; i < s.size(); ++i) s[i] = tolower(s[i]);
      if (c.find(s) == c.end()) c[s] = old;
    }
    unordered_map<string, string> v;
    for (auto s : wordlist) {
      string old = s;
      for (int i = 0; i < s.size(); ++i) {
        s[i] = tolower(s[i]);
        for (auto& cr : vowels)
          if (s[i] == cr) s[i] = ' ';
      }
      if (v.find(s) == v.end()) v[s] = old;
    }
    vector<string> ans;
    for (auto& s : queries) {
      if (perfect.find(s) != perfect.end())
        ans.push_back(s);
      else {
        for (int i = 0; i < s.size(); ++i) s[i] = tolower(s[i]);
        if (c.find(s) != c.end())
          ans.push_back(c[s]);
        else {
          for (int i = 0; i < s.size(); ++i) {
            for (auto& cr : vowels)
              if (s[i] == cr) s[i] = ' ';
          }
          if (v.find(s) != v.end())
            ans.push_back(v[s]);
          else
            ans.push_back("");
        }
      }
    }
    return ans;
  }
};