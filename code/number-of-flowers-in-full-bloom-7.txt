class Solution {
public:
    vector<int> fullBloomFlowers(vector<vector<int>>& flowers, vector<int>& persons) {
        
        map<int,int>track;
        int fsize = flowers.size();
        
        // Add +1 for start and -1 for end+1
        for(int i=0;i<fsize;i++)
        {
            track[flowers[i][0]]++;
            track[flowers[i][1]+1]--;
        }
        
        // sweep map to generate flower count
        int prevCount = 0;
        for(auto &iter : track)
        {
            iter.second += prevCount;
            prevCount = iter.second;
        }
        
        vector<int>res;
        int count;
        
        // binary search to get flower count in ith day
        for(int i=0;i<persons.size();i++)
        {   
            auto iter = track.lower_bound(persons[i]);
            count = (iter->first == persons[i]) ? iter->second : ((iter==track.begin()) ? 0 : prev(iter)->second);
            
            res.push_back(count);
        }
        
        return res;
    }
};