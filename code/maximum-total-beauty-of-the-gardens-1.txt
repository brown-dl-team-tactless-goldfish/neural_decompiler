	#define ll long long
public:
    long long maximumBeauty(vector<int>& f, long long newF, int t, int fl, int pl) {
        sort(f.begin(),f.end());
        int n = f.size();
        if(f[0]>=t)
            return (ll)fl*n;
        
        int rightpos = lower_bound(f.begin(),f.end(),t)-f.begin()-1;
        
        ll sum=0;
        for(int i = 0;i<=rightpos;i++) sum+=f[i];
        if(newF>=(ll)t*(rightpos+1)-sum)
            return (ll)(n-1)*fl + max((ll)fl,(ll)pl*(t-1));
        
        vector<ll>cost(rightpos+1);
        for(int i =1 ;i<=rightpos;i++)
            cost[i] = cost[i-1] + (ll)i*(f[i]-f[i-1]);
        
        ll ans = 0;
        while(newF>=0){
            int pos = min(rightpos,int(upper_bound(cost.begin(),cost.end(),newF)-cost.begin()-1));
            int minInc = f[pos] + (newF - cost[pos])/(pos+1);
            ans=max(ans,(ll)minInc*pl + (ll)fl * (n-rightpos-1));
            newF -= (t-f[rightpos]);
            rightpos--;
        }
        return ans;
    }