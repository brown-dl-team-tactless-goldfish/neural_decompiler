class Solution {
public:
    int snakesAndLadders(vector<vector<int>>& board) {
        int n = board.size();
        vector<int> cnt(n*n+1, 10000);

        queue<int> q;
        if(board[n-1][0] == -1)
        {
            q.push(1);
            cnt[1] = 0;
        }
        else
        {
            q.push(board[n-1][0]);
            cnt[board[n-1][0]] = 0;
        }
        int step = 0;
        while(!q.empty())
        {
            int size = q.size();
            while(size--)
            {
                int pos = q.front();
                q.pop();
                if(pos == n*n) return step;
                for(int i = 1; i <= 6; i++)
                {
                    int nei = pos+i;
                    if(nei > n*n) continue;
                    int r = n-1-(nei-1)/n;
                    int c = ((nei-1)/n)%2 == 0 ? ((nei-1)%n) : (n - 1 - (nei-1)%n);
                    
                    if(board[r][c] != -1)
                        nei = board[r][c];

                    if(cnt[nei] > step+1)
                    {
                        q.push(nei);
                        cnt[nei] = step+1;
                        if(nei == n*n) return step+1;
                    }
                   
                }
            }
            step++;
        }
        return -1;
    }
};