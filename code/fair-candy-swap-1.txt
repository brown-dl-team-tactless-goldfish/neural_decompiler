#define MAX_SIZE 200000
int* fairCandySwap(int* A, int ASize, int* B, int BSize, int* returnSize) {
    int* AHash = calloc(MAX_SIZE, sizeof(int));
    int* BHash = calloc(MAX_SIZE, sizeof(int));
    int Amax = 0, Bmax = 0;
    int sumA = 0, sumB = 0, dif = 0;
    int* ans = calloc(2, sizeof(int));
    *returnSize = 2;
    
    for(int i = 0; i < ASize; i++)
    {
        sumA += A[i];
        AHash[A[i]]++;
    }
    for(int i = 0; i < BSize; i++)
    {
        sumB += B[i];
        BHash[B[i]]++;
    }
    
    dif = (sumA-sumB)/2;
    if(dif > 0)
    {
        for(int i = 0; (i + dif)<= MAX_SIZE; i++)
        {
            if(BHash[i] > 0 && AHash[i+dif] > 0)
            {
                ans[1] = i;
                ans[0] = i + dif;
                return ans;
            }
        }
    }
    else
    {
        for(int i = abs(dif); (i + dif)<= MAX_SIZE; i++)
        {
            if(BHash[i] > 0 && AHash[i+dif] > 0)
            {
                ans[1] = i;
                ans[0] = i + dif;
                return ans;
            }
        }
    }
    return ans;
}