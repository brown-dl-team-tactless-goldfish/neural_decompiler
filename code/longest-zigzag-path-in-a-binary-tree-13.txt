public class Solution 
{
    public int LongestZigZag(TreeNode root) 
    {
        if(root == null)
        {
            return -1;
        }
        
        int left = longest(root.left, 1, isLeft: true);
        int right = longest(root.right, 1, isLeft: false);
        
        int max = Math.Max(left, right);
        return max - 1;
    }
    
    private int longest(TreeNode node, int length, bool isLeft)
    {
        if(node == null)
        {
            return length;
        }
        
        
        int currentLength = isLeft ?  longest(node.right, length + 1, !isLeft)
             : longest(node.left, length + 1, !isLeft);
        
        int alternateLength = isLeft ? longest(node.left, 1, isLeft) : longest(node.right, 1, isLeft);
        
        int maxLength = Math.Max(currentLength, alternateLength);
        
        return maxLength;
    }    
}