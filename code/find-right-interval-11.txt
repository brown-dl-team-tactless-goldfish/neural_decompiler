class Solution {
public:
    vector<int> findRightInterval(vector<vector<int>>& intervals) {
        map<int,int> m;
        for(int i = intervals.size()-1;i>=0;i--){
            m[intervals[i][0]] = i;
        }
        vector<int> ret;
        for(auto& x: intervals){
            int end = x[1];
            auto ptr = m.lower_bound(end);
            if(ptr!=m.end()){
                ret.push_back(ptr->second);
            } else{
                ret.push_back(-1);
            }
        }
        return ret;
    }
};