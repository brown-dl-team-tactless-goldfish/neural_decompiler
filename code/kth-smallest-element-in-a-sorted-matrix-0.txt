int countLessEqual(int val, int** matrix, int n){
    int ret = 0; 
    for(int i = 0; i < n; i++){
        if(matrix[i][0] > val)
            continue ;
        int l = 0, r = n-1 ;
        while(l < r){
            int mid = r - (r - l) / 2 ;
            if(matrix[i][mid] <= val)
                l = mid ;
            else
                r = mid  - 1;
        }
        ret += (l + 1) ;
    }
    return ret ;
}

int kthSmallest(int** matrix, int matrixSize, int* matrixColSize, int k){
    int n = matrixSize ;    
    int min = INT_MAX, max = INT_MIN ;
    for(int i = 0; i < n; i++){
        min = fmin(min, matrix[i][0]) ;
        max = fmax(max, matrix[i][n-1]) ;
    }

    while(min < max){
        int mid = min + (max-min) / 2 ;
        int total = countLessEqual(mid, matrix, n) ;
        if(total >= k )
            max = mid ;
        else
            min = mid + 1 ;
    }
    return min ;
}