class Solution {
public:
    pair<int,int> solve(vector<vector<int>>&land, vector<vector<int>>&visited, int i, int j){
        int row = land.size(), col = land[0].size();
        int r = i, c = j;
        while(i+1 < row and (land[i+1][j] == 1 and visited[i+1][j] == 0)){
            visited[i+1][j] = 1;
            i++;
        }
        while(j+1 < col and (land[i][j+1] == 1 and visited[i][j+1] == 0)){
            visited[i][j+1] = 1;
            j++;
        }
        for(int c1=r; c1<=i; c1++){
            for(int c2=c; c2<=j; c2++){
                visited[c1][c2] = 1;
            }
        }
        return {i,j};
    }
    
    vector<vector<int>> findFarmland(vector<vector<int>>& land) {
        vector<vector<int>> result;
        int row = land.size(), col = land[0].size();
        vector<vector<int>>visited(row,vector<int>(col,0));
        for(int i=0; i<row; i++){
            for(int j=0; j<col; j++){
                if(visited[i][j] == 0 and land[i][j] == 1){
                    pair<int,int>p = {i,j};
                    visited[i][j] = 1;
                    pair<int,int>q = solve(land,visited,i,j);
                    result.push_back({p.first,p.second,q.first,q.second});
                }
            }
        }
        return result;
    }
};