class Solution {
public:
    bool hasValidPath(vector<vector<int>>& grid) {
        int N = grid[0].size();
        vector<vector<int>> vis(grid.size(),vector<int>(N,0));
        if(grid.size()==0) return false;
        
        queue<pair<int,int>> q;
        q.push({0,0});
                                
        map<int,pair<char,char>> path;
        map<char,pair<int,int>> next;
        map<char,vector<int>> check;
        
        path.insert({1,{'L','R'}});
        path.insert({2,{'U','D'}});
        path.insert({3,{'L','D'}});
        path.insert({4,{'R','D'}});
        path.insert({5,{'L','U'}});
        path.insert({6,{'R','U'}});
        
        check.insert({'L',{1,4,6}});
        check.insert({'R',{1,3,5}});
        check.insert({'U',{2,3,4}});
        check.insert({'D',{2,5,6}});
        
        next.insert({'L',{0,-1}});
        next.insert({'R',{0,1}});
        next.insert({'U',{-1,0}});
        next.insert({'D',{1,0}});
                                
        while(!q.empty()){
            int r = q.front().first;
            int c = q.front().second;
            vis[r][c]=1;
            if(r==(grid.size()-1) && c==(grid[0].size()-1) ) return true;
            q.pop();
            int data = grid[r][c];
            int rr1 = r+next[path[data].first].first;
            int cc1 = c+next[path[data].first].second;
            if(rr1>=0 && cc1 >=0 && rr1<grid.size() && cc1 <grid[0].size() && vis[rr1][cc1]==0){
                int data1 = grid[rr1][cc1];
                for(int i=0;i<3;i++){
                    if(check[path[data].first][i]==data1){
                        q.push({rr1,cc1});
                    }
                }
            }
            rr1 = r+next[path[data].second].first;
            cc1 = c+next[path[data].second].second;
            if(rr1>=0 && cc1 >=0 && rr1<grid.size() && cc1 <grid[0].size() && vis[rr1][cc1]==0){
                int data1 = grid[rr1][cc1];
                for(int i=0;i<3;i++){
                    if(check[path[data].second][i]==data1){
                        q.push({rr1,cc1});
                    }
                }
            }
        }
        return false;
    }
};