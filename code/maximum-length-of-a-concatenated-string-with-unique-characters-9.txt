int max;
void combine(int* arr, int idx, int table, int limit){
    
  int k = 1, len = 0;
  for(int i = 0; i < 26; i++){
    if((table & k) != 0) len++;
    k <<= 1;
  }
  if(len > max) max = len;
      
  for(int i = idx; i < limit; i++){
    if((table & arr[i]) == 0){
      combine(arr, i + 1, table | arr[i], limit);
    }
  }
}

int maxLength(char ** arr, int arrSize){
  max = 0;
  int table[26];
  for(int i = 0; i < arrSize; i++){
    table[i] = 0;
    int len = strlen(arr[i]);
    for(int j = 0; j < len; j++){
      if((table[i] & (1 << arr[i][j] - 'a')) != 0){
        table[i] = 0;
        break;
      }
      table[i] |= (1 << (arr[i][j] - 'a'));
    }
  }
  
  combine(table, 0, 0, arrSize);
  return max;
}