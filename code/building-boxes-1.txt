// OJ: https://leetcode.com/problems/building-boxes/
// Author: github.com/lzl124631x
class Solution {
public:
    int minimumBoxes(int n) {
        auto cube = [](int h) { return (long)h * (h + 1) * (h + 2) / 6; };
        auto getHeight = [&](int n) {
            long L = 1, R = 1e5;
            while (L <= R) {
                long M = (L + R) / 2;
                if (cube(M) <= n) L = M + 1;
                else R = M - 1;
            }
            return R;
        };
        int h = getHeight(n), total = cube(h), bottom = (1 + h) * h / 2;
        int r = n - total, L = 0, R = h + 1;
        while (L <= R) {
            int M = (L + R) / 2;
            if ((1 + M) * M / 2 >= r) R = M - 1;
            else L = M + 1;
        }
        return bottom + L;
    }
};