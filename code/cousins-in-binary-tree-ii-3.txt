using LL = long long ;
class Solution {
public:
    TreeNode* replaceValueInTree(TreeNode* root) {
        if(root == NULL)
            return NULL ;
        queue<TreeNode*>q ;
        q.push(root) ; 
        root->val = 0 ;
        while(!q.empty()){
            int sz = q.size() ;
            LL sum = 0 ;
            
            vector<LL>data(sz) ;
            vector<TreeNode*>tmp ;
            for(int i  = 0; i < sz; i++){
                TreeNode* cur = q.front() ;
                q.pop() ;
                tmp.push_back(cur) ;
                if(cur->left){
                    sum += cur->left->val ;
                    data[i] += cur->left->val ;
                    q.push(cur->left) ;
                }
                if(cur->right){
                    sum += cur->right->val ;
                    data[i] += cur->right->val ;
                    q.push(cur->right) ;
                } 
            }
            
            for(int i = 0; i < sz; i++){
                TreeNode* t = tmp[i] ;
                if(t->left){
                    t->left->val = sum - data[i] ;
                }
                if(t->right)
                    t->right->val = sum - data[i] ;
            }
        }
        return root ;
    }
};