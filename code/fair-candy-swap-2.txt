/**
 * Return an array of size *returnSize.
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* fairCandySwap(int* A, int ASize, int* B, int BSize, int* returnSize) {
    *returnSize = 2;
    int *rst = (int *) calloc(*returnSize, sizeof(int));
    int sumA = 0, sumB = 0;
    
    int i;
    for(i = 0; i < ASize; i++){
        sumA += A[i];
    }
    
    int minB = INT_MAX, maxB = INT_MIN;
    for(i = 0; i < BSize; i++){
        sumB += B[i];
        if(B[i] > maxB){
            maxB = B[i];
        }
        if(B[i] < minB){
            minB = B[i];
        }
    }
    
    int *map = (int *) calloc(maxB - minB + 1, sizeof(int));
    for(i = 0; i < BSize; i++){
        map[B[i] - minB]++;
    }
    
    int delta = (sumB - sumA) / 2;
    for(i = 0; i < ASize; A++){
        if((A[i] + delta >= minB) && (A[i] + delta <= maxB)){
            if(map[A[i] + delta - minB] > 0){
                rst[0] = A[i];
                rst[1] = A[i] + delta;
                break;
            }
        }
    }
    
    return rst;
}