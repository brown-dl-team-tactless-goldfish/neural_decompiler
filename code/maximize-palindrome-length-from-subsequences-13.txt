int longestPalindrome(string word1, string word2) {
	string word3 = word1 + word2;
	int res = 0;

	vector<vector<int>> m(word3.size() + 1, vector<int>(word3.size(), 0));

	for (int i = 0; i < word3.size(); ++i) {
		m[0][i] = 0;
		m[1][i] = 1;
	}

	for (int len = 2; len <= word3.size(); ++len) {
		for (int i = 0; i + len <= word3.size(); ++i) {
			if (word3[i] == word3[i + len - 1]) {
				m[len][i] = m[len - 2][i + 1] + 2;
				if (i < word1.size() && i + len - 1 >= word1.size())
					res = max(res, m[len][i]);

			} else {
				m[len][i] = max(m[len - 1][i], m[len - 1][i + 1]);
			}
		}
	}

	return res;
}