    public TreeNode ReverseOddLevels(TreeNode root) 
    {
        Queue<TreeNode> q = new Queue<TreeNode>();
        q.Enqueue(root);
        bool even = true;
        while (q.Any())
        {
            int count = q.Count;
            List<TreeNode> levelNodes = new List<TreeNode>();
            for (int i = 0; i < count; i++)
            {
                TreeNode node = q.Dequeue();
                if (node.left != null)
                {
                    q.Enqueue(node.left);
                    q.Enqueue(node.right);

                    levelNodes.Add(node.left);
                    levelNodes.Add(node.right);
                }
            }

            if (even)
            {
                int n = levelNodes.Count;
                for (int i = 0; i < n / 2; i++)
                {
                    int temp = levelNodes[i].val;
                    levelNodes[i].val = levelNodes[n - i - 1].val;
                    levelNodes[n - i - 1].val = temp;
                }
            }
            even = !even;
        }
        return root;
    }