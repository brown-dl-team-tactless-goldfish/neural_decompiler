    if(s.size() == 0 || k > s.size( ))
    {
        
        return 0;
    }
    
    map<char, int> m;
    
    for(auto c : s)
    {
        
        m[c]++;
    }
    
    int idx = 0;
    
    while(idx < s.length() && m[s[idx]] >= k)
    {
        idx++;
        
    }
    
    if(idx == s.size( ))
    {
        
        return idx;
    }
    
    int left = longestSubstring(s.substr(0,idx), k);
    
    int right = longestSubstring(s.substr(idx+1), k);
    
    return max(left, right);

}