/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */

// TreeNode pointers: 
// One for root of new tree, one for current leaf to make additions efficient
struct TreeNode* myRoot;
struct TreeNode* myLeaf;

// Do an in-order traversal of the tree and re-link up the nodes as you go
void traverse(struct TreeNode* root)
{
    // First, process the left subtree if it exists
    if (root->left != NULL)
    {
        traverse(root->left);
        root->left = NULL;
    }
    
    // Second, process the current node (root)
    // Either start the new tree if it doesn't exist yet,
    // or add root to my tree by making it the right child of the current leaf node
    if (myRoot == NULL)
        myRoot = root;
    else
        myLeaf->right = root;
    
    myLeaf = root; 
    
    // Lastly, process the right subtree if it exists
    if (root->right != NULL)
        traverse(root->right);
}

struct TreeNode* increasingBST(struct TreeNode* root)
{
    myRoot = NULL;
    myLeaf = NULL;
    traverse(root);
    return myRoot;
}