    vector<int> pathsWithMaxScore(vector<string>& b) {
        int N = b.size(), mod = (int)(1e9) + 7;
        vector<vector<vector<long>>> dp(N, vector<vector<long>>(N, vector<long>(2, 0)));
        b[0][0] = '0';
        dp[N-1][N-1][1] = 1;
        vector<int> dirs = {-1, 0, -1, -1};
        for(int r = N-1; r >= 0; r--) {
            for(int c = N-1; c >= 0; c--) {
                if(dp[r][c][1] == 0) continue;
                for(int i = 0; i < dirs.size()-1; i++) {
                    int x = r + dirs[i], y = c + dirs[i+1];
                    if(x < 0 || y < 0 || b[x][y] == 'X' || dp[r][c][1] == 0) continue;
                    
                    if(dp[r][c][0] + (b[x][y]-'0') > dp[x][y][0]) {
                        dp[x][y][0] = dp[r][c][0] + (b[x][y]-'0');
                        dp[x][y][1] = dp[r][c][1];
                    } else if(dp[r][c][0] + (b[x][y]-'0') == dp[x][y][0]) {
                        dp[x][y][1]  = (dp[x][y][1]+ dp[r][c][1])%mod;
                    }
                    
                }
            }
        }        
        return {(int)dp[0][0][0]%mod, (int)dp[0][0][1]%mod};
    }