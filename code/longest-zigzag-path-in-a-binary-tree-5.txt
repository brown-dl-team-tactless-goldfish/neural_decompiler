/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
    void longestZigZagUtil(TreeNode* root, char dir, int curr, int &res) {
        if (!root) return;
        
        if (!root->left && !root->right) {
            res = max(curr, res);
            return;
        }
        if (dir == 'l') {
            res = max(res, curr);
            longestZigZagUtil(root->right, 'r', curr+1, res);
            longestZigZagUtil(root->left, 'l', 1, res);
        } else if (dir == 'r') {
            res = max(res, curr);
            longestZigZagUtil(root->left, 'l', curr+1, res);
            longestZigZagUtil(root->right, 'r', 1, res);
        }
    }
public:
    int longestZigZag(TreeNode* root) {
        if (!root) return 0;
        
        int curr = 0, res = 0;
        longestZigZagUtil(root->left, 'l', curr+1, res);
        longestZigZagUtil(root->right, 'r', curr+1, res);
        return res;
    }
};