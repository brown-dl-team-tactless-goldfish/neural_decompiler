int cmpfunc(const void* a, const void* b){
    return *(int*)a - *(int*)b;
}
int numberOfBoomerangs(int** points, int pointsSize, int* pointsColSize){
    
    int n = pointsSize;
    if(n < 3)
        return 0;
    int** table = malloc(n * sizeof(int*));
    for(int i = 0; i < n; i++){
        table[i] = malloc(n * sizeof(int));
    }
    for(int i = 0; i < n; i++){
        table[i][i] = 0;
        for(int j = i+1; j < n; j++){
            int dx = fabs(points[i][0] - points[j][0]);
            int dy = fabs(points[i][1] - points[j][1]);
            int d = dx*dx + dy*dy;
            table[i][j] = d;
            table[j][i] = d;
        }
    }
    int ans = 0;
    for(int i = 0; i < n; i++){
        qsort(table[i], n, sizeof(int), cmpfunc);
        int cn = 1;
        for(int j = 2; j < n; j++){
            if(table[i][j] == table[i][j-1])
                cn++;
            else{
                if(cn > 1){
                    ans += cn * (cn-1);
                    cn = 1;
                }
            }
        }
        if(cn > 1)
            ans += cn * (cn -1);
    }
    return ans;
}