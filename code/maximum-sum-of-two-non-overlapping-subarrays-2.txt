int maxSumTwoNoOverlap(int* A, int ASize, int L, int M) {
    int max = L > M? L: M;
    int min = L > M? M: L;
    int p1 = 0;
    int p2 = max;
    int _p2 = 0;
    int t = 0; 
    int _t = 0;
    int ans = 0;

    for (int n = 0;;n++){
        t = 0;

        for (p1 = n; p1 < n + max; p1++) {
            // Sum elements in large sliding window.
            t += A[p1];   
        }

        for (p2 = 0;;){
            // Start small window at 0 and try every
            // possible combination before and after the
            // large window.
            
            if (p2 < p1 && p2 + min >= n) {
                // Move small window past large window.
                p2 = p1;   
            }
            
            _p2 = p2 + min;

            if (_p2 > ASize) break; 

            _t = t;
            for (int m = p2; m < _p2; m++) {
                // Sum elements in small sliding window.
                _t += A[m];     
            } 

            if (_t > ans) ans = _t; 

            p2++;
        }

        if (n + max >= ASize) break; 

    }

    return ans; 
}