class Solution {
public:
    vector<int>factor(int n)
    {
        vector<int>v;
        for(int i=2;i<=sqrt(n);i++)
        {
            if(n%i==0)
            {
                v.push_back(i);
                v.push_back(n/i);
            }
        }
        return v;
    }
    int find(vector<int>&parent,int x)
    {
        if(x==parent[x])
        {
            return x;
        }
        return parent[x]=find(parent,parent[x]);
    }
    bool gcdSort(vector<int>& nums)
    {  
        int n=nums.size();
        int mx=*max_element(nums.begin(),nums.end());
        vector<int>parent(mx+1,0);
        for(int i=0;i<=mx;i++)
        {
            parent[i]=i;
        }
        vector<int>temp(nums.begin(),nums.end());
        for(int i=0;i<n;i++)
        {
            for(auto it:factor(nums[i]))
            {
                int x=find(parent,nums[i]);
                int y=find(parent,it);
                if(x!=y)
                {
                    parent[x]=y;
                }
            }
        }
        sort(temp.begin(),temp.end());
        for(int i=0;i<n;i++)
        {
            if(find(parent,temp[i])!=find(parent,nums[i]))
            {
                return false;
            }
        }
        return true;
    }
};