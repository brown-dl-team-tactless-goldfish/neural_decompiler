char** rotateTheBox(char** box, int boxSize, int* boxColSize, int* returnSize, int** returnColumnSizes){

    int i, j, k;
    char **ans;

    ans = (char **)malloc(sizeof(char *) * boxColSize[0]);
    for (i=0; i<boxColSize[0]; i++) {
        ans[i] = (char *)malloc(sizeof(char) * boxSize);
        memset(ans[i], 0x0, sizeof(char) * boxSize);
    }

    *returnSize = boxColSize[0];
    *returnColumnSizes = (int *)malloc(sizeof(int) * boxColSize[0]);
     for (i=0; i<boxColSize[0]; i++)
         (*returnColumnSizes)[i] = boxSize;

    /* Rotate 90 degrees first */
    for (i=0; i<boxSize; i++)
        for (j=0; j<boxColSize[0]; j++)
            ans[j][boxSize-i-1] = box[i][j];

    /* Parsing the gravity */
    for (i=boxColSize[0]-2; i>=0; i--) {
        for (j=0; j<boxSize; j++) {
            if (ans[i][j] != '#')
                continue;
            k = i + 1;
            while (k <= (boxColSize[0]-1) && ans[k][j] == '.')
                k++;
            if ((k-1) > i) {
                ans[i][j] = '.';
                ans[k-1][j] = '#';
            }
        }
    }

    return ans;
}