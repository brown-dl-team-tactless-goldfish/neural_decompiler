char* licenseKeyFormatting(char* S, int K) {
    int i;
    int clen = 0;
    for(i = 0; i < strlen(S); i++){
        if(S[i] != '-'){ 
            clen++;
            if(S[i] - '0' > 9 && S[i] - 'A' > 26){
                S[i] = (char)(S[i] + 'A' - 'a');
            }
        }
    }
    if(clen == 0) return "";
    int n = clen / K - 1;
    //printf("n = %d\n", n);
    int m = clen % K;
    int temp = 0;
    if(m != 0){
        temp = m;
        n = n + 1;
    } 
    //printf("%d", m);
    bool first = true;
    int h = 0;
    printf("result len = %d",clen + n);
    char* result = malloc((clen + n) * sizeof(char));
    for(i = 0; i < strlen(S); i++){
        if(temp == 0){
            temp = K;
            if(first && m == 0) {
                first = false;
            }
            else{
                result[h] = '-';
                h++;
            }
        } 
        if(S[i] != '-'){
            result[h] = S[i];
            h++;
            temp--;
        }
    }
    //printf("%d",strlen(result));
    return result;
}