class Solution {
public:
    int countPrimeSetBits(int L, int R) {
        static int bitCountMap[] =
        {
            0,1,1,2,1,2,2,3,	1,2,2,3,2,3,3,4,
            1,2,2,3,2,3,3,4,	2,3,3,4,3,4,4,5,
            1,2,2,3,2,3,3,4,	2,3,3,4,3,4,4,5,
            2,3,3,4,3,4,4,5,	3,4,4,5,4,5,5,6,
            1,2,2,3,2,3,3,4,	2,3,3,4,3,4,4,5,
            2,3,3,4,3,4,4,5,	3,4,4,5,4,5,5,6,
            2,3,3,4,3,4,4,5,	3,4,4,5,4,5,5,6,
            3,4,4,5,4,5,5,6,	4,5,5,6,5,6,6,7,
            1,2,2,3,2,3,3,4,	2,3,3,4,3,4,4,5,
            2,3,3,4,3,4,4,5,	3,4,4,5,4,5,5,6,
            2,3,3,4,3,4,4,5,	3,4,4,5,4,5,5,6,
            3,4,4,5,4,5,5,6,	4,5,5,6,5,6,6,7,
            2,3,3,4,3,4,4,5,	3,4,4,5,4,5,5,6,
            3,4,4,5,4,5,5,6,	4,5,5,6,5,6,6,7,
            3,4,4,5,4,5,5,6,	4,5,5,6,5,6,6,7,
            4,5,5,6,5,6,6,7,	5,6,6,7,6,7,7,8,
        };
        bool isPrime[] = {
            false, false, true, true, false, true, false, true,
            false, false, false, true, false, true, false, false,
            false, true, false, true, false, false, false, true,
            false, false, false, false, false, true, false, true, false
        };
        int ret = 0;
        while (L <= R)
        {
            auto cp = (unsigned char*)&L;
            if (isPrime[bitCountMap[cp[0]]+bitCountMap[cp[1]]+bitCountMap[cp[2]]+bitCountMap[cp[3]]]) ++ret;
            ++L;
        }
        return ret;
    }
};