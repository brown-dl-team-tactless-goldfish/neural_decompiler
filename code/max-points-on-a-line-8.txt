class Solution:
    def maxPoints(self, points: List[List[int]]) -> int:
        
        res = [[a,b] for idx, a in enumerate(points) for b in points[idx+1:]]
        
        d = collections.defaultdict(list)
  
        
        if len(points) == 0:
            return 0
        
        if len(points) == 1:
            return 1
        
        for pairs in res:
            pairs.sort(key = lambda x:(x[0],x[1]))
            
            
            #For vertical lines because of zero division error
            if pairs[1][0] - pairs[0][0] == 0:
                if pairs[0] not in d[pairs[0][0]]:
                    d[pairs[0][0]].append(pairs[0])
                    
                if pairs[1] not in d[pairs[0][0]]:
                    d[pairs[0][0]].append(pairs[1])
                
            #For all other lines
            else:
                m = (pairs[1][1] - pairs[0][1]) / (pairs[1][0] - pairs[0][0])
                c = pairs[0][1] - m * pairs[0][0]

                if pairs[0] not in d[(m,c)]:
                    d[(m,c)].append(pairs[0])
                    
                if pairs[1] not in d[(m,c)]:
                    d[(m,c)].append(pairs[1])
           

        maxPoints = 0
        
        
        for i in d:
            if len(d.get(i)) >= maxPoints:
                maxPoints = len(d.get(i))
                

        return maxPoints
                

            