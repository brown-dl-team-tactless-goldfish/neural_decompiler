class Solution {
public:
    int minimumTime(string s) {
        int n=s.size();
        int cnt=0;
        for(int i=0; i<n; i++)
        {
            if(s[i]=='1')
                cnt++;
        }
        int ans1=n;
        vector<int>dp(n,0);
        if(s[0]=='1')
            dp[0]=1;
        for(int i=1; i<n; i++)
        {
            if(s[i]=='1')
                dp[i]=min(i+1,dp[i-1]+2);
            else
                dp[i]=dp[i-1];
        }
        
        vector<int>rdp(n,0);
        if(s[n-1]=='1')
            rdp[n-1]=1;
        for(int i=n-2; i>=0; i--)
        {
            if(s[i]=='1')
                rdp[i]=min(n-i,rdp[i+1]+2);
            else
                rdp[i]=rdp[i+1];
        }
        
        vector<pair<int,int>>ans;
        for(int i=0; i<n; i++)
        {
            if(s[i]=='1')
            {
                ans.push_back({dp[i],rdp[i]});
            }
        }
        ans1=min(rdp[0],dp[n-1]);
        
        for(int i=0; i<cnt-1; i++)
        {
            ans1=min(ans1,ans[i].first+ans[i+1].second);
        }
        return ans1;
    }
};