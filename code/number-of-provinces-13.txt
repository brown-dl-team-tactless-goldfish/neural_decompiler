    numRows = len(M)
    if numRows == 0:
        return 0
    #print "numRows = ", numRows

    numCols = numRows

    # dummyNode = numRows + 1
    uf = UnionFind(numRows)
    #print "1 uf.dic = ", uf.dic

    for idx_row in range(numRows):
        for idx_col in range(numCols):
            curVal = M[idx_row][idx_col]
            #print "idx_row = ", idx_row, " idx_col = ", idx_col, " curVal = ", curVal

            if curVal == 1:
                uf.union(idx_row, idx_col)
                # uf.union(idx_col, dummyNode)

    #print "2 uf.dic = ", uf.dic

    keys = uf.dic.keys()
    #print "1 keys = ", keys

    for key in keys:
        uf.finalizeParent(key)

    resSet = set(uf.dic.values())
    #print "resSet = ", resSet

    #print "len(resSet) = ", len(resSet)
    return len(resSet)