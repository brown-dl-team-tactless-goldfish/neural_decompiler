int minSpaceWastedKResizing(vector<int>& nums, int k) {
        int n = nums.size();
        int dp[201][200] = {};
        memset(dp, 0x3f, sizeof(dp));
        int mx = 0, s = 0;
        for(int i=0; i<n; i++) {
            s += nums[i];
            mx = max(mx, nums[i]);
            dp[i][0] = mx * (i+1) - s;
        }
        for(int m=1; m<=k; m++) {
            for(int j=1; j<n; j++) {
                int s = 0, mx = 0;
                for(int i=j; i>0; i--) {
                    s += nums[i];
                    mx = max(mx, nums[i]);
                    dp[j][m] = min(dp[i-1][m-1] + (j-i+1)*mx - s, dp[j][m]);
                }
            }
        }
        return dp[n-1][k];
    }