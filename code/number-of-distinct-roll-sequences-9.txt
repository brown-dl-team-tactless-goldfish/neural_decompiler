class Solution {
public:
    set<pair<int,int>> st;
    int mod=1000000007;
    int dp[10001][7][7];
    int solve(int n,int prev,int nprev)
    {
        if(n==1)
        {
            return 1;
        }
        if(dp[n][prev][nprev]!=-1)
        {
            return dp[n][prev][nprev];
        }
        int ans=0;
        for(int i=1;i<=6;++i)
        {
            if(st.find({prev,i})!=st.end() && i!=prev && i!=nprev)
            {
                ans=(ans%mod+solve(n-1,i,prev)%mod)%mod;
            }
        }
        return dp[n][prev][nprev]=ans%mod;
    }
    int distinctSequences(int n) {
        st.insert({1,2});st.insert({1,3});st.insert({1,4});st.insert({1,5});st.insert({1,6});
        st.insert({2,1});st.insert({2,3});st.insert({2,5});
        st.insert({3,1});st.insert({3,2});st.insert({3,4});st.insert({3,5});
        st.insert({4,1});st.insert({4,3});st.insert({4,5});
        st.insert({5,1});st.insert({5,2});st.insert({5,3});st.insert({5,4});st.insert({5,6});
        st.insert({6,1});st.insert({6,5});
        int ans=0;
        memset(dp,-1,sizeof(dp));
        for(int i=1;i<=6;++i)
        {
            ans=(ans%mod+solve(n,i,0)%mod)%mod;
        }
        return ans%mod;
    }
};