class Solution {
public:
    int latestTimeCatchTheBus(vector<int>& b, vector<int>& p, int c) {
        sort(b.begin(), b.end());
        sort(p.begin(), p.end());
        
        int i = 0, j = 0, k = c;
        vector<int> lbp; //last bus passengers
        
        while(true) { //loop for finding last bus passengers
            if(!k) i++, k = c;
            if(i >= b.size() || j >= p.size()) break;
            
            if(b[i] >= p[j]) {
                if(i == b.size() - 1) lbp.push_back(p[j]);
                j++;
                k--;
            }
            else i++, k = c;    
        }

        if(!lbp.size() || (lbp.size() < c && lbp.back() != b.back())) return b.back(); //edge cases
        
        unordered_set<int> s(p.begin(), p.end());
        for(int i=lbp.back(); i>=0; i--) {
            if(s.find(i) == s.end()) return i;
        }
        
        return -1;
    }
};