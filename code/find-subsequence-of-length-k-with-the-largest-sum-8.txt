class Solution {
    static bool comp(pair<int,int> &a, pair<int,int> &b)
    {
        if(a.first == b.first)
            return a.second < b.second;
        else
            return a.first > b.first;
    };
    static bool comp1(pair<int,int> &a, pair<int,int> &b)
    {
        return a.second < b.second;
    }
public:
    vector<int> maxSubsequence(vector<int>& nums, int k) {
        int n = nums.size();
        vector<pair<int,int>> val;
        vector<pair<int,int>> val1;
        vector<int> ans;
        //long long val = 0;
        for(int i = 0; i < n; i++)
        {
            val.push_back({nums[i],i});
        }
        sort(val.begin(), val.end(), comp);
        for(int i = 0; i < k; i++)
        {
            val1.push_back(val[i]);
        }
        sort(val1.begin(), val1.end(), comp1);
        for(int i = 0; i < k; i++)
        {
            ans.push_back(val1[i].first);
        }
        return ans;
    }
};