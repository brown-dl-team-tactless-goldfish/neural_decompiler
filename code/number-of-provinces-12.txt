void dfs(int s , int n, vector<bool> &visit,vector<vector<int>> &isConnected){
    visit[s]=true;
    vector<int> adj;
    for(int i=0;i<n;i++){
        int x=isConnected[s][i];
        if(x==1){
            adj.push_back(i);
        }
    }
    
    for(auto val : adj){
        if(!visit[val]){
            dfs(val,n,visit,isConnected);
        }
    }
}

int findCircleNum(vector<vector<int>>& isConnected) {
    int n=isConnected.size();
    int count=0;
    vector<bool> visit(n,false);
    
    for(int i=0;i<n;i++){
        if(visit[i]==false){
            count++;
            dfs(i,n,visit,isConnected);
        }
    }
   return count; 
}