/**
 * Return an array of size *returnSize.
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* partitionLabels(char* S, int* returnSize) {
    *returnSize=0;
    int len=strlen(S);
    int a[2][26];
    for(int i=0;i<26;i++){
        a[0][i]=-1;
        a[1][i]=-1;
    }
    for(int i=0;i<len;i++){
        if(a[0][S[i]-'a']==-1){
            a[0][S[i]-'a']=i;
            a[1][S[i]-'a']=i;
        }
        else{
            a[1][S[i]-'a']=i;
        }
    }
    int count=0;
    int count1=0;
    int* ret=(int*)malloc(sizeof(int)*len);
    for(int i=0;i<len;i++){
        if(count<a[1][S[i]-'a']){
            count=a[1][S[i]-'a'];
        }
        if(i==count){
            ret[(*returnSize)++]=count-count1+1;
            count1=count+1;
        }
    }
    return ret;
}