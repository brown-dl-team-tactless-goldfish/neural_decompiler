class Solution {
public:
    int findab(string &s)
    {
        int count = 0;
        stack<char> st;
        for(int i = 0;i<s.length();i++)
        {
            if(st.size() && s[i]=='b' && st.top()=='a')
            {
                count++;
                st.pop();
            }
            else st.push(s[i]);
        }
        s = "";
        while(!st.empty())
        {
            s+=st.top();
            st.pop();
        }
        reverse(s.begin(), s.end());
        return count;
    }
    int findba(string &s)
    {
        stack<char> st;
        int count = 0;
        for(int i = 0;i<s.length();i++)
        {
            if(st.size() && s[i]=='a' && st.top()=='b')
            {
                count++;
                st.pop();
            }
            else st.push(s[i]);
        }
        s = "";
        while(!st.empty())
        {
            s+=st.top();
            st.pop();
        }
        reverse(s.begin(), s.end());
        return count;
    }
    int maximumGain(string s, int x, int y) {
        int n = s.length();
        int ans = 0;
        if(x>y)
        {
            ans += findab(s)*x;
            ans += findba(s)*y;
        }
        else
        {
            ans += findba(s)*y;
            ans += findab(s)*x;
        }
        return ans;
    }
};