double champagneTower(int poured, int query_row, int query_glass){
    if (query_row == 0) {
        if (poured < 1.0) {
            return poured;
        } else {
            return 1.0;
        }
    }
    double * next_row = NULL;
    double * row = NULL;
    next_row = (double *)malloc(sizeof(double) * (query_row + 1));
    row = (double *)malloc(sizeof(double) * (query_row + 1));
    next_row[0] = poured;
    for (int row_index = 0; row_index < query_row; row_index ++)  {
        double * temp = next_row;
        next_row = row;
        row = temp;
        memset(next_row, 0, sizeof(double) * (row_index+1));
        int has_spilled = 0;
        for (int i=0; i < row_index + 1; i++) {
            if (row[i] > 1.0) {
                has_spilled = 1;
                double spilled = (row[i] - 1.0) / 2.0;
                next_row[i] += spilled;
                next_row[i+1] += spilled;
            }
        }
        if (!has_spilled) {
            return 0;
        }
    }
    double result = next_row[query_glass];
    free(next_row);
    free(row);
    if (result < 1.0) {
        return result;
    } else {
        return 1.0;
    }
}