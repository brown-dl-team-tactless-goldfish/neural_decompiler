char* licenseKeyFormatting(char* S, int K) {
    
    int l=0,count=0,i=0,j=0,r=0;
    int first=0, rest=0;
    int k=0;
    
    while(*(S+count)){
        if(*(S+count)!='-')
            l++;
        count++;
    }
    
    if(count==0){
        return NULL;
    }
    char *result=(char *)malloc(sizeof(char)*(count+count+1));
    
    first= l%K;
    rest = l/K;
    
   //printf("first=%d, rest=%d\n", first, rest);
    while(r<first && i<count){
        // printf("S[i]=%c,r=%d, j=%d\n",S[i],r,j);
         if(S[i]!='-'){
              if(S[i]>='a' && S[i]<='z'){
                result[r++] =S[i]-32;
                }
                else{
                    result[r++] = S[i];
                }
            }
        i++;
    }
    
    if(first && rest){
       result[r++]='-'; 
    }
    
  // printf("r=%d, i=%d, j=%d\n",r,i,j);
   for(j=0;j<rest;j++){
        k=0;
        while(k<K && i<count){
         //printf("S[i]=%c,r=%d, k=%d\n",S[i],r,k);
         if(S[i]!='-'){
              if(S[i]>='a' && S[i]<='z'){
                result[r++] =S[i]-32;
                 k++;
                }
                else{
                    result[r++] = S[i];
                    k++;
                }
            }
         i++;
    }
    // printf("2 S[i]=%c,r=%d, k=%d\n",S[i],r,k);
      if(j!=rest-1)
        result[r++]='-';
    
   }
    
   result[r]='\0';
    
    return result;
    
}