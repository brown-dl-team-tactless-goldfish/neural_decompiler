class Solution {
    class UnionFind {
        char root[256];
    public:
        explicit UnionFind() {
            for (int i=0; i<256; i++) root[i] = i;
        }
        char Find(char c) {
            return root[c] = root[c] == c ? c : Find(root[c]);
        }
        void Union(char x, char y) {
            root[Find(x)] = root[Find(y)] = min(Find(x), Find(y));
        }
    };
public:
    string smallestEquivalentString(string A, string B, string S) {
        UnionFind uf;
        for (int i=0; i<A.size(); i++) uf.Union(A[i], B[i]);
        string T = "";
        for (char c : S) T += uf.Find(c);
        return T;
    }
};