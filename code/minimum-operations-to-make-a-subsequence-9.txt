class Solution {
public:
	int minOperations(vector<int>& target, vector<int>& arr) {
		vector<int>dp;
		unordered_map<int,int>mp;
		for(auto num:target) mp[num] = size(mp);

		for(auto num:arr){
			if(mp.find(num)!=mp.end()){
				if(empty(dp) or back(dp)<mp[x]) dp.push_back(mp[num]);
				else{
					int j = lower_bound(begin(dp),end(dp),mp[num]) - begin(dp);
					dp[j] = mp[num];
				}
			}
		}
		return size(target)-size(dp);
	}
};