class Solution {
public:
    long long ans = 0;
    long long numberOfPairs(vector<int>& a, vector<int>& b, int d) {
         int n = a.size();
         vector<int> c(n);
         for(int i=0; i<n; i++) c[i] = a[i] - b[i];
         mergeSort(0,n-1,c,d);
         return ans;
    }
    void mergeSort(int l,int r,vector<int> &c,int d) {
         if(l == r) return;
         int m = (l+r)/2;
         mergeSort(l,m,c,d);
         mergeSort(m+1,r,c,d);
         merge(l,m,r,c,d);
    }
    void merge(int l,int m,int r,vector<int>&c,int d) {
         int start = l , end = m+1;
         while(start<=m && end<=r) {
               if(c[start]<=c[end]+d) {
                   ans+=(r - end + 1);
                   start++;
               }else {
                   end++;
               }
         }
        sort(c.begin()+l,c.begin()+r+1);
    }
};
/*
a[i] - a[j] <= b[i] - b[j] + diff

a[i] - b[i] <= a[j] - b[j] + diff

c[i] <= c[j] + diff
*/