
void swap(int *p,int *q)
{
    *p=*p+*q;
    *q=*p-*q;
    *p=*p-*q;
}
void sort(int *arr,int n){
    int flag=0;
    for(int i=0;i<n;i++){
        for(int j=0;j<n-1-i;j++)
            if(arr[j]>arr[j+1])
            {
                swap(&arr[j],&arr[j+1]);
                flag=1;
            }
        if(flag==0)
            break;
    }
}

int* intersection(int* nums1, int nums1Size, int* nums2, int nums2Size, int* returnSize){
    sort(nums1,nums1Size);
    sort(nums2,nums2Size);
    int k=0;
    int *output=(int*)malloc(sizeof(int)*1000);
    for(int i=0;i<nums1Size;i++)
    {
        for(int j=0;j<nums2Size;j++)
        {//printf("hi");
            if( k>0 && output[k-1]==nums1[i]){
                //printf("hi");
                break;
            }
            if(nums1[i]==nums2[j])
            {   // printf("bi");
                output[k]=nums1[i];
               // printf("%d ",output[k]);
                k++;
                break;
            }
            if(nums1[i]>nums2[j])
                continue;
            else
                break;
                
        }
    }
    *returnSize=k;
     return output;
}