class Solution {
public:
    unordered_set<string> hash;
    string ans;
    int k;
    
    void dfs(string u) {
        for (int i = 0; i < k; i++) {
            auto e = u + to_string(i);
            if (!hash.count(e)) {
                hash.insert(e);
                dfs(e.substr(1));
                ans += to_string(i);
            }
        }
    }
    
    string crackSafe(int n, int _k) {
        k = _k;
        string start(n - 1, '0');
        dfs(start);
        return ans + start;
    }
};