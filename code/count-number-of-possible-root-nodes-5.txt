class Solution:
    def rootCount(self, edges: List[List[int]], guesses: List[List[int]], k: int) -> int:
        #n edges from 0 to n-1
        n=len(edges)+1
        graph=defaultdict(list)
        for u,v in edges:
            graph[u].append(v)
            graph[v].append(u)
        seen=set([(a,b) for a,b in guesses])
        @cache
        def dp(node,par):
            val=1 if (par,node) in seen else 0
            for nei in graph[node]:
                if nei==par: continue
                val+=dp(nei,node)
            return val
        ans=0
        for i in range(n):
            gg=dp(i,-1)
            if gg>=k: ans+=1
        return ans
        
        