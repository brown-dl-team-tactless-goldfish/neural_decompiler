class Solution {
public:
    int dp[1001][1001] ;
    int solve(vector<int>&stones , int i , int j , int total){
        if(i >= j) return 0 ;
        if(dp[i][j] != -1) return dp[i][j] ;
        
        int removeFirst = (total - stones[i]) - solve(stones,i+1,j,total-stones[i]) ;
        int removeLast = (total - stones[j]) - solve(stones,i,j-1,total-stones[j]) ;
		
        //max at each stage refers to the max profit that alice can make upto that point 
        return dp[i][j] = max(removeFirst,removeLast) ;
    }
    int stoneGameVII(vector<int>& stones) {
        memset(dp,-1,sizeof(dp)) ;
        return solve(stones,0,stones.size() - 1 , accumulate(begin(stones),end(stones),0)) ;
    }
};