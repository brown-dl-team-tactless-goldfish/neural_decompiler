class Solution {
public:
    vector<string> removeSubfolders(vector<string>& folder) {
        unordered_set<string> hashset;
        vector<string> retval;
        auto cmp = [](string &a, string &b) {return a.length() < b.length();};
        sort(folder.begin(), folder.end(), cmp); 
        for(auto &s: folder) {
            auto vec = splitstring(s);
            bool flag = 0;
            string val;
            for(auto v : vec) {
                val += "/"+v;
                if(hashset.find(val) != hashset.end()) {
                    flag = 1;
                    break;
                }
            }
            if(!flag) {
                hashset.insert(val);
            }
        }
        for(auto &s: hashset) {
            retval.push_back(s);
        }
        return retval;
    }
    vector<string> splitstring(string &s) {
        stringstream ss(s);
        vector<string> res;
        string token;
        while(getline(ss, token, '/')) {
            if(token.size())
                res.push_back(token);
        }
        return res;
    }
};