class Solution {
public:
    int furthestBuilding(vector<int>& heights, int bricks, int ladders) {
        priority_queue<int, vector<int>, greater<int>> pq;
        int n = heights.size(), ans = 0;
        for(int i = 1; i < n; i++)
        {
            if(heights[i-1] >= heights[i])
            {
                ans++;
                continue;
            }
            pq.push(heights[i]-heights[i-1]);
            if(pq.size() <= ladders)
            {
                ans++;
            }
            else if(!pq.empty() && pq.top() <= bricks)
            {
                bricks -= pq.top();
                pq.pop();
                ans++;
            }
            else return ans;
        }
        return ans;
    }
};