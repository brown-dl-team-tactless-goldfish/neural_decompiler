int maxDistance(vector<vector<int>>& grid) {
	queue<pair<int, int>> q;
	for(int i = 0; i < grid.size(); i++)
		for(int j = 0; j < grid[0].size(); j++)
			if(grid[i][j] == 1) 
				q.push({i, j});

	int steps = -1, delta[5] = {0, 1, 0, -1, 0};
	while(q.size()) {
		for(int sz = q.size(); sz; sz--) {
			int r = q.front().first, c = q.front().second; 
			q.pop();

			for(int i = 1; i < 5; i++) {
				int r2 = r + delta[i - 1], c2 = c + delta[i];
				if(r2 >= 0 && c2 >= 0 && r2 < grid.size() && c2 < grid[0].size() && !grid[r2][c2]) {
					grid[r2][c2] = -1;
					q.push({r2, c2});
				}
			}
		}
		steps++;
	}
	return steps ? steps : -1;
}