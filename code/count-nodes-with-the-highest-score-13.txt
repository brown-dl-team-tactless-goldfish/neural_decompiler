class Solution {
public:
    int countHighestScoreNodes(vector<int>& p) {
        int n=p.size();
        vector<vector<int>> child(n);
        
        for(int i=1;i<n;i++)
        {
            child[p[i]].push_back(i);
        }
        int cnt=0;
        long long maxi=0;
        solve(0,child,n,maxi,cnt);
        return cnt;
        
        
    }
    int solve(int node,vector<vector<int>>& child,int& total,long long& maxi,int& cnt)
    {
        int left=0;
        int right=0;
        for(int i=0;i<child[node].size();i++)
        {
            if(i==0)
                left=solve(child[node][0],child,total,maxi,cnt);
            if(i==1)
                right=solve(child[node][1],child,total,maxi,cnt);
        }
        
        long long curr=1;
        if(left)
            curr*=left;
        if(right)
            curr*=right;
        if(node!=0)
            curr*=(total -( left +right +1));
        if(curr>maxi)
        {
            maxi=curr;
            cnt=1;
        }
        else if(curr==maxi)
            cnt++;
        return left+right+1;
    }
};