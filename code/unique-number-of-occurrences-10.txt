#define HSIZE 2001
int hash(int key)
{
    return key + 1000;
}

bool uniqueOccurrences(int* arr, int arrSize){
    int table[HSIZE] = {0, }; //key: arr[i]+1000, value: counted number 
    int uniq_table[HSIZE] = {0, }; //key: table[i], value: number of occurences
    int max_table = 0;
    
    for (int i = 0; i < arrSize; i++) {
        table[hash(arr[i])]++; // save how many occurrences
        if (table[hash(arr[i])] > max_table)
            max_table = table[hash(arr[i])];
    }

    for (int i = 0; i < HSIZE; i++)
        if (table[i]) // no need to count 0 value
            uniq_table[table[i]]++; // count number of the occurences 

    for (int i = 0; i <= max_table; i++)
        if (uniq_table[i] && uniq_table[i] != 1)
            return false; // uniq_table > 1 means false

    return true;
}