class Solution {
public:
    
    bool is_vowel(char c) {
    return c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u';
}
    vector<int> vowelStrings(vector<string>& words, vector<vector<int>>& queries) {
            int n = words.size();
    vector<int> prefix_sum(n, 0);
    for (int i = 0; i < n; i++) {
        if (is_vowel(words[i][0]) && is_vowel(words[i][words[i].length() - 1])) {
            prefix_sum[i] = 1;
        }
        if (i > 0) {
            prefix_sum[i] += prefix_sum[i - 1];
        }
    }
    vector<int> ans;
    for (const auto& query : queries) {
        int l = query[0];
        int r = query[1];
        int count = prefix_sum[r];
        if (l > 0) {
            count -= prefix_sum[l - 1];
        }
        ans.push_back(count);
    }
    return ans;
    }
};