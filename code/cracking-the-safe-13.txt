class Solution {
public:
    string crackSafe(int n, int k){
        unordered_set<string>s;
        
        string cur="";
        for(int i=0; i<n; i++)
        {
            cur+="0";
        }
        string ans1="";
        s.insert(cur);
        
        ans1+=cur;
        
        int ans=pow(k,n);        
        dfs(n,k,cur,s,ans,ans1);
        return ans1;
    }
    
    bool dfs(int n,int k,string& cur,unordered_set<string>&s,int ans,string &ans1)
    {
        if(s.size()==ans)
            return true;
        
        string k1=cur.substr(1);
        string dem=k1;
        
        for(int i=0; i<k; i++)
        {
            char k2=char('0'+i);
            
            k1+=k2;
            if(s.find(k1)==s.end())
            {
                s.insert(k1);
                ans1+=k2;
                if(dfs(n,k,k1,s,ans,ans1))
                    return true;
                
                s.erase(k1);
                int p=ans1.size();
                ans1=ans1.substr(0,p-1);
            }
            
            k1=dem;
        }
        
        return false;
    }
};