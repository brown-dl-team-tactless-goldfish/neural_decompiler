class Solution {
public:
    vector<vector<string>> displayTable(vector<vector<string>>& orders) {
        map<int , map<string, int>>map1;
        map<string, int>dish;
        
        for(int i=0;i<orders.size();i++){
            string b = orders[i][1];
            string c = orders[i][2];
            map1[stoi(b)][c]+=1;
            dish[c]+=1;
        }
        int total = map1.size();
        int count = dish.size();
        // cout<<total<<" "<< count<<"\n";
        vector<vector<string>>dp(total+1, vector<string>(count+1));
         dp[0][0] ="Table"; 
         int i= 1;
         for(auto it = dish.begin();it!=dish.end();it++){
             dp[0][i]= it->first;
             i++;
         }
        i = 1;
        for(auto it= map1.begin();it!=map1.end();it++){
             // cout<<it->first<<"\n";
            dp[i][0] = to_string(it->first) ;
            i++;
        }
        for(i=1;i<=total;i++){
            for(int j=1;j<=count;j++){
                        dp[i][j]= map1[stoi(dp[i][0])][dp[0][j]] + '0';
            }
        }
        
        return dp;
    }
};