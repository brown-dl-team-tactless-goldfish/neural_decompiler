class Solution {
public:
    int xorAllNums(vector<int>& nums1, vector<int>& nums2) {
        int n1 = nums1.size() ;
        int n2 = nums2.size() ;
        vector<int>bit(31) ;
        if(n2%2){
            for(int i = 0; i < n1; i++){
                int k = nums1[i] ;
                int idx = 0 ;
                while(k > 0){
                    if(k % 2)
                        bit[idx] = 1 - bit[idx] ;
                    k /= 2 ;
                    idx++ ;
                }
            }
        }
        if(n1 %2){
            for(int i = 0; i < n2; i++){
                int k = nums2[i] ;
                int idx = 0 ;
                while(k > 0){
                    if(k % 2)
                        bit[idx] = 1 - bit[idx] ;
                    k /= 2 ;
                    idx++ ;
                }
            }
        }
        int ret = 0 ;
        for(int i = 0; i < 31; i++){
            ret += (bit[i] << i) ;
        }
        return ret ;
    }
};