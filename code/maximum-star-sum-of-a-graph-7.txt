class Solution {
public:
    int maxStarSum(vector<int>& vals, vector<vector<int>>& edges, int k) {
        int n = vals.size();
        vector<vector<int>> valid_edges(n);
        for(int i=0;i<edges.size();i++){
            if(vals[edges[i][1]] > 0)
                valid_edges[edges[i][0]].push_back(vals[edges[i][1]]);
            if(vals[edges[i][0]] > 0)
                valid_edges[edges[i][1]].push_back(vals[edges[i][0]]);
        }
        int mx = INT_MIN;
        for(int i=0;i<n;i++){
            sort(valid_edges[i].rbegin(),valid_edges[i].rend());
            int tmp = vals[i];
            int cnt = min(k,(int)valid_edges[i].size());
            for(int j=0;j<cnt;j++)
                tmp += valid_edges[i][j];
            mx = max(mx,tmp);
        }
        return mx;
    }
};