class Solution {
public:
    int c, mini = INT_MAX;
    int find(vector<vector<int>>& mat, int n, int sum, int &tar, vector<vector<int>>&dp)
    {
        if(n<=0)
        {
            mini = min(mini,abs(sum-tar));
            return abs(sum-tar);
        }
        
       if(dp[sum][n]!=-1) 
           return dp[sum][n];
       
       // early exit to avoid TLE
       if(tar < sum and abs(sum-tar) > mini)
            return dp[sum][n] = 6000;
        
       int ans=INT_MAX;
       for(int j=0;j<c;j++)
       {
            ans=min(ans,find(mat,n-1,sum+mat[n-1][j],tar, dp));
             // early exit to avoid TLE
            if(ans == 0)
                break;
       }
        return dp[sum][n]=ans;
    }
    
    int minimizeTheDifference(vector<vector<int>>& mat, int target) {
        
        c = mat[0].size();
        vector<vector<int>> dp(5001, vector<int>(71, -1));
        return find(mat,mat.size(),0,target, dp);
        
    }
};