class Solution {
public:
    bool split(string messege, string tot, int limit, vector<string> &ans){
        int index=0;
        int count=1;
        string cur;
        while(index<messege.size()){
            if(to_string(count).size()>tot.size()){
                return false;
            }
            if((cur.size()+to_string(count).size()+tot.size()+3)==limit){
                cur+=("<"+to_string(count)+"/"+tot+">");
                ans.push_back(cur);
                cur.clear();
                count++;
        }
            cur+=messege[index];
            index++;
        }
        
        if(to_string(count).size()>tot.size()){
            return false;
        }
        if((cur.size()+to_string(count).size()+tot.size()+3)<=limit){
                cur+=("<"+to_string(count)+"/"+tot+">");
                ans.push_back(cur);
                cur.clear();
                count++;
        }
        else{
            return false;
        }
        string rep=to_string(ans.size());
        for(auto &i: ans){
            int k=0;
            for(auto &j: i){
                if(j=='-'){
                    j=rep[k];
                    k++;
                }
            }
        }     
    } 
    vector<string> splitMessage(string message, int limit) {
        vector<string> ans;
        string tot="-";
        for(int i=1;i<6;i++){
            if(split(message, tot, limit, ans)){
                return ans;
            }
            tot+="-";
            ans.clear();
        }
        return ans;
    }
};