    public int MaxProductPath(int[][] grid) {
      
        long[,,] dp = new long[grid.Length, grid[0].Length, 2];
        
        dp[0,0,0] = grid[0][0];  // max
        dp[0,0,1] = grid[0][0];  // min
        
        for(int i=1; i<grid.Length; i++)
        {
            dp[i,0,0] = dp[i,0,1] = dp[i-1,0,0] * grid[i][0]; 
        }
        
        for(int j=1; j<grid[0].Length; j++)
        {
            dp[0,j,0] = dp[0,j,1] = dp[0,j-1,0] * grid[0][j]; 
        }
        
        long val1;
        long val2;
        int mod = (int) Math.Pow(10,9) + 7;
        
        for(int i= 1; i < grid.Length; i++)
        {
            for(int j=1; j < grid[0].Length; j++)
            {
                val1 = Math.Max(dp[i,j-1,0] * grid[i][j],  dp[i-1,j,0] * grid[i][j]); 
                val1 = Math.Max(val1, dp[i,j-1,1] * grid[i][j]); 
                val1 = Math.Max(val1, dp[i-1,j,1] * grid[i][j]);
                
                val2 = Math.Min(dp[i,j-1,0] * grid[i][j],  dp[i-1,j,0] * grid[i][j]); 
                val2 = Math.Min(val2, dp[i,j-1,1] * grid[i][j]);
                val2 = Math.Min(val2, dp[i-1,j,1] * grid[i][j]);                
                
                dp[i,j,0] = val1;
                dp[i,j,1] = val2;
            }
        }
        
        return (dp[grid.Length-1, grid[0].Length-1, 0] < 0)? -1 : (int)(dp[grid.Length-1, grid[0].Length-1, 0] % mod);
    }