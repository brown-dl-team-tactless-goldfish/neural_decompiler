class Solution {
public:
    vector<bool> canEat(vector<int>& candiesCount, vector<vector<int>>& queries) {
        int m = queries.size();
        vector<bool> res(m);
        int n = candiesCount.size();
        vector<long long> preSum(n + 1);
        for(int i = 0; i < n; i++){
            preSum[i + 1] = preSum[i] + candiesCount[i];
        }
        
        for(int i = 0; i < m; i++){
            long long type = queries[i][0], day = queries[i][1], cap = queries[i][2];
            long long curr = preSum[type + 1], prev = preSum[type], least = day + 1, most = cap * (day + 1);
            if(least > curr || most <= prev) res[i] = false;
            else res[i] = true;
        }
        return res;
    }
};