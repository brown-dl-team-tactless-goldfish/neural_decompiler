class Solution:
    def waysToMakeFair(self, nums: List[int]) -> int:
        # print("nums = ", nums)
        n = len(nums)
        if (n < 2):
            return 1
        
        summ = sum(nums)

        left_to_right_even = [0 for i in range(n)]
        left_to_right_odd = [0 for i in range(n)]

        left_to_right_even[0] = nums[0]
        left_to_right_even[1] = nums[0]
        left_to_right_odd[0] = 0
        left_to_right_odd[1] = nums[1]

        for i in range(2, n):
            # print("i = ", i)
            if (i % 2 == 0):
                left_to_right_even[i] += nums[i] + left_to_right_even[i-2]
                left_to_right_odd[i] = left_to_right_odd[i-1]
            else:
                left_to_right_odd[i] += nums[i] + left_to_right_odd[i-2]
                left_to_right_even[i] = left_to_right_even[i-1]

            # print("1 left_to_right = ", left_to_right)
        # print("end left_to_right_even = ", left_to_right_even)
        # print("end left_to_right_odd = ", left_to_right_odd)

        res = 0
        for i in range(n):
            # print("i = ", i)
            if (i == 0):
                even = left_to_right_odd[-1]
                odd = summ - even - nums[0]
            elif (i == 1):
                even = nums[0] + left_to_right_odd[-1] - nums[1]
                odd = summ - even - nums[1]
            else:

                # print("even")
                even = left_to_right_even[i-1] + \
                    left_to_right_odd[n-1] - left_to_right_odd[i]
                odd = summ - even - nums[i]

            # print("even = ", even, " odd = ", odd)
            if (even == odd):
                res += 1

        print("end res = ", res)
        return res