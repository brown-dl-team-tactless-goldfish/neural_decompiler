int backtrack(int n, int size, int *res, int*idx, bool flag);
int* lexicalOrder(int n, int* returnSize){
    
    int *res = (int *)malloc(sizeof(int) * n);
    memset(res,0,sizeof(int) * n);
    *returnSize = n;
    int idx=0;
    backtrack(1,n,res,&idx,1);
    return &res[0];
}

int backtrack(int n, int size, int *res, int*idx, bool flag)
{
    bool flag_res = flag;
    if (n > size)
        return 0;
    res[*idx] = n;
    *idx += 1;
    if (flag == 1)
        flag = backtrack(n*10,size,res,idx,flag);
    if (n%10 != 9)
        backtrack(n+1,size,res,idx,flag);
    return flag_res;
}