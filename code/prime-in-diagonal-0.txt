int MAX(int a, int b){ return (a>b?a:b); }

bool isPrime(int a, int currMax){
    if(a <= currMax) return false;
    if(a < 2) return false;
    for(int j = 2; j <= sqrt(a); j++){
        if(!(a % j)){
            return false;
        }
    }    
    return true;
}

int diagonalPrime(int** nums, int numsSize, int* numsColSize){
    int maxAns = 0;
    for(int i = 0; i < numsSize; i++){
        if(isPrime(nums[i][i], maxAns))
            maxAns = MAX(maxAns, nums[i][i]);
        if(isPrime(nums[i][numsSize - i - 1], maxAns))
            maxAns = MAX(maxAns, nums[i][numsSize - i - 1]);        
    }
    return maxAns;
}