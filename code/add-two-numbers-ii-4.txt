struct ListNode* p1 = l1;
struct ListNode* p2 = l2;
struct ListNode* result;
int* a1 = (int*)malloc(sizeof(int));
int* a2 = (int*)malloc(sizeof(int));
struct ListNode* tmp;
int s1 = 0, s2 = 0, sum = 0, c = 0;
while(p1 != null) {
    p1 = p1->next;
    s1++;
}
p1 = l1;
a1 = malloc(s1 * sizeof(int));
for(int i = 0; i < s1; i++) {
    a1[i] = p1->val;
    p1 = p1->next;
}
while(p2 != null) {
    p2 = p2->next;
    s2++;
}
p2 = l2;
a2 = malloc(s2 * sizeof(int));
for(int i = 0; i < s2; i++) {
    a2[i] = p2->val;
    p2 = p2->next;
}

result = malloc(sizeof(struct ListNode));
while(s1 > 0 || s2 > 0) {
    tmp = malloc(sizeof(struct ListNode));
    sum = 0;
    //printf("%d ", p1->val);
    if(s1 > 0) {
        sum += a1[s1-1];
        s1--;
    }
    if(s2 > 0) {
        sum += a2[s2-1];
        s2--;
    }
    sum += c;
    if(sum >= 10) {
        c = 1;
        sum -= 10;
    }
    else {
        c = 0;
    }
    result->val = sum;
    tmp->next = result;
    result = tmp;
}
if(c == 1) {
    free(a1);
    free(a2);
    result->val = c;
    return result;
}

free(a1);
free(a2);
if(result->val == 0 && result->next != null) {
    result = result->next;
}
return result;