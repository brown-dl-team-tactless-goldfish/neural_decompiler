class Solution {
public:
    int firstDayBeenInAllRooms(vector<int>& nextVisit) {
        int mod = 1e9 + 7;
        int n = nextVisit.size();
        // ot[i] = time stamp when we reach 'i' for the first time
        // ot[i] = et[i-1]+1
        // et[i] = time stamp when we reach 'i' for the second time
        // et[i] = ot[i] + 1 if nextvisit[i]==i
        // else ot[i] + 1 + (et[i-1] - ot[k]) + 1, where k = nextvisit[i]
        vector<long> et(n);
        vector<long> ot(n);
        ot[0] = 0;
        et[0] = 1;
        for (int i=1; i<n; i++) {
            ot[i] = et[i-1] + 1;
            if (nextVisit[i]==i) {
                et[i] = (ot[i]+1 + mod) % mod;
            } else {
                et[i] = (ot[i] + et[i-1] + 2 - ot[nextVisit[i]] + mod) % mod;
            }
        }
        return ot[n-1] % mod;
    }
};