class Solution {
public:
    int maxConsecutiveAnswers(string answerKey, int k) {
        
        int count = 0;
        int length = 0;
        int seg_length = 0;
        queue<int> segs;
        int best_length = 0;
        for(int i = 0 ; i < answerKey.size(); i++){
            if(answerKey[i] == 'T'){
                seg_length++;
                length++;
            }
            else if(answerKey[i] == 'F'){
                segs.push(seg_length);
                seg_length = 0;
                if(count < k){
                    count++;
                    length++;
                }
                else if(count == k){
                    length++;
                    length -= (segs.front() + 1);
                    segs.pop();
                }
            }
            best_length = max(best_length, length);
        }
        
        count = 0;
        length = 0;
        seg_length = 0;
        queue<int> segs_F;
        for(int i = 0 ; i < answerKey.size(); i++){
            if(answerKey[i] == 'F'){
                seg_length++;
                length++;
            }
            else if(answerKey[i] == 'T'){
                segs_F.push(seg_length);
                seg_length = 0;
                if(count < k){
                    count++;
                    length++;
                }
                else if(count == k){
                    length++;
                    length -= (segs_F.front() + 1);
                    segs_F.pop();
                }
            }
            best_length = max(best_length, length);
        }
        return best_length;
    }
};