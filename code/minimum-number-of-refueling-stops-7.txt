class Solution {
public:
    int minRefuelStops(int target, int startFuel, vector<vector<int>>& stations) {
        sort(stations.begin(), stations.end());
        int n = stations.size();
        priority_queue<pair<int, int>> pqmx;
        int count = 0, i = 0;
        while(startFuel < target)
        {
            while(i < n && stations[i][0] <= startFuel)
            {
                pqmx.push({stations[i][1], stations[i][0]});
                i++;
            }
            if(!pqmx.empty())
            {
                startFuel += pqmx.top().first;
                pqmx.pop();
                count++;
            }   
            else    
                return -1;

        }
        return count;
    }
};