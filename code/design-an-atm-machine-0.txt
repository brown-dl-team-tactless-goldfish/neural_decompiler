
typedef struct {
    long long* bank;
} ATM;


ATM* aTMCreate() {
    ATM* ret = malloc(sizeof(ATM));
    ret->bank = calloc(5, sizeof(long long));
    return ret;
}

void aTMDeposit(ATM* obj, int* banknotesCount, int banknotesCountSize) {
    for(int i = 0; i < 5; i++){
        obj->bank[i] += banknotesCount[i];
    }
}

int* aTMWithdraw(ATM* obj, int amount, int* retSize) {
    int M[] = {20, 50, 100, 200, 500} ;
    int* ans = calloc(5 , sizeof(int));    
    int cur = amount;
    for(int i = 4; i >=0; i--){
        int p = fmin(cur/M[i], obj->bank[i]);
        cur -= p * M[i];
        ans[i] = p;
        if(cur == 0)
            break;
    }
    if(cur == 0){
        for(int i = 0; i < 5; i++){
            obj->bank[i] -= ans[i];
        }
        *retSize = 5;
        return ans;
    }
    else{
        *retSize = 1;
        ans[0] = -1;
        ans = realloc(ans, 1 * sizeof(int));
    }
    return ans;  
}

void aTMFree(ATM* obj) {
    free(obj->bank);
    free(obj);
}

/**
 * Your ATM struct will be instantiated and called as such:
 * ATM* obj = aTMCreate();
 * aTMDeposit(obj, banknotesCount, banknotesCountSize);
 
 * int* param_2 = aTMWithdraw(obj, amount, retSize);
 
 * aTMFree(obj);
*/