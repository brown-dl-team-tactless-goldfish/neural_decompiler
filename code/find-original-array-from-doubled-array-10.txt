class Solution {
public:
    vector<int> findOriginalArray(vector<int>& changed) {
        if(changed.size()%2!=0) return {};
        sort(changed.begin(),changed.end());
        unordered_map<int,int> m;
        vector<int> original;
        for(auto c : changed){
            m[c]++;
        }
        
        for(auto e : changed){
            if(e==0){
                int h = m[0]/2;
                for(int i = 0; i < h;i++){
                    original.push_back(0);
                }
                m[0] = m[0] - 2*h;
            }
            else if(m[2*e]!=0 and m[e]!=0){
                original.push_back(e);
                m[e]--;
                m[2*e]--;
                if(m[e] == 0){
                    m.erase(e);
                }
                if(m[2*e]==0){
                    m.erase(2*e);
                }
            }
        }
        
        return original.size() == (changed.size()/2) ? original : vector<int>(0) ;
    }
};