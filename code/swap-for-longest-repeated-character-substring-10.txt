class Solution {
public:
    int maxRepOpt1(string text) {
        vector<map<int,int>> records(26);
        for(int i = 0;i<text.size();i++){
            int start = i;
            int j = i;
            for(j = i;j<text.size()&&text[j]==text[i];j++);
            int end = j - 1;
            int ch = text[i] - 'a';
            records[ch][start] = end;
            i = end;
        }
        int ret = 0;
        for(auto& m : records){
            int c = 0;
            int b = 0;
            if(m.size()>1){
                b = 1;
            }
            if(m.size()>2){
                c = 1;
            }
            for(auto ptr = m.begin();ptr!=m.end();ptr++){
                auto next_ptr = next(ptr,1);
                if(next_ptr!=m.end() && ptr->second + 2 == next_ptr->first){
                    ret = max(ret, next_ptr->second - next_ptr->first + 1 + ptr->second - ptr->first + 1 + c);
                } else{
                    ret = max(ret,ptr->second - ptr->first + 1 + b);
                }
            }
        }
        return ret;
    }
};