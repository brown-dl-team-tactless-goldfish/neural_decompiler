public class Solution {
    public int LargestInteger(int num) {
        char[] ct = new char[10]{'0','1','2','3','4','5','6','7','8','9'};
        string tempString = num+"";
        StringBuilder sb = new StringBuilder(tempString);
        
        int[] oddCounter = new int[10];
        int[] evenCounter = new int[10];
        
        foreach(char c in tempString){
            int t = c-'0';
            if(t%2==1)
                oddCounter[t] ++;
            else
                evenCounter[t] ++; 
        }
       
        for(int i=0;i<tempString.Length;i++){
            int t = sb[i]-'0';
            Console.Write(t);
            if(t%2==1){
                for(int j=9;j>-1;j--){
                    if(oddCounter[j]>0){
                        oddCounter[j]--;
                        sb[i] = ct[j];
                        break;
                    }
                }
            }else{
                 for(int j=9;j>-1;j--){
                    if(evenCounter[j]>0){
                        evenCounter[j]--;
                        sb[i] = ct[j];
                        break;
                    }
                }
            }
        } 
        return Int32.Parse(sb.ToString());
    }
    
}