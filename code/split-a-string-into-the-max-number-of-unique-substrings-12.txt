class Solution {
public:
    int split(int i,string &s,unordered_set<string>&st,string temp){
        if(i==s.size())
            return 0;
        else{
             temp+=s[i];
        int op1=-1,op2=-1;
        if(st.find(temp)==st.end()){
            st.insert(temp);
            op1=1+split(i+1,s,st,"");//temp="" bcoz so that it can be checked every time
            st.erase(temp);//backtrak so that it can be processed further
        }
        op2=split(i+1,s,st,temp);//here say a b ab //we ab a is seen so move furhter and keep temp so that a+b=ab next time;
            return max(op1,op2);
        }
       
        
        
    }
    int maxUniqueSplit(string s) {
        unordered_set<string>st;
        return split(0,s,st,"");
        
        
    }
};