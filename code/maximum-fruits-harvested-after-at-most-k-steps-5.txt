class Solution {
public:
    int maxTotalFruits(vector<vector<int>>& fruits, int sP, int k) {
        int max_fruits = 0, cur_fruits = 0;
        auto dist = [sP] (auto &l, auto &r) {
            return min(abs(sP - (*l)[0])  + ((*r)[0] - (*l)[0]), // left then right
                       abs(sP - (*r)[0]) + ((*r)[0] - (*l)[0]));  // right then left
        };
        
        for (auto l = fruits.begin(), r = l; r != fruits.end(); r++) {
            cur_fruits += (*r)[1];
            for (; l <= r && dist(l, r) > k; l++)
                cur_fruits -= (*l)[1];
            max_fruits = max(max_fruits, cur_fruits);
        }
        return max_fruits;
    }
};