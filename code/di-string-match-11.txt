int* diStringMatch(char * S, int* returnSize){
    // Create the array and the counter for 0 through N
    int len = strlen(S);
    int *arr = malloc(sizeof(int) * (len + 1));
    int count = 0;
    
    // Forward run through for I's
    for (int i = 0; i < len; i++) {
        if (S[i] == 'I') {
            arr[i] = count++;
        }
    }
    
    // Last element will always be the number of I's we have seen
    arr[len] = count++;
    
    // Backwards run through for D's
    for (int i = len - 1; i >= 0; i--) {
        if (S[i] == 'D') {
            arr[i] = count++;
        }
    }
    
    // Return the new array
    returnSize[0] = len + 1;
    return arr;
}