public class Solution {
    public IList<int> PancakeSort(int[] A) {
        
        List<int> res = new List<int>();
        
        if(A == null || A.Length == 0)
            return res;
              
        int max = A.Length;
        while(max > 1)
        {
            int maxIndex = GetIndexOfMaxValue(A, max);            
            
            Flip(A, 0, maxIndex);
            res.Add(maxIndex + 1);
            
            Flip(A, 0, max - 1);  
            res.Add(max);
                        
            max--;
        }
        
        return res;
    }
    
    public int GetIndexOfMaxValue(int[] A, int max)
    {        
        for(int i = 0; i < A.Length; i++)
        {
            if(A[i] == max)
                return i;
        }      
        return -1;
    }
    
    public void Flip(int[] A, int start, int end)
    {
        while(start < end)
        {
            int temp = A[start];
            A[start] = A[end];
            A[end] = temp;
            
            start++;
            end--;
        }
    }
}