class Solution {
public:
    int maximumSum(vector<int>& arr) {
        int n = arr.size();
        vector<int>v;
        int sum = 0;
        int c = 0;
        for(int i = 0;i<n;i++){
            if(arr[i]<0){
                if(c>0){
                    v.push_back(sum);
                    c = 0;
                    sum = 0;
                }
                v.push_back(arr[i]);
            }
            else{
                c++;
                sum+=arr[i];
            }
        }
        if(c > 0) v.push_back(sum);
        int m = v.size();
        vector<vector<int>>dp(m,vector<int>(2));
        dp[0][0] = v[0];
        dp[0][1] = v[0];
        int res = dp[0][0];
        for(int i = 1;i<m;i++){
            if(v[i] >= 0){
                dp[i][0] = max(dp[i-1][0]+v[i],v[i]);
                dp[i][1] = max(dp[i-1][1]+v[i],v[i]);
            }
            else{
                if(dp[i-1][0] >= 0){
                    dp[i][0] = max(dp[i-1][1],dp[i-1][0]+v[i]);
                    dp[i][1] = dp[i-1][1]+v[i];
                }
                else{
                    dp[i][0] = v[i];
                    dp[i][1] = v[i];
                }
            }
            res = max(res,dp[i][0]);
        }
        return res;
    }
};