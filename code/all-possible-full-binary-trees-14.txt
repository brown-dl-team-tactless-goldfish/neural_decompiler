class Solution {
public:
    vector<TreeNode*> allPossibleFBT(int N) {
        if(m.count(N)) return m[N];
        if(N == 1) return m[1] = {new TreeNode(0)};
        vector<TreeNode*> res;
        for(int left = 1; left<N; left+=2){
            for(auto pl : allPossibleFBT(left)){
                for(auto pr : allPossibleFBT(N-1-left)){
                    auto head = new TreeNode(0);
                    head->left = pl;
                    head->right = pr;
                    res.push_back(head);                    
                }
            }
        }   
        return m[N] = res;   
    }    
    map<int, vector<TreeNode*>> m;
};