const int N = 22;
int b[N];

class Solution {
public:
    int beautifulSubsets(vector<int>& a, int k) {
        int n = a.size();
        sort(a.begin(), a.end());
        memset(b, 0, sizeof b);
        int res = 0;
        
        for(int i = 0; i < n; i++) {
            for(int j = i + 1; j < n; j++) {
                if(a[j] - a[i] == k) { //bad
                    b[j] |= (1 << i);
                }
            }
        }

        for(int i = 1; i < (1 << n); i++) {
            int cur = 0;
            bool yes = true;
            for(int j = 0; j < n && yes; j++) {
                if(i & (1 << j)) {
                    if(b[j] & cur) {
                        yes = false;
                        break;
                    }
                    cur |= (1 << j);
                }
            }
            if(yes) res++;
        }
        return res;
    }
};
