typedef long long int lld;
class Solution {
public:
    const static int MOD = 1e9 + 7;
    const static int MAX = 1e5 + 100;
    int cr[10] = {0,0,3,3,3,3,3,4,3,4};
    int three_rec[MAX];
    int four_rec[MAX];
    
    void init_rec() {
        memset(three_rec, 0, sizeof(three_rec));
        memset(four_rec, 0, sizeof(four_rec));
        three_rec[1] = 1;
        three_rec[2] = 2;
        three_rec[3] = 4;
        for (int v = 4; v < MAX; v++) {
            three_rec[v] = (((three_rec[v - 3] % MOD + three_rec[v - 2]) % MOD + three_rec[v - 1]) % MOD) % MOD;
        }
        four_rec[1] = 1;
        four_rec[2] = 2;
        four_rec[3] = 4;
        four_rec[4] = 8;
        for (int v = 5; v < MAX; v++) {
            four_rec[v] = ((((four_rec[v - 4] % MOD + four_rec[v - 3]) % MOD + four_rec[v - 2]) % MOD + four_rec[v - 1]) % MOD) % MOD;
        }
    }
    
    int countTexts(string pressedKeys) {
        init_rec();
        int i = 0;
        int len = pressedKeys.length();
        int res = 1;
        while (i < len) {
            int cur_seg = i;
            char cur_char = pressedKeys[i];
            i++;
            while (i < len && cur_char == pressedKeys[i]) {
                i++;
            }
            cur_seg = (i - cur_seg);
            if (cr[(int)(cur_char - '0')] == 3) {
                res = (int)(((lld)res % (lld)MOD * (lld)three_rec[cur_seg] % (lld)MOD) % (lld)MOD);
            }
            else if (cr[(int)(cur_char - '0')] == 4) {
                res = (int)(((lld)res % (lld)MOD * (lld)four_rec[cur_seg] % (lld)MOD) % (lld)MOD);
            }
        }
        return res;
    }
};