class Solution {
public:
    
    
    vector<int> findNumOfValidWords(vector<string>& a, vector<string>& b) {
        unordered_map<int, int> hash;
        for(int i = 0; i<a.size(); i++){
            int mask = 0;
            for(auto& c : a[i]){
                mask = mask|(1<<(c-'a'));
            }
            if(!hash.count(mask)) hash[mask] = 1;
            else hash[mask]++;
        }
        vector<int> ans;
        
        for(auto& p : b){
        int total = 0;   
            unordered_map<int, int> map;
            int len = p.size();
            
            for(int i = 0; i<pow(2, len); i++){
                if(i&1){
                    int mask = 0;
                    for(int k = 0; k<len; k++){
                        if(i&(1<<k)){
                            mask = (mask|1<<(p[k]-'a'));
                            if(hash.count(mask) & !map.count(mask)) {
                                map[mask] = hash[mask];
                            }
                        }
                    }
                }    
            }
        for(auto it = map.begin(); it!= map.end(); it++){
            total+=it->second;
        }
            ans.push_back(total);
    }
        return ans;
    }
};
