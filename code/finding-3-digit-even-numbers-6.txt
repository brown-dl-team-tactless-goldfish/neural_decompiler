static int x = []() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  return 0;
}();

class Solution {
public:
    vector<int> findEvenNumbers(vector<int>& digits) {
        { // remove digits with freq>3
            array<int, 10> freq{};
            for(int i = 0;i<digits.size();i++)
                freq[digits[i]]++;
        
            digits.resize(0);
            for(int i = 0;i<10;i++){
                for(int j = 0;j<min(3,freq[i]);j++){
                digits.push_back(i);
                }
            }
        }
        vector<int> res;
        int n = digits.size();
        for(int i = 0;i<n;i++){
            if(digits[i]==0) continue;
            for(int j = 0;j<n;j++){
                if(i == j) continue;
                for(int k = 0;k<n;k++){
                    if(k==i or k==j or digits[k]%2==1) continue;
                    res.push_back(digits[i]*100+digits[j]*10+digits[k]);
                }
            }
        }
        sort(res.begin(), res.end());
        auto it = unique(res.begin(), res.end());
        res.resize(distance(res.begin(), it));
        return res;
    }
};