void dfs(int n,int dude[][n],int i,int j){
    if(i<0||j<0||i>=n||j>=n||dude[i][j]==1){return;}
    dude[i][j]=1;
    dfs(n,dude,i+1,j);
    dfs(n,dude,i,j+1);
    dfs(n,dude,i-1,j);
    dfs(n,dude,i,j-1);
}
int regionsBySlashes(char ** grid, int gridSize){
    int n = gridSize;
    int dude[n*3][n*3];
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            int row=3*i;
            int col=3*j;
            if(grid[i][j]=='/'){
                dude[row][col]=0;
                dude[row][col+1]=0;
                dude[row][col+2]=1;
                dude[row+1][col]=0;
                dude[row+1][col+1]=1;
                dude[row+1][col+2]=0;
                dude[row+2][col]=1;
                dude[row+2][col+1]=0;
                dude[row+2][col+2]=0;
            }
            else if(grid[i][j]=='\\'){
                dude[row][col]=1;
                dude[row][col+1]=0;
                dude[row][col+2]=0;
                dude[row+1][col]=0;
                dude[row+1][col+1]=1;
                dude[row+1][col+2]=0;
                dude[row+2][col]=0;
                dude[row+2][col+1]=0;
                dude[row+2][col+2]=1;
            }
            else{
                dude[row][col]=0;
                dude[row][col+1]=0;
                dude[row][col+2]=0;
                dude[row+1][col]=0;
                dude[row+1][col+1]=0;
                dude[row+1][col+2]=0;
                dude[row+2][col]=0;
                dude[row+2][col+1]=0;
                dude[row+2][col+2]=0;
            }
        }
    }
    n*=3;
    int result = 0;
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            if(dude[i][j]==0){
                result++;
                dfs(n,dude,i,j);
            }
        }
    }
    return result;
}