class Solution {
public:
    long long subArrayRanges(vector<int>& A) {
        long long res = 0, N = A.size();
        stack<int> stk;
        auto runAlgo = [&](int i, bool inc) {
            while(!stk.empty() && (i == N || (inc ? A[i] <= A[stk.top()] : A[i] >= A[stk.top()]))) {
                long long p = stk.top(), v = A[p], len1 = i-p;
                stk.pop();
                long long  p0 = stk.empty() ? -1 : stk.top(), len2 = p-p0;
                res += v*len1*len2*(inc ? -1 : 1);
            }
            if(i < N) stk.push(i);
        };
        for(int i = 0; i <= N; i++) runAlgo(i, true);
        for(int i = 0; i <= N; i++) runAlgo(i, false);
        return res;
    }
};