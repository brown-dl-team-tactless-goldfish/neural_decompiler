    public class TextEditor
    {
        private readonly Stack<char> head;//text before cursor
        private readonly Stack<char> tail;//text after cursor
        private readonly Dictionary<int, string> dict;//last 10 char before cursor index
        private int pos;//position of cursor

        public TextEditor()
        {
            head = new Stack<char>();
            tail = new Stack<char>();
            dict = new Dictionary<int, string>();
            pos = 0;
            dict.Add(pos, "");
        }

        public void AddText(string text)
        {
            foreach(var c in text)
            {
                AddCharToHead(c);
            }
        }

        private void AddCharToHead(char c)
        {
            head.Push(c);
            var prev = dict[pos];
            pos++;
            var curr = prev + c;
            if(curr.Length>10)
                curr=curr.Substring(curr.Length-10,10);
            if (dict.ContainsKey(pos)) dict[pos] = curr;
            else dict.Add(pos, curr);
        }

        public int DeleteText(int k)
        {
            int count = 0;
            while(k-->0 && head.Count > 0)
            {
                head.Pop();
                count++;
            }
            pos -= count;
            return count;
        }

        public string CursorLeft(int k)
        {
            while(k-->0 && head.Count > 0)
            {
                tail.Push(head.Pop());
                pos--;
            }
            return dict[pos];
        }

        public string CursorRight(int k)
        {
            while (k-- > 0 && tail.Count > 0)
            {
                AddCharToHead(tail.Pop());
            }
            return dict[pos];
        }
    }
