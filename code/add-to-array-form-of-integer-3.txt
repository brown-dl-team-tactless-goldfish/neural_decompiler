/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* addToArrayForm(int* A, int ASize, int K, int* returnSize){
    int *res;
    int kSize = log10(K) +1 ;
    int size = kSize > ASize ? kSize : ASize;
    int i = ASize - 1;
    int j = size;
    int carry = 0;
    res = (int *) malloc ((size + 1)*sizeof(int));
    res[0] = 0; //clear
    while (j >= 0){
        int x = i >= 0 ? A[i--] : 0;
        int sum = x + K%10 + carry;
        K /= 10;
        res[j--] = sum % 10;
        carry = sum / 10;
        
    }

    if (res[0] == 0){
        memmove (res, res+1, sizeof(int) * size);
        *returnSize = size;
    }
    else {
        *returnSize = size + 1;
    }
    return res;
}