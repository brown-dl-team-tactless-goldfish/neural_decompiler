class Solution {
public:
    bool checkValidGrid(vector<vector<int>>& grid) {
                int n = grid.size();
        vector<int> dir[8] = {{1, 2}, {-1, -2}, {-1, 2}, {1, -2}, {2, 1}, {-2, -1}, {-2, 1}, {2, -1}};
        int cnt = 0;
        
        if(grid[0][0] != 0) return false;
        
        queue<pair<int, int>> q;
        q.push({0, 0});
        grid[0][0] = 0;
        
        while(!q.empty()) {
            auto [i, j] = q.front(); q.pop();
            cnt++;
            for(int d = 0; d < 8; d++) {
                int x = i + dir[d][0], y = j + dir[d][1];
                if(min(x, y) >= 0 && max(x, y) < n && grid[x][y] == cnt) {
                    q.push({x, y});
                    grid[x][y] = 0;
                }  
            }
        }
        return n * n == cnt;
    }
};