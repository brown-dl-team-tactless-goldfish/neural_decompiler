class Solution:
    def closestDivisors(self, num: int):
        print("num = ", num)

        self.res = []
        self.diff = float('inf')

        import math

        tmp_sqrt = math.sqrt(num+1)
        if (num+1 % tmp_sqrt == 0):
            self.res = [tmp_sqrt, tmp_sqrt]
            self.diff = 0

            return self.res

        tmp_sqrt = math.sqrt(num+2)
        if (num+2 % tmp_sqrt == 0):
            self.res = [tmp_sqrt, tmp_sqrt]
            self.diff = 0

            return self.res

        def helper(tmpNum):
            tmpS = str(math.sqrt(tmpNum))
            if ("." in tmpS):
                tmpS = tmpS.split(".")[0]

            # print("tmpS = ", tmpS)
            tmpLmt = int(tmpS) + 1

            for i in range(tmpLmt, 1, -1):
                # print("i = ", i)
                if (tmpNum % i == 0):
                    tmpDiff = abs(i-(tmpNum//i))
                    if (tmpDiff < self.diff):
                        self.diff = tmpDiff
                        self.res = [i, tmpNum//i]
                        break

        helper(num+1)
        helper(num+2)
        print("end self.diff = ", self.diff)
        print("end self.res = ", self.res)

        return self.res