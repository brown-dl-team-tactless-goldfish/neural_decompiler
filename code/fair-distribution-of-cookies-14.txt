class Solution {
public:
    bool is_valid(vector<int>&arr,int k,int mid){
        int count = 1, sum = 0;
        for(int i=0;i<arr.size();i++){
            sum += arr[i];
            if(mid < arr[i]) return false;
            if(sum > mid){
                count++;
                sum = arr[i];
            }
        }
        return count <= k;
    }
    int solve(vector<int> &arr,int k){
        int l = *max_element(arr.begin(),arr.end());
        int r = accumulate(arr.begin(),arr.end(),0);
        int ans;
        while(l <= r){
            int mid = (l + r)/2;
            if(is_valid(arr,k,mid)){
                ans = mid;
                r = mid - 1;
            }
            else{
                l = mid + 1;
            }
        }
        return ans;
    }
    int distributeCookies(vector<int>& arr, int k) {
        int ans=1e9;
        sort(arr.begin(),arr.end());
        do{
            ans = min(ans,solve(arr,k));   
        }while(next_permutation(arr.begin(),arr.end()));
        return ans;
    }
};