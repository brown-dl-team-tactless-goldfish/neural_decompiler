class Solution {
public:
    int dp[51][102][51];
    int n, m, k;
    static const int mod = 1e9 + 7;
    int f(int i, int mx, int cost) {
        if (cost > k) return 0;
        if (i == n) {
            return cost == k;
        }
        int &res = dp[i][mx][cost];
        if (res != -1) return res;
        res = 0;
        for (int j = 1; j <= m; ++j) {
            res = (res + f(i + 1, max(mx, j), cost + (j > mx)) % mod) % mod;
        }
        return res;
    }
    int numOfArrays(int nn, int mm, int kk) {
        n = nn;
        m = mm;
        k = kk;
        memset(dp, -1, sizeof dp);
        return f(0, 0, 0);
    }
};