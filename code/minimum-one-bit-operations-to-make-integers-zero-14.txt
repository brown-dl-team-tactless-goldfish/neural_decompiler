class Solution {
public:
    int minimumOneBitOperations(int n) {
        if(n < 2) return n;
        int m = log2(n);
        return pow(2, m+1) - minimumOneBitOperations(n - pow(2, m)) - 1;
		// some explaination to the last line: split into three parts
		// 1): pow(2, m);
		// 2): pow(2, m) - minimumOneBitOperation(n-pow(2, m));
		// 3): -1
		// 1) is for the highest '1' bit;
		// 2) is due to the 'flipping';
		// 3) is due to that index starts from 0
    }
};