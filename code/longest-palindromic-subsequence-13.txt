class Solution {
public:
    int dp[1005][1005];
    string st, t;

    int solve(int i, int j) {
        if(i == st.size() or j == t.size()) return 0;
        if(dp[i][j] != -1) return dp[i][j];
        int ans = 0;
        if(st[i] == t[j]) ans = 1 + solve(i + 1, j + 1);
        else ans = max(solve(i + 1, j), solve(i, j + 1));
        return dp[i][j] = ans;
    }

    int longestPalindromeSubseq(string s) {
        memset(dp , -1, sizeof(dp));
        st = s;
        t = s;
        reverse(t.begin(), t.end());
        int ans = solve(0, 0);
        return ans;
    }
};