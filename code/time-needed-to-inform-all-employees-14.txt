public class Solution {
    public int NumOfMinutes(int n, int headID, int[] manager, int[] informTime) {
        int CurrentMAx = 0;
        Dictionary<int, List<int>> Dic = new Dictionary<int, List<int>>();
        for(var c  = 0; c<manager.Length; c++)
        {
            if(Dic.ContainsKey(manager[c]))
            {
             var ttt = new List<int>(Dic[manager[c]]);
                ttt.Add(c);
               Dic[manager[c]] =   ttt;   
            }
            else
            {
                Dic.Add(manager[c], new List<int>(){c});   
            }
        }
      SumTimes(headID,ref Dic,  informTime, ref CurrentMAx, informTime[headID]);

        return CurrentMAx;
    }
    public void SumTimes(int headID,
                         ref Dictionary<int, List<int>> manager,
                         int[] informTime,
                         ref int CurrentMAx,
                         int CurrentSum)
    {
       
        if(manager.ContainsKey(headID)){
            var Temlist =  manager[headID];
            for(var i = 0; i< manager[headID].Count; i++) 
            {

                    var t = CurrentSum + informTime[Temlist[i]];
                    CurrentMAx = Math.Max(CurrentMAx, t);
                    SumTimes(Temlist[i],
                             ref manager, 
                             informTime, ref CurrentMAx, t);

            }
        }
    }
}