class Solution {
public:

    void seeall(int i,int j, vector<vector<char>> &g){
        // go up
        for(int r = i-1;r>=0;r--){
            if(g[r][j] == 'N' || g[r][j] == 'V'){
                g[r][j] = 'V';
            }else break;
        }
        // go down
        for(int r = i+1;r<g.size();r++){
            if(g[r][j] == 'N' || g[r][j] == 'V'){
                g[r][j] = 'V';
            }else break;
        }
        // go left
        for(int c = j-1;c>=0;c--){
            if(g[i][c] == 'N' || g[i][c] == 'V'){
                g[i][c] = 'V';
            }else break;
        }
        // go right
        for(int c = j+1;c<g[0].size();c++){
            if(g[i][c] == 'N' || g[i][c] == 'V'){
                g[i][c] = 'V';
            }else break;
        }
    }

    int countUnguarded(int m, int n, vector<vector<int>>& guards, vector<vector<int>>& walls) {
        vector<vector<char>> grid(m,vector<char>(n,'N'));
        // Now fill with wall and gaurd
        for(auto x: guards){
            grid[x[0]][x[1]] = 'G';
        }
        for(auto x: walls){
            grid[x[0]][x[1]] = 'W';
        }
        // Now for each gaurd mark every cell V
        for(auto x: guards){
            seeall(x[0],x[1],grid);
        }
        int ans = 0 ;
        for(auto x: grid){
            for(auto c: x) if(c == 'N') ans++;
        }
        return ans;
    }
};