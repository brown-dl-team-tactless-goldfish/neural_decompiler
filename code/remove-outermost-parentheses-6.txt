char * removeOuterParentheses(char * S){
    int len = strlen(S);
    bool* arr = malloc(len * sizeof(bool)); // array indicating keep/remove the char
    for(int i=0; i<len; i++){
        arr[i] = true;
    }
    int lenRes = len; // length of the return string
    int count = 0; // counter of opened parentheses
    for(int i=0; i<len; i++){
        if(S[i] == '('){
            count++;
            if(count == 1){ // counter from 0 to 1
                arr[i] = false;
                lenRes--;
            }
        } else if(S[i] == ')'){
            count--;
            if(count == 0){ // counter from 1 to 0
                arr[i] = false;
                lenRes--;
            }
        }
    }
    char* res = malloc((lenRes+1) * sizeof(char));
    memset(res, 0, lenRes+1);
    int index = 0;
    for(int i=0; i<len; i++){
        if(arr[i]) res[index++] = S[i];
    }
    return res;
}