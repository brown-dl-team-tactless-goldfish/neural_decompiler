int partition(int a[], int p, int r) {
    int temp = 0;
    int i = p;
    int j = p;
    int pivot = a[r];
    
    for (j = p; j < r; j++) {
        if (a[j] > pivot) {
            temp = a[j];
            a[j] = a[i];
            a[i] = temp;
            i++;
        }
    }
    
    temp = a[r];
    a[r] = a[i];
    a[i] = temp;
    
    return i;
}

void quickSort(int a[], int p, int r) {
    if (p >= r) {
        return;
    }
    
    int q = partition(a, p, r);
    quickSort(a, p, q - 1);
    quickSort(a, q + 1, r);
}

int hIndex(int* citations, int citationsSize) {
    quickSort(citations, 0, citationsSize - 1);
    
    int i = 0;
    int ret = 0;
    for (i = 0; i < citationsSize; i++) {
        if (citations[i] >= i + 1) {
            ret = i + 1 > ret ? i + 1 : ret;
        }
    }
    
    return ret;
}