typedef long long ll;
class Solution {
public:
    int maxPoints(vector<Point>& points) {
        if (0 == points.size()) return 0;
        auto gcd  = [] (ll a, ll b) {
            int temp;
            while(b)
            {
                temp = b;
                b = a % b;
                a = temp;
            }
            return a;
        };
        auto solve = [=] (ll x1, ll y1, ll x2, ll y2) {
            ll a = y1 - y2;
            ll b = x2 - x1;
            ll c = y1 * (x1 - x2) + x1 * (y2 - y1);
            ll d = gcd(gcd(a, b), c);
            return make_tuple(a / d, b / d, c / d);
        };
        int n = points.size();
        int ret = 1;
        for (int i = 1; i < n; ++i) {
            map<tuple<ll,ll,ll>,int> line_map;
            int same_cnt = 0;
            for (int j = 0; j < i; ++j) {
                if (points[i].x != points[j].x || points[i].y != points[j].y) {
                    auto p = solve(points[j].x, points[j].y, points[i].x, points[i].y);
                    ++line_map[p];
                } else {
                    ++ same_cnt;
                }
            }
            ret = max(ret, same_cnt+1);
            for(auto& line : line_map) {
                ret = max(ret, line.second + 1 + same_cnt);
            }
        }
        return ret;
    }
};