int visiblePoints(vector<vector<int>>& points, int angle, vector<int>& loc) {
    vector<double> angs;
    int max_points = 0, overlap = 0;
    for (auto &p : points) {
        if (p[1] == loc[1] && p[0] == loc[0])
            ++overlap;
        else
            angs.push_back(atan2(p[1] - loc[1], p[0] - loc[0]) * 180 / M_PI);
    }
    sort(begin(angs), end(angs));
    int sz = angs.size();
    for (int i = 0, j = 0; i < sz * 2; ++i) {
        if (360 * (i >= sz) + angs[i % sz] - 360 * (j >= sz) - angs[j % sz] > angle)
            ++j;
        max_points = max(max_points, i - j + 1);
    }
    return max_points + overlap;
}