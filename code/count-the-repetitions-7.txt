public class Solution {
	public int GetMaxRepetitions(string s1, int n1, string s2, int n2) 
	{
		int len1 = s1.Length, len2 = s2.Length;
		if (len1 == 0 || len2 == 0 || len1 * n1 < len2 * n2)
			return 0;

		int[] repeatCnt = new int[len2 + 1];
		int[] nextIdx = new int[len2 + 1];
		int cnt = 0, idx = 0;
		for (int i = 0; i < n1; i++) 
		{
			foreach (char c in s1) 
			{
				if (c == s2[idx]) 
				{
					idx++;
					if (idx == len2) 
					{
						idx = 0;
						cnt++;
					}
				}
			}
			repeatCnt[i] = cnt;
			nextIdx[i] = idx;
			for (int j = 0; j < i; j++) 
			{
				if (nextIdx[j] == idx) 
				{
					int prefixCount = repeatCnt[j];
					int patternCount = (repeatCnt[i] - repeatCnt[j]) * ((n1 - j - 1) / (i - j));
					int suffixCount = repeatCnt[j + (n1 - j - 1) % (i - j)] - repeatCnt[j];
					return (prefixCount + patternCount + suffixCount) / n2;
				}
			}
		}
		return repeatCnt[n1 - 1] / n2;
	}
}