class Solution {
public:
    int maximumGain(string s, int x, int y) {
        const int N = s.size();
        
        int start = 0;
        int ret = 0;
        for (int i = 0; i < s.size(); ++i) {
            if (s[i] == 'a' || s[i] == 'b') {
                continue;
            }
            
            ret += count(s.substr(start, i - start), x, y);
            
            start = i+1;
        }
        
        ret += count(s.substr(start, s.size() - start), x, y);
        
        return ret;
    }
    
    int count(const string& s, int x, int y) {
        if (s.empty()) {
            return 0;
        }
        
        char a = 'a', b = 'b';
        if (y > x) {
            a = 'b';
            b = 'a';
            swap(y, x);
        }
        
        int ap = 0, bp = 0;
        int ret = 0;
        for (auto& c : s) {
            if (c == a) {
                ++ap;
            } else {
                if (ap > 0) {
                    ret += x;
                    --ap;
                } else {
                    ++bp;
                }
            }
        }
        
        ret += min(ap, bp) * y;
        return ret;
    }
};