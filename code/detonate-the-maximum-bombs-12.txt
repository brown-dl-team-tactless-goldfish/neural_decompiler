int maximumDetonation(vector<vector<int>>& nums) {
        vector<vector<int>>graph(nums.size(), vector<int>());
        for(int i=0;i<nums.size();i++){
            int cx=nums[i][0], cy=nums[i][1], cr=nums[i][2];
            for(int j=0;j<nums.size();j++){
                if(i!=j){
                    int x=nums[j][0], y=nums[j][1];
                    long long dis=(long long)pow(abs(cx-x), 2)+(long long)pow(abs(cy-y), 2);
                    if(sqrt(dis)<=cr){
                        graph[i].push_back(j);
                    }
                }
            }
        }
        int ans=0;
        for(int i=0;i<nums.size();i++){
            int cur=0;
            queue<int>q;
            q.push(i);
            unordered_map<int, int>visited;
            visited[i]=1;
            while(!q.empty()){
                int f=q.front();q.pop();
                cur++;
                for(auto v:graph[f]){
                    if(visited[v]==0){
                        q.push(v);
                        visited[v]=1;
                    }
                }
            }
            ans=max(ans, cur);
        }
        return ans;
    }