


typedef struct {
    unsigned long int pingtime[10000];
    unsigned int back_index;
    unsigned int cur_index;
    
} RecentCounter;


RecentCounter* recentCounterCreate() {
     RecentCounter *output = malloc(sizeof(RecentCounter));
     output->back_index = 0;
     output->cur_index = 0;
     return output;
}

int recentCounterPing(RecentCounter* obj, int t) {
    if(obj->cur_index==0)
    {
      obj->pingtime[obj->cur_index] = t;
      obj->cur_index++; 
      obj->back_index = 0;
      return 1;
    } 
    else 
    {
      obj->pingtime[obj->cur_index] = t;
       
      while((obj->pingtime[obj->cur_index] - obj->pingtime[obj->back_index])>3000)
      {
          obj->back_index++;
      }
      int ret = obj->cur_index-obj->back_index+1;
      obj->cur_index++;
      return (ret);
    }
    
    


}

void recentCounterFree(RecentCounter* obj) {
    free(obj);
}

/**
 * Your RecentCounter struct will be instantiated and called as such:
 * RecentCounter* obj = recentCounterCreate();
 * int param_1 = recentCounterPing(obj, t);
 
 * recentCounterFree(obj);
*/