class Solution {
public:
    int maximumTastiness(vector<int>& price, int k) {
        sort(price.begin(), price.end());
        int l = 0, r = 1+price.back() - price.front();
        while(l+1<r){
            auto mid = (l+r)/2;
            able(price, k, mid) ? l = mid : r = mid;
        }
        return l;
    }

    bool able(vector<int>& v, int k, int dis){
        int count = 1, cur = v[0];
        for(auto x:v){
            if(x-cur>=dis){
                count++;
                cur = x;
            }
            if(count>=k) return true;
        }
        return false;
    }
};