class Solution {
public:
    int maximumCostSubstring(string s, string chars, vector<int>& vals) {
        map<char, int> mp;
        int id = 1;
        for(char c = 'a'; c <= 'z'; c++) mp[c] = id, id++;
        for(int i=0; i<vals.size(); i++) mp[chars[i]] = vals[i];
        vector<int> nums;
        for(auto x: s) nums.push_back(mp[x]);
        int ans = nums[0], sum = 0;
        for(int i=0; i<nums.size(); i++) {
            sum += nums[i];
            if(sum > ans) ans = sum;
            if(sum < 0) sum = 0;
        }
        return max(ans, 0); 
    }
};