#define DEAD 0
#define LIVE 1

#define DEAD_TO_LIVE 2
#define LIVE_TO_DEAD 3

void gameOfLife(int** board, int boardSize, int* boardColSize){
    int i, j, p;
    int lives = 0;
    
    int pos[8][2] = {
        {0, 1},
        {0, -1},
        {1, 0},
        {1, 1},
        {1, -1},
        {-1, 0},
        {-1, 1},
        {-1, -1},
    };
    
    for (i = 0; i < boardSize; i++) {
        for (j = 0; j < *boardColSize; j++) {
            
            // count lives around
            for (p = 0; p < sizeof(pos)/sizeof(pos[0]); p++) {
                if (i + pos[p][0] >= 0 && i + pos[p][0] < boardSize
                    && j + pos[p][1] >= 0 && j + pos[p][1] < *boardColSize) {
                    if (board[i + pos[p][0]][j + pos[p][1]] == LIVE
                       || board[i + pos[p][0]][j + pos[p][1]] == LIVE_TO_DEAD) {
                        lives++;
                    }
                }
            }
            
            // decide live of dead in next state
            if (board[i][j] == LIVE) {
                if (lives < 2 || lives > 3) {
                    board[i][j] = LIVE_TO_DEAD;
                }
            } else if (board[i][j] == DEAD) {
                if (lives == 3) {
                    board[i][j] = DEAD_TO_LIVE;
                }
            }
            
            lives = 0;
        }
    }
    
    // convert to orignal dead or live value
    for (i = 0; i < boardSize; i++) {
        for (j = 0; j < *boardColSize; j++) {
            if (board[i][j] == DEAD_TO_LIVE) {
                board[i][j] = LIVE;
            } else if (board[i][j] == LIVE_TO_DEAD) {
                board[i][j] = DEAD;
            }
        }
    }
    
    return;
}