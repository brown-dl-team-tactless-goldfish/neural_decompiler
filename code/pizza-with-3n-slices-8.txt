public int MaxSizeSlices(int[] slices) {
	int res1 = helper(slices, 1, slices.Length-1);
	int res2 = helper(slices, 0, slices.Length-2);

	return Math.Max(res1, res2);
}

private int helper(int[] slices, int b, int e)
{
	int m = slices.Length;
	int n = slices.Length/3;
	int[,] dp = new int[m,n+1];

	for(int i=b; i<=e; i++)
	{
		for(int j=1; j<=n; j++)
		{
			if(i<1)
			{
				dp[i,j] = slices[i];
			}
			else if(i<2)
			{
				dp[i,j] = Math.Max(dp[i-1,j], slices[i]);
			}
			else
			{
				dp[i,j] = Math.Max(dp[i-1,j], slices[i] + dp[i-2, j-1]);
			}
		}
	}

	return dp[e,n];
}