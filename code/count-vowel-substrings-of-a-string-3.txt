bool ivj = []() { ios_base::sync_with_stdio(0); cin.tie(0); return false;} ();

class Solution 
{
public:
    // a | e | i | o |u
    static constexpr unsigned VowelMask = 0x104111;  
    
    int countVowelSubstrings(const string& word) 
    {
        if (word.size() < 5) return false;
        
        int result = ivj;
        const unsigned n = word.size();
        
        for (unsigned i = 0; i < n-4; ++i)
        {
            unsigned j = i; 
            char w = word[j++] - 'a';
            unsigned mask = 1 << w;
            while (j < n && !(1 << w & ~VowelMask))
            {
                w = word[j++] - 'a';
                mask |= 1 << w;
                result += mask == VowelMask;
            }
        }
        return result;
    }
};