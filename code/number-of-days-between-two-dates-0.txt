typedef struct _date{
    int y;
    int m;
    int d;
}date;
date* dayToInt(char * date1, char * date2){
    int y1 = (date1[0] -'0')*1000 + (date1[1] -'0')*100 + (date1[2] -'0')*10 + (date1[3] -'0')*1  ;
    int m1 = (date1[5] -'0')*10 + (date1[6] -'0')*1  ;
    int d1 = (date1[8] -'0')*10 + (date1[9] -'0')*1  ;
    
    int y2 = (date2[0] -'0')*1000 + (date2[1] -'0')*100 + (date2[2] -'0')*10 + (date2[3] -'0')*1  ;
    int m2 = (date2[5] -'0')*10 + (date2[6] -'0')*1  ;
    int d2 = (date2[8] -'0')*10 + (date2[9] -'0')*1  ;
    
    date* ret = malloc(2 * sizeof(date) );
    if(y1 < y2  || ( (y1==2) && (m1 < m2) ) || ((y1==y2)&&(m1==m2)&&(d1 <= d2)) ){
        ret[0].y = y1 ;
        ret[0].m = m1 ;
        ret[0].d = d1 ;
        ret[1].y = y2 ;
        ret[1].m = m2 ;
        ret[1].d = d2 ;
    }
    else{
        ret[0].y = y2 ;
        ret[0].m = m2 ;
        ret[0].d = d2 ;
        ret[1].y = y1 ;
        ret[1].m = m1 ;
        ret[1].d = d1 ;
    }
    return ret;
}
                       
bool IsLeapYear(int val){
    if(val %4 != 0)
        return false;
    else if(val%100 == 0 && (val%400 != 0))
        return false;
    else 
        return true;
}
int daysBetweenDates(char * date1, char * date2){
    int days1[] = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
    int days2[] = {0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};  //leap year
    date* gap = dayToInt(date1, date2);
    int ans = 0;
    bool leapYear = false;
    int* days;
    //same year
    if(gap[0].y == gap[1].y){
        //same year && same month
        if(gap[0].m == gap[1].m){
            ans = gap[1].d - gap[0].d;
            return ans;
        }
        //same year && not same month
        else{            
            leapYear = IsLeapYear(gap[0].y);
            if(leapYear)
                days = days2;
            else
                days = days1;
            ans = days[gap[0].m] - gap[0].d + 1;
            for(int i = gap[0].m + 1; i < gap[1].m; i++){
                ans += days[i];
            }
            ans += gap[1].d;
            return ans;
        }
    }
    else{ //not same year
        leapYear = IsLeapYear(gap[0].y);
            if(leapYear)
                days = days2;
            else
                days = days1;   
        ans += days[gap[0].m] - gap[0].d ;
        for(int i = gap[0].m + 1; i <= 12; i++){
            ans += days[i];
        }
        for(int i = gap[0].y + 1; i < gap[1].y; i++){
            if(IsLeapYear(i))
                ans += 366;    
            else
                ans += 365;
        }
        leapYear = IsLeapYear(gap[1].y);
        if(leapYear)
            days = days2;
        else
            days = days1;
        for(int i =1; i < gap[1].m; i++){
            ans += days[i];
        }
        ans += gap[1].d;
        return ans;
    }    
}