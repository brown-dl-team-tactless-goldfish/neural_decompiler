class Solution {
public:
    vector<int> getSumAbsoluteDifferences(vector<int>& nums) {
        int n = nums.size();
        
        // prefix array and suffix array
        vector<int> prefix = nums;
        vector<int> suffix = nums;
        
        // get the prefix sum
        for(int i=1; i<n; i++)
            prefix[i] += prefix[i-1];
        
        // get the suffix sum
        for(int i=n-2; i>=0; i--)
            suffix[i] += suffix[i+1];
        
        // get the new value of each element in nums
        for(int i=0; i<n; i++) {
            int pre = (i == 0 ? 0 : i*nums[i] - prefix[i-1]);
            int suf = (i == n-1 ? 0 : (n-i-1)*nums[i] - suffix[i+1]);
            
            nums[i] = abs(pre)+abs(suf);
        }
        
        return nums;
    }
};

*Time complexity*  T( N ) = O(N)
*Space Complexity*  S( N ) = O(N)
