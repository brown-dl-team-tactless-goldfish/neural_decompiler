class Solution {
public:
    int ans;
    class node
    {
        public:
        bool isbst;
        int min_val;
        int max_val;
        int sum;
        node()
        {
            isbst=true;
            min_val=INT_MAX;
            max_val=INT_MIN;
            sum=0;
        }
    };
    node find(TreeNode*root)
    {
        if(root==NULL)
        {
            node new_node;
            return new_node;
        }
        node new_node;
        node left=find(root->left);
        node right=find(root->right);
        if(left.isbst&&right.isbst&&(left.max_val<root->val&&root->val<right.min_val))
        {
             new_node.isbst=true;
             new_node.min_val=min(root->val,min(left.min_val,right.min_val));
             new_node.max_val=max(root->val,max(left.max_val,right.max_val));
             new_node.sum=root->val+left.sum+right.sum;
        }
        else
        {
            new_node.isbst=false;
            new_node.sum=max(left.sum,right.sum);
        }
        ans=max(ans,new_node.sum);
        return new_node;
    }
    int maxSumBST(TreeNode* root)
    {     
        ans=-1e9;
        find(root);
        return ans<0?0:ans;
    }
};