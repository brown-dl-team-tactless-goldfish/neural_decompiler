int cmp1(const void* a, const void* b){
    int* A = *(int**)a;
    int* B = *(int**)b;
    return B[0] - A[0] ;
}
int cmp2(const void* a, const void* b){
    int* A = *(int**)a;
    int* B = *(int**)b;
    return A[1] - B[1] ;
}
int* maxSubsequence(int* nums, int numsSize, int k, int* returnSize){
    int n = numsSize;
    int** data = malloc(n * sizeof(int*));
    for(int i = 0; i < n; i++){
        data[i] = malloc(2 * sizeof(int));
        data[i][0] = nums[i];
        data[i][1] = i;
    }
    qsort(data, n, sizeof(int*), cmp1);
    qsort(data, k, sizeof(int*), cmp2);
    int* ans = malloc(k * sizeof(int));
    for(int i = 0;  i < k; i++){
        ans[i] = data[i][0];
    }
    for(int i = 0; i < n ;i++){
        free(data[i]);
    }
    free(data);
    *returnSize = k;
    return ans;    
}