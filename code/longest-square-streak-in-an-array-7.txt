class Solution {
public:

    bool isPerfectSquare(long double x)
{

    if (x >= 0) {
        long long sr = sqrt(x);
        return (sr * sr == x);
    }

    return false;
}
 
    int longestSquareStreak(vector<int>& nums) {
        
                
        sort(nums.begin(),nums.end());
        long long firstroot=-1,secondroot=-1,len=2,ind=0;
        
         for(int i=0;i<nums.size();i++){
           if(isPerfectSquare(nums[i])){
              auto c = find(nums.begin(),nums.end(),pow(nums[i],0.5));
              if(c!=nums.end()){
                firstroot=*c;
                secondroot=nums[i];
                ind=c-nums.begin();
                break;
            }
               
           }
        }
        if(firstroot==-1)
            return -1;
        
           for(int i=ind;i<nums.size();i++){
             if(nums[i] == secondroot*secondroot){
                 secondroot=nums[i];
                 len++;
             }   
        }
        
        return len;
        
    }
};