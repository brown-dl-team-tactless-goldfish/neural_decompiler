char * reorganizeString(char * S){
    int i;
    int maxCount=-1, pos = 0;
    int len = strlen(S);
    int buffer[26] = {0};
    char* result;
    int idx = 0;
    
    for(i=0;i<len;i++)
    {
        buffer[S[i]-'a']++;
        if(maxCount < buffer[S[i]-'a'])
        {
            maxCount = buffer[S[i]-'a'];
            pos = S[i] - 'a';
        }
    }
    
    // if the most charactor is over half, no chance
    if(maxCount > (len+1)/2)
        return "";
    
    result = (char*)malloc(len+1);
    
    // insert the most frequent char into position, 0,2,4,...len-1(len-2), 1,3,5,...
    while(buffer[pos])
    {
        result[idx] = pos + 'a';
        idx += 2;
        if(idx >= len)
            idx = 1;

        buffer[pos]--;
    }
    
    // insert all the rest, sequence doesn't matter
    for(i=0;i<26;i++)
    {
        while(buffer[i])
        {
            result[idx] = i + 'a';
            idx += 2;
            if(idx >= len)
                idx = 1;

            buffer[i]--;
        }
    }
    
    result[len] = '\0';
    return result;
}