class Solution:
    def strongPasswordCheckerII(self, password: str) -> bool:
        n = len(password)
        flag_has_lower = False
        flag_has_upper = False
        flag_has_digit = False
        flag_has_special = False
        flag_has_adjacent = False
        
        if (n < 8):
            return False
        
        for i in range(n):
            # print ("i = ", i, password[i])
            if (password[i].islower()):
                flag_has_lower = True
            elif (password[i].isupper()):
                flag_has_upper = True
            elif (password[i].isdigit()):
                flag_has_digit = True
            elif (password[i] in "!@#$%^&*()-+"):
                flag_has_special = True
                
            if (i != 0):
                if (password[i] == password[i-1]):
                    flag_has_adjacent = True
                    # print ("1 return False")
                    return False
        # print ("flag_has_lower = ", flag_has_lower)
        # print ("flag_has_upper = ", flag_has_upper)
        # print ("flag_has_digit = ", flag_has_digit)
        # print ("flag_has_special = ", flag_has_special)
        # print ("flag_has_adjacent = ", flag_has_adjacent)
        
        
        if (flag_has_lower and flag_has_upper and flag_has_digit and flag_has_special):
            return True    
        
        return False
            