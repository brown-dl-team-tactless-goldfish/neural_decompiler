class Bitset {
public:
    string s;
    int cnt; //to count number of 1
    bool f; //intitally flip is false
    Bitset(int size) {
        for(int i = 0 ;i<size;i++){
            s.push_back('0');
            cnt = 0;
            f = false;
        }
    }
    
    void fix(int idx) {
        if(!f){ //check if string is fliped or not 
            if(s[idx] == '0'){
                s[idx] = '1';
                cnt++;
            }
        }
        else{
            if(s[idx] == '1'){
                s[idx] = '0';
                cnt++;
            }
        }
    }
    
    void unfix(int idx) {
        if(!f){
            if(s[idx] == '1'){
                s[idx] = '0';
                cnt--;
            }
        }
        else{
            if(s[idx] =='0'){
                s[idx] = '1';
                cnt--;
            }
        }
    }
    
    void flip() {
        f = !f; //reverse flip sign
				 //we dont atually flip
				 // if two times flip then there is no change in string
        cnt = s.size() - cnt;
    }
    
    bool all() {
        if(cnt == s.size()) return true;
        else return false;
    }
    
    bool one() {
        if(cnt > 0) return true;
        return false;
    }
    
    int count() {
        return cnt;
    }
    
    string toString() {
        if(!f){
            return s;
        }
        else{
            for(auto &x : s){
                if(x == '1') x = '0';
                else x = '1';
            }
            f = false;   //now string is converted to correct order
            return s;
        }
    }
};