class Solution {
public:
    int maxConsecutive(int bottom, int top, vector<int>& special) {
        
        int size = special.size();
        
        sort(special.begin(),special.end());
        
        int maxCount = 0;
        
        // get exclusive difference among special floors
        for(int i=0;i<size-1;i++)
            maxCount = max(maxCount,special[i+1]-special[i]-1);
        
        // get max difference between bottom and first special and top and last special
        return max({maxCount,special[0]-bottom,top-special[size-1]});
    }
};