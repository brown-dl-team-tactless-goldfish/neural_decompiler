class Solution {
private:
    int memo[1001];
    int solve(int i,vector<int>&arr,int k){
        if(i == arr.size()) return 0;
        if(memo[i] != -1) return memo[i];
        
        unordered_map<int,int> mp; 
        int maxi = INT_MAX, res = 0;
        
        for(int j=i;j<arr.size();j++){
            mp[arr[j]]++;
            if(mp[arr[j]] == 2) res += 2;
            else if(mp[arr[j]] > 2) res++;
            maxi = min(maxi,res+k+solve(j+1,arr,k));
        }
                      
        return memo[i] = maxi;
    }
public:
    int minCost(vector<int>& nums, int k) {
        memset(memo,-1,sizeof memo);
        return solve(0,nums,k);
    }
};