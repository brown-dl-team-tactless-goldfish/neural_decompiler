class Solution {
public:
    vector<long long> getDistances(vector<int>& arr) {
        int n = arr.size();
        vector<long long> left(n),right(n),ans(n);
        
        unordered_map<int,int> mp1,mp2;
        for(int i=0;i<n;i++){
            if(mp1.count(arr[i])){
                left[i] = left[mp1[arr[i]]] + (mp2[arr[i]] * abs(i - mp1[arr[i]]));
            }else{
                left[i] = 0;
            }
            mp1[arr[i]] = i;
            mp2[arr[i]]++;
        }
        
        mp1.clear(); mp2.clear();
        
        for(int i=n-1;i>=0;i--){
            if(mp1.count(arr[i])){
                right[i] = right[mp1[arr[i]]] + (mp2[arr[i]] * abs(i - mp1[arr[i]]));
            }else{
                right[i] = 0;
            }
            mp1[arr[i]] = i;
            mp2[arr[i]]++;        
        }
        
        for(int i=0;i<n;i++) ans[i] = left[i] + right[i];
        
        return ans;
    }
};