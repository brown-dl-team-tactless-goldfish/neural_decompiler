class Solution {
public:
	int minCut(string s) {
		int n=s.size();
		cout<<n<<endl;
		vector<vector<int>> valid(n,vector<int>(n));
		for(int i=0;i<n;i++){
			valid[i][i]=1;
		}
		for(int l=2;l<=n;l++){
			for(int i=0;i<=n-l;i++){
				int j=i+l-1;
				if(s[i]==s[j] && j-i==1){
					valid[i][j]=1;
				}
				else if(s[i]==s[j] && valid[i+1][j-1]){
					valid[i][j]=1;
				}

			}
		}
		vector<int> dp(n,n);
		for(int i=0;i<n;i++){
			if(valid[0][i]){
				dp[i]=0;
				continue;
			}
			for(int j=0;j<i;j++){
				if(valid[j+1][i]){
					dp[i]=min(dp[i],dp[j]+1);
				}
			}
		}



		return dp.back();

	}
};