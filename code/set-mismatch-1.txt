int* findErrorNums(int* nums, int numsSize, int* returnSize){
    //return size is always 2
    *returnSize = 2;
    //hash table creation
    int* HASH_TABLE = (int*)calloc(numsSize +1,sizeof(int));
    //return value
    int* return_val = (int*)calloc(2,sizeof(int));
    //popolate hash table
    for(int ptr=0; ptr < numsSize; ptr++){
        HASH_TABLE[nums[ptr]]++;
    }
    //check if any value is hash table is not preset 
    for(int hash_ptr =1; hash_ptr < numsSize + 1; hash_ptr++){
       //number which is missing
       if(!HASH_TABLE[hash_ptr]){
            return_val[1] = hash_ptr;
       }
       //number which is repeated
       if(HASH_TABLE[hash_ptr] == 2){
            return_val[0] = hash_ptr;
       }
    }
    //free hash table
    free(HASH_TABLE);
    return return_val;
}