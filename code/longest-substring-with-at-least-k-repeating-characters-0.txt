int longestSubstring(char * s, int k){
    int n = strlen(s);
    if(k == 1)
        return n;
    int* alpha = calloc(26, sizeof(int));
    int max = 0;
    for(int i = 1; i <=26; i++){
        int l = 0, r;
        alpha = calloc(26, sizeof(int));
        int type = 0;
        int curT = 0;
        bool flag = false;
        for(r = 0; r < n; r++){
            alpha[s[r] - 'a']++;
            if( alpha[s[r] - 'a'] == 1){
                type++;
            }
            if(alpha[s[r] - 'a'] == k)
                curT++;
            if(curT == i && type == i){
                max = fmax(max, r-l + 1) ; 
                flag = true;
            }
            while(type > i){
                alpha[s[l] - 'a']--;
                if(alpha[s[l] - 'a'] == 0){
                    type--;
                }
                if(alpha[s[l] - 'a'] == (k-1)){
                    curT--;
                }
                l++;
            }
        }
        if(flag == false)
            break;
    }
    return max;
}