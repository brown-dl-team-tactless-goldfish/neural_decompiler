class H2O {
public:
    H2O() {}

    void hydrogen(function<void()> releaseHydrogen) {
            std::unique_lock lk(mt);
            cv.wait(lk, [this]{return numH<2;});
            releaseHydrogen();
            numH++;
            tryGenerateH2O();
            lk.unlock();
            cv.notify_all();
    }

    void oxygen(function<void()> releaseOxygen) {
            std::unique_lock lk(mt);
            cv.wait(lk, [this]{return numO<1;});
            releaseOxygen();
            numO++;
            tryGenerateH2O();
            lk.unlock();
            cv.notify_all();
    }
    
    void tryGenerateH2O(){
        if(numH == 2 && numO == 1){
            numH = 0;
            numO = 0;
        }
    }
    
    std::mutex mt;
    std::condition_variable cv;
    std::atomic<int> numH = 0;
    std::atomic<int> numO = 0;
};