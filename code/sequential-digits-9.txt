public class Solution {
        public IList<int> SequentialDigits(int low, int high)
        {
            SortedSet<int> result = new SortedSet<int>();

            for (int i = 0; i < 10; i++)
                Backtrack(result, i, i + 1, low, high);

            return result.ToList<int>();
        }

        private void Backtrack(SortedSet<int> result, int current, int next, int low, int high)
        {
            if (current > high || next > 10)
                return;
            else if (current >= low && current <= high)
                result.Add(current);

            Backtrack(result, current * 10 + next, next + 1, low, high);
        }
}