class Solution {
public:
    int maximalNetworkRank(int n, vector<vector<int>>& roads) {
        int i,j,x,y,degree,maxi=0;
        int A[n][n];
        vector<int> adj[n];
        for(i=0;i<n;i++) for(j=0;j<n;j++) A[i][j]=0;
        for(i=0;i<roads.size();i++){
            x=roads[i][0]; y=roads[i][1];
            A[x][y]=1; A[y][x]=1;
            adj[x].push_back(y);
            adj[y].push_back(x);
        }
        for(i=0;i<n;i++){
            for(j=i+1;j<n;j++){
                degree=adj[i].size();
                degree+=adj[j].size();
                if(A[i][j]==1 &&A[j][i]==1 && degree!=0) degree--;
                cout<<degree<<endl;
                maxi=max(maxi,degree);
            }
        }
        return maxi;
    }
};