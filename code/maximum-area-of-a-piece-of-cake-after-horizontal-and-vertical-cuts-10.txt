public class Solution {
    public int MaxArea(int h, int w, int[] horizontalCuts, int[] verticalCuts) {
        if (h == 0 || w == 0)
            return 0;
        
        Array.Sort(horizontalCuts);
        Array.Sort(verticalCuts);
        
        long hMax = (long)horizontalCuts[0];
        
        for (int i = 0; i < horizontalCuts.Length - 1; i++)
            hMax = Math.Max((long)horizontalCuts[i + 1] - (long)horizontalCuts[i], hMax);
        
        hMax = Math.Max((long)h - (long)horizontalCuts[horizontalCuts.Length - 1], hMax);
        
        long wMax = (long)verticalCuts[0];
        
        for (int i = 0; i < verticalCuts.Length - 1; i++)
            wMax = Math.Max((long)verticalCuts[i + 1] - (long)verticalCuts[i], wMax);
        
        wMax = Math.Max((long)w - (long)verticalCuts[verticalCuts.Length - 1], wMax);
        
        return (int)(hMax * wMax % 1000000007);
    }
}