int** largestLocal(int** grid, int gridSize, int* gridColSize, int* returnSize, int** returnColumnSizes){
    int i, j, max = 0, row, col;
    *returnSize = gridSize - 2;
    *returnColumnSizes = malloc((gridSize - 2) * sizeof(int));
    for (int i = 0; i < gridSize - 2; ++i) (*returnColumnSizes)[i] = gridSize - 2;
    
    int ** res = malloc((gridSize - 2) * sizeof(int *));
    
    for (i = 0; i < gridSize - 2; ++i) {
        res[i] = malloc((gridSize - 2) * sizeof(int));
    }
    
    for (i = 0; i < gridSize - 2; ++i) {
        for (j = 0; j < gridSize - 2; ++j) {
            for (row = 0; row <= 2; ++row) {
                for (col = 0; col <= 2; ++col) {
                    if (grid[i + row][j + col] > max) max = grid[i + row][j + col];
                }
            }
            res[i][j] = max;
            max = 0;
        }
    }
    
    return res;
}