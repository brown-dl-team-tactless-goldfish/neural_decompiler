class Solution {
public:
    int latestTimeCatchTheBus(vector<int>& buses, vector<int>& passengers, int capacity) {
        sort(passengers.begin(),passengers.end());
        sort(buses.begin(),buses.end());
        int maxi = INT_MIN;
        unordered_set<int>taken;
        int n=buses.size(),m=passengers.size(),j=0;
        for(int i=0;i<n;i++){
            int res = capacity;
            while(j<m && passengers[j] <= buses[i] && res){
                res--;
                int t = passengers[j];
                taken.insert(t);
                while(t>0 && taken.count(t)){
                    t--;
                }
                maxi = t;
                j++;
            }
            if(i==n-1 && res){
                int c = buses.back();
                while(c>0 && taken.count(c)){
                    c--;
                }
                maxi = c;
            }
        }
        return maxi;
        
    }
};``