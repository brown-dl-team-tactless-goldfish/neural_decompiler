int* intersect(int* nums1, int nums1Size, int* nums2, int nums2Size,
               int* returnSize) {
  int* map = malloc(sizeof(int) * 1001);
  int* res = malloc(sizeof(int) * 1001);
  memset(map, 0, 1001 * sizeof(int));
  memset(res, 0, 1001 * sizeof(int));

  int cnt = 0;

  for (int i = 0; i < nums1Size; i++) {
    int n = nums1[i];
    map[n] = map[n] ? map[n] + 1 : 1;
  }
  for (int i = 0; i < nums2Size; i++) {
    int n = nums2[i];
    if (map[n]) {
      res[cnt++] = n;
      map[n]--;
    }
  }
  *returnSize = cnt;
  return res;
}