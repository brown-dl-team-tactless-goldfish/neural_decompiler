

int comparator(const void *p, const void *q) {
    return *( (int *) p ) - *( (int *) q );
}

int minOperations(int** grid, int gridSize, int* gridColSize, int x){
    int* array = malloc( sizeof(int) * gridSize * *gridColSize );
    int count = 0;
    for (int i = 0; i < gridSize; i++) {
        for (int j = 0; j < *gridColSize; j++) {
            array[count++] = grid[i][j];
        }
    }
    qsort(array, count, sizeof(int), comparator);
    
    int median = array[count / 2];
    free(array);
    
    int res = 0;
    for (int i = 0; i < gridSize; i++) {
        for (int j = 0; j < *gridColSize; j++) {
            int r = abs(grid[i][j] - median) % x;
            int d = abs(grid[i][j] - median) / x;
            if (r != 0) return -1;
            res += d; 
        }
    }
    return res;
}