/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */

void inOrder(struct TreeNode* pRoot, int* pTreeArray, int* pTreeNode)
{
    if (pRoot != NULL)
    {
        inOrder(pRoot->left, pTreeArray, pTreeNode);
        pTreeArray[(*pTreeNode)++] = pRoot->val;
        inOrder(pRoot->right, pTreeArray, pTreeNode);
    }
}

bool findTarget(struct TreeNode* root, int k){
    bool retVal = false;

    // get sorted array by Binary Search Tree Inorder Traversal
#define MAX_SIZE    (10000)
    int treeArray[MAX_SIZE] = {0};
    int treeNode = 0;
    inOrder(root, treeArray, &treeNode);

    // move head and tail index of sorted array to check target sum
    int head = 0;
    int tail = treeNode - 1;
    while (head < tail)
    {
        if (treeArray[head] + treeArray[tail] == k)
        {
            retVal = true;
            break;
        }
        else if (treeArray[head] + treeArray[tail] > k)
        {
            --tail;
        }
        else if (treeArray[head] + treeArray[tail] < k)
        {
            ++head;
        }
    }

    return retVal;
}