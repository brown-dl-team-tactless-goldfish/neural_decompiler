Java:-
class Solution {
    public char findKthBit(int n, int k) {
        StringBuilder s = new StringBuilder("0");
        int j = 1;
        while(j++ <= n){
            s.append("1");
            int i = s.length() - 2;
            while(i >= 0){
                if(s.charAt(i) == '0')
                    s.append("1");
                else
                    s.append("0");
                i--;
            }
        }
        return s.charAt(k - 1);
    }
}

C++:-
class Solution {
public:
    char findKthBit(int n, int k) {
        string s = "0";
        int j = 1;
        while(j++ <= n){
            s.append("1");
            int i = s.length() - 2;
            while(i >= 0){
                if(s.at(i) == '0')
                    s.append("1");
                else
                    s.append("0");
                i--;
            }
        }
        return s.at(k - 1);
    }
};


Python3:-
class Solution:
    def findKthBit(self, n: int, k: int) -> str:
        s = "0"
        j = 1
        while j <= n:
            s += "1"
            i = len(s) - 2;
            while i >= 0:
                if s[i] == '0':
                    s += "1"
                else:
                    s += "0"
                i -= 1
            j += 1;
        return s[k - 1]