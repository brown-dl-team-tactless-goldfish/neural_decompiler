
class Solution {
public:
    vector<vector<int>> spiralMatrix(int m, int n, ListNode* head) {
        
        vector<vector<int>> res;
        for (int i=0; i<m; i++){
            vector<int> k;
            for (int j=0; j<n; j++){
                k.push_back(-1);
            }
            res.push_back(k);
        }
        int r1=-1, r2=m, c1=-1, c2=n;
        int x=0, y=0;
        bool right=true, down=false, left=false;
        
        while (head){
            
            res[x][y] = head -> val;
            head = head -> next;
            
            if (right){
                if (y+1 == c2){
                    x++;
                    right = false;
                    down = true;
                    r1++;
                }else{
                    y++;
                }
            }
            else if(down){
                if (x+1==r2){
                    y--;
                    down = false;
                    left = true;
                    c2--;
                }else{
                    x++;
                }
            }
            else if(left){
                if (y-1==c1){
                    x--;
                    left = false;
                    r2--;
                }else{
                    y--;
                }
            }
            else{
                if (x-1==r1){
                    y++;
                    right = true;
                    c1++;
                }else{
                    x--;
                }
            }
        }
        return res;
    }
};