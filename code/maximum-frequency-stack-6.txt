public class FreqStack {
    Dictionary<int, int> mapper;
    Stack<int> s1;
    Stack<int> temp;
    public FreqStack() {
        mapper = new Dictionary<int, int>();
        s1 = new Stack<int>();
        temp = new Stack<int>();
    }
    
    public void Push(int val) {
        if(!mapper.ContainsKey(val)) {
            mapper.Add(val, 1);            
        } else {
            mapper[val] += 1;
        }
        s1.Push(val);
    }
    
    public int Pop() {
        var maxValueList = GetMaxValueList();
        while(s1.Count > 0 && !maxValueList.Contains(s1.Peek())) {
            temp.Push(s1.Pop());
        }
        var result = s1.Pop();
        mapper[result]--;
        while(temp.Count > 0) {
            s1.Push(temp.Pop());
        }
        return result;
    }
    
    private List<int> GetMaxValueList() {
        var list = new List<int>();
        var maxValue = 0;
        foreach(var c in mapper) {
            maxValue = Math.Max(maxValue, c.Value);
        }
        
        foreach(var c in mapper) {
            if(c.Value == maxValue){
                list.Add(c.Key);
            }
        }
        
        return list;
    }
}

/**
 * Your FreqStack object will be instantiated and called as such:
 * FreqStack obj = new FreqStack();
 * obj.Push(val);
 * int param_2 = obj.Pop();
 */

