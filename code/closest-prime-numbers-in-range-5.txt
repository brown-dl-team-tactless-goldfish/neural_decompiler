public class Solution {

        public int[] ClosestPrimes(int left, int right)
        {
            int num1 = -1, num2 = -1, x=-1, y=-1;

            if(left<=2 && right>=3) return new int[]{2,3};
            right = right % 2 == 0 ? right - 1 : right;
            left = left % 2 == 0 ? left + 1 : left;
            int diff = int.MaxValue;

            for (int i = right; i >= left; i = i - 2)
            {
                if (isPrime(i))
                {
                    if(x == -1)
                    {
                        x = i;
                    }
                    else if(y == -1)
                    {
                        y = i;

                        diff = x - y;
                        num1 = y;
                        num2 = x;
                    }
                    else
                    {
                        x = y;
                        y = i;
                        if(diff >= x - y)
                        {
                            diff = x - y;
                            num1 = y;
                            num2 = x;
                        }
                    }
                }
            }


            return new int[] { num1, num2 };    
        }

        
        private bool isPrime(int num)
        {
            if (num <= 1) return false;
            if (num <= 3) return true;
            if (num % 2 == 0 || num % 3 == 0) return false;
            for (int i = 5; i * i <= num; i = i + 6)
            {
                if (num % i == 0 || num % (i + 2) == 0)
                    return false;
            }
            return true;
        }
}