public class Solution
{
	public int MinSumOfLengths(int[] arr, int target)
	{
		int ans = int.MaxValue, min = int.MaxValue, sum = arr[0];
		int[] prefixMin = new int[arr.Length];
		int[] suffixMin = new int[arr.Length];

		for (int i = 0, j = 0; i < arr.Length;)
		{
			if (sum == target)
			{
				if (i - j + 1 < min)
					min = Math.Min(min, i - j + 1);

				prefixMin[i++] = min;
				if (i < arr.Length)
					sum += arr[i];
			}
			else if (j < i && sum > target)
				sum -= arr[j++];
			else
			{
				prefixMin[i++] = min;
				if (i < arr.Length)
					sum += arr[i];
			}
		}

		min = int.MaxValue;
		suffixMin[arr.Length - 1] = min;
		sum = arr[^1];

		for (int i = arr.Length - 1, j = arr.Length - 1; i > 0;)
		{
			if (sum == target)
			{
				if (j - i + 1 < min)
					min = Math.Min(min, j - i + 1);

				suffixMin[i - 1] = min;
				if (--i >= 0)
					sum += arr[i];
			}
			else if (j > i && sum > target)
				sum -= arr[j--];
			else
			{
				suffixMin[i - 1] = min;
				if (--i >= 0)
					sum += arr[i];
			}
		}

		for (int i = 0; i < arr.Length; i++)
		{
			if (prefixMin[i] != int.MaxValue && suffixMin[i] != int.MaxValue)
				ans = Math.Min(ans, prefixMin[i] + suffixMin[i]);
		}

		return ans == int.MaxValue ? -1 : ans;
	}
}