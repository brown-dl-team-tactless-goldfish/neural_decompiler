int maximumRobots(vector<int>& chargeTimes, vector<int>& runningCosts, long long budget) 
{
	long result=0,n=chargeTimes.size(),s=0,p=0;
	priority_queue<pair<long,long>> q;
	for(int i=0;i<n;i++)
	{
		s+=runningCosts[i];
		q.push({chargeTimes[i],i});
		while(!q.empty()&&(q.top().first+s*(i-p+1)>budget))
		{
			s-=runningCosts[p++];
			while(!q.empty()&&q.top().second<p) q.pop();
		}
		result=max(result,i-p+1);
	}
	return result;
}