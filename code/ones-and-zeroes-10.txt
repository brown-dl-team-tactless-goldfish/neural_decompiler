class Solution {
public:
    int findMaxForm(vector<string>& strs, int m, int n) {
        
        vector<vector<int>> dp (m+1, vector<int>(n+1, 0));
        
        for (int i = 0; i < m+1; i++)
        {
            dp[i][0] = 0;
        }
        
        for (int j = 1; j < n+1; j++)
        {
            dp[0][j] = INT_MIN;
        }
        
        dp[0][0] = 0;
        
        for (const auto & c : strs)
        {
            int zeros = 0, ones = 0;
            
            for (const auto & s : c)
                (s == '1') ? ones++ : zeros++;
            
            for (int i = m; i >= zeros; i--)
            {
                for (int j = n; j >= ones; j--)
                {
                    dp[i][j] = max(dp[i][j], dp[i - zeros][j - ones] + 1);
                }
            }
        }
        
        //return dp[m][n];
        
        return *max_element(dp[m].begin(), dp[m].end());
    }
};