struct Node *createNode(struct Node* node) {
	struct Node* new_node = malloc(sizeof(struct Node));
	new_node->val = node->val;
	new_node->random = NULL;
	return new_node;
}
struct Node* copyRandomList(struct Node* head) {
	if(head == NULL) 
		  return NULL;
	struct Node *cur = head, *new_cur = NULL;
	
	/* Value is copied to next node */
	while(cur != NULL) {
		new_cur = createNode(cur);
		struct Node* n = cur->next;
		cur->next = new_cur;
		new_cur->next = n;
		cur = n;
	}
	/* Random pointer copied */
	cur = head;
	while(cur != NULL) {
		if(cur->random != NULL) 
			cur->next->random = cur->random->next;
		else
			cur->next->random = NULL;
		cur = cur->next->next;
	}
	/* Deinterlace the link list */
	cur = head;
	struct Node* new_head = cur->next;
	new_cur = cur->next;
	while(cur != NULL) {
		cur->next = cur->next->next;
		if(new_cur->next != NULL)
			new_cur->next = new_cur->next->next;
		cur = cur->next;
		new_cur = new_cur->next;
	}
	return new_head;
}