class Solution {
public:
    int numSubmatrixSumTarget(vector<vector<int>>& matrix, int target) {
        int r = matrix.size();
        int c = matrix[0].size();
        for(int i = 0; i <r; ++i){
            for(int j = 1; j < c; ++j){
                matrix[i][j] += matrix[i][j-1]; 
            }
        }
        int ans = 0;
        for(int start = 0 ; start < c; ++start){
            for(int j = start; j < c; ++j){
                unordered_map<int, int> mp;
                int sum = 0;
                mp[0] = 1;
                for(int row = 0; row < r; row++){ 
                    sum += matrix[row][j] - ((start>0)?matrix[row][start-1]:0);
                    if(mp.find(sum - target) != mp.end()){
                        ans += mp[sum-target];
                    }
                    mp[sum]++; 
                }
            }
        }
        return ans;
    }
};