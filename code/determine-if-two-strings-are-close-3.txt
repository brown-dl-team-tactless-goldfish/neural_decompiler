#define ARR_SIZE 27

static inline int compFunc(const void * a, const void * b){
    return *(unsigned short *)b - *(unsigned short *)a;
}

bool closeStrings(char * word1, char * word2){
    bool occurs1[ARR_SIZE]={false}, occurs2[ARR_SIZE]={false};
    unsigned short counts1[ARR_SIZE]={0}, counts2[ARR_SIZE]={0};

    // set occurrences & count them
    while(*word1 != '\0'){ occurs1[*word1 - 'a']=true; counts1[*(word1++) - 'a']++; }
    while(*word2 != '\0'){ occurs2[*word2 - 'a']=true; counts2[*(word2++) - 'a']++; }

    // check occurrence difference
    for(int i=0; i<ARR_SIZE; i++) { if(occurs1[i] != occurs2[i]) return false; }

    // sort & check the counts
    qsort(counts1, ARR_SIZE, sizeof(short), compFunc);
    qsort(counts2, ARR_SIZE, sizeof(short), compFunc);
    for(int i=0; i<ARR_SIZE; i++) { if(counts1[i] != counts2[i]) return false; }

    return true;
}