class Solution {
public:
    int numberOfWays(string corridor) {
        int n = corridor.size();
        int c = 0; // number of seats
        const long long mod = 1e9+7;
        vector<int> v = {0}; // v[i] represents the position of i-th seat (starting from 1)
        for (int i = 0; i < n; i++) {
            if (corridor[i] == 'S') {
                c++;
                v.emplace_back(i); 
            }
        }
        
        if (c & 1 or c < 2) { // If the number of seats is odd or less than 2, bad.
            return 0;
        }
        
        long long res = 1;
        for (int i = 3; i < v.size(); i += 2) {
            res *= (long long)(v[i] - v[i-1]); // count the number of possible positions between every 2 seats and multiply them.
            res %= mod;
        }
        return res;
    }
};