class FoodRatings {
public:
    FoodRatings(vector<string>& foods, vector<string>& cuisines, vector<int>& ratings) {
        for (int i = 0; i < size(foods); i++) {
            f2c[foods[i]] = cuisines[i];
            f2r[foods[i]] = ratings[i];
            c2r[cuisines[i]].emplace(-ratings[i], foods[i]);
        }
    }
    
    void changeRating(string food, int newRating) {
        int r = exchange(f2r[food], newRating);
        auto& c = f2c[food];
        auto it = c2r.find(c);
        it->second.erase({-r, food});
        it->second.emplace(-newRating, food);
    }
    
    string highestRated(string cuisine) {
        return begin(c2r[cuisine])->second;
    }
private:
    unordered_map<string_view, string_view> f2c;
    unordered_map<string_view, int> f2r;
    unordered_map<string_view, set<pair<int, string>>> c2r;
};