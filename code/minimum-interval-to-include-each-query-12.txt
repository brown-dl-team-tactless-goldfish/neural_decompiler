vector<int> minInterval(vector<vector<int>>& intervals, vector<int>& queries) 
{
	sort(intervals.begin(),intervals.end());
	int m=intervals.size(),n=queries.size();
	vector<int> result(n,-1);
	vector<vector<int>> total;
	for(int i=0;i<n;i++) total.push_back({queries[i],i});

	sort(total.begin(),total.end());
	priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> q;
	for(int i=0,j=0;i<n;i++)
	{
		while(j<m&&intervals[j][0]<=total[i][0])
		{
			q.push({intervals[j][1]-intervals[j][0]+1,intervals[j][1]});
			j++;
		}
		while(!q.empty()&&q.top().second<total[i][0]) q.pop();
		if(!q.empty()) result[total[i][1]]=q.top().first;
	}
	return result;
}