class Solution {
public:
    vector<vector<int>> findWinners(vector<vector<int>>& matches) {
        int n=matches.size();
        
        set<int> winAll,looseOne,looseMore;
        
        for(int i=0;i<n;i++)
        {
            //*******************************case win************************************************
            int x=matches[i][0];
            
            // if already defeated then we dont need to add in win all set
            if(looseOne.find(x)==looseOne.end() && looseMore.find(x)==looseMore.end())
            {
                winAll.insert(x);
            }
            
            //*****************************case defeated********************************************
            int y=matches[i][1];
            
            //if it is present in loose one set then we have to delete it from there and add it to loose more set
            if(looseOne.find(y)!=looseOne.end())
            {
                looseMore.insert(y);
                looseOne.erase(y);
            }
            
            //if it is not present in loose more set then add it to loose one
            if(looseMore.find(y)==looseMore.end())
            {
                looseOne.insert(y);
            }
            
            // if it is present in winall set then delete from there
            
            if(winAll.find(y)!=winAll.end())
            {
                winAll.erase(y);
            }
        }
        
        // now create two vector and copy winall and loose one in those and add them to a new 2d vector and return
        
        vector<int> temp1(winAll.begin(),winAll.end()),temp2(looseOne.begin(),looseOne.end());
        
        vector<vector<int>> res;
        res.push_back(temp1);
        res.push_back(temp2);
        
        return res;
    }
};