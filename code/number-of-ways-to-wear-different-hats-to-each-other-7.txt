class Solution {
public:
    int dp[42][1030];
    int n,mod=1000000007;
    int get(int h,int mask,vector<vector<int>>& hats)
    {
        if(mask==((1<<n)-1))
            return 1;
        if(h>40)
            return 0;
        if(dp[h][mask]!=-1)
            return dp[h][mask];
        int res=get(h+1,mask,hats);
        for(int i=0;i<n;i++)
        {
            int bit=1&(mask>>i);
            if(!bit)
            {
                for(auto x:hats[i])
                {
                    if(x==h)
                    {
                        int mask2=mask;
                        mask2|=(1<<i);
                        res=(res+get(h+1,mask2,hats))%mod;
                    }
                }
            }
        }
        return dp[h][mask]=res;
    }
    int numberWays(vector<vector<int>>& hats) 
    {
        n=hats.size();
        memset(dp,-1,sizeof(dp));
        return get(1,0,hats);
    }
};