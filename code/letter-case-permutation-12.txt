void helper(char** result, char* s, int idx, int* result_count)
{
    
    if(idx == strlen(s))
    {
        result[*result_count] = calloc(strlen(s)+1, sizeof(char));
        strcpy(result[(*result_count)], s);
       (*result_count)++;
        return;
    }
    else
    {

        if ((s[idx] >= 'a' && s[idx] <= 'z') || (s[idx] >='A' && s[idx] <= 'Z'))
        {

            s[idx] = toupper(s[idx]);
            helper(result, s, idx+1, result_count);

            s[idx] = tolower(s[idx]);
            helper(result, s, idx+1, result_count);

        }
        else
        {
            helper( result, s, idx+1, result_count);
        }
    }

}
char ** letterCasePermutation(char * s, int* returnSize){
    char ** result = (char **)malloc(10000*sizeof(char *));
    int size = 0;
    helper(result, s, 0, &size);
    *returnSize = size;
    return result;

}