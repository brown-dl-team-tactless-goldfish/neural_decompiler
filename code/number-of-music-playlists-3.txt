    // dp(N,L,K) = N*dp(N-1,L-1,K) + (N-K)*dp(N,L-1,K)    
    int numMusicPlaylists(int N, int L, int K) {
        const long long mod = 1e9 + 7; 
        vector<vector<long long>> dp(L+1, vector<long long>(N+1, 0));
        dp[0][0] = 1;
        for(int i=1;i<=L;i++){
            for(int j=1;j<=N;j++){
                dp[i][j] = j*dp[i-1][j-1] + max(0,j-K)*dp[i-1][j];
                dp[i][j] %= mod;
            }
        }
        return dp[L][N];
    }