int dfs (struct TreeNode* node, int maxSoFar) {
    if(!node) return 0;
    
    int result = node->val >= maxSoFar ? 1 : 0;
    
    // update maxSoFar to current if current is greater than previous
    maxSoFar = fmax(maxSoFar, node->val);
    
    // get the results from left and right subtrees
    int left = dfs(node->left, maxSoFar);
    int right = dfs(node->right, maxSoFar);
    
    // add it to the current node level result and return
    result += left + right;
    return result;
}

int goodNodes(struct TreeNode* root){
    return dfs(root, root->val);
}