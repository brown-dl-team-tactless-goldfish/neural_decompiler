/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */

typedef struct TreeNode node;

struct QueueNode{
  node* value;
  struct QueueNode* next;
};

typedef struct QueueNode Qnode;



bool isEvenOddTree(struct TreeNode* root){
  if (!(root->val % 2))
    return false;
  Qnode* Qhead = (Qnode*)malloc(sizeof(Qnode));
  Qnode* Qtail;
  Qhead->value = root;
  Qhead->next  = NULL;
  Qtail = Qhead;
  Qnode* curr_level_head = Qhead;
  bool check_for_even_level = true;
  bool new_level = false;
  while(Qhead){
    if(Qhead == curr_level_head)
      new_level = true;
    if(new_level && ((Qhead->value->left) || (Qhead->value->right))){
      new_level = false;
      check_for_even_level = !(check_for_even_level);
      curr_level_head = NULL;
    }
    if(Qhead->value->left){
	  Qnode* temp = (Qnode*)malloc(sizeof(Qnode));
	  temp->value = Qhead->value->left;
	  temp->next = NULL;
      if(check_for_even_level && !((temp->value->val) % 2))
        return false;
      if(!check_for_even_level && ((temp->value->val) % 2))
        return false;
      if(!curr_level_head){
	    curr_level_head  = temp;
        Qtail->next = temp;
	    Qtail = temp;
      }
	  else{
        if(check_for_even_level && (temp->value->val <= Qtail->value->val))
          return false;
        if(!check_for_even_level && (temp->value->val >= Qtail->value->val))
          return false;
          Qtail->next = temp;
	      Qtail = temp;
        }
	  }
    if(Qhead->value->right){
	  Qnode* temp = (Qnode*)malloc(sizeof(Qnode));
	  temp->value = Qhead->value->right;
	  temp->next = NULL;
      if(check_for_even_level && !((temp->value->val) % 2))
        return false;
      if(!check_for_even_level && ((temp->value->val) % 2))
        return false;
      if(!curr_level_head){
	      curr_level_head  = temp;
          Qtail->next = temp;
	      Qtail = temp;
      }
	    else{
        if(check_for_even_level && (temp->value->val <= Qtail->value->val))
          return false;
        if(!check_for_even_level && (temp->value->val >= Qtail->value->val))
          return false;
          Qtail->next = temp;
	      Qtail = temp;
        }
	  }
    Qhead = Qhead->next;
  }
  return true;
}