public class Solution {
    private IList<TreeNode> res = new List<TreeNode>();
    
    public IList<TreeNode> DelNodes(TreeNode root, int[] to_delete) {
        if (root == null || to_delete == null || to_delete.Length == 0)
            return res;
        
        HashSet<int> del = new HashSet<int>();
        
        foreach (var item in to_delete)
            del.Add(item);
        
        if (!DFS(root, del))
            res.Add(root);
        
        return res;
    }
    
    private bool DFS(TreeNode node, HashSet<int> del)
    {
        bool l = node.left == null ? false : DFS(node.left, del),
             r = node.right == null ? false : DFS(node.right, del);
        
        if (del.Contains(node.val))
        {
            if (!l && node.left != null)
            {
                res.Add(node.left);
                node.left = null;
            }
            
            if (!r && node.right != null)
            {
                res.Add(node.right);
                node.right = null;
            }
        }
        
        if (l)
            node.left = null;
        
        if (r)
            node.right = null;
        
        return del.Contains(node.val);
    }
}