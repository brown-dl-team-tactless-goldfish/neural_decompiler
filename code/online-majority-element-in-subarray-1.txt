class MajorityChecker {
public:
    MajorityChecker(vector<int>& arr) : v(move(arr)) {
        for (int i=0; i<v.size(); i++) indexMap[v[i]].push_back(i);
    }
    
    int query(int left, int right, int threshold) {
        for (int k=0; k<20; k++){
            int x = v[left + rand() % (right-left+1)];
            if (count(left, right, x) >= threshold) return x;
        }
        return -1;
    }
    
    int count(int l, int r, int x){
        const auto& u = indexMap.at(x);
        return upper_bound(u.begin(), u.end(), r) - lower_bound(u.begin(), u.end(), l);
    }
    
    unordered_map<int, vector<int>> indexMap;
    vector<int> v;
};