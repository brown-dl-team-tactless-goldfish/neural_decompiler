class Solution {
public:
    int findTheLongestSubstring(string s) {
        
        int mask = 0, res = 0;
        vector<int>count = {1,0,0,0,2,0,0,0,4,0,0,0,0,0,8,0,0,0,0,0,16,0,0,0,0,0};
        
        unordered_map<int, int>hm;
        hm[0]=-1;
        
        for (int i = 0; i < s.length(); i++) {
            mask ^= count[s[i]-'a'];
            
            if (mask != 0 && hm.find(mask) == hm.end())
                hm[mask] = i;
            
            res = max(res, i-hm[mask]);
        }
        
        return res;
    }
};