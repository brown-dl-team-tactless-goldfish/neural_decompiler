/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* prev;
    Node* next;
    Node* child;
};
*/

class Solution {
public:
    Node* flatten(Node* head) {
        Node* temp = NULL;
        Node* cur = head;
        
        while(cur){
            if(cur->child) {
                // store next ptr in temp
                temp = cur->next;
                
                // Set prev of child to cur
                cur->child->prev = cur;
                //flatten child and point cur next to flatten child list
                cur->next = flatten(cur->child);
                cur->child = NULL;
                // Iterate through the cur list to go to tail
                while(cur->next) {
                    cur = cur->next;
                }
                //point tail of the child list to original next pointer
                cur->next = temp;
                if(temp)
                    temp->prev = cur;
            }
            cur = cur->next;
        }
        
        return head;
        
    }
};