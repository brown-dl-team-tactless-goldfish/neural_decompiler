class Solution {
    public int[] findDiagonalOrder(int[][] matrix) {
        int n=matrix.length;
        if(n==0){
            return new int[0];
        }
        int m=matrix[0].length;
     int[] res=new int[n*m];
    boolean[][] visited=new boolean[n][m];
        int index=0;
        
        
        boolean up=true;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(visited[i][j]==true){
                    continue;
                }
                if(!up){
                    
                
                 res[index++]=matrix[i][j];

                int row=i+1;
                int col=j-1;
                
                while(row<n && col>=0){
                    if(visited[row][col]!=true){
                        res[index++]=matrix[row][col];
                        visited[row][col]=true;
                    }
                    row+=1;
                    col-=1;
                }  
                 up=true;
                }
                else{
                    Stack<Integer> stack=new Stack<>();
                    int row=i+1;
                int col=j-1;
                stack.push(matrix[i][j]);
                while(row<n && col>=0){
                    if(visited[row][col]!=true){
                        stack.push(matrix[row][col]);
                        visited[row][col]=true;
                    }
                    row+=1;
                    col-=1;
                }
                    while(!stack.isEmpty()){
                        res[index++]=stack.pop();
                    }
                    up=false;
                }
            }
                
        }
        return res;
    }
}