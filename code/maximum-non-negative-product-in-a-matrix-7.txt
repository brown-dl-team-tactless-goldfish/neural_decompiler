public class Solution
{
    public int MaxProductPath(int[][] grid)
    {
        int m = grid.Length;
        int n = grid[0].Length;
        var dp = new (double Max, double Min)[m, n];
        dp[0, 0].Max = dp[0, 0].Min = grid[0][0];
        for (int i = 1; i < m; i++)
        {
            dp[i, 0].Max = dp[i, 0].Min = grid[i][0] * dp[i - 1, 0].Max;
        }
        for (int j = 1; j < n; j++)
        {
            dp[0, j].Max = dp[0, j].Min = grid[0][j] * dp[0, j - 1].Max;
        }
        for (int i = 1; i < m; i++)
        {
            for (int j = 1; j < n; j++)
            {
                double max = grid[i][j] * Math.Max(dp[i, j - 1].Max, dp[i - 1, j].Max);
                double min = grid[i][j] * Math.Min(dp[i, j - 1].Min, dp[i - 1, j].Min);
                dp[i, j] = max >= min ? (max, min) : (min, max);
            }
        }

        if (dp[m - 1, n - 1].Max < 0) return -1;
        return (int)(dp[m - 1, n - 1].Max % ((int)Math.Pow(10, 9) + 7));
    }
}