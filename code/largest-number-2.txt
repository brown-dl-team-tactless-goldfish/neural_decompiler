int comp(const void* pa, const void* pb){
    const char* a = *(const char**)pa;
    const char* b = *(const char**)pb;
    int len_a = strlen(a), len_b = strlen(b);
    char* cand_a = (char*)calloc(len_a+len_b+1,sizeof(char));
    char* cand_b = (char*)calloc(len_a+len_b+1,sizeof(char));
    memcpy(cand_a,a,sizeof(char)*len_a);
    memcpy(cand_a+len_a,b,sizeof(char)*len_b);
    memcpy(cand_b,b,sizeof(char)*len_b);
    memcpy(cand_b+len_b,a,sizeof(char)*len_a);
    cand_a[len_a+len_b] = '\0';
    cand_b[len_a+len_b] = '\0';
    //https://en.cppreference.com/w/c/string/byte/strtol
    uint64_t cand_a_int = strtol(cand_a,NULL,10);
    uint64_t cand_b_int = strtol(cand_b,NULL,10);
    /*
    return -1 -> *pb > *pa
    return 0 -> *pb = *pa
    return 1 -> *pa > *pb
    */
    if(cand_a_int > cand_b_int)
        return -1;
    else
        return 1;
}

char * largestNumber(int* nums, int numsSize){
    char** asStr = (char**)malloc(numsSize*sizeof(char*));
    for(int i=0;i<numsSize;i++){
        asStr[i] = (char*)calloc(101,sizeof(char));
		int n = sprintf(asStr[i]+0,"%d",nums[i]);
        asStr[i][n] = '\0';
    }
    qsort(asStr, numsSize, sizeof(asStr[0]), comp);
    if(asStr[0][0] == '0')
        return "0";
    char* ret = (char*)calloc(101*numsSize,sizeof(char));
    int index = 0;
    for(int i=0;i<numsSize;i++){
        int len = strlen(asStr[i]);
        memcpy(ret+index,asStr[i],sizeof(char)*len);
        index+=len;
    }
    ret[index] = '\0';
    return ret;
}