 public class Solution
    {
        public int MaximumUniqueSubarray(int[] nums)
        {
            int res = int.MinValue;
            ISet<int> set = new HashSet<int>();

            long[] sum = new long[nums.Length];
            sum[0] = nums[0];
            for (int i = 1; i < nums.Length; i++)
            {
                sum[i] = sum[i - 1] + nums[i];
            }

            int l = 0;
            int r = 0;

            while (r < nums.Length)
            {
                var cand = nums[r];

                if (set.Add(cand))
                {
                    res = Math.Max(res, (int)(sum[r] - (l > 0 ? sum[l - 1] : 0)));
                    r++;
                }
                else
                {
                    while (l < r)
                    {
                        var del = nums[l];
                        l++;
                        if (del == cand)
                        {
                            break;
                        }
                        set.Remove(del);
                    }
                    r++;
                }
            }

            return res;
        }
    }