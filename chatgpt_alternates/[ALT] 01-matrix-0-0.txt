#include <stdlib.h> #include <stdio.h> #include <string.h> #include <stdbool.h> #include <stdint.h> #include <math.h> int** func_1(int** var_10, int var_8, int* var_7, int var_13, int var_0, int* var_14){ int var_3[4][2]={{1,0},{0,1},{-1,0},{0,-1}}; int** var_9=(int**)malloc(4*sizeof(int*)); (*var_14)=0; for(int var_4=0;var_4<4;var_4++){ int var_18=var_13+var_3[var_4][0]; int var_19=var_0+var_3[var_4][1]; if(var_18>-1&&var_18<var_8&&var_19>-1&&var_19<var_7[0]){ if(var_10[var_18][var_19]==-1){ var_9[(*var_14)++]=(int*)malloc(2*sizeof(int)); var_9[(*var_14)-1][0]=var_18; var_9[(*var_14)-1][1]=var_19; } } } return var_9; } int** func_2(int** var_6, int var_8, int* var_7, int* var_12, int** var_11){ *var_12 = var_8 ; var_11[0] = var_7; int** var_15 = (int**)malloc(var_8*var_7[0]*sizeof(int*)); int var_1 = 0; int** var_10=(int**)malloc(var_8*sizeof(int*)); for(int var_4=0;var_4<var_8;var_4++){ var_10[var_4]=(int*)malloc(var_7[var_4]*sizeof(int)); for(int var_5=0;var_5<var_7[var_4];var_5++){ if(var_6[var_4][var_5]==0){ var_10[var_4][var_5]=0; var_15[var_1++]=(int*)malloc(2*sizeof(int)); var_15[var_1-1][0]=var_4; var_15[var_1-1][1]=var_5; }else{ var_10[var_4][var_5]=-1; } } } while(var_1>0){ int** var_16 = (int**)malloc(var_8*var_7[0]*sizeof(int*)); int var_2=0; for(int var_4=0;var_4<var_1;var_4++){ int var_18=var_15[var_4][0]; int var_19=var_15[var_4][1]; free(var_15[var_4]); int var_14=0; int** var_17=func_1(var_10, var_8, var_7, var_18, var_19, &var_14); for(int var_5=0;var_5<var_14;var_5++){ var_10[var_17[var_5][0]][var_17[var_5][1]]=var_10[var_18][var_19]+1; var_16[var_2++]=(int*)malloc(2*sizeof(int)); var_16[var_2-1][0]=var_17[var_5][0]; var_16[var_2-1][1]=var_17[var_5][1]; } } free(var_15); var_15=var_16; var_1=var_2; } return var_10; } \Unit_Test{ assert_output_matches(func_1) assert_output_matches(func_2) assert_fcunt(node_work_templete_DEFATH, ) }//\TestCase