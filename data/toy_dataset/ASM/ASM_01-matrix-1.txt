func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -8(%rbp)
        movq    %rsi, -16(%rbp)
        movl    %edx, -20(%rbp)
        movl    %ecx, -24(%rbp)
        movl    %r8d, -28(%rbp)
        movl    %r9d, -32(%rbp)
        cmpl    $0, -28(%rbp)
        js      .L7
        movl    -28(%rbp), %eax
        cmpl    -20(%rbp), %eax
        jge     .L7
        cmpl    $0, -32(%rbp)
        js      .L7
        movl    -32(%rbp), %eax
        cmpl    -24(%rbp), %eax
        jge     .L7
        cmpl    $0, 16(%rbp)
        je      .L5
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -8(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -32(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $1, %eax
        jne     .L1
.L5:
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -16(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -32(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        je      .L6
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -16(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -32(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, 16(%rbp)
        jge     .L1
.L6:
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -16(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -32(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rax, %rdx
        movl    16(%rbp), %eax
        movl    %eax, (%rdx)
        movl    16(%rbp), %eax
        leal    1(%rax), %r8d
        movl    -28(%rbp), %eax
        leal    -1(%rax), %r10d
        movl    -32(%rbp), %edi
        movl    -24(%rbp), %ecx
        movl    -20(%rbp), %edx
        movq    -16(%rbp), %rsi
        movq    -8(%rbp), %rax
        subq    $8, %rsp
        pushq   %r8
        movl    %edi, %r9d
        movl    %r10d, %r8d
        movq    %rax, %rdi
        call    func_2
        addq    $16, %rsp
        movl    16(%rbp), %eax
        leal    1(%rax), %r8d
        movl    -28(%rbp), %eax
        leal    1(%rax), %r10d
        movl    -32(%rbp), %edi
        movl    -24(%rbp), %ecx
        movl    -20(%rbp), %edx
        movq    -16(%rbp), %rsi
        movq    -8(%rbp), %rax
        subq    $8, %rsp
        pushq   %r8
        movl    %edi, %r9d
        movl    %r10d, %r8d
        movq    %rax, %rdi
        call    func_2
        addq    $16, %rsp
        movl    16(%rbp), %eax
        leal    1(%rax), %r8d
        movl    -32(%rbp), %eax
        leal    -1(%rax), %r9d
        movl    -28(%rbp), %edi
        movl    -24(%rbp), %ecx
        movl    -20(%rbp), %edx
        movq    -16(%rbp), %rsi
        movq    -8(%rbp), %rax
        subq    $8, %rsp
        pushq   %r8
        movl    %edi, %r8d
        movq    %rax, %rdi
        call    func_2
        addq    $16, %rsp
        movl    16(%rbp), %eax
        leal    1(%rax), %r8d
        movl    -32(%rbp), %eax
        leal    1(%rax), %r9d
        movl    -28(%rbp), %edi
        movl    -24(%rbp), %ecx
        movl    -20(%rbp), %edx
        movq    -16(%rbp), %rsi
        movq    -8(%rbp), %rax
        subq    $8, %rsp
        pushq   %r8
        movl    %edi, %r8d
        movq    %rax, %rdi
        call    func_2
        addq    $16, %rsp
        jmp     .L1
.L7:
        nop
.L1:
        leave
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $88, %rsp
        movq    %rdi, -56(%rbp)
        movl    %esi, -60(%rbp)
        movq    %rdx, -72(%rbp)
        movq    %rcx, -80(%rbp)
        movq    %r8, -88(%rbp)
        movq    -72(%rbp), %rax
        movl    (%rax), %eax
        imull   -60(%rbp), %eax
        cltq
        movl    $8, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, -40(%rbp)
        movq    -80(%rbp), %rax
        movl    -60(%rbp), %edx
        movl    %edx, (%rax)
        movl    -60(%rbp), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, %rdx
        movq    -88(%rbp), %rax
        movq    %rdx, (%rax)
        movl    $0, -20(%rbp)
        jmp     .L9
.L10:
        movq    -88(%rbp), %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rax, %rdx
        movq    -72(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        movq    -72(%rbp), %rax
        movl    (%rax), %eax
        cltq
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -40(%rbp), %rdx
        leaq    (%rcx,%rdx), %rbx
        movl    $4, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, (%rbx)
        addl    $1, -20(%rbp)
.L9:
        movl    -20(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jl      .L10
        movl    $0, -24(%rbp)
        jmp     .L11
.L15:
        movl    $0, -28(%rbp)
        jmp     .L12
.L14:
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -28(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L13
        movq    -72(%rbp), %rax
        movl    (%rax), %ecx
        movl    -28(%rbp), %r8d
        movl    -24(%rbp), %edi
        movl    -60(%rbp), %edx
        movq    -40(%rbp), %rsi
        movq    -56(%rbp), %rax
        subq    $8, %rsp
        pushq   $0
        movl    %r8d, %r9d
        movl    %edi, %r8d
        movq    %rax, %rdi
        call    func_2
        addq    $16, %rsp
.L13:
        addl    $1, -28(%rbp)
.L12:
        movq    -72(%rbp), %rax
        movl    (%rax), %eax
        cmpl    %eax, -28(%rbp)
        jl      .L14
        addl    $1, -24(%rbp)
.L11:
        movl    -24(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jl      .L15
        movq    -40(%rbp), %rax
        movq    -8(%rbp), %rbx
        leave
        ret
