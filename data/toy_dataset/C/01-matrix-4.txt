#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
struct struct_1 {
int var_17;
int var_19;
};
void func_1(int **var_12, int var_1, int var_16, int var_17, int var_19, struct struct_1 *var_9, int *var_2, int var_0)
{
if(var_17 > 0 && var_12[var_17 - 1][var_19] < 0) {
++(*var_2);
var_9[*var_2].var_17 = var_17 - 1;
var_9[*var_2].var_19 = var_19;
var_12[var_17 - 1][var_19] = var_0;
}
if(var_17 + 1 < var_1 && var_12[var_17 + 1][var_19] < 0) {
++(*var_2);
var_9[*var_2].var_17 = var_17 + 1;
var_9[*var_2].var_19 = var_19;
var_12[var_17 + 1][var_19] = var_0;
}
if(var_19 > 0 && var_12[var_17][var_19 - 1] < 0) {
++(*var_2);
var_9[*var_2].var_17 = var_17;
var_9[*var_2].var_19 = var_19 - 1;
var_12[var_17][var_19 - 1] = var_0;
}
if(var_19 + 1 < var_16 && var_12[var_17][var_19 + 1] < 0) {
++(*var_2);
var_9[*var_2].var_17 = var_17;
var_9[*var_2].var_19 = var_19 + 1;
var_12[var_17][var_19 + 1] = var_0;
}
}
int** func_2(int** var_5, int var_7, int* var_6, int* var_11, int** var_10)
{
int var_3, var_4;
int var_16 = var_6[0];
int var_1 = var_7;
int **var_12 = malloc(sizeof(int *) * var_1); 
for(var_3 = 0; var_3 < var_1; var_3++) {
var_12[var_3] = malloc(var_16 * sizeof(int));
memset(var_12[var_3], 0xff, sizeof(int) * var_16);
}
struct struct_1 *var_9 = malloc(sizeof(struct struct_1) * 40000);
int var_2 = -1;
int var_13 = -1;
int var_0 = 1;
for(var_3 = 0; var_3 < var_1; var_3++) {
for(var_4 = 0; var_4 < var_16; var_4++) {
if(!var_5[var_3][var_4]) {
var_12[var_3][var_4] = 0;
func_1(var_12, var_1, var_16, var_3, var_4, var_9, &var_2, var_0);
}
}
}
while(var_13 < var_2) {
var_0++;
int var_14 = var_2;
int var_15 = var_13;
while(++var_15 <= var_14)
func_1(var_12, var_1, var_16, var_9[var_15].var_17, var_9[var_15].var_19, var_9, &var_2, var_0);
var_13 = var_14;
}
*var_11 = var_7;
*var_10 = var_6;
return var_12;
}
