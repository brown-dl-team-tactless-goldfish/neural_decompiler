isIsomorphic:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $288, %rsp
        movq    %rdi, -280(%rbp)
        movq    %rsi, -288(%rbp)
        movq    -280(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -8(%rbp)
        leaq    -144(%rbp), %rdx
        movl    $0, %eax
        movl    $16, %ecx
        movq    %rdx, %rdi
        rep stosq
        leaq    -272(%rbp), %rdx
        movl    $0, %eax
        movl    $16, %ecx
        movq    %rdx, %rdi
        rep stosq
        movl    $0, -4(%rbp)
        jmp     .L2
.L8:
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -280(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        movl    %eax, -12(%rbp)
        movl    -12(%rbp), %eax
        cltq
        movzbl  -144(%rbp,%rax), %eax
        testb   %al, %al
        jne     .L3
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -288(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %edx
        movl    -12(%rbp), %eax
        cltq
        movb    %dl, -144(%rbp,%rax)
        jmp     .L4
.L3:
        movl    -12(%rbp), %eax
        cltq
        movzbl  -144(%rbp,%rax), %edx
        movl    -4(%rbp), %eax
        movslq  %eax, %rcx
        movq    -288(%rbp), %rax
        addq    %rcx, %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        je      .L4
        movl    $0, %eax
        jmp     .L9
.L4:
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -288(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        movl    %eax, -16(%rbp)
        movl    -16(%rbp), %eax
        cltq
        movzbl  -272(%rbp,%rax), %eax
        testb   %al, %al
        jne     .L6
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -280(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %edx
        movl    -16(%rbp), %eax
        cltq
        movb    %dl, -272(%rbp,%rax)
        jmp     .L7
.L6:
        movl    -16(%rbp), %eax
        cltq
        movzbl  -272(%rbp,%rax), %edx
        movl    -4(%rbp), %eax
        movslq  %eax, %rcx
        movq    -280(%rbp), %rax
        addq    %rcx, %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        je      .L7
        movl    $0, %eax
        jmp     .L9
.L7:
        addl    $1, -4(%rbp)
.L2:
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jl      .L8
        movl    $1, %eax
.L9:
        leave
        ret
.LC0:
        .string "add"
.LC1:
        .string "egg"
.LC2:
        .string "/app/example.c"
.LC3:
        .string "isIsomorphic(\"egg\", \"add\") == true"
.LC4:
        .string "bar"
.LC5:
        .string "foo"
.LC6:
        .string "isIsomorphic(\"foo\", \"bar\") == false"
.LC7:
        .string "title"
.LC8:
        .string "paper"
.LC9:
        .string "isIsomorphic(\"paper\", \"title\") == true"
.LC10:
        .string "isIsomorphic(\"bar\", \"foo\") == false"
.LC11:
        .string "42"
.LC12:
        .string "13"
.LC13:
        .string "isIsomorphic(\"13\", \"42\") == true"
main:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    $.LC0, %esi
        movl    $.LC1, %edi
        call    isIsomorphic
        testb   %al, %al
        jne     .L11
        movl    $__PRETTY_FUNCTION__.4161, %ecx
        movl    $36, %edx
        movl    $.LC2, %esi
        movl    $.LC3, %edi
        call    __assert_fail
.L11:
        movl    $.LC4, %esi
        movl    $.LC5, %edi
        call    isIsomorphic
        xorl    $1, %eax
        testb   %al, %al
        jne     .L12
        movl    $__PRETTY_FUNCTION__.4161, %ecx
        movl    $37, %edx
        movl    $.LC2, %esi
        movl    $.LC6, %edi
        call    __assert_fail
.L12:
        movl    $.LC7, %esi
        movl    $.LC8, %edi
        call    isIsomorphic
        testb   %al, %al
        jne     .L13
        movl    $__PRETTY_FUNCTION__.4161, %ecx
        movl    $38, %edx
        movl    $.LC2, %esi
        movl    $.LC9, %edi
        call    __assert_fail
.L13:
        movl    $.LC5, %esi
        movl    $.LC4, %edi
        call    isIsomorphic
        xorl    $1, %eax
        testb   %al, %al
        jne     .L14
        movl    $__PRETTY_FUNCTION__.4161, %ecx
        movl    $39, %edx
        movl    $.LC2, %esi
        movl    $.LC10, %edi
        call    __assert_fail
.L14:
        movl    $.LC11, %esi
        movl    $.LC12, %edi
        call    isIsomorphic
        testb   %al, %al
        jne     .L15
        movl    $__PRETTY_FUNCTION__.4161, %ecx
        movl    $40, %edx
        movl    $.LC2, %esi
        movl    $.LC13, %edi
        call    __assert_fail
.L15:
        movl    $0, %eax
        popq    %rbp
        ret
__PRETTY_FUNCTION__.4161:
        .string "main"
