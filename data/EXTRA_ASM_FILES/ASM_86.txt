partition:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $64, %rsp
        movq    %rdi, -56(%rbp)
        movl    %esi, -60(%rbp)
        cmpq    $0, -56(%rbp)
        jne     .L2
        movl    $0, %eax
        jmp     .L3
.L2:
        movl    $16, %esi
        movl    $1, %edi
        call    calloc
        movq    %rax, -32(%rbp)
        movl    $16, %esi
        movl    $1, %edi
        call    calloc
        movq    %rax, -40(%rbp)
        movq    -32(%rbp), %rax
        movq    %rax, -8(%rbp)
        movq    -40(%rbp), %rax
        movq    %rax, -16(%rbp)
        movq    -56(%rbp), %rax
        movq    %rax, -24(%rbp)
        jmp     .L4
.L7:
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        cmpl    %eax, -60(%rbp)
        jle     .L5
        movq    -8(%rbp), %rax
        movq    -24(%rbp), %rdx
        movq    %rdx, 8(%rax)
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
        jmp     .L6
.L5:
        movq    -16(%rbp), %rax
        movq    -24(%rbp), %rdx
        movq    %rdx, 8(%rax)
        movq    -16(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -16(%rbp)
.L6:
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -24(%rbp)
.L4:
        cmpq    $0, -24(%rbp)
        jne     .L7
        movq    -40(%rbp), %rax
        movq    8(%rax), %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, 8(%rax)
        movq    -16(%rbp), %rax
        movq    $0, 8(%rax)
        movq    -32(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -56(%rbp)
        movq    -32(%rbp), %rax
        movq    %rax, %rdi
        call    free
        movq    -40(%rbp), %rax
        movq    %rax, %rdi
        call    free
        movq    -56(%rbp), %rax
.L3:
        leave
        ret
main:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movl    $16, %esi
        movl    $6, %edi
        call    calloc
        movq    %rax, -16(%rbp)
        movq    -16(%rbp), %rax
        movq    %rax, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    $1, (%rax)
        movq    -8(%rbp), %rax
        leaq    16(%rax), %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, 8(%rax)
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    $4, (%rax)
        movq    -8(%rbp), %rax
        leaq    16(%rax), %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, 8(%rax)
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    $3, (%rax)
        movq    -8(%rbp), %rax
        leaq    16(%rax), %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, 8(%rax)
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    $2, (%rax)
        movq    -8(%rbp), %rax
        leaq    16(%rax), %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, 8(%rax)
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    $5, (%rax)
        movq    -8(%rbp), %rax
        leaq    16(%rax), %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, 8(%rax)
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    $2, (%rax)
        movq    -8(%rbp), %rax
        movq    $0, 8(%rax)
        movl    $3, -20(%rbp)
        movl    -20(%rbp), %edx
        movq    -16(%rbp), %rax
        movl    %edx, %esi
        movq    %rax, %rdi
        call    partition
        movq    %rax, -8(%rbp)
        jmp     .L9
.L10:
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
.L9:
        cmpq    $0, -8(%rbp)
        jne     .L10
        movl    $0, %eax
        leave
        ret
