getRow:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movl    %edi, -36(%rbp)
        movl    -36(%rbp), %eax
        movl    %eax, -16(%rbp)
        movl    -16(%rbp), %eax
        addl    $1, %eax
        cltq
        movl    $4, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, -24(%rbp)
        movl    $0, -12(%rbp)
        movl    $0, -28(%rbp)
        movq    -24(%rbp), %rax
        movl    $1, (%rax)
        movl    $1, -4(%rbp)
        jmp     .L2
.L5:
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, -12(%rbp)
        movl    $1, -8(%rbp)
        jmp     .L3
.L4:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    %eax, -28(%rbp)
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %ecx
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    -12(%rbp), %edx
        addl    %ecx, %edx
        movl    %edx, (%rax)
        movl    -28(%rbp), %eax
        movl    %eax, -12(%rbp)
        addl    $1, -8(%rbp)
.L3:
        movl    -8(%rbp), %eax
        cmpl    -4(%rbp), %eax
        jl      .L4
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    $1, (%rax)
        addl    $1, -4(%rbp)
.L2:
        movl    -16(%rbp), %eax
        cmpl    -4(%rbp), %eax
        jge     .L5
        movq    -24(%rbp), %rax
        leave
        ret
main:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $16, %rsp
        movl    $5, -8(%rbp)
        movl    -8(%rbp), %eax
        movl    %eax, %edi
        call    getRow
        movq    %rax, -16(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L8
.L9:
        addl    $1, -4(%rbp)
.L8:
        movl    -8(%rbp), %eax
        cmpl    -4(%rbp), %eax
        jge     .L9
        movl    $0, %eax
        leave
        ret
