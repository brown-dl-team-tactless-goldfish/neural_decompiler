missingNumber0:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movq    $0, -8(%rbp)
        movl    $0, -12(%rbp)
        jmp     .L2
.L3:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        addq    %rax, -8(%rbp)
        addl    $1, -12(%rbp)
.L2:
        movl    -12(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L3
        movl    -44(%rbp), %eax
        addl    $1, %eax
        imull   -44(%rbp), %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        cltq
        movq    %rax, -24(%rbp)
        movq    -24(%rbp), %rax
        movl    %eax, %edx
        movq    -8(%rbp), %rax
        subl    %eax, %edx
        movl    %edx, %eax
        popq    %rbp
        ret
missingNumber:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        jmp     .L6
.L7:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        xorl    %eax, -4(%rbp)
        movl    -8(%rbp), %eax
        addl    $1, %eax
        xorl    %eax, -4(%rbp)
        addl    $1, -8(%rbp)
.L6:
        movl    -8(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jl      .L7
        movl    -4(%rbp), %eax
        popq    %rbp
        ret
.LC0:
        .string "/app/example.c"
.LC1:
        .string "missingNumber(a, 3) == 2"
.LC2:
        .string "missingNumber(b, 2) == 2"
main:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movl    $0, -12(%rbp)
        movl    $1, -8(%rbp)
        movl    $3, -4(%rbp)
        leaq    -12(%rbp), %rax
        movl    $3, %esi
        movq    %rax, %rdi
        call    missingNumber
        cmpl    $2, %eax
        je      .L10
        movl    $__PRETTY_FUNCTION__.4168, %ecx
        movl    $28, %edx
        movl    $.LC0, %esi
        movl    $.LC1, %edi
        call    __assert_fail
.L10:
        movl    $1, -20(%rbp)
        movl    $0, -16(%rbp)
        leaq    -20(%rbp), %rax
        movl    $2, %esi
        movq    %rax, %rdi
        call    missingNumber
        cmpl    $2, %eax
        je      .L11
        movl    $__PRETTY_FUNCTION__.4168, %ecx
        movl    $30, %edx
        movl    $.LC0, %esi
        movl    $.LC2, %edi
        call    __assert_fail
.L11:
        movl    $0, %eax
        leave
        ret
__PRETTY_FUNCTION__.4168:
        .string "main"
