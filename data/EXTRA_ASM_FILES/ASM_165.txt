compareVersion:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -40(%rbp)
        movq    %rsi, -48(%rbp)
        movl    $0, -16(%rbp)
        movl    -16(%rbp), %eax
        movl    %eax, -12(%rbp)
        movl    -12(%rbp), %eax
        movl    %eax, -8(%rbp)
        movl    -8(%rbp), %eax
        movl    %eax, -4(%rbp)
        movq    -40(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -20(%rbp)
        movq    -48(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -24(%rbp)
        jmp     .L2
.L5:
        movl    -12(%rbp), %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        movl    %eax, %ecx
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        subl    $48, %eax
        addl    %ecx, %eax
        movl    %eax, -12(%rbp)
        addl    $1, -4(%rbp)
.L3:
        movl    -4(%rbp), %eax
        cmpl    -20(%rbp), %eax
        jge     .L6
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $46, %al
        jne     .L5
        jmp     .L6
.L8:
        movl    -16(%rbp), %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        movl    %eax, %ecx
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        subl    $48, %eax
        addl    %ecx, %eax
        movl    %eax, -16(%rbp)
        addl    $1, -8(%rbp)
.L6:
        movl    -8(%rbp), %eax
        cmpl    -24(%rbp), %eax
        jge     .L7
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $46, %al
        jne     .L8
.L7:
        movl    -12(%rbp), %eax
        cmpl    -16(%rbp), %eax
        jle     .L9
        movl    $1, %eax
        jmp     .L10
.L9:
        movl    -12(%rbp), %eax
        cmpl    -16(%rbp), %eax
        jge     .L11
        movl    $-1, %eax
        jmp     .L10
.L11:
        movl    $0, -16(%rbp)
        movl    -16(%rbp), %eax
        movl    %eax, -12(%rbp)
        addl    $1, -4(%rbp)
        addl    $1, -8(%rbp)
.L2:
        movl    -4(%rbp), %eax
        cmpl    -20(%rbp), %eax
        jl      .L3
        movl    -8(%rbp), %eax
        cmpl    -24(%rbp), %eax
        jl      .L3
        movl    $0, %eax
.L10:
        leave
        ret
.LC0:
        .ascii  "19.8.3.17.5.01.0.0.4.0.0.0.0.0.0.0.0.0.0.0.0.0.00.0.0.0.0.0"
        .string ".0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.000000.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.000000"
.LC1:
        .ascii  "19.8.3.17.5.01.0.0.4.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0"
        .string ".0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0000.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.000000"
main:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $520, %rsp
        leaq    -320(%rbp), %rax
        movl    $.LC0, %edx
        movl    $39, %ecx
        movq    %rax, %rdi
        movq    %rdx, %rsi
        rep movsq
        movq    %rsi, %rdx
        movq    %rdi, %rax
        movl    (%rdx), %ecx
        movl    %ecx, (%rax)
        leaq    4(%rax), %rax
        leaq    4(%rdx), %rdx
        leaq    -640(%rbp), %rax
        movl    $.LC1, %edx
        movl    $39, %ecx
        movq    %rax, %rdi
        movq    %rdx, %rsi
        rep movsq
        movq    %rsi, %rdx
        movq    %rdi, %rax
        movl    (%rdx), %ecx
        movl    %ecx, (%rax)
        leaq    4(%rax), %rax
        leaq    4(%rdx), %rdx
        movzbl  (%rdx), %ecx
        movb    %cl, (%rax)
        leaq    1(%rax), %rax
        leaq    1(%rdx), %rdx
        movl    $0, %eax
        leave
        ret
