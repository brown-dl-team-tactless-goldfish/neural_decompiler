reverseWords:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -40(%rbp)
        movq    -40(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -16(%rbp)
        movl    $0, -8(%rbp)
        movl    -8(%rbp), %eax
        movl    %eax, -4(%rbp)
        jmp     .L2
.L4:
        addl    $1, -4(%rbp)
.L3:
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $32, %al
        je      .L4
        movl    -4(%rbp), %eax
        cmpl    -16(%rbp), %eax
        jge     .L20
        jmp     .L7
.L9:
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    -8(%rbp), %edx
        movslq  %edx, %rcx
        movq    -40(%rbp), %rdx
        addq    %rcx, %rdx
        movzbl  (%rax), %eax
        movb    %al, (%rdx)
        addl    $1, -8(%rbp)
        addl    $1, -4(%rbp)
.L7:
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $32, %al
        je      .L8
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        jne     .L9
.L8:
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movb    $32, (%rax)
        addl    $1, -8(%rbp)
        addl    $1, -4(%rbp)
.L2:
        movl    -4(%rbp), %eax
        cmpl    -16(%rbp), %eax
        jl      .L3
        jmp     .L6
.L20:
        nop
.L6:
        cmpl    $0, -8(%rbp)
        jle     .L11
        subl    $1, -8(%rbp)
.L11:
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movb    $0, (%rax)
        movq    -40(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -20(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L12
.L13:
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movb    %al, -21(%rbp)
        movl    -20(%rbp), %eax
        subl    $1, %eax
        subl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    -4(%rbp), %edx
        movslq  %edx, %rcx
        movq    -40(%rbp), %rdx
        addq    %rcx, %rdx
        movzbl  (%rax), %eax
        movb    %al, (%rdx)
        movl    -20(%rbp), %eax
        subl    $1, %eax
        subl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rax, %rdx
        movzbl  -21(%rbp), %eax
        movb    %al, (%rdx)
        addl    $1, -4(%rbp)
.L12:
        movl    -20(%rbp), %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        cmpl    %eax, -4(%rbp)
        jl      .L13
        movl    $0, -8(%rbp)
        movl    -8(%rbp), %eax
        movl    %eax, -28(%rbp)
        movl    -28(%rbp), %eax
        movl    %eax, -12(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L14
.L19:
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $32, %al
        je      .L15
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        jne     .L16
.L15:
        movl    -4(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -28(%rbp)
        movl    -12(%rbp), %eax
        movl    %eax, -8(%rbp)
        jmp     .L17
.L18:
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movb    %al, -21(%rbp)
        movl    -28(%rbp), %edx
        movl    -12(%rbp), %eax
        addl    %edx, %eax
        subl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    -8(%rbp), %edx
        movslq  %edx, %rcx
        movq    -40(%rbp), %rdx
        addq    %rcx, %rdx
        movzbl  (%rax), %eax
        movb    %al, (%rdx)
        movl    -28(%rbp), %edx
        movl    -12(%rbp), %eax
        addl    %edx, %eax
        subl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rax, %rdx
        movzbl  -21(%rbp), %eax
        movb    %al, (%rdx)
        addl    $1, -8(%rbp)
.L17:
        movl    -28(%rbp), %eax
        subl    -12(%rbp), %eax
        addl    $1, %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        movl    %eax, %edx
        movl    -12(%rbp), %eax
        addl    %edx, %eax
        cmpl    %eax, -8(%rbp)
        jl      .L18
        movl    -4(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -12(%rbp)
.L16:
        addl    $1, -4(%rbp)
.L14:
        movl    -20(%rbp), %eax
        cmpl    -4(%rbp), %eax
        jge     .L19
        nop
        leave
        ret
main:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $16, %rsp
        movabsq $7600223988373350516, %rax
        movq    %rax, -15(%rbp)
        movl    $1818370163, -7(%rbp)
        movw    $25973, -3(%rbp)
        movb    $0, -1(%rbp)
        leaq    -15(%rbp), %rax
        movq    %rax, %rdi
        call    reverseWords
        movl    $0, %eax
        leave
        ret
