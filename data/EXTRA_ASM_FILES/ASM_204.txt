countPrimes:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movl    %edi, -36(%rbp)
        movl    -36(%rbp), %eax
        addl    $1, %eax
        cltq
        movl    $1, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, -24(%rbp)
        movl    -36(%rbp), %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        cltq
        movl    $4, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, -32(%rbp)
        movq    -24(%rbp), %rax
        movb    $1, (%rax)
        movq    -24(%rbp), %rax
        addq    $1, %rax
        movb    $1, (%rax)
        movl    $0, -12(%rbp)
        movl    $2, -4(%rbp)
        jmp     .L2
.L8:
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        xorl    $1, %eax
        testb   %al, %al
        je      .L3
        movl    -12(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -12(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rax, %rdx
        movl    -4(%rbp), %eax
        movl    %eax, (%rdx)
.L3:
        movl    $0, -8(%rbp)
        jmp     .L4
.L7:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        imull   -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movb    $1, (%rax)
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %ecx
        movl    -4(%rbp), %eax
        cltd
        idivl   %ecx
        movl    %edx, %eax
        testl   %eax, %eax
        je      .L10
        addl    $1, -8(%rbp)
.L4:
        movl    -8(%rbp), %eax
        cmpl    -12(%rbp), %eax
        jge     .L6
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        imull   -4(%rbp), %eax
        cmpl    %eax, -36(%rbp)
        jg      .L7
        jmp     .L6
.L10:
        nop
.L6:
        addl    $1, -4(%rbp)
.L2:
        movl    -4(%rbp), %eax
        cmpl    -36(%rbp), %eax
        jl      .L8
        movl    -12(%rbp), %eax
        leave
        ret
main:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    $0, %eax
        popq    %rbp
        ret
