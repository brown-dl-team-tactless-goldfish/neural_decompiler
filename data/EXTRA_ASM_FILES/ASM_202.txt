hash:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -20(%rbp)
        movl    %esi, -24(%rbp)
        movl    -20(%rbp), %eax
        cltd
        idivl   -24(%rbp)
        movl    %edx, -4(%rbp)
        movl    -4(%rbp), %eax
        cltd
        movl    %edx, %eax
        xorl    -4(%rbp), %eax
        subl    %edx, %eax
        popq    %rbp
        ret
isHappy_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $96, %rsp
        movl    %edi, -84(%rbp)
        cmpl    $1, -84(%rbp)
        jne     .L4
        movl    $1, %eax
        jmp     .L5
.L4:
        movb    $0, -5(%rbp)
        movl    $20, -36(%rbp)
        movl    -36(%rbp), %eax
        cltq
        movl    $8, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, -48(%rbp)
.L13:
        movl    -36(%rbp), %edx
        movl    -84(%rbp), %eax
        movl    %edx, %esi
        movl    %eax, %edi
        call    hash
        movl    %eax, -52(%rbp)
        movl    -52(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    %rax, -16(%rbp)
        jmp     .L6
.L9:
        movq    -16(%rbp), %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        cmpl    %eax, -84(%rbp)
        jne     .L7
        movb    $0, -5(%rbp)
        jmp     .L8
.L7:
        movq    -16(%rbp), %rax
        movq    (%rax), %rax
        addq    $8, %rax
        movq    %rax, -16(%rbp)
.L6:
        movq    -16(%rbp), %rax
        movq    (%rax), %rax
        testq   %rax, %rax
        jne     .L9
        movl    $16, %edi
        call    malloc
        movq    %rax, -64(%rbp)
        movq    -64(%rbp), %rax
        movl    -84(%rbp), %edx
        movl    %edx, (%rax)
        movq    -64(%rbp), %rax
        movq    $0, 8(%rax)
        movq    -16(%rbp), %rax
        movq    -64(%rbp), %rdx
        movq    %rdx, (%rax)
        movl    $0, -20(%rbp)
        jmp     .L10
.L11:
        movl    -84(%rbp), %esi
        movl    $1717986919, %edx
        movl    %esi, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %esi, %eax
        sarl    $31, %eax
        movl    %edx, %ecx
        subl    %eax, %ecx
        movl    %ecx, %eax
        sall    $2, %eax
        addl    %ecx, %eax
        addl    %eax, %eax
        subl    %eax, %esi
        movl    %esi, %ecx
        movl    -84(%rbp), %esi
        movl    $1717986919, %edx
        movl    %esi, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %esi, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %esi
        movl    %esi, %edx
        movl    %ecx, %eax
        imull   %edx, %eax
        addl    %eax, -20(%rbp)
        movl    -84(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -84(%rbp)
.L10:
        cmpl    $0, -84(%rbp)
        jne     .L11
        cmpl    $1, -20(%rbp)
        jne     .L12
        movb    $1, -5(%rbp)
        jmp     .L8
.L12:
        movl    -20(%rbp), %eax
        movl    %eax, -84(%rbp)
        jmp     .L13
.L8:
        movl    $0, -4(%rbp)
        jmp     .L14
.L17:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    %rax, -32(%rbp)
        movq    $0, -72(%rbp)
        jmp     .L15
.L16:
        movq    -32(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -72(%rbp)
        movq    -32(%rbp), %rax
        movq    %rax, %rdi
        call    free
        movq    -72(%rbp), %rax
        movq    %rax, -32(%rbp)
.L15:
        cmpq    $0, -32(%rbp)
        jne     .L16
        addl    $1, -4(%rbp)
.L14:
        movl    -4(%rbp), %eax
        cmpl    -36(%rbp), %eax
        jl      .L17
        movq    -48(%rbp), %rax
        movq    %rax, %rdi
        call    free
        movzbl  -5(%rbp), %eax
.L5:
        leave
        ret
isHappy:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -20(%rbp)
        cmpl    $0, -20(%rbp)
        jg      .L19
        movl    $0, %eax
        jmp     .L20
.L19:
        movl    $4, -8(%rbp)
.L25:
        cmpl    $1, -20(%rbp)
        jne     .L21
        movl    $1, %eax
        jmp     .L20
.L21:
        movl    -20(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jne     .L22
        movl    $0, %eax
        jmp     .L20
.L22:
        movl    $0, -4(%rbp)
        jmp     .L23
.L24:
        movl    -20(%rbp), %esi
        movl    $1717986919, %edx
        movl    %esi, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %esi, %eax
        sarl    $31, %eax
        movl    %edx, %ecx
        subl    %eax, %ecx
        movl    %ecx, %eax
        sall    $2, %eax
        addl    %ecx, %eax
        addl    %eax, %eax
        subl    %eax, %esi
        movl    %esi, %ecx
        movl    -20(%rbp), %esi
        movl    $1717986919, %edx
        movl    %esi, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %esi, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %esi
        movl    %esi, %edx
        movl    %ecx, %eax
        imull   %edx, %eax
        addl    %eax, -4(%rbp)
        movl    -20(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -20(%rbp)
.L23:
        cmpl    $0, -20(%rbp)
        jne     .L24
        movl    -4(%rbp), %eax
        movl    %eax, -20(%rbp)
        jmp     .L25
.L20:
        popq    %rbp
        ret
main:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    $0, %eax
        popq    %rbp
        ret
