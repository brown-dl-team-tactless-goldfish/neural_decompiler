reverseList_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        cmpq    $0, -24(%rbp)
        jne     .L2
        movl    $0, %eax
        jmp     .L3
.L2:
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        testq   %rax, %rax
        jne     .L4
        movq    -24(%rbp), %rax
        jmp     .L3
.L4:
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, %rdi
        call    reverseList_1
        movq    %rax, -8(%rbp)
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -16(%rbp)
        movq    -16(%rbp), %rax
        movq    -24(%rbp), %rdx
        movq    %rdx, 8(%rax)
        movq    -24(%rbp), %rax
        movq    $0, 8(%rax)
        movq    -8(%rbp), %rax
.L3:
        leave
        ret
reverseList:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -40(%rbp)
        cmpq    $0, -40(%rbp)
        jne     .L6
        movl    $0, %eax
        jmp     .L7
.L6:
        movq    $0, -24(%rbp)
        movq    -24(%rbp), %rax
        movq    %rax, -8(%rbp)
        movq    -40(%rbp), %rax
        movq    %rax, -16(%rbp)
        jmp     .L8
.L9:
        movq    -16(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -24(%rbp)
        movq    -16(%rbp), %rax
        movq    -8(%rbp), %rdx
        movq    %rdx, 8(%rax)
        movq    -16(%rbp), %rax
        movq    %rax, -8(%rbp)
        movq    -24(%rbp), %rax
        movq    %rax, -16(%rbp)
.L8:
        movq    -16(%rbp), %rax
        movq    8(%rax), %rax
        testq   %rax, %rax
        jne     .L9
        movq    -16(%rbp), %rax
        movq    -8(%rbp), %rdx
        movq    %rdx, 8(%rax)
        movq    -16(%rbp), %rax
.L7:
        popq    %rbp
        ret
main:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $16, %rsp
        movl    $16, %esi
        movl    $5, %edi
        call    calloc
        movq    %rax, -16(%rbp)
        movq    -16(%rbp), %rax
        movq    %rax, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    $1, (%rax)
        movq    -16(%rbp), %rax
        leaq    16(%rax), %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, 8(%rax)
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    $2, (%rax)
        movq    -16(%rbp), %rax
        leaq    32(%rax), %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, 8(%rax)
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    $3, (%rax)
        movq    -16(%rbp), %rax
        leaq    48(%rax), %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, 8(%rax)
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    $4, (%rax)
        movq    -16(%rbp), %rax
        leaq    64(%rax), %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, 8(%rax)
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    $5, (%rax)
        movq    -8(%rbp), %rax
        movq    $0, 8(%rax)
        movq    -16(%rbp), %rax
        movq    %rax, -8(%rbp)
        jmp     .L11
.L12:
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
.L11:
        cmpq    $0, -8(%rbp)
        jne     .L12
        movq    -16(%rbp), %rax
        movq    %rax, %rdi
        call    reverseList
        movq    %rax, -8(%rbp)
        jmp     .L13
.L14:
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
.L13:
        cmpq    $0, -8(%rbp)
        jne     .L14
        movl    $0, %eax
        leave
        ret
