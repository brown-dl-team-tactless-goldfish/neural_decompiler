searchMatrix:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movl    %edx, -48(%rbp)
        movl    %ecx, -52(%rbp)
        movb    $0, -1(%rbp)
        movl    $0, -8(%rbp)
        movl    -44(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -12(%rbp)
        movl    $0, -16(%rbp)
        jmp     .L2
.L6:
        movl    -12(%rbp), %eax
        subl    -8(%rbp), %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        movl    %eax, %edx
        movl    -8(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, -28(%rbp)
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        cmpl    %eax, -52(%rbp)
        jl      .L3
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -48(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        subq    $4, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -52(%rbp)
        jg      .L3
        movb    $1, -1(%rbp)
        movl    -28(%rbp), %eax
        movl    %eax, -16(%rbp)
        jmp     .L4
.L3:
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        cmpl    %eax, -52(%rbp)
        jge     .L5
        movl    -28(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -12(%rbp)
        jmp     .L2
.L5:
        movl    -28(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -8(%rbp)
.L2:
        movl    -8(%rbp), %eax
        cmpl    -12(%rbp), %eax
        jle     .L6
.L4:
        cmpb    $0, -1(%rbp)
        je      .L7
        movl    $0, -20(%rbp)
        movl    -48(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -24(%rbp)
        jmp     .L8
.L12:
        movl    -24(%rbp), %eax
        subl    -20(%rbp), %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        movl    %eax, %edx
        movl    -20(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, -32(%rbp)
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -32(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -52(%rbp)
        jne     .L9
        movl    $1, %eax
        jmp     .L10
.L9:
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -32(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -52(%rbp)
        jge     .L11
        movl    -32(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -24(%rbp)
        jmp     .L8
.L11:
        movl    -32(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -20(%rbp)
.L8:
        movl    -20(%rbp), %eax
        cmpl    -24(%rbp), %eax
        jle     .L12
        movl    $0, %eax
        jmp     .L10
.L7:
        movl    $0, %eax
.L10:
        popq    %rbp
        ret
.LC0:
        .string "/app/example.c"
.LC1:
        .string "searchMatrix(matrix, rows, cols, 16) == true"
.LC2:
        .string "searchMatrix(matrix, rows, cols, 15) == false"
main:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $40, %rsp
        movl    $3, -24(%rbp)
        movl    $4, -28(%rbp)
        movl    -24(%rbp), %eax
        cltq
        salq    $3, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -40(%rbp)
        movl    $0, -20(%rbp)
        jmp     .L14
.L15:
        movl    -28(%rbp), %eax
        cltq
        salq    $2, %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -40(%rbp), %rdx
        leaq    (%rcx,%rdx), %rbx
        movq    %rax, %rdi
        call    malloc
        movq    %rax, (%rbx)
        addl    $1, -20(%rbp)
.L14:
        movl    -20(%rbp), %eax
        cmpl    -24(%rbp), %eax
        jl      .L15
        movq    -40(%rbp), %rax
        movq    (%rax), %rax
        movl    $1, (%rax)
        movq    -40(%rbp), %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    $3, (%rax)
        movq    -40(%rbp), %rax
        movq    (%rax), %rax
        addq    $8, %rax
        movl    $5, (%rax)
        movq    -40(%rbp), %rax
        movq    (%rax), %rax
        addq    $12, %rax
        movl    $7, (%rax)
        movq    -40(%rbp), %rax
        addq    $8, %rax
        movq    (%rax), %rax
        movl    $10, (%rax)
        movq    -40(%rbp), %rax
        addq    $8, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    $11, (%rax)
        movq    -40(%rbp), %rax
        addq    $8, %rax
        movq    (%rax), %rax
        addq    $8, %rax
        movl    $16, (%rax)
        movq    -40(%rbp), %rax
        addq    $8, %rax
        movq    (%rax), %rax
        addq    $12, %rax
        movl    $20, (%rax)
        movq    -40(%rbp), %rax
        addq    $16, %rax
        movq    (%rax), %rax
        movl    $23, (%rax)
        movq    -40(%rbp), %rax
        addq    $16, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    $30, (%rax)
        movq    -40(%rbp), %rax
        addq    $16, %rax
        movq    (%rax), %rax
        addq    $8, %rax
        movl    $34, (%rax)
        movq    -40(%rbp), %rax
        addq    $16, %rax
        movq    (%rax), %rax
        addq    $12, %rax
        movl    $50, (%rax)
        movl    -28(%rbp), %edx
        movl    -24(%rbp), %esi
        movq    -40(%rbp), %rax
        movl    $16, %ecx
        movq    %rax, %rdi
        call    searchMatrix
        testb   %al, %al
        jne     .L16
        movl    $__PRETTY_FUNCTION__.4175, %ecx
        movl    $52, %edx
        movl    $.LC0, %esi
        movl    $.LC1, %edi
        call    __assert_fail
.L16:
        movl    -28(%rbp), %edx
        movl    -24(%rbp), %esi
        movq    -40(%rbp), %rax
        movl    $15, %ecx
        movq    %rax, %rdi
        call    searchMatrix
        xorl    $1, %eax
        testb   %al, %al
        jne     .L17
        movl    $__PRETTY_FUNCTION__.4175, %ecx
        movl    $53, %edx
        movl    $.LC0, %esi
        movl    $.LC2, %edi
        call    __assert_fail
.L17:
        movl    $0, %eax
        addq    $40, %rsp
        popq    %rbx
        popq    %rbp
        ret
__PRETTY_FUNCTION__.4175:
        .string "main"
