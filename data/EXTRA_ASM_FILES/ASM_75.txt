swap:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movq    %rsi, -32(%rbp)
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, -4(%rbp)
        movq    -32(%rbp), %rax
        movl    (%rax), %edx
        movq    -24(%rbp), %rax
        movl    %edx, (%rax)
        movq    -32(%rbp), %rax
        movl    -4(%rbp), %edx
        movl    %edx, (%rax)
        nop
        popq    %rbp
        ret
sortColors:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        movl    -28(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -12(%rbp)
        jmp     .L3
.L6:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L4
        movl    -8(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -8(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    swap
        addl    $1, -4(%rbp)
        jmp     .L3
.L4:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $2, %eax
        jne     .L5
        movl    -12(%rbp), %eax
        leal    -1(%rax), %edx
        movl    %edx, -12(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    swap
        jmp     .L3
.L5:
        addl    $1, -4(%rbp)
.L3:
        movl    -4(%rbp), %eax
        cmpl    -12(%rbp), %eax
        jle     .L6
        nop
        leave
        ret
sortColors0:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    $0, -8(%rbp)
        movl    $0, -12(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L8
.L11:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L9
        addl    $1, -8(%rbp)
.L9:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $1, %eax
        jne     .L10
        addl    $1, -12(%rbp)
.L10:
        addl    $1, -4(%rbp)
.L8:
        movl    -4(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jl      .L11
        movl    $0, -4(%rbp)
        jmp     .L12
.L13:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    $0, (%rax)
        addl    $1, -4(%rbp)
.L12:
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jl      .L13
        movl    -8(%rbp), %eax
        movl    %eax, -4(%rbp)
        jmp     .L14
.L15:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    $1, (%rax)
        addl    $1, -4(%rbp)
.L14:
        movl    -8(%rbp), %edx
        movl    -12(%rbp), %eax
        addl    %edx, %eax
        cmpl    %eax, -4(%rbp)
        jl      .L15
        jmp     .L16
.L17:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    $2, (%rax)
        addl    $1, -4(%rbp)
.L16:
        movl    -4(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jl      .L17
        nop
        popq    %rbp
        ret
main:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $64, %rsp
        movl    $1, -64(%rbp)
        movl    $2, -60(%rbp)
        movl    $0, -56(%rbp)
        movl    $1, -52(%rbp)
        movl    $0, -48(%rbp)
        movl    $2, -44(%rbp)
        movl    $0, -40(%rbp)
        movl    $0, -36(%rbp)
        movl    $1, -32(%rbp)
        movl    $0, -28(%rbp)
        movl    $2, -24(%rbp)
        movl    $1, -20(%rbp)
        movl    $12, -8(%rbp)
        movl    -8(%rbp), %edx
        leaq    -64(%rbp), %rax
        movl    %edx, %esi
        movq    %rax, %rdi
        call    sortColors
        movl    $0, -4(%rbp)
        jmp     .L19
.L20:
        addl    $1, -4(%rbp)
.L19:
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jl      .L20
        movl    $0, %eax
        leave
        ret
