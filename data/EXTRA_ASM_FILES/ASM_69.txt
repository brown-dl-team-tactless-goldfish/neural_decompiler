mySqrt:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -36(%rbp)
        movsd   .LC0(%rip), %xmm0
        movsd   %xmm0, -8(%rbp)
        movl    $0, -12(%rbp)
        jmp     .L2
.L8:
        movsd   -8(%rbp), %xmm0
        mulsd   -8(%rbp), %xmm0
        cvtsi2sd        -36(%rbp), %xmm1
        subsd   %xmm1, %xmm0
        movsd   %xmm0, -24(%rbp)
        movsd   -24(%rbp), %xmm0
        pxor    %xmm1, %xmm1
        comisd  %xmm1, %xmm0
        jbe     .L3
        movsd   .LC2(%rip), %xmm0
        comisd  -24(%rbp), %xmm0
        ja      .L5
.L3:
        pxor    %xmm0, %xmm0
        comisd  -24(%rbp), %xmm0
        jbe     .L6
        movsd   -24(%rbp), %xmm0
        comisd  .LC3(%rip), %xmm0
        ja      .L5
.L6:
        movsd   -8(%rbp), %xmm0
        addsd   %xmm0, %xmm0
        movsd   %xmm0, -32(%rbp)
        movsd   -24(%rbp), %xmm0
        movapd  %xmm0, %xmm1
        divsd   -32(%rbp), %xmm1
        movsd   -8(%rbp), %xmm0
        subsd   %xmm1, %xmm0
        movsd   %xmm0, -8(%rbp)
        addl    $1, -12(%rbp)
.L2:
        cmpl    $31, -12(%rbp)
        jle     .L8
.L5:
        movsd   -8(%rbp), %xmm0
        cvttsd2si       %xmm0, %eax
        popq    %rbp
        ret
mySqrt0:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -36(%rbp)
        cvtsi2ss        -36(%rbp), %xmm0
        movss   %xmm0, -20(%rbp)
        leaq    -20(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, -24(%rbp)
        movl    $2, -4(%rbp)
        movl    -24(%rbp), %eax
        sarl    %eax
        leal    532676608(%rax), %edx
        movl    -4(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, -24(%rbp)
        leaq    -24(%rbp), %rax
        movss   (%rax), %xmm0
        movss   %xmm0, -20(%rbp)
        movss   -20(%rbp), %xmm0
        cvtss2sd        %xmm0, %xmm0
        movsd   %xmm0, -16(%rbp)
        movsd   -16(%rbp), %xmm1
        movsd   .LC4(%rip), %xmm0
        mulsd   %xmm0, %xmm1
        cvtsi2sd        -36(%rbp), %xmm2
        movsd   .LC4(%rip), %xmm0
        mulsd   %xmm2, %xmm0
        divsd   -16(%rbp), %xmm0
        addsd   %xmm1, %xmm0
        movsd   %xmm0, -16(%rbp)
        movsd   -16(%rbp), %xmm1
        movsd   .LC4(%rip), %xmm0
        mulsd   %xmm0, %xmm1
        cvtsi2sd        -36(%rbp), %xmm2
        movsd   .LC4(%rip), %xmm0
        mulsd   %xmm2, %xmm0
        divsd   -16(%rbp), %xmm0
        addsd   %xmm1, %xmm0
        movsd   %xmm0, -16(%rbp)
        movsd   -16(%rbp), %xmm1
        movsd   .LC4(%rip), %xmm0
        mulsd   %xmm0, %xmm1
        cvtsi2sd        -36(%rbp), %xmm2
        movsd   .LC4(%rip), %xmm0
        mulsd   %xmm2, %xmm0
        divsd   -16(%rbp), %xmm0
        addsd   %xmm1, %xmm0
        movsd   %xmm0, -16(%rbp)
        movsd   -16(%rbp), %xmm0
        cvttsd2si       %xmm0, %eax
        popq    %rbp
        ret
mySqrt1:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -20(%rbp)
        cmpl    $1, -20(%rbp)
        jg      .L15
        movl    -20(%rbp), %eax
        jmp     .L16
.L15:
        movl    $1, -4(%rbp)
        movl    -20(%rbp), %eax
        movl    %eax, -8(%rbp)
        jmp     .L17
.L19:
        movl    -4(%rbp), %edx
        movl    -8(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        movl    %eax, -12(%rbp)
        movl    -20(%rbp), %eax
        cltd
        idivl   -12(%rbp)
        cmpl    %eax, -12(%rbp)
        jle     .L18
        movl    -12(%rbp), %eax
        movl    %eax, -8(%rbp)
        jmp     .L17
.L18:
        movl    -12(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -4(%rbp)
.L17:
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jl      .L19
        movl    -8(%rbp), %eax
        subl    $1, %eax
.L16:
        popq    %rbp
        ret
.LC5:
        .string "/app/example.c"
.LC6:
        .string "mySqrt1(0) == 0"
.LC7:
        .string "mySqrt1(1) == 1"
.LC8:
        .string "mySqrt1(2) == 1"
.LC9:
        .string "mySqrt1(3) == 1"
.LC10:
        .string "mySqrt1(8) == 2"
.LC11:
        .string "mySqrt1(2147395599) == 46339"
.LC12:
        .string "mySqrt1(2147395600) == 46340"
main:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    $0, %edi
        call    mySqrt1
        testl   %eax, %eax
        je      .L21
        movl    $__PRETTY_FUNCTION__.4174, %ecx
        movl    $49, %edx
        movl    $.LC5, %esi
        movl    $.LC6, %edi
        call    __assert_fail
.L21:
        movl    $1, %edi
        call    mySqrt1
        cmpl    $1, %eax
        je      .L22
        movl    $__PRETTY_FUNCTION__.4174, %ecx
        movl    $50, %edx
        movl    $.LC5, %esi
        movl    $.LC7, %edi
        call    __assert_fail
.L22:
        movl    $2, %edi
        call    mySqrt1
        cmpl    $1, %eax
        je      .L23
        movl    $__PRETTY_FUNCTION__.4174, %ecx
        movl    $51, %edx
        movl    $.LC5, %esi
        movl    $.LC8, %edi
        call    __assert_fail
.L23:
        movl    $3, %edi
        call    mySqrt1
        cmpl    $1, %eax
        je      .L24
        movl    $__PRETTY_FUNCTION__.4174, %ecx
        movl    $52, %edx
        movl    $.LC5, %esi
        movl    $.LC9, %edi
        call    __assert_fail
.L24:
        movl    $8, %edi
        call    mySqrt1
        cmpl    $2, %eax
        je      .L25
        movl    $__PRETTY_FUNCTION__.4174, %ecx
        movl    $53, %edx
        movl    $.LC5, %esi
        movl    $.LC10, %edi
        call    __assert_fail
.L25:
        movl    $2147395599, %edi
        call    mySqrt1
        cmpl    $46339, %eax
        je      .L26
        movl    $__PRETTY_FUNCTION__.4174, %ecx
        movl    $54, %edx
        movl    $.LC5, %esi
        movl    $.LC11, %edi
        call    __assert_fail
.L26:
        movl    $2147395600, %edi
        call    mySqrt1
        cmpl    $46340, %eax
        je      .L27
        movl    $__PRETTY_FUNCTION__.4174, %ecx
        movl    $55, %edx
        movl    $.LC5, %esi
        movl    $.LC12, %edi
        call    __assert_fail
.L27:
        movl    $0, %eax
        popq    %rbp
        ret
__PRETTY_FUNCTION__.4174:
        .string "main"
.LC0:
        .long   0
        .long   1072693248
.LC2:
        .long   3758096384
        .long   1044740494
.LC3:
        .long   3758096384
        .long   -1102743154
.LC4:
        .long   0
        .long   1071644672
