min:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -20(%rbp)
        movl    %esi, -24(%rbp)
        movl    %edx, -28(%rbp)
        movl    -20(%rbp), %eax
        movl    %eax, -4(%rbp)
        movl    -24(%rbp), %eax
        cmpl    -4(%rbp), %eax
        jge     .L2
        movl    -24(%rbp), %eax
        movl    %eax, -4(%rbp)
.L2:
        movl    -28(%rbp), %eax
        cmpl    -4(%rbp), %eax
        jge     .L3
        movl    -28(%rbp), %eax
        movl    %eax, -4(%rbp)
.L3:
        movl    -4(%rbp), %eax
        popq    %rbp
        ret
minDistance:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %r15
        pushq   %r14
        pushq   %r13
        pushq   %r12
        pushq   %rbx
        subq    $72, %rsp
        movq    %rdi, -104(%rbp)
        movq    %rsi, -112(%rbp)
        movq    -104(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -60(%rbp)
        movq    -112(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -64(%rbp)
        cmpl    $0, -60(%rbp)
        jne     .L6
        movl    -64(%rbp), %eax
        jmp     .L7
.L6:
        cmpl    $0, -64(%rbp)
        jne     .L8
        movl    -60(%rbp), %eax
        jmp     .L7
.L8:
        movl    -64(%rbp), %eax
        leal    1(%rax), %ebx
        movslq  %ebx, %rax
        subq    $1, %rax
        movq    %rax, -72(%rbp)
        movslq  %ebx, %rax
        movq    %rax, %r14
        movl    $0, %r15d
        movl    -64(%rbp), %eax
        addl    $1, %eax
        movslq  %eax, %rdx
        subq    $1, %rdx
        movq    %rdx, -80(%rbp)
        cltq
        movq    %rax, %r12
        movl    $0, %r13d
        movl    -60(%rbp), %eax
        leal    1(%rax), %edx
        movl    -64(%rbp), %eax
        addl    $1, %eax
        imull   %edx, %eax
        cltq
        movl    $4, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, -88(%rbp)
        movq    -88(%rbp), %rax
        movl    $0, (%rax)
        movl    $1, -56(%rbp)
        jmp     .L9
.L10:
        movl    -56(%rbp), %eax
        movslq  %eax, %rdx
        movslq  %ebx, %rax
        imulq   %rdx, %rax
        leaq    0(,%rax,4), %rdx
        movq    -88(%rbp), %rax
        addq    %rax, %rdx
        movl    -56(%rbp), %eax
        movl    %eax, (%rdx)
        addl    $1, -56(%rbp)
.L9:
        movl    -56(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jle     .L10
        movl    $1, -52(%rbp)
        jmp     .L11
.L12:
        movq    -88(%rbp), %rax
        movl    -52(%rbp), %edx
        movslq  %edx, %rdx
        movl    -52(%rbp), %ecx
        movl    %ecx, (%rax,%rdx,4)
        addl    $1, -52(%rbp)
.L11:
        movl    -52(%rbp), %eax
        cmpl    -64(%rbp), %eax
        jle     .L12
        movl    $1, -56(%rbp)
        jmp     .L13
.L18:
        movl    $1, -52(%rbp)
        jmp     .L14
.L17:
        movl    -56(%rbp), %eax
        cltq
        leaq    -1(%rax), %rdx
        movq    -104(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %edx
        movl    -52(%rbp), %eax
        cltq
        leaq    -1(%rax), %rcx
        movq    -112(%rbp), %rax
        addq    %rcx, %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        jne     .L15
        movl    -56(%rbp), %eax
        subl    $1, %eax
        movslq  %eax, %rdx
        movslq  %ebx, %rax
        imulq   %rdx, %rax
        leaq    0(,%rax,4), %rdx
        movq    -88(%rbp), %rax
        addq    %rax, %rdx
        movl    -52(%rbp), %eax
        leal    -1(%rax), %esi
        movl    -56(%rbp), %eax
        movslq  %eax, %rcx
        movslq  %ebx, %rax
        imulq   %rcx, %rax
        leaq    0(,%rax,4), %rcx
        movq    -88(%rbp), %rax
        addq    %rax, %rcx
        movslq  %esi, %rax
        movl    (%rdx,%rax,4), %edx
        movl    -52(%rbp), %eax
        cltq
        movl    %edx, (%rcx,%rax,4)
        jmp     .L16
.L15:
        movl    -56(%rbp), %eax
        subl    $1, %eax
        movslq  %eax, %rdx
        movslq  %ebx, %rax
        imulq   %rdx, %rax
        leaq    0(,%rax,4), %rdx
        movq    -88(%rbp), %rax
        addq    %rax, %rdx
        movl    -52(%rbp), %eax
        subl    $1, %eax
        cltq
        movl    (%rdx,%rax,4), %eax
        leal    1(%rax), %edx
        movl    -56(%rbp), %eax
        subl    $1, %eax
        movslq  %eax, %rcx
        movslq  %ebx, %rax
        imulq   %rcx, %rax
        leaq    0(,%rax,4), %rcx
        movq    -88(%rbp), %rax
        addq    %rax, %rcx
        movl    -52(%rbp), %eax
        cltq
        movl    (%rcx,%rax,4), %eax
        leal    1(%rax), %ecx
        movl    -56(%rbp), %eax
        movslq  %eax, %rsi
        movslq  %ebx, %rax
        imulq   %rsi, %rax
        leaq    0(,%rax,4), %rsi
        movq    -88(%rbp), %rax
        addq    %rax, %rsi
        movl    -52(%rbp), %eax
        subl    $1, %eax
        cltq
        movl    (%rsi,%rax,4), %eax
        addl    $1, %eax
        movl    -56(%rbp), %esi
        movslq  %esi, %rdi
        movslq  %ebx, %rsi
        imulq   %rdi, %rsi
        leaq    0(,%rsi,4), %rdi
        movq    -88(%rbp), %rsi
        leaq    (%rdi,%rsi), %r12
        movl    %ecx, %esi
        movl    %eax, %edi
        call    min
        movl    %eax, %edx
        movl    -52(%rbp), %eax
        cltq
        movl    %edx, (%r12,%rax,4)
.L16:
        addl    $1, -52(%rbp)
.L14:
        movl    -52(%rbp), %eax
        cmpl    -64(%rbp), %eax
        jle     .L17
        addl    $1, -56(%rbp)
.L13:
        movl    -56(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jle     .L18
        movl    -60(%rbp), %eax
        movslq  %eax, %rdx
        movslq  %ebx, %rax
        imulq   %rdx, %rax
        leaq    0(,%rax,4), %rdx
        movq    -88(%rbp), %rax
        addq    %rax, %rdx
        movl    -64(%rbp), %eax
        cltq
        movl    (%rdx,%rax,4), %eax
.L7:
        addq    $72, %rsp
        popq    %rbx
        popq    %r12
        popq    %r13
        popq    %r14
        popq    %r15
        popq    %rbp
        ret
main:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    $0, %eax
        popq    %rbp
        ret
