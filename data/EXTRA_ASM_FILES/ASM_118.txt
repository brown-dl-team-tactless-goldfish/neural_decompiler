generate:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $56, %rsp
        movl    %edi, -36(%rbp)
        movq    %rsi, -48(%rbp)
        movq    %rdx, -56(%rbp)
        movq    -56(%rbp), %rax
        movl    -36(%rbp), %edx
        movl    %edx, (%rax)
        movq    -56(%rbp), %rax
        movl    (%rax), %eax
        cltq
        movl    $8, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, -32(%rbp)
        movq    -56(%rbp), %rax
        movl    (%rax), %eax
        cltq
        movl    $4, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, %rdx
        movq    -48(%rbp), %rax
        movq    %rdx, (%rax)
        movl    $0, -20(%rbp)
        jmp     .L2
.L5:
        movq    -48(%rbp), %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    -20(%rbp), %edx
        addl    $1, %edx
        movl    %edx, (%rax)
        movq    -48(%rbp), %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -32(%rbp), %rdx
        leaq    (%rcx,%rdx), %rbx
        movl    $4, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, (%rbx)
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    $1, (%rax)
        movl    $1, -24(%rbp)
        jmp     .L3
.L4:
        movl    -20(%rbp), %eax
        cltq
        salq    $3, %rax
        leaq    -8(%rax), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        subq    $4, %rdx
        addq    %rdx, %rax
        movl    (%rax), %ecx
        movl    -20(%rbp), %eax
        cltq
        salq    $3, %rax
        leaq    -8(%rax), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rsi
        movq    -32(%rbp), %rax
        addq    %rsi, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %esi
        movslq  %esi, %rsi
        salq    $2, %rsi
        addq    %rsi, %rax
        addl    %ecx, %edx
        movl    %edx, (%rax)
        addl    $1, -24(%rbp)
.L3:
        movl    -24(%rbp), %eax
        cmpl    -20(%rbp), %eax
        jl      .L4
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    $1, (%rax)
        addl    $1, -20(%rbp)
.L2:
        movq    -56(%rbp), %rax
        movl    (%rax), %eax
        cmpl    %eax, -20(%rbp)
        jl      .L5
        movq    -32(%rbp), %rax
        addq    $56, %rsp
        popq    %rbx
        popq    %rbp
        ret
main:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movl    $0, -20(%rbp)
        movq    $0, -32(%rbp)
        leaq    -20(%rbp), %rdx
        leaq    -32(%rbp), %rax
        movq    %rax, %rsi
        movl    $5, %edi
        call    generate
        movq    %rax, -16(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L8
.L11:
        movl    $0, -8(%rbp)
        jmp     .L9
.L10:
        addl    $1, -8(%rbp)
.L9:
        movq    -32(%rbp), %rax
        movl    -4(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -8(%rbp)
        jl      .L10
        addl    $1, -4(%rbp)
.L8:
        movl    -20(%rbp), %eax
        cmpl    %eax, -4(%rbp)
        jl      .L11
        movl    $0, %eax
        leave
        ret
