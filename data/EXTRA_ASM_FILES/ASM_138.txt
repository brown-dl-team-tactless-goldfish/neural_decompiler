copyRandomList:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -40(%rbp)
        cmpq    $0, -40(%rbp)
        jne     .L2
        movl    $0, %eax
        jmp     .L3
.L2:
        movq    $0, -16(%rbp)
        movq    -40(%rbp), %rax
        movq    %rax, -8(%rbp)
        jmp     .L4
.L5:
        movl    $24, %edi
        call    malloc
        movq    %rax, -16(%rbp)
        movq    -8(%rbp), %rax
        movl    (%rax), %edx
        movq    -16(%rbp), %rax
        movl    %edx, (%rax)
        movq    -8(%rbp), %rax
        movq    8(%rax), %rdx
        movq    -16(%rbp), %rax
        movq    %rdx, 8(%rax)
        movq    -8(%rbp), %rax
        movq    -16(%rbp), %rdx
        movq    %rdx, 8(%rax)
        movq    -16(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
.L4:
        cmpq    $0, -8(%rbp)
        jne     .L5
        movq    -40(%rbp), %rax
        movq    %rax, -8(%rbp)
        movq    -40(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -24(%rbp)
        movq    $0, -32(%rbp)
        jmp     .L6
.L9:
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -32(%rbp)
        movq    -8(%rbp), %rax
        movq    16(%rax), %rax
        testq   %rax, %rax
        je      .L7
        movq    -8(%rbp), %rax
        movq    16(%rax), %rax
        movq    8(%rax), %rdx
        movq    -32(%rbp), %rax
        movq    %rdx, 16(%rax)
        jmp     .L8
.L7:
        movq    -32(%rbp), %rax
        movq    $0, 16(%rax)
.L8:
        movq    -32(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
.L6:
        cmpq    $0, -8(%rbp)
        jne     .L9
        movq    -40(%rbp), %rax
        movq    %rax, -8(%rbp)
        jmp     .L10
.L12:
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -32(%rbp)
        movq    -32(%rbp), %rax
        movq    8(%rax), %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, 8(%rax)
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
        cmpq    $0, -8(%rbp)
        je      .L11
        movq    -8(%rbp), %rax
        movq    8(%rax), %rdx
        movq    -32(%rbp), %rax
        movq    %rdx, 8(%rax)
        jmp     .L10
.L11:
        movq    -32(%rbp), %rax
        movq    $0, 8(%rax)
.L10:
        cmpq    $0, -8(%rbp)
        jne     .L12
        movq    -24(%rbp), %rax
.L3:
        leave
        ret
main:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $64, %rsp
        movl    $96, %edi
        call    malloc
        movq    %rax, -16(%rbp)
        movq    -16(%rbp), %rax
        movq    %rax, -24(%rbp)
        movq    -24(%rbp), %rax
        movl    $1, (%rax)
        movq    -16(%rbp), %rax
        addq    $24, %rax
        movq    %rax, -32(%rbp)
        movq    -32(%rbp), %rax
        movl    $2, (%rax)
        movq    -16(%rbp), %rax
        addq    $48, %rax
        movq    %rax, -40(%rbp)
        movq    -40(%rbp), %rax
        movl    $3, (%rax)
        movq    -16(%rbp), %rax
        addq    $72, %rax
        movq    %rax, -48(%rbp)
        movq    -48(%rbp), %rax
        movl    $4, (%rax)
        movq    -24(%rbp), %rax
        movq    -32(%rbp), %rdx
        movq    %rdx, 8(%rax)
        movq    -32(%rbp), %rax
        movq    -40(%rbp), %rdx
        movq    %rdx, 8(%rax)
        movq    -40(%rbp), %rax
        movq    -48(%rbp), %rdx
        movq    %rdx, 8(%rax)
        movq    -48(%rbp), %rax
        movq    $0, 8(%rax)
        movq    -24(%rbp), %rax
        movq    -40(%rbp), %rdx
        movq    %rdx, 16(%rax)
        movq    -32(%rbp), %rax
        movq    -24(%rbp), %rdx
        movq    %rdx, 16(%rax)
        movq    -40(%rbp), %rax
        movq    $0, 16(%rax)
        movq    -48(%rbp), %rax
        movq    -48(%rbp), %rdx
        movq    %rdx, 16(%rax)
        movq    -16(%rbp), %rax
        movq    %rax, -8(%rbp)
        jmp     .L14
.L19:
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
.L14:
        cmpq    $0, -8(%rbp)
        jne     .L19
        movq    -16(%rbp), %rax
        movq    %rax, %rdi
        call    copyRandomList
        movq    %rax, -56(%rbp)
        movq    -56(%rbp), %rax
        movq    %rax, -8(%rbp)
        jmp     .L16
.L20:
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
.L16:
        cmpq    $0, -8(%rbp)
        jne     .L20
        movl    $0, %eax
        leave
        ret
