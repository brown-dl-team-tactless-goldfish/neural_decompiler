merge:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movq    %rsi, -32(%rbp)
        cmpq    $0, -24(%rbp)
        jne     .L2
        movq    -32(%rbp), %rax
        jmp     .L11
.L2:
        cmpq    $0, -32(%rbp)
        jne     .L4
        movq    -24(%rbp), %rax
        jmp     .L11
.L4:
        movq    $0, -16(%rbp)
        leaq    -16(%rbp), %rax
        movq    %rax, -8(%rbp)
        jmp     .L5
.L8:
        movq    -24(%rbp), %rax
        movl    (%rax), %edx
        movq    -32(%rbp), %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jg      .L6
        movq    -8(%rbp), %rax
        movq    -24(%rbp), %rdx
        movq    %rdx, (%rax)
        movq    -8(%rbp), %rax
        movq    (%rax), %rax
        addq    $8, %rax
        movq    %rax, -8(%rbp)
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -24(%rbp)
        jmp     .L5
.L6:
        movq    -8(%rbp), %rax
        movq    -32(%rbp), %rdx
        movq    %rdx, (%rax)
        movq    -8(%rbp), %rax
        movq    (%rax), %rax
        addq    $8, %rax
        movq    %rax, -8(%rbp)
        movq    -32(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -32(%rbp)
.L5:
        cmpq    $0, -24(%rbp)
        je      .L7
        cmpq    $0, -32(%rbp)
        jne     .L8
.L7:
        cmpq    $0, -24(%rbp)
        je      .L9
        movq    -8(%rbp), %rax
        movq    -24(%rbp), %rdx
        movq    %rdx, (%rax)
        jmp     .L10
.L9:
        cmpq    $0, -32(%rbp)
        je      .L10
        movq    -8(%rbp), %rax
        movq    -32(%rbp), %rdx
        movq    %rdx, (%rax)
.L10:
        movq    -16(%rbp), %rax
.L11:
        popq    %rbp
        ret
sortList:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $80, %rsp
        movq    %rdi, -72(%rbp)
        cmpq    $0, -72(%rbp)
        jne     .L13
        movl    $0, %eax
        jmp     .L14
.L13:
        movq    -72(%rbp), %rax
        movq    8(%rax), %rax
        testq   %rax, %rax
        jne     .L15
        movq    -72(%rbp), %rax
        jmp     .L14
.L15:
        movq    -72(%rbp), %rax
        movq    %rax, -8(%rbp)
        movl    $0, -12(%rbp)
        jmp     .L16
.L17:
        addl    $1, -12(%rbp)
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
.L16:
        cmpq    $0, -8(%rbp)
        jne     .L17
        movq    -72(%rbp), %rax
        movq    %rax, -24(%rbp)
        movq    $0, -32(%rbp)
        movl    -12(%rbp), %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        movl    %eax, -36(%rbp)
        jmp     .L18
.L19:
        movq    -24(%rbp), %rax
        movq    %rax, -32(%rbp)
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -24(%rbp)
.L18:
        movl    -36(%rbp), %eax
        leal    -1(%rax), %edx
        movl    %edx, -36(%rbp)
        testl   %eax, %eax
        jne     .L19
        movq    -32(%rbp), %rax
        movq    $0, 8(%rax)
        movq    -72(%rbp), %rax
        movq    %rax, %rdi
        call    sortList
        movq    %rax, -48(%rbp)
        movq    -24(%rbp), %rax
        movq    %rax, %rdi
        call    sortList
        movq    %rax, -56(%rbp)
        movq    -56(%rbp), %rdx
        movq    -48(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    merge
.L14:
        leave
        ret
main:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movl    $16, %esi
        movl    $5, %edi
        call    calloc
        movq    %rax, -40(%rbp)
        leaq    -40(%rbp), %rax
        movq    %rax, -8(%rbp)
        movl    $0, -12(%rbp)
        jmp     .L21
.L22:
        movq    -8(%rbp), %rax
        movq    (%rax), %rax
        movl    $5, %edx
        subl    -12(%rbp), %edx
        movl    %edx, (%rax)
        movq    -8(%rbp), %rax
        movq    (%rax), %rdx
        movq    -8(%rbp), %rax
        movq    (%rax), %rax
        addq    $16, %rdx
        movq    %rdx, 8(%rax)
        movq    -8(%rbp), %rax
        movq    (%rax), %rax
        addq    $8, %rax
        movq    %rax, -8(%rbp)
        addl    $1, -12(%rbp)
.L21:
        cmpl    $4, -12(%rbp)
        jle     .L22
        movq    -8(%rbp), %rax
        movq    $0, (%rax)
        movq    -40(%rbp), %rax
        movq    %rax, -24(%rbp)
        jmp     .L23
.L24:
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -24(%rbp)
.L23:
        cmpq    $0, -24(%rbp)
        jne     .L24
        movq    -40(%rbp), %rax
        movq    %rax, %rdi
        call    sortList
        movq    %rax, -32(%rbp)
        movq    -32(%rbp), %rax
        movq    %rax, -24(%rbp)
        jmp     .L25
.L26:
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -24(%rbp)
.L25:
        cmpq    $0, -24(%rbp)
        jne     .L26
        movl    $0, %eax
        leave
        ret
