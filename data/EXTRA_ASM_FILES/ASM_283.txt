swap:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movq    %rsi, -32(%rbp)
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, -4(%rbp)
        movq    -32(%rbp), %rax
        movl    (%rax), %edx
        movq    -24(%rbp), %rax
        movl    %edx, (%rax)
        movq    -32(%rbp), %rax
        movl    -4(%rbp), %edx
        movl    %edx, (%rax)
        nop
        popq    %rbp
        ret
moveZeroes0:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    -28(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -4(%rbp)
        jmp     .L3
.L7:
        movl    $0, -8(%rbp)
        jmp     .L4
.L6:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L5
        movl    -8(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        je      .L5
        movl    -8(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    swap
.L5:
        addl    $1, -8(%rbp)
.L4:
        movl    -8(%rbp), %eax
        cmpl    -4(%rbp), %eax
        jl      .L6
        subl    $1, -4(%rbp)
.L3:
        cmpl    $0, -4(%rbp)
        jns     .L7
        nop
        leave
        ret
moveZeroes1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        cmpl    $1, -28(%rbp)
        jle     .L24
        cmpl    $2, -28(%rbp)
        jne     .L11
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L25
        movq    -24(%rbp), %rax
        addq    $4, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        je      .L25
        movq    -24(%rbp), %rax
        leaq    4(%rax), %rdx
        movq    -24(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    swap
        jmp     .L25
.L11:
        movl    -28(%rbp), %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        movl    %eax, -16(%rbp)
        movl    -16(%rbp), %edx
        movq    -24(%rbp), %rax
        movl    %edx, %esi
        movq    %rax, %rdi
        call    moveZeroes1
        movl    -28(%rbp), %eax
        subl    -16(%rbp), %eax
        movl    -16(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -24(%rbp), %rdx
        addq    %rcx, %rdx
        movl    %eax, %esi
        movq    %rdx, %rdi
        call    moveZeroes1
        movl    $0, -4(%rbp)
        movl    -28(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -8(%rbp)
        jmp     .L13
.L14:
        addl    $1, -4(%rbp)
.L13:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L14
        jmp     .L15
.L16:
        subl    $1, -8(%rbp)
.L15:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        je      .L16
        movl    -8(%rbp), %eax
        cmpl    -4(%rbp), %eax
        jle     .L26
        movl    -4(%rbp), %eax
        movl    %eax, -12(%rbp)
        jmp     .L18
.L19:
        movl    -16(%rbp), %eax
        subl    $1, %eax
        subl    -12(%rbp), %eax
        movl    %eax, %edx
        movl    -4(%rbp), %eax
        addl    %edx, %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    swap
        addl    $1, -12(%rbp)
.L18:
        movl    -16(%rbp), %eax
        subl    $1, %eax
        subl    -4(%rbp), %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        movl    %eax, %edx
        movl    -4(%rbp), %eax
        addl    %edx, %eax
        cmpl    %eax, -12(%rbp)
        jle     .L19
        movl    -16(%rbp), %eax
        movl    %eax, -12(%rbp)
        jmp     .L20
.L21:
        movl    -8(%rbp), %eax
        subl    -12(%rbp), %eax
        movl    %eax, %edx
        movl    -16(%rbp), %eax
        addl    %edx, %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    swap
        addl    $1, -12(%rbp)
.L20:
        movl    -8(%rbp), %eax
        subl    -16(%rbp), %eax
        subl    $1, %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        movl    %eax, %edx
        movl    -16(%rbp), %eax
        addl    %edx, %eax
        cmpl    %eax, -12(%rbp)
        jle     .L21
        movl    -4(%rbp), %eax
        movl    %eax, -12(%rbp)
        jmp     .L22
.L23:
        movl    -8(%rbp), %eax
        subl    -12(%rbp), %eax
        movl    %eax, %edx
        movl    -4(%rbp), %eax
        addl    %edx, %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    swap
        addl    $1, -12(%rbp)
.L22:
        movl    -8(%rbp), %eax
        subl    -4(%rbp), %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        movl    %eax, %edx
        movl    -4(%rbp), %eax
        addl    %edx, %eax
        cmpl    %eax, -12(%rbp)
        jle     .L23
        jmp     .L8
.L24:
        nop
        jmp     .L8
.L25:
        nop
        jmp     .L8
.L26:
        nop
.L8:
        leave
        ret
moveZeroes:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        movl    $0, -8(%rbp)
        jmp     .L28
.L30:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        je      .L29
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        leaq    (%rdx,%rax), %rcx
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -4(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movl    (%rcx), %eax
        movl    %eax, (%rdx)
.L29:
        addl    $1, -8(%rbp)
.L28:
        movl    -8(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jl      .L30
        movl    -4(%rbp), %eax
        movl    %eax, -8(%rbp)
        jmp     .L31
.L32:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    $0, (%rax)
        addl    $1, -8(%rbp)
.L31:
        movl    -8(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jl      .L32
        nop
        popq    %rbp
        ret
main:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movl    $0, -32(%rbp)
        movl    $1, -28(%rbp)
        movl    $0, -24(%rbp)
        movl    $3, -20(%rbp)
        movl    $12, -16(%rbp)
        movl    $5, -8(%rbp)
        movl    -8(%rbp), %edx
        leaq    -32(%rbp), %rax
        movl    %edx, %esi
        movq    %rax, %rdi
        call    moveZeroes
        movl    $0, -4(%rbp)
        jmp     .L34
.L35:
        addl    $1, -4(%rbp)
.L34:
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jl      .L35
        movl    $0, %eax
        leave
        ret
