numSquares:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $80, %rsp
        movl    %edi, -68(%rbp)
        cmpl    $0, -68(%rbp)
        jg      .L2
        movl    $0, %eax
        jmp     .L3
.L2:
        cmpl    $1, -68(%rbp)
        jne     .L4
        movl    $1, %eax
        jmp     .L3
.L4:
        movl    -68(%rbp), %eax
        cltq
        movl    $4, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, -32(%rbp)
        movl    -68(%rbp), %eax
        addl    $1, %eax
        cltq
        movl    $4, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, -40(%rbp)
        movl    $0, -8(%rbp)
        movl    $1, -4(%rbp)
        jmp     .L5
.L8:
        cvtsi2sd        -4(%rbp), %xmm0
        call    sqrt
        movq    %xmm0, %rax
        movq    %rax, -48(%rbp)
        movsd   -48(%rbp), %xmm0
        cvttsd2si       %xmm0, %eax
        cvtsi2sd        %eax, %xmm1
        movsd   -48(%rbp), %xmm0
        subsd   %xmm1, %xmm0
        movq    .LC0(%rip), %xmm1
        andpd   %xmm0, %xmm1
        movsd   .LC1(%rip), %xmm0
        comisd  %xmm1, %xmm0
        jbe     .L6
        movl    -8(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -8(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rax, %rdx
        movl    -4(%rbp), %eax
        movl    %eax, (%rdx)
.L6:
        addl    $1, -4(%rbp)
.L5:
        movl    -4(%rbp), %eax
        cmpl    -68(%rbp), %eax
        jle     .L8
        movq    -40(%rbp), %rax
        movl    $0, (%rax)
        movq    -40(%rbp), %rax
        addq    $4, %rax
        movl    $1, (%rax)
        movl    $2, -12(%rbp)
        jmp     .L9
.L14:
        movl    $2147483647, -20(%rbp)
        movl    $0, -16(%rbp)
        jmp     .L10
.L13:
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    -12(%rbp), %edx
        subl    %eax, %edx
        movl    %edx, %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        addl    $1, %eax
        cmpl    %eax, -20(%rbp)
        jle     .L11
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    -12(%rbp), %edx
        subl    %eax, %edx
        movl    %edx, %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        addl    $1, %eax
        movl    %eax, -20(%rbp)
.L11:
        addl    $1, -16(%rbp)
.L10:
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -12(%rbp)
        jl      .L12
        movl    -16(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jl      .L13
.L12:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rax, %rdx
        movl    -20(%rbp), %eax
        movl    %eax, (%rdx)
        addl    $1, -12(%rbp)
.L9:
        movl    -12(%rbp), %eax
        cmpl    -68(%rbp), %eax
        jle     .L14
        movl    -68(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    %eax, -52(%rbp)
        movq    -32(%rbp), %rax
        movq    %rax, %rdi
        call    free
        movq    -40(%rbp), %rax
        movq    %rax, %rdi
        call    free
        movl    -52(%rbp), %eax
.L3:
        leave
        ret
.LC2:
        .string "/app/example.c"
.LC3:
        .string "numSquares(1) == 1"
.LC4:
        .string "numSquares(2) == 2"
.LC5:
        .string "numSquares(3) == 3"
.LC6:
        .string "numSquares(4) == 1"
.LC7:
        .string "numSquares(5) == 2"
.LC8:
        .string "numSquares(12) == 3"
.LC9:
        .string "numSquares(13) == 2"
main:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    $1, %edi
        call    numSquares
        cmpl    $1, %eax
        je      .L17
        movl    $__PRETTY_FUNCTION__.4169, %ecx
        movl    $40, %edx
        movl    $.LC2, %esi
        movl    $.LC3, %edi
        call    __assert_fail
.L17:
        movl    $2, %edi
        call    numSquares
        cmpl    $2, %eax
        je      .L18
        movl    $__PRETTY_FUNCTION__.4169, %ecx
        movl    $41, %edx
        movl    $.LC2, %esi
        movl    $.LC4, %edi
        call    __assert_fail
.L18:
        movl    $3, %edi
        call    numSquares
        cmpl    $3, %eax
        je      .L19
        movl    $__PRETTY_FUNCTION__.4169, %ecx
        movl    $42, %edx
        movl    $.LC2, %esi
        movl    $.LC5, %edi
        call    __assert_fail
.L19:
        movl    $4, %edi
        call    numSquares
        cmpl    $1, %eax
        je      .L20
        movl    $__PRETTY_FUNCTION__.4169, %ecx
        movl    $43, %edx
        movl    $.LC2, %esi
        movl    $.LC6, %edi
        call    __assert_fail
.L20:
        movl    $5, %edi
        call    numSquares
        cmpl    $2, %eax
        je      .L21
        movl    $__PRETTY_FUNCTION__.4169, %ecx
        movl    $44, %edx
        movl    $.LC2, %esi
        movl    $.LC7, %edi
        call    __assert_fail
.L21:
        movl    $12, %edi
        call    numSquares
        cmpl    $3, %eax
        je      .L22
        movl    $__PRETTY_FUNCTION__.4169, %ecx
        movl    $45, %edx
        movl    $.LC2, %esi
        movl    $.LC8, %edi
        call    __assert_fail
.L22:
        movl    $13, %edi
        call    numSquares
        cmpl    $2, %eax
        je      .L23
        movl    $__PRETTY_FUNCTION__.4169, %ecx
        movl    $46, %edx
        movl    $.LC2, %esi
        movl    $.LC9, %edi
        call    __assert_fail
.L23:
        movl    $0, %eax
        popq    %rbp
        ret
__PRETTY_FUNCTION__.4169:
        .string "main"
.LC0:
        .long   4294967295
        .long   2147483647
        .long   0
        .long   0
.LC1:
        .long   3794832442
        .long   1044740494
