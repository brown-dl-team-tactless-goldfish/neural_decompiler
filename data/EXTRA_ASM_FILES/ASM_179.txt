compare:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $96, %rsp
        movl    %edi, -84(%rbp)
        movl    %esi, -88(%rbp)
        movq    $0, -12(%rbp)
        movl    $0, -4(%rbp)
        movq    $0, -24(%rbp)
        movl    $0, -16(%rbp)
        movq    $0, -48(%rbp)
        movq    $0, -40(%rbp)
        movq    $0, -32(%rbp)
        movq    $0, -80(%rbp)
        movq    $0, -72(%rbp)
        movq    $0, -64(%rbp)
        leaq    -12(%rbp), %rdx
        leaq    -48(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    strcpy
        leaq    -24(%rbp), %rdx
        leaq    -48(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    strcat
        leaq    -24(%rbp), %rdx
        leaq    -80(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    strcpy
        leaq    -12(%rbp), %rdx
        leaq    -80(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    strcat
        leaq    -80(%rbp), %rdx
        leaq    -48(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    strcmp
        leave
        ret
quicksort:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    %edx, -32(%rbp)
        movl    -28(%rbp), %eax
        cmpl    -32(%rbp), %eax
        jg      .L14
        movl    -28(%rbp), %eax
        movl    %eax, -4(%rbp)
        movl    -32(%rbp), %eax
        movl    %eax, -8(%rbp)
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    %eax, -12(%rbp)
        jmp     .L6
.L9:
        subl    $1, -8(%rbp)
.L7:
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jge     .L8
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    -12(%rbp), %edx
        movl    %edx, %esi
        movl    %eax, %edi
        call    compare
        testl   %eax, %eax
        jle     .L9
.L8:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    -4(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -24(%rbp), %rdx
        addq    %rcx, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        jmp     .L10
.L12:
        addl    $1, -4(%rbp)
.L10:
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jge     .L11
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    -12(%rbp), %edx
        movl    %edx, %esi
        movl    %eax, %edi
        call    compare
        testl   %eax, %eax
        jns     .L12
.L11:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    -8(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -24(%rbp), %rdx
        addq    %rcx, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
.L6:
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jl      .L7
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movl    -12(%rbp), %eax
        movl    %eax, (%rdx)
        movl    -4(%rbp), %eax
        leal    -1(%rax), %edx
        movl    -28(%rbp), %ecx
        movq    -24(%rbp), %rax
        movl    %ecx, %esi
        movq    %rax, %rdi
        call    quicksort
        movl    -4(%rbp), %eax
        leal    1(%rax), %ecx
        movl    -32(%rbp), %edx
        movq    -24(%rbp), %rax
        movl    %ecx, %esi
        movq    %rax, %rdi
        call    quicksort
        jmp     .L3
.L14:
        nop
.L3:
        leave
        ret
largestNumber:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movl    -44(%rbp), %eax
        leal    -1(%rax), %edx
        movq    -40(%rbp), %rax
        movl    $0, %esi
        movq    %rax, %rdi
        call    quicksort
        movl    -44(%rbp), %edx
        movl    %edx, %eax
        addl    %eax, %eax
        addl    %edx, %eax
        sall    $2, %eax
        cltq
        movl    $1, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, -8(%rbp)
        movl    $0, -12(%rbp)
        jmp     .L16
.L17:
        movq    $0, -24(%rbp)
        movl    $0, -16(%rbp)
        leaq    -24(%rbp), %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    strcat
        addl    $1, -12(%rbp)
.L16:
        movl    -12(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L17
        jmp     .L18
.L20:
        addq    $1, -8(%rbp)
.L18:
        movq    -8(%rbp), %rax
        movzbl  (%rax), %eax
        cmpb    $48, %al
        jne     .L19
        movq    -8(%rbp), %rax
        addq    $1, %rax
        movzbl  (%rax), %eax
        cmpb    $48, %al
        je      .L20
.L19:
        movq    -8(%rbp), %rax
        leave
        ret
main:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    $3, -32(%rbp)
        movl    $30, -28(%rbp)
        movl    $34, -24(%rbp)
        movl    $5, -20(%rbp)
        movl    $9, -16(%rbp)
        movl    $0, -40(%rbp)
        movl    $0, -36(%rbp)
        movl    $0, %eax
        popq    %rbp
        ret
