minSubArrayLen:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -20(%rbp)
        movq    %rsi, -32(%rbp)
        movl    %edx, -24(%rbp)
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        movl    $0, -12(%rbp)
        movl    -24(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -16(%rbp)
        jmp     .L2
.L6:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        addl    %eax, -12(%rbp)
        jmp     .L3
.L5:
        movl    -8(%rbp), %eax
        subl    -4(%rbp), %eax
        addl    $1, %eax
        cmpl    %eax, -16(%rbp)
        jle     .L4
        movl    -8(%rbp), %eax
        subl    -4(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -16(%rbp)
.L4:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        subl    %eax, -12(%rbp)
        addl    $1, -4(%rbp)
.L3:
        movl    -12(%rbp), %eax
        cmpl    -20(%rbp), %eax
        jge     .L5
        addl    $1, -8(%rbp)
.L2:
        movl    -8(%rbp), %eax
        cmpl    -24(%rbp), %eax
        jl      .L6
        movl    -24(%rbp), %eax
        addl    $1, %eax
        cmpl    %eax, -16(%rbp)
        je      .L7
        movl    -16(%rbp), %eax
        jmp     .L9
.L7:
        movl    $0, %eax
.L9:
        popq    %rbp
        ret
.LC0:
        .string "/app/example.c"
.LC1:
        .string "minSubArrayLen(7, nums, sizeof(nums) / sizeof(nums[0])) == 2"
main:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movl    $2, -32(%rbp)
        movl    $3, -28(%rbp)
        movl    $1, -24(%rbp)
        movl    $2, -20(%rbp)
        movl    $4, -16(%rbp)
        movl    $3, -12(%rbp)
        leaq    -32(%rbp), %rax
        movl    $6, %edx
        movq    %rax, %rsi
        movl    $7, %edi
        call    minSubArrayLen
        cmpl    $2, %eax
        je      .L11
        movl    $__PRETTY_FUNCTION__.4164, %ecx
        movl    $27, %edx
        movl    $.LC0, %esi
        movl    $.LC1, %edi
        call    __assert_fail
.L11:
        movl    $0, %eax
        leave
        ret
__PRETTY_FUNCTION__.4164:
        .string "main"
