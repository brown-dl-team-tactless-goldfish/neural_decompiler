nthSuperUglyNumber:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $64, %rsp
        movl    %edi, -52(%rbp)
        movq    %rsi, -64(%rbp)
        movl    %edx, -56(%rbp)
        cmpl    $0, -52(%rbp)
        jle     .L2
        cmpl    $0, -56(%rbp)
        jg      .L3
.L2:
        movl    $1, %eax
        jmp     .L4
.L3:
        movl    -56(%rbp), %eax
        cltq
        movl    $4, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, -24(%rbp)
        movl    -52(%rbp), %eax
        cltq
        movl    $4, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, -32(%rbp)
        movq    -32(%rbp), %rax
        movl    $1, (%rax)
        movl    $1, -4(%rbp)
        jmp     .L5
.L12:
        movl    $2147483647, -8(%rbp)
        movl    $0, -12(%rbp)
        jmp     .L6
.L8:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -64(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        imull   %edx, %eax
        cmpl    %eax, -8(%rbp)
        jle     .L7
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -64(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        imull   %edx, %eax
        movl    %eax, -8(%rbp)
.L7:
        addl    $1, -12(%rbp)
.L6:
        movl    -12(%rbp), %eax
        cmpl    -56(%rbp), %eax
        jl      .L8
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -4(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rax, %rdx
        movl    -8(%rbp), %eax
        movl    %eax, (%rdx)
        movl    $0, -12(%rbp)
        jmp     .L9
.L11:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -64(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        imull   %edx, %eax
        cmpl    %eax, -8(%rbp)
        jne     .L10
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        addl    $1, %edx
        movl    %edx, (%rax)
.L10:
        addl    $1, -12(%rbp)
.L9:
        movl    -12(%rbp), %eax
        cmpl    -56(%rbp), %eax
        jl      .L11
.L5:
        movl    -4(%rbp), %eax
        cmpl    -52(%rbp), %eax
        jl      .L12
        movl    -52(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    %eax, -36(%rbp)
        movq    -24(%rbp), %rax
        movq    %rax, %rdi
        call    free
        movq    -32(%rbp), %rax
        movq    %rax, %rdi
        call    free
        movl    -36(%rbp), %eax
.L4:
        leave
        ret
.LC0:
        .string "/app/example.c"
.LC1:
        .string "nthSuperUglyNumber(n, primes, sizeof(primes)/sizeof(primes[0])) == 3"
main:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $16, %rsp
        movl    $3, -4(%rbp)
        movl    $2, -16(%rbp)
        movl    $3, -12(%rbp)
        movl    $5, -8(%rbp)
        leaq    -16(%rbp), %rcx
        movl    -4(%rbp), %eax
        movl    $3, %edx
        movq    %rcx, %rsi
        movl    %eax, %edi
        call    nthSuperUglyNumber
        cmpl    $3, %eax
        je      .L14
        movl    $__PRETTY_FUNCTION__.4170, %ecx
        movl    $37, %edx
        movl    $.LC0, %esi
        movl    $.LC1, %edi
        call    __assert_fail
.L14:
        movl    $0, %eax
        leave
        ret
__PRETTY_FUNCTION__.4170:
        .string "main"
