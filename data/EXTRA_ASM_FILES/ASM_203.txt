removeElements:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movq    -40(%rbp), %rax
        movq    %rax, -24(%rbp)
        movq    -24(%rbp), %rax
        movq    %rax, -8(%rbp)
        movq    -40(%rbp), %rax
        movq    %rax, -16(%rbp)
        jmp     .L2
.L7:
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        cmpl    %eax, -44(%rbp)
        jne     .L3
        movq    -24(%rbp), %rax
        cmpq    -8(%rbp), %rax
        jne     .L4
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
        movq    -8(%rbp), %rax
        movq    %rax, -16(%rbp)
        jmp     .L6
.L4:
        movq    -24(%rbp), %rax
        movq    8(%rax), %rdx
        movq    -16(%rbp), %rax
        movq    %rdx, 8(%rax)
        jmp     .L6
.L3:
        movq    -24(%rbp), %rax
        movq    %rax, -16(%rbp)
.L6:
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -24(%rbp)
.L2:
        cmpq    $0, -24(%rbp)
        jne     .L7
        movq    -8(%rbp), %rax
        popq    %rbp
        ret
main:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $16, %rsp
        movl    $16, %esi
        movl    $9, %edi
        call    calloc
        movq    %rax, -16(%rbp)
        movq    -16(%rbp), %rax
        movq    %rax, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    $6, (%rax)
        movq    -16(%rbp), %rax
        leaq    16(%rax), %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, 8(%rax)
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    $6, (%rax)
        movq    -16(%rbp), %rax
        leaq    32(%rax), %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, 8(%rax)
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    $1, (%rax)
        movq    -16(%rbp), %rax
        leaq    48(%rax), %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, 8(%rax)
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    $6, (%rax)
        movq    -16(%rbp), %rax
        leaq    64(%rax), %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, 8(%rax)
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    $6, (%rax)
        movq    -16(%rbp), %rax
        leaq    80(%rax), %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, 8(%rax)
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    $6, (%rax)
        movq    -16(%rbp), %rax
        leaq    96(%rax), %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, 8(%rax)
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    $2, (%rax)
        movq    -16(%rbp), %rax
        leaq    112(%rax), %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, 8(%rax)
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    $3, (%rax)
        movq    -16(%rbp), %rax
        leaq    128(%rax), %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, 8(%rax)
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    $6, (%rax)
        movq    -8(%rbp), %rax
        movq    $0, 8(%rax)
        movq    -16(%rbp), %rax
        movq    %rax, -8(%rbp)
        jmp     .L10
.L11:
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
.L10:
        cmpq    $0, -8(%rbp)
        jne     .L11
        movq    -16(%rbp), %rax
        movl    $6, %esi
        movq    %rax, %rdi
        call    removeElements
        movq    %rax, -8(%rbp)
        jmp     .L12
.L13:
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
.L12:
        cmpq    $0, -8(%rbp)
        jne     .L13
        movl    $0, %eax
        leave
        ret
