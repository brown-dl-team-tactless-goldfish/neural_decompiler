setZeroes_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movl    %edx, -48(%rbp)
        movl    -44(%rbp), %eax
        cltq
        movl    $4, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, -24(%rbp)
        movl    -48(%rbp), %eax
        cltq
        movl    $4, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, -32(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L2
.L6:
        movl    $0, -8(%rbp)
        jmp     .L3
.L5:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -8(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L4
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    $1, (%rax)
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    $1, (%rax)
.L4:
        addl    $1, -8(%rbp)
.L3:
        movl    -8(%rbp), %eax
        cmpl    -48(%rbp), %eax
        jl      .L5
        addl    $1, -4(%rbp)
.L2:
        movl    -4(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L6
        movl    $0, -8(%rbp)
        jmp     .L7
.L11:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        je      .L8
        movl    $0, -12(%rbp)
        jmp     .L9
.L10:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -8(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    $0, (%rax)
        addl    $1, -12(%rbp)
.L9:
        movl    -12(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L10
.L8:
        addl    $1, -8(%rbp)
.L7:
        movl    -8(%rbp), %eax
        cmpl    -48(%rbp), %eax
        jl      .L11
        movl    $0, -4(%rbp)
        jmp     .L12
.L16:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        je      .L13
        movl    $0, -16(%rbp)
        jmp     .L14
.L15:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -16(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    $0, (%rax)
        addl    $1, -16(%rbp)
.L14:
        movl    -16(%rbp), %eax
        cmpl    -48(%rbp), %eax
        jl      .L15
.L13:
        addl    $1, -4(%rbp)
.L12:
        movl    -4(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L16
        nop
        leave
        ret
setZeroes:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    %edx, -32(%rbp)
        movl    $0, -8(%rbp)
        movl    -8(%rbp), %eax
        movl    %eax, -4(%rbp)
        movl    $0, -12(%rbp)
        jmp     .L18
.L21:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L19
        movl    $1, -4(%rbp)
        jmp     .L20
.L19:
        addl    $1, -12(%rbp)
.L18:
        movl    -12(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jl      .L21
.L20:
        movl    $0, -16(%rbp)
        jmp     .L22
.L25:
        movq    -24(%rbp), %rax
        movq    (%rax), %rax
        movl    -16(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L23
        movl    $1, -8(%rbp)
        jmp     .L24
.L23:
        addl    $1, -16(%rbp)
.L22:
        movl    -16(%rbp), %eax
        cmpl    -32(%rbp), %eax
        jl      .L25
.L24:
        movl    $0, -12(%rbp)
        jmp     .L26
.L30:
        movl    $0, -16(%rbp)
        jmp     .L27
.L29:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -16(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L28
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    $0, (%rax)
        movq    -24(%rbp), %rax
        movq    (%rax), %rax
        movl    -16(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    $0, (%rax)
.L28:
        addl    $1, -16(%rbp)
.L27:
        movl    -16(%rbp), %eax
        cmpl    -32(%rbp), %eax
        jl      .L29
        addl    $1, -12(%rbp)
.L26:
        movl    -12(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jl      .L30
        movl    $1, -12(%rbp)
        jmp     .L31
.L36:
        movl    $1, -16(%rbp)
        jmp     .L32
.L35:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        je      .L33
        movq    -24(%rbp), %rax
        movq    (%rax), %rax
        movl    -16(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L34
.L33:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -16(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    $0, (%rax)
.L34:
        addl    $1, -16(%rbp)
.L32:
        movl    -16(%rbp), %eax
        cmpl    -32(%rbp), %eax
        jl      .L35
        addl    $1, -12(%rbp)
.L31:
        movl    -12(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jl      .L36
        cmpl    $0, -4(%rbp)
        je      .L37
        movl    $0, -12(%rbp)
        jmp     .L38
.L39:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    $0, (%rax)
        addl    $1, -12(%rbp)
.L38:
        movl    -12(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jl      .L39
.L37:
        cmpl    $0, -8(%rbp)
        je      .L43
        movl    $0, -16(%rbp)
        jmp     .L41
.L42:
        movq    -24(%rbp), %rax
        movq    (%rax), %rax
        movl    -16(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    $0, (%rax)
        addl    $1, -16(%rbp)
.L41:
        movl    -16(%rbp), %eax
        cmpl    -32(%rbp), %eax
        jl      .L42
.L43:
        nop
        popq    %rbp
        ret
main:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $40, %rsp
        movl    $5, -28(%rbp)
        movl    $4, -32(%rbp)
        movl    -28(%rbp), %eax
        cltq
        movl    $8, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, -40(%rbp)
        movl    $0, -20(%rbp)
        jmp     .L45
.L46:
        movl    -32(%rbp), %eax
        cltq
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -40(%rbp), %rdx
        leaq    (%rcx,%rdx), %rbx
        movl    $4, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, (%rbx)
        addl    $1, -20(%rbp)
.L45:
        movl    -20(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jl      .L46
        movq    -40(%rbp), %rax
        movq    (%rax), %rax
        movl    $0, (%rax)
        movq    -40(%rbp), %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    $0, (%rax)
        movq    -40(%rbp), %rax
        movq    (%rax), %rax
        addq    $8, %rax
        movl    $0, (%rax)
        movq    -40(%rbp), %rax
        movq    (%rax), %rax
        addq    $12, %rax
        movl    $5, (%rax)
        movq    -40(%rbp), %rax
        addq    $8, %rax
        movq    (%rax), %rax
        movl    $4, (%rax)
        movq    -40(%rbp), %rax
        addq    $8, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    $3, (%rax)
        movq    -40(%rbp), %rax
        addq    $8, %rax
        movq    (%rax), %rax
        addq    $8, %rax
        movl    $1, (%rax)
        movq    -40(%rbp), %rax
        addq    $8, %rax
        movq    (%rax), %rax
        addq    $12, %rax
        movl    $4, (%rax)
        movq    -40(%rbp), %rax
        addq    $16, %rax
        movq    (%rax), %rax
        movl    $0, (%rax)
        movq    -40(%rbp), %rax
        addq    $16, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    $1, (%rax)
        movq    -40(%rbp), %rax
        addq    $16, %rax
        movq    (%rax), %rax
        addq    $8, %rax
        movl    $1, (%rax)
        movq    -40(%rbp), %rax
        addq    $16, %rax
        movq    (%rax), %rax
        addq    $12, %rax
        movl    $4, (%rax)
        movq    -40(%rbp), %rax
        addq    $24, %rax
        movq    (%rax), %rax
        movl    $1, (%rax)
        movq    -40(%rbp), %rax
        addq    $24, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    $2, (%rax)
        movq    -40(%rbp), %rax
        addq    $24, %rax
        movq    (%rax), %rax
        addq    $8, %rax
        movl    $1, (%rax)
        movq    -40(%rbp), %rax
        addq    $24, %rax
        movq    (%rax), %rax
        addq    $12, %rax
        movl    $3, (%rax)
        movq    -40(%rbp), %rax
        addq    $32, %rax
        movq    (%rax), %rax
        movl    $0, (%rax)
        movq    -40(%rbp), %rax
        addq    $32, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    $0, (%rax)
        movq    -40(%rbp), %rax
        addq    $32, %rax
        movq    (%rax), %rax
        addq    $8, %rax
        movl    $1, (%rax)
        movq    -40(%rbp), %rax
        addq    $32, %rax
        movq    (%rax), %rax
        addq    $12, %rax
        movl    $1, (%rax)
        movl    -32(%rbp), %edx
        movl    -28(%rbp), %ecx
        movq    -40(%rbp), %rax
        movl    %ecx, %esi
        movq    %rax, %rdi
        call    setZeroes
        movl    $0, -20(%rbp)
        jmp     .L47
.L50:
        movl    $0, -24(%rbp)
        jmp     .L48
.L49:
        addl    $1, -24(%rbp)
.L48:
        movl    -24(%rbp), %eax
        cmpl    -32(%rbp), %eax
        jl      .L49
        addl    $1, -20(%rbp)
.L47:
        movl    -20(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jl      .L50
        movl    $0, %eax
        addq    $40, %rsp
        popq    %rbx
        popq    %rbp
        ret
