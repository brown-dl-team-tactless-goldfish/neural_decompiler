findKthLargest:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    %edx, -32(%rbp)
        cmpl    $0, -32(%rbp)
        jle     .L2
        movl    -32(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jle     .L3
.L2:
        movl    $0, %eax
        jmp     .L4
.L3:
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, -12(%rbp)
        movl    $0, -4(%rbp)
        movl    -28(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -8(%rbp)
        jmp     .L5
.L8:
        subl    $1, -8(%rbp)
.L6:
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jge     .L7
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -12(%rbp)
        jle     .L8
.L7:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    -4(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -24(%rbp), %rdx
        addq    %rcx, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        jmp     .L9
.L11:
        addl    $1, -4(%rbp)
.L9:
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jge     .L10
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -12(%rbp)
        jge     .L11
.L10:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    -8(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -24(%rbp), %rdx
        addq    %rcx, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
.L5:
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jl      .L6
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movl    -12(%rbp), %eax
        movl    %eax, (%rdx)
        movl    -28(%rbp), %eax
        subl    -4(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -16(%rbp)
        movl    -16(%rbp), %eax
        addl    $1, %eax
        cmpl    %eax, -32(%rbp)
        jne     .L13
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        jmp     .L4
.L13:
        movl    -16(%rbp), %eax
        cmpl    -32(%rbp), %eax
        jl      .L14
        movl    -4(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        leaq    (%rdx,%rax), %rcx
        movl    -32(%rbp), %edx
        movl    -16(%rbp), %eax
        movl    %eax, %esi
        movq    %rcx, %rdi
        call    findKthLargest
        jmp     .L4
.L14:
        movl    -32(%rbp), %eax
        subl    -16(%rbp), %eax
        leal    -1(%rax), %edx
        movl    -4(%rbp), %ecx
        movq    -24(%rbp), %rax
        movl    %ecx, %esi
        movq    %rax, %rdi
        call    findKthLargest
.L4:
        leave
        ret
swap:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movq    %rsi, -32(%rbp)
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, -4(%rbp)
        movq    -32(%rbp), %rax
        movl    (%rax), %edx
        movq    -24(%rbp), %rax
        movl    %edx, (%rax)
        movq    -32(%rbp), %rax
        movl    -4(%rbp), %edx
        movl    %edx, (%rax)
        nop
        popq    %rbp
        ret
findKthLargest0:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movl    %edx, -48(%rbp)
        cmpl    $0, -48(%rbp)
        jle     .L17
        movl    -48(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jle     .L18
.L17:
        movl    $0, %eax
        jmp     .L19
.L18:
        movl    $0, -12(%rbp)
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    %eax, -16(%rbp)
        movl    $0, -4(%rbp)
        movl    -44(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -40(%rbp), %rax
        addq    %rax, %rdx
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    swap
        movl    $0, -8(%rbp)
        jmp     .L20
.L22:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -16(%rbp)
        jl      .L21
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rax, %rdx
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    swap
        addl    $1, -4(%rbp)
.L21:
        addl    $1, -8(%rbp)
.L20:
        movl    -44(%rbp), %eax
        subl    $1, %eax
        cmpl    %eax, -8(%rbp)
        jl      .L22
        movl    -44(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -40(%rbp), %rax
        addq    %rax, %rdx
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    swap
        movl    -44(%rbp), %eax
        subl    -4(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -20(%rbp)
        movl    -20(%rbp), %eax
        addl    $1, %eax
        cmpl    %eax, -48(%rbp)
        jne     .L23
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        jmp     .L19
.L23:
        movl    -20(%rbp), %eax
        cmpl    -48(%rbp), %eax
        jl      .L24
        movl    -4(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        leaq    (%rdx,%rax), %rcx
        movl    -48(%rbp), %edx
        movl    -20(%rbp), %eax
        movl    %eax, %esi
        movq    %rcx, %rdi
        call    findKthLargest0
        jmp     .L19
.L24:
        movl    -48(%rbp), %eax
        subl    -20(%rbp), %eax
        leal    -1(%rax), %edx
        movl    -4(%rbp), %ecx
        movq    -40(%rbp), %rax
        movl    %ecx, %esi
        movq    %rax, %rdi
        call    findKthLargest0
.L19:
        leave
        ret
main:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    $3, -32(%rbp)
        movl    $7, -28(%rbp)
        movl    $8, -24(%rbp)
        movl    $1, -20(%rbp)
        movl    $2, -16(%rbp)
        movl    $5, -12(%rbp)
        movl    $6, -8(%rbp)
        movl    $9, -4(%rbp)
        movl    $0, %eax
        popq    %rbp
        ret
