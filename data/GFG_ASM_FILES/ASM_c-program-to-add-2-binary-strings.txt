sum:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $168, %rsp
        movq    %rdi, -152(%rbp)
        movq    %rsi, -160(%rbp)
        movl    %edx, -164(%rbp)
        movl    %ecx, -168(%rbp)
        movl    $0, -20(%rbp)
        movl    -164(%rbp), %eax
        addl    $1, %eax
        cltq
        movb    $0, -144(%rbp,%rax)
        jmp     .L2
.L4:
        movl    -164(%rbp), %eax
        cltq
        leaq    -1(%rax), %rdx
        movq    -152(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        subl    $48, %eax
        movl    %eax, -32(%rbp)
        movl    -168(%rbp), %eax
        cltq
        leaq    -1(%rax), %rdx
        movq    -160(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        subl    $48, %eax
        movl    %eax, -36(%rbp)
        movl    -32(%rbp), %edx
        movl    -36(%rbp), %eax
        addl    %eax, %edx
        movl    -20(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, -24(%rbp)
        cmpl    $1, -24(%rbp)
        jle     .L3
        movl    $1, -20(%rbp)
        movl    -24(%rbp), %eax
        cltd
        shrl    $31, %edx
        addl    %edx, %eax
        andl    $1, %eax
        subl    %edx, %eax
        movl    %eax, -24(%rbp)
.L3:
        movl    -24(%rbp), %eax
        addl    $48, %eax
        movl    %eax, %edx
        movl    -164(%rbp), %eax
        cltq
        movb    %dl, -144(%rbp,%rax)
        subl    $1, -164(%rbp)
        subl    $1, -168(%rbp)
.L2:
        cmpl    $0, -168(%rbp)
        jg      .L4
        jmp     .L5
.L7:
        movl    -164(%rbp), %eax
        cltq
        leaq    -1(%rax), %rdx
        movq    -152(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %edx
        movl    -20(%rbp), %eax
        addl    %edx, %eax
        subl    $48, %eax
        movl    %eax, -24(%rbp)
        cmpl    $1, -24(%rbp)
        jle     .L6
        movl    $1, -20(%rbp)
        movl    -24(%rbp), %eax
        cltd
        shrl    $31, %edx
        addl    %edx, %eax
        andl    $1, %eax
        subl    %edx, %eax
        movl    %eax, -24(%rbp)
.L6:
        movl    -24(%rbp), %eax
        addl    $48, %eax
        movl    %eax, %edx
        movl    -164(%rbp), %eax
        cltq
        movb    %dl, -144(%rbp,%rax)
        subl    $1, -164(%rbp)
.L5:
        cmpl    $0, -164(%rbp)
        jg      .L7
        cmpl    $0, -20(%rbp)
        je      .L8
        movb    $49, -144(%rbp)
        jmp     .L12
.L8:
        movl    $0, -28(%rbp)
        jmp     .L10
.L11:
        movl    -28(%rbp), %eax
        addl    $1, %eax
        cltq
        movzbl  -144(%rbp,%rax), %edx
        movl    -28(%rbp), %eax
        cltq
        movb    %dl, -144(%rbp,%rax)
        addl    $1, -28(%rbp)
.L10:
        movl    -28(%rbp), %eax
        movslq  %eax, %rbx
        leaq    -144(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        subq    $1, %rax
        cmpq    %rax, %rbx
        jb      .L11
        leaq    -144(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        subq    $1, %rax
        movb    $0, -144(%rbp,%rax)
.L12:
        nop
        addq    $168, %rsp
        popq    %rbx
        popq    %rbp
        ret
main:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $224, %rsp
        movq    $12593, -112(%rbp)
        movq    $0, -104(%rbp)
        leaq    -96(%rbp), %rdx
        movl    $0, %eax
        movl    $10, %ecx
        movq    %rdx, %rdi
        rep stosq
        movq    %rdi, %rdx
        movl    %eax, (%rdx)
        addq    $4, %rdx
        movq    $12593, -224(%rbp)
        movq    $0, -216(%rbp)
        leaq    -208(%rbp), %rdx
        movl    $0, %eax
        movl    $10, %ecx
        movq    %rdx, %rdi
        rep stosq
        movq    %rdi, %rdx
        movl    %eax, (%rdx)
        addq    $4, %rdx
        leaq    -112(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -4(%rbp)
        leaq    -224(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -8(%rbp)
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jle     .L14
        movl    -8(%rbp), %ecx
        movl    -4(%rbp), %edx
        leaq    -224(%rbp), %rsi
        leaq    -112(%rbp), %rax
        movq    %rax, %rdi
        call    sum
        jmp     .L15
.L14:
        movl    -4(%rbp), %ecx
        movl    -8(%rbp), %edx
        leaq    -112(%rbp), %rsi
        leaq    -224(%rbp), %rax
        movq    %rax, %rdi
        call    sum
.L15:
        movl    $0, %eax
        leave
        ret
