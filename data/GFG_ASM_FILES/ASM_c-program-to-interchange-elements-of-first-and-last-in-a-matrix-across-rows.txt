interchangeFirstLast:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movl    $3, -8(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L2
.L3:
        movq    -24(%rbp), %rax
        movl    -4(%rbp), %edx
        movslq  %edx, %rdx
        movl    (%rax,%rdx,4), %eax
        movl    %eax, -12(%rbp)
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    %rdx, %rax
        addq    %rax, %rax
        addq    %rdx, %rax
        salq    $2, %rax
        leaq    -12(%rax), %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movl    -4(%rbp), %eax
        cltq
        movl    (%rdx,%rax,4), %ecx
        movq    -24(%rbp), %rax
        movl    -4(%rbp), %edx
        movslq  %edx, %rdx
        movl    %ecx, (%rax,%rdx,4)
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    %rdx, %rax
        addq    %rax, %rax
        addq    %rdx, %rax
        salq    $2, %rax
        leaq    -12(%rax), %rdx
        movq    -24(%rbp), %rax
        leaq    (%rdx,%rax), %rcx
        movl    -4(%rbp), %eax
        cltq
        movl    -12(%rbp), %edx
        movl    %edx, (%rcx,%rax,4)
        addl    $1, -4(%rbp)
.L2:
        cmpl    $2, -4(%rbp)
        jle     .L3
        nop
        popq    %rbp
        ret
main:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $64, %rsp
        movl    $6, -64(%rbp)
        movl    $3, -60(%rbp)
        movl    $1, -56(%rbp)
        movl    $4, -52(%rbp)
        movl    $5, -48(%rbp)
        movl    $2, -44(%rbp)
        movl    $2, -40(%rbp)
        movl    $4, -36(%rbp)
        movl    $9, -32(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L5
.L8:
        movl    $0, -8(%rbp)
        jmp     .L6
.L7:
        addl    $1, -8(%rbp)
.L6:
        cmpl    $2, -8(%rbp)
        jle     .L7
        addl    $1, -4(%rbp)
.L5:
        cmpl    $2, -4(%rbp)
        jle     .L8
        leaq    -64(%rbp), %rax
        movq    %rax, %rdi
        call    interchangeFirstLast
        movl    $0, -12(%rbp)
        jmp     .L9
.L12:
        movl    $0, -16(%rbp)
        jmp     .L10
.L11:
        addl    $1, -16(%rbp)
.L10:
        cmpl    $2, -16(%rbp)
        jle     .L11
        addl    $1, -12(%rbp)
.L9:
        cmpl    $2, -12(%rbp)
        jle     .L12
        movl    $0, %eax
        leave
        ret
