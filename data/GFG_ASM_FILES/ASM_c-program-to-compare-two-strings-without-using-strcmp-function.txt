compareStrings:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movq    %rsi, -32(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L2
.L8:
        movq    -24(%rbp), %rax
        movzbl  (%rax), %edx
        movq    -32(%rbp), %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        jne     .L3
        addq    $1, -24(%rbp)
        addq    $1, -32(%rbp)
        jmp     .L2
.L3:
        movq    -24(%rbp), %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        jne     .L4
        movq    -32(%rbp), %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        jne     .L5
.L4:
        movq    -24(%rbp), %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        je      .L6
        movq    -32(%rbp), %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        je      .L5
.L6:
        movq    -24(%rbp), %rax
        movzbl  (%rax), %edx
        movq    -32(%rbp), %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        je      .L2
.L5:
        movl    $1, -4(%rbp)
        jmp     .L9
.L2:
        movq    -24(%rbp), %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        jne     .L8
        movq    -32(%rbp), %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        jne     .L8
.L9:
        nop
        popq    %rbp
        ret
main:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $64, %rsp
        movabsq $121424772888944, %rax
        movl    $0, %edx
        movq    %rax, -32(%rbp)
        movq    %rdx, -24(%rbp)
        movl    $0, -16(%rbp)
        movq    $6386532, -64(%rbp)
        movq    $0, -56(%rbp)
        movl    $0, -48(%rbp)
        leaq    -64(%rbp), %rdx
        leaq    -32(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    compareStrings
        movl    $0, %eax
        leave
        ret
