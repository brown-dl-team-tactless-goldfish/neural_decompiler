#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
struct TreeNode {
int val;
struct TreeNode *left;
struct TreeNode *right;
};
bool hasPathSum(struct TreeNode *root, int sum) {
if (root == NULL) {
return false;
}
int remain = sum - root->val;
if (root->left == NULL && root->right == NULL && remain == 0) { 
return true;
}
if (hasPathSum(root->left, remain) || hasPathSum(root->right, remain)) {
return true;
}
else return false;
}
if (p != NULL) {
}
}
int main() {
struct TreeNode *t = (struct TreeNode *)calloc(4, sizeof(struct TreeNode));
struct TreeNode *p = t;
p->val = 1;
p->left = ++t;
t->val = -2;
t->left = t->right = NULL;
p->right = ++t;
t->val = 0;
t->left = t->right = NULL;
return 0;
}