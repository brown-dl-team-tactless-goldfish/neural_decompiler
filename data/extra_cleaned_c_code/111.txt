#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
struct TreeNode {
int val;
struct TreeNode *left;
struct TreeNode *right;
};
int minDepth(struct TreeNode *root) {
if (root == NULL)
return 0;
int l = minDepth(root->left);
int r = minDepth(root->right);
if (l == 0 && r == 0) { 
return 1;
}
else if (l && r == 0) { 
return l + 1;
}
else if (r && l == 0) { 
return r + 1;
}
else {
return l < r ? (l + 1) : (r + 1);
}
}
if (p != NULL) {
}
}
int main() {
struct TreeNode *t = (struct TreeNode *)calloc(4, sizeof(struct TreeNode));
struct TreeNode *p = t;
p->val = 1;
p->right = ++t;
t->val = 2;
t->right = NULL;
p->right->left = ++t;
t->val = 3;
t->left = NULL;
p->right->left->right = ++t;
t->val = 4;
t->left = t->right = NULL;
return 0;
}