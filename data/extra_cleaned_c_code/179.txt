#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
#define N 12 
int compare(int a, int b) {
char stra[N] = { 0 };
char strb[N] = { 0 };
char aplusb[N + N] = { 0 };
char bplusa[N + N] = { 0 };
strcpy(aplusb, stra);
strcat(aplusb, strb);
strcpy(bplusa, strb);
strcat(bplusa, stra);
return strcmp(aplusb, bplusa);
}
void quicksort(int *nums, int left, int right) {
if (left > right) return;
int i = left;
int j = right;
int pivot = nums[left];
while (i < j) {
while (i < j && compare(nums[j], pivot) <= 0) j--;
nums[i] = nums[j];
while (i < j && compare(nums[i], pivot) >= 0) i++;
nums[j] = nums[i];
}
nums[i] = pivot;
quicksort(nums, left, i - 1);
quicksort(nums, i + 1, right);
}
char* largestNumber(int* nums, int numsSize) {
quicksort(nums, 0, numsSize - 1);
char *ans = (char *)calloc(numsSize * N, sizeof(char));
int i;
for (i = 0; i < numsSize; i++) {
char buf[N] = { 0 };
strcat(ans, buf);
}
while (*ans == '0' && *(ans + 1) == '0') ans++;
return ans;
}
int main() {
int nums0[] = { 3, 30, 34, 5, 9 };
int nums1[] = { 0, 0 };
return 0;
}