#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
int func_1(const void *var_0,const void *var_1) {
return *((int*) var_0) - *((int*) var_1);
}
int** func_2(int* var_4, int var_5, int* var_9, int** var_8){
qsort(var_4, var_5, sizeof(int), func_1);
(*var_9) = 0;
(*var_8) = (int*) malloc(sizeof(int) * var_5 * var_5);
int **var_7 = (int**) malloc(sizeof(int*) * var_5 * var_5);
for (int var_2 = 0; var_2 < var_5 - 2; var_2++) {
if (var_2 == 0 || var_4[var_2] != var_4[var_2-1]) {
int var_3 = var_2 + 1;
int var_6 = var_5 - 1;
while (var_3 < var_6) {
if (var_4[var_2] + var_4[var_3] + var_4[var_6] < 0) {
var_3++;
} else if (var_4[var_2] + var_4[var_3] + var_4[var_6] > 0) {
var_6--;
} else {
var_7[(*var_9)] = (int*) malloc(sizeof(int) * 3);
(*var_8)[(*var_9)] = 3;
var_7[(*var_9)][0] = var_4[var_2];
var_7[(*var_9)][1] = var_4[var_3];
var_7[(*var_9)][2] = var_4[var_6];
(*var_9)++;
var_3++;
while (var_3 < var_6 && var_4[var_3] == var_4[var_3-1])
var_3++;
}
}
}
}
return var_7;
}