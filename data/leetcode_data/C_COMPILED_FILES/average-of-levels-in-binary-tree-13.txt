#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
struct TreeNode {
int var_17;
struct TreeNode *var_5;
struct TreeNode *var_14;
};
double* func_1(struct TreeNode* var_15, int* var_12){
int var_0 = 10;
long long* var_16 = (long long*)malloc(var_0 * sizeof(long));
int* var_11 = (int*)malloc(var_0 * sizeof(int));
int var_6 = 0;
int var_2 = 1;
int var_10 = 10;
struct TreeNode** var_8 = (struct TreeNode**)malloc(var_10 * sizeof(struct TreeNode*));
int* var_7 = (int*)malloc(var_10 * sizeof(int));
int var_9 = -1;
struct TreeNode* var_1 = var_15;
while(var_1){
int var_3 = var_1->var_17;
if(var_2-1 > var_0-1){
var_0 *= 2;
var_16 = (long long*)realloc(var_16, var_0 * sizeof(long long));
var_11 = (int*)realloc(var_11, var_0 * sizeof(int));
}
if(var_2 > var_6){
var_16[var_2-1] = var_3;
var_11[var_2-1] = 1;
var_6 = var_2;
}
else{
var_16[var_2-1] += var_3;
var_11[var_2-1] += 1;
}
struct TreeNode* var_5 = var_1->var_5;
struct TreeNode* var_14 = var_1->var_14;
if(var_14){
var_9++;
if(var_9 > var_10-1){
var_10 *= 2;
var_8 = (struct TreeNode**)realloc(var_8, var_10 * sizeof(struct TreeNode*));
var_7 = (int*)realloc(var_7, var_10 * sizeof(int));
}
var_8[var_9] = var_14;
var_7[var_9] = var_2+1;
}
if(var_5){
var_2 += 1;
var_1 = var_5;
}
else{
if(var_9 < 0) var_1 = NULL;
else{
var_1 = var_8[var_9];
var_2 = var_7[var_9];
var_9--;
}
}
}
double* var_13 = (double*)malloc(var_6 * sizeof(double));
for(int var_4=0; var_4<var_6; ++var_4){
var_13[var_4] = (double)var_16[var_4]/(double)var_11[var_4];
}
*var_12 = var_6;
free(var_8);
free(var_7);
free(var_16);
free(var_11);
return var_13;
}