#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
struct TreeNode {
int var_21;
struct TreeNode *var_6;
struct TreeNode *var_16;
};
struct var_0 {
struct TreeNode * var_10;
struct var_0 * var_8;
int var_7;
};
int** func_1(struct TreeNode* var_17, int* var_15, int** var_14){
if (var_17 == NULL){
*var_15 = 0;
return NULL;
}
struct var_0 * var_19, *var_2;
struct var_0 * var_10 = malloc(sizeof(struct var_0));
var_10->var_10 = var_17;
var_10->var_8 = NULL;
var_10->var_7 = 0;
var_19 = var_10;
var_2 = var_10;
int var_9 = 1;
int ** var_13 = malloc(sizeof(int *) * 1000);
int var_3 = 0;
int var_1, var_20;
struct var_0 * var_5, * var_12;
int var_4, var_11;
int var_18;
*var_15 = 0;
*var_14 = (int *)malloc(sizeof(int) * 1000);
while (1){
(*var_14)[*var_15] = var_9;
*var_15 = *var_15 + 1;
var_1 = var_9;
var_9 = 0;
int var_18;
var_20 = var_19->var_7;
var_13[var_20] = malloc(sizeof(int) * var_1);
for (var_3 = 0; var_3 < var_1; var_3++){
var_13[var_20][var_3] = var_19->var_10->var_21;
if (var_19->var_10->var_6 != NULL){
var_5 = malloc(sizeof(struct var_0));
var_5->var_10 = var_19->var_10->var_6;
var_5->var_8 = NULL;
var_5->var_7 = var_19->var_7 + 1;
var_9++;
var_2->var_8 = var_5;
var_2 = var_2->var_8;
}
if (var_19->var_10->var_16 != NULL){
var_12 = malloc(sizeof(struct var_0));
var_12->var_10 = var_19->var_10->var_16;
var_12->var_8 = NULL;
var_12->var_7 = var_19->var_7 + 1;
var_9++;
var_2->var_8 = var_12;
var_2 = var_2->var_8;
}
var_19 = var_19->var_8;
}
if (var_9 == 0)
break;
}
for (var_3 = 1; var_3 < *var_15; var_3+=2){
var_11 = var_14[0][var_3];
for (var_4 = 0; var_4 < (var_14[0][var_3] + 1) / 2; var_4++){
var_18 = var_13[var_3][var_4];
var_13[var_3][var_4] = var_13[var_3][var_11 - 1 - var_4];
var_13[var_3][var_11 - 1 - var_4] = var_18;
}
}
return var_13;
}