#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
struct TreeNode {
int var_12;
struct TreeNode *var_5;
struct TreeNode *var_10;
};
#define var_0 1200
struct Node {
int var_6;
struct TreeNode *var_12;
};
int** func_1(struct TreeNode* var_11, int** var_2, int* var_9) {
if(var_11==NULL){
* var_9=0;
var_2[0]=(int*)calloc(1,sizeof(int));
var_2[0][0]=0;
return (int**)malloc(sizeof(int*));
}
struct Node** var_1=(struct Node**)malloc(var_0*sizeof(struct Node*));
var_1[0]=(struct Node*)malloc(sizeof(struct Node));
var_1[0]->var_6=0;
var_1[0]->var_12=var_11;
int var_5=0;
int var_10=1;
int var_7=0;
while(var_5!=var_10){
if(var_1[var_5]->var_12->var_5){
var_1[var_10]=(struct Node*)malloc(sizeof(struct Node));
var_1[var_10]->var_12=var_1[var_5]->var_12->var_5;
var_1[var_10]->var_6=var_1[var_5]->var_6+1;
if(var_7<var_1[var_10]->var_6){
var_7=var_1[var_10]->var_6;
}
var_10++;
}
if(var_1[var_5]->var_12->var_10){
var_1[var_10]=(struct Node*)malloc(sizeof(struct Node));
var_1[var_10]->var_12=var_1[var_5]->var_12->var_10;
var_1[var_10]->var_6=var_1[var_5]->var_6+1;
if(var_7<var_1[var_10]->var_6){
var_7=var_1[var_10]->var_6;
}
var_10++;
}
var_5++;
}
int **var_8=(int**)malloc((var_7+1)*sizeof(int*));
*var_9=0;
for(int var_4=0;var_4<var_7+1;var_4++){
var_8[var_4]=(int*)malloc(var_10*sizeof(int));
}
var_2[0]=(int*)calloc(var_0,sizeof(int));
for(int var_4=0;var_4<var_10;var_4++){
var_8[var_1[var_4]->var_6][var_2[0][var_1[var_4]->var_6]]=var_1[var_4]->var_12->var_12;
var_2[0][var_1[var_4]->var_6]++;
if(*var_9<var_1[var_4]->var_6+1){
*var_9=var_1[var_4]->var_6+1;
}
}
return var_8;
}