#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
void func_1(int **var_13, int **var_2, int var_12, int* var_0)
{
int var_3, var_4;
for(var_3=0; var_3<var_12; var_3++)
{
for(var_4=0; var_4<var_0[var_3]; var_4++)
{
var_2[var_3][var_4] = var_13[var_3][var_4];
}
}
}
int** func_2(int** var_5, int var_7, int *var_6, int** var_1, int* var_11) {
int var_3, var_4, var_8 = 0, var_15=0;
int *var_14;
int ** var_10 = malloc(sizeof(int*) * var_7);
int ** var_9 = malloc(sizeof(int*) * var_7);
*var_1 = (int *)calloc(var_7, sizeof(int));
*var_11 = var_7;
for(var_3=0; var_3 < var_7; var_3++)
{
var_10[var_3] = malloc(sizeof(int) * var_6[var_3]);
var_9[var_3] = malloc(sizeof(int) * var_6[var_3]);
(*var_1)[var_3] = var_6[var_3];
for(var_4=0; var_4<var_6[var_3]; var_4++){
var_10[var_3][var_4] = var_5[var_3][var_4] == 0 ? 0 : -1;
var_9[var_3][var_4] = var_5[var_3][var_4] == 0 ? 0 : -1;
}
var_15 += var_6[var_3];
}
while(var_8 < var_15){
var_8 = 0;
for(var_3=0; var_3 < var_7; var_3++)
{
for(var_4=0; var_4<var_6[var_3]; var_4++){
if(var_9[var_3][var_4] >= 0){
var_8 ++;
if(var_3 > 0 && var_4 < var_6[var_3-1]){
var_10[var_3-1][var_4] = var_9[var_3-1][var_4] == -1 || var_9[var_3-1][var_4] >var_9[var_3][var_4] + 1 ? var_9[var_3][var_4] + 1 : var_9[var_3-1][var_4];
}
if(var_4 > 0){
var_10[var_3][var_4-1] = var_9[var_3][var_4-1] == -1 || var_9[var_3][var_4-1] > var_9[var_3][var_4] + 1 ? var_9[var_3][var_4] + 1 : var_9[var_3][var_4-1];
}
if(var_3 < var_7-1 && var_4 < var_6[var_3+1]){
var_10[var_3+1][var_4] = var_9[var_3+1][var_4] == -1 || var_9[var_3+1][var_4] >var_9[var_3][var_4] + 1 ? var_9[var_3][var_4] + 1 : var_9[var_3+1][var_4];
}
if(var_4 < var_6[var_3]-1){
var_10[var_3][var_4+1] = var_9[var_3][var_4+1] == -1 || var_9[var_3][var_4+1] > var_9[var_3][var_4] + 1 ? var_9[var_3][var_4] + 1 : var_9[var_3][var_4+1];
}
}
}
}
func_1(var_10, var_9, var_7, var_6);
}
for(var_3=0; var_3 < var_7; var_3++)
{
free(var_9[var_3]); 
}
free(var_9);
return var_10;
}