#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
struct var_0 {
int var_20;
struct var_0 *var_9;
struct var_0 *var_15;
};
struct var_0** func_10(int* var_19)
{
*var_19 = 0;
return ((struct var_0**)malloc(10000*sizeof(struct var_0*)));
}
void func_3(struct var_0* var_10, struct var_0** var_18, int* var_19)
{
var_18[*var_19] = var_10;
(*var_19)++;
}
struct var_0* func_8(struct var_0** var_18, int* var_19)
{
struct var_0* var_10 = var_18[*var_19 - 1];
(*var_19)--;
return var_10;
}
int func_9(struct var_0** var_18, int* var_19)
{
return (*var_19);
}
bool func_5(struct var_0** var_18, int* var_19)
{
if (*var_19 == 0)
{
return true;
}
return false;
}
struct var_0** func_6(int* var_7, int* var_12)
{
*var_7 = 0;
*var_12 = 0;
return ((struct var_0**)malloc(10000*sizeof(struct var_0*)));
}
void func_2(int* var_12, struct var_0 **var_11, struct var_0* var_10)
{
var_11[*var_12] = var_10;
(*var_12)++;
}
struct var_0* func_1(int* var_7, struct var_0 **var_11)
{
struct var_0* var_10 = var_11[*var_7];
(*var_7)++;
return var_10;
}
int func_4(struct var_0** var_11, int* var_7, int* var_12)
{
return (*var_12 - *var_7);
}
bool func_7(struct var_0** var_11, int* var_7, int* var_12)
{
if (*var_7 == *var_12)
{
return true;
}
return false;
}
int** func_11(struct var_0* var_16, int* var_14, int** var_13){
*var_14 = 0;
if (var_16 == NULL)
{
return NULL;
}
int var_1, var_4, var_5;
int* var_7 = &var_1;
int* var_12 = &var_4;
int* var_19 = &var_5;
bool var_6 = true;
struct var_0** var_11 = func_6(var_7, var_12);
struct var_0** var_18 = func_10(var_19);
int** var_2 = (int**)malloc(sizeof(int*)*10000);
*var_13 = (int*)malloc(sizeof(int)*10000);
int var_3 = 0;
func_2(var_12, var_11, var_16);
while (!func_7(var_11, var_7, var_12) || !func_5(var_18, var_19)) 
{
if (var_6)
{
int var_17 = func_4(var_11, var_7, var_12);
var_2[var_3] = (int*)malloc(var_17*sizeof(int));
(*var_13)[var_3] = var_17;
for (int var_8 = 0; var_8 < var_17; var_8++)
{
struct var_0* var_10 = func_1(var_7, var_11);
var_2[var_3][var_8] = var_10->var_20;
if (var_10->var_9 != NULL)
{
func_3(var_10->var_9, var_18, var_19);
func_2(var_12, var_11, var_10->var_9);
}
if (var_10->var_15 != NULL)
{
func_3(var_10->var_15, var_18, var_19);
func_2(var_12, var_11, var_10->var_15);
}
}
}
else
{
int var_17 = func_9(var_18, var_19);
var_2[var_3] = (int*)malloc(var_17*sizeof(int));
(*var_13)[var_3] = var_17;
for (int var_8 = 0; var_8 < var_17; var_8++)
{
struct var_0* var_10 = func_8(var_18, var_19);
var_2[var_3][var_8] = var_10->var_20;
var_10 = func_1(var_7, var_11);
if (var_10->var_9 != NULL)
{
func_2(var_12, var_11, var_10->var_9);
}
if (var_10->var_15 != NULL)
{
func_2(var_12, var_11, var_10->var_15);
}
}
}
var_6 = !var_6;
var_3++;
(*var_14)++;
}
return var_2;
}