#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
int func_3(const void* var_8, const void* var_14)
{
int var_9 = *(const int*)var_8;
int var_10 = *(const int*)var_14;
if (var_9 < var_10) return -1;
if (var_9 > var_10) return 1;
return 0;
}
int func_1(int*var_11, int var_22, int var_24){
int var_19 = 0, var_21 = var_22-1;
while(var_19 <= var_21){
int var_20 = var_19+((var_21-var_19)>>1);
if(var_11[var_20] >= var_24) var_21 = var_20-1;
else var_19 = var_20+1;
}
return var_11[var_19]==var_24? var_19 : -1;
}
int func_4(int*var_11, int var_22, int var_24){
int var_19 = 0, var_21 = var_22-1;
while(var_19 <= var_21){
int var_20 = var_19+((var_21-var_19)>>1);
if(var_11[var_20] <= var_24) var_19 = var_20+1;
else var_21 = var_20-1;
}
return var_11[var_21]==var_24? var_21 : -1;
}
int func_2(int* var_0, int var_1, int* var_2, int var_3, int* var_4, int var_5, int* var_6, int var_7) {
int *var_12 = (int*)malloc(sizeof(int)*(var_1*var_3)), *var_13 = (int*)malloc(sizeof(int)*(var_5*var_7));
int var_18 = 0;
for(int var_15 = 0; var_15 < var_1; ++var_15)
for(int var_17 = 0; var_17 < var_3; ++var_17)
var_12[var_18++] = var_0[var_15]+var_2[var_17];
var_18 = 0;
for(int var_15 = 0; var_15 < var_5; ++var_15)
for(int var_17 = 0; var_17 < var_7; ++var_17)
var_13[var_18++] = var_4[var_15]+var_6[var_17];
qsort(var_12, var_1*var_3, sizeof(int), func_3);
qsort(var_13, var_5*var_7, sizeof(int), func_3);
int var_23 = 0;
for(int var_15 = 0; var_15 < var_1*var_3; ++var_15){
int var_19 = func_1(var_13, var_5*var_7, -var_12[var_15]);
if(var_19 != -1){
int var_21 = func_4(var_13, var_5*var_7, -var_12[var_15]);
var_23 += var_21-var_19+1;
}
}
return var_23;
}