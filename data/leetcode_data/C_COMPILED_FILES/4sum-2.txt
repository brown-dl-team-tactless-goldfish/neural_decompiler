#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
int func_2(const void *var_0, const void *var_2)
{
int var_7 = *(const int*)var_0;
int var_8 = *(const int*)var_2;
return var_7-var_8;
}
int** func_1(int* var_1, int var_11, int var_14, int* var_10) {
if(var_1 == NULL || var_11 == 0)
return NULL;
 
qsort((void *)var_1, var_11, sizeof(var_1[0]),func_2 );
int var_3 = 0;
int **var_9 = NULL;
int var_13;
for(int var_5 = 0; var_5 < var_11; var_5++)
{
if(var_5 > 0 && var_1[var_5] == var_1[var_5-1])
continue;
for(int var_6 = var_5 + 1; var_6 < var_11;var_6++)
{
if(var_6 > var_5 + 1 && var_1[var_6] == var_1[var_6-1])
continue;
int var_12 = var_6 + 1;
int var_4 = var_11 -1;
while(var_12 < var_4)
{
var_13 = var_1[var_5] + var_1[var_6] + var_1[var_12] + var_1[var_4];
if(var_13 == var_14)
{
var_3++;
var_9 = (int **)realloc(var_9, sizeof(int *)*var_3);
var_9[var_3 - 1] = (int *)malloc(sizeof(int)*4);
var_9[var_3 - 1][0] = var_1[var_5];
var_9[var_3 - 1][1] = var_1[var_6];
var_9[var_3 - 1][2] = var_1[var_12];
var_9[var_3 - 1][3] = var_1[var_4];
while(var_12 < var_4 && var_1[var_12] == var_1[var_12 + 1])
var_12++;
while(var_12 < var_4 && var_1[var_4] == var_1[var_4 - 1])
var_4--;
var_12++;
var_4--;
}
else if(var_13 > var_14)
var_4--;
else
var_12++;
}
}
}
*var_10 = var_3;
return var_9;
}