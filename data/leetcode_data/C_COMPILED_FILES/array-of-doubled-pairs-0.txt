#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
int func_1( const void* var_12,const void* var_13){
int* var_1 = *(int**)var_12;
int* var_2 = *(int**)var_13; 
return var_1[0] - var_2[0];
}
int func_2(int** var_17, int var_18, int var_19, int var_5){
int var_10 = 0, var_16 = var_18-1, var_11;
while(var_10 < var_16){
var_11 = var_10 + (var_16 - var_10)/2;
if(var_17[var_11][0] == var_19){
if(var_17[var_11][1] >= var_5){
var_17[var_11][1] -= var_5;
return var_11;
}
else
return -1;
}
else if(var_17[var_11][0] > var_19)
var_16 = var_11 -1;
else 
var_10 = var_11 + 1;
}
if(var_17[var_10][0] == var_19 && var_17[var_10][1] >= var_5){
var_17[var_10][1] -= var_5;
return var_10;
}
else 
return -1;
}
bool func_3(int* var_0, int var_3){
if(var_3 % 2 == 1){
return false;
}
int* var_7 = calloc(2e5 + 1, sizeof(int));
int var_4 = 1e5;
int** var_17 = malloc(var_3 * sizeof(int*));
int var_18 = 0;
for(int var_8 = 0; var_8 < var_3; var_8++){
var_7[var_0[var_8] + var_4]++;
if(var_7[ var_0[var_8] + var_4 ] == 1){
var_17[var_18] = malloc(2 * sizeof(int));
var_17[var_18][0] = var_0[var_8];
var_18++;
}
}
for(int var_8 = 0; var_8 < var_18; var_8++){
var_17[var_8][1] = var_7[ var_17[var_8][0] + var_4] ;
}
free(var_7);
qsort(var_17, var_18, sizeof(int*), func_1);
int var_15 = 0, var_14 = var_18-1;
int var_9 = 0;
while(var_9 < var_3/2 ){
if(var_17[var_15][1] == 0){
for(int var_8 = var_15+1; var_8 < var_18; var_8++){
if(var_17[var_8][1] > 0){
var_15 = var_8;
break;
}
}
}
if(var_17[var_15][0] == 0){
if(var_17[var_15][1] % 2 == 1){
return false;
}
var_9 += (var_17[var_15][1]/2);
var_17[var_15][1] = 0;
var_15++;
continue;
}
if(var_17[var_15][0] < 0){
if((var_17[var_15][0]*(-1))%2|| func_2(var_17, var_18, var_17[var_15][0] / 2, var_17[var_15][1]) == -1)
return false;
}
else{
if( func_2(var_17, var_18, var_17[var_15][0] * 2, var_17[var_15][1]) == -1)
return false;
}
var_9 += var_17[var_15][1];
var_17[var_15][1] = 0; 
var_15++;
}
return true;
}