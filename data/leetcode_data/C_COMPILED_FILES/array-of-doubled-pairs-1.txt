#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
int func_2(void* var_2,void* var_5){
return *(int*)var_2-*(int*)var_5;
}
bool func_1(int* var_0, int var_1){
if(var_1%2!=0){
return false;
}
qsort(var_0,var_1,sizeof(var_0[0]),func_2);
int* var_11=(int*)calloc(var_1,sizeof(int));
int var_9=0;
int var_10=0;
for(int var_8=0;var_8<var_1;var_8++){
if(var_9==var_10){
var_11[var_10++]=var_0[var_8];
if(var_10-var_9>var_1-var_8-1){
return false;
}
continue;
}
if(var_0[var_8]==2*var_11[var_9]){
var_9++;
}else if(var_0[var_8]<2*var_11[var_9]){
var_11[var_10++]=var_0[var_8];
if(var_10-var_9>var_1-var_8-1){
return false;
}
}else{
return false;
}
}
return var_9==var_10;
}
bool func_3(int* var_0, int var_1){
int* var_3=(int*)calloc(var_1,sizeof(int));
int var_6=0;
int* var_4=(int*)calloc(var_1,sizeof(int));
int var_7=0;
for(int var_8=0;var_8<var_1;var_8++){
if(var_0[var_8]<=0){
var_3[var_6++]=-var_0[var_8];
}else{
var_4[var_7++]=var_0[var_8];
}
}
return func_1(var_3,var_6)&&func_1(var_4,var_7);
}