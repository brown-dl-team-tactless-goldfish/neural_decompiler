#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
struct var_1 {
int var_12;
struct var_1 *var_6;
struct var_1 *var_9;
};
typedef struct {
struct var_1 *var_7;
int var_5;
} var_0;
struct var_1* func_1(struct var_1* var_10, int var_12, int var_2){
if (var_2 == 1) {
struct var_1 *var_7 = (struct var_1 *)malloc(sizeof(struct var_1));
var_7->var_12 = var_12;
var_7->var_6 = var_10;
var_7->var_9 = NULL;
return var_7;
}
var_0 var_7[10001] = {0};
var_7[0].var_7 = var_10;
var_7[0].var_5 = 0;
int var_3 = 0, var_11 = 1;
while (var_3 < var_11) {
if (var_7[var_3].var_7->var_6) {
var_7[var_11].var_7 = var_7[var_3].var_7->var_6;
var_7[var_11].var_5 = var_7[var_3].var_5 + 1;
var_11++;
}
if (var_7[var_3].var_7->var_9) {
var_7[var_11].var_7 = var_7[var_3].var_7->var_9;
var_7[var_11].var_5 = var_7[var_3].var_5 + 1;
var_11++;
}
var_3++;
}
for (int var_4=0; var_4<var_11; var_4++) {
if (var_7[var_4].var_5 == var_2-2) {
struct var_1 *var_8 = NULL;
if (var_7[var_11-1].var_5 == var_7[var_4].var_5) {
var_8 = (struct var_1 *)malloc(sizeof(struct var_1));
memset(var_8, 0, sizeof(struct var_1));
var_8->var_12 = var_12;
var_8->var_6 = NULL;
var_8->var_9 = NULL;
var_7[var_4].var_7->var_6 = var_8;
var_8 = (struct var_1 *)malloc(sizeof(struct var_1));
memset(var_8, 0, sizeof(struct var_1));
var_8->var_12 = var_12;
var_8->var_6 = NULL;
var_8->var_9 = NULL;
var_7[var_4].var_7->var_9 = var_8;
continue;
}
var_8 = (struct var_1 *)malloc(sizeof(struct var_1));
memset(var_8, 0, sizeof(struct var_1));
var_8->var_12 = var_12;
var_8->var_9 = NULL;
var_8->var_6 = var_7[var_4].var_7->var_6;
var_7[var_4].var_7->var_6 = var_8;
var_8 = (struct var_1 *)malloc(sizeof(struct var_1));
memset(var_8, 0, sizeof(struct var_1));
var_8->var_12 = var_12;
var_8->var_6 = NULL;
var_8->var_9 = var_7[var_4].var_7->var_9;
var_7[var_4].var_7->var_9 = var_8;
}
}
return var_10;
}