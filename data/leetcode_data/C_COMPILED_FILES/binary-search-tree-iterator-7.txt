#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
struct TreeNode {
int var_16;
struct TreeNode *var_6;
struct TreeNode *var_12;
};
typedef struct l_node {
int var_3;
struct l_node* var_10;
} var_2;
typedef struct list {
var_2* var_4;
var_2* var_14;
} var_1;
typedef struct {
var_1 var_5;
} var_0;
bool func_4(var_1 var_7)
{
return !var_7.var_4 && !var_7.var_14;
}
var_2* func_8(int var_3)
{
var_2* var_8 = (var_2*) malloc(sizeof(var_2));
var_8->var_10 = NULL;
var_8->var_3 = var_3;
return var_8;
}
void func_9(var_1* var_7)
{
var_7->var_4 = var_7->var_14 = NULL;
}
void func_2(var_1* var_7, var_2* var_8)
{
if (func_4(*var_7)) {
var_7->var_4 = var_7->var_14 = var_8;
} else {
var_7->var_14->var_10 = var_8;
var_7->var_14 = var_8;
}
}
void func_1(struct TreeNode* var_13, var_2* var_7)
{
if (!var_13)
return;
func_1(var_13->var_6, var_7);
func_2(var_7, func_8(var_13->var_16));
func_1(var_13->var_12, var_7);
}
var_0* func_7(struct TreeNode* var_13) {
var_0* var_9 = (var_0*) malloc(sizeof(var_0));
func_9(&var_9->var_5);
func_1(var_13, &var_9->var_5);
return var_9;
}
int func_6(var_0* var_11) {
var_2* var_15 = var_11->var_5.var_4;
int var_16 = var_11->var_5.var_4->var_3;
var_11->var_5.var_4 = var_11->var_5.var_4->var_10;
free(var_15);
return var_16;
}
bool func_5(var_0* var_11) {
return var_11->var_5.var_4;
}
void func_3(var_0* var_11) {
var_2* var_4 = var_11->var_5.var_4;
while (var_4) {
var_2* var_10 = var_4->var_10;
free(var_4);
var_4 = var_10;
}
	free(var_11);
}