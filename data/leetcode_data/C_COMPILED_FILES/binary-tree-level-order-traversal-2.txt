#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
struct var_1 {
int var_16;
struct var_1 *left;
struct var_1 *right;
};
#define var_0 2000UL
struct var_1 *var_9[var_0];
int var_5 = -1;
int var_10 = -1;
void func_3(struct var_1 *var_6)
{
if (var_10 == var_0 - 1) {
}
var_9[++var_10] = var_6;
if (var_5 == -1) {
var_5 = 0;
}
}
struct var_1 * func_4()
{
if (var_5 == -1) {
return NULL;
}
struct var_1 * var_15 = var_9[var_5];
var_5++;
if (var_5 > var_10) {
var_5 = -1;
var_10 = -1;
}
return var_15;
}
int func_1(struct var_1* var_14, int* var_13, int** var_12)
{
int var_2;
int var_7;
int var_8[2000] = {1};
int var_3 = 0;
int **var_11 = malloc(sizeof(int *) * 2000);
*var_12 = malloc(sizeof(int) * 2000);
var_2 = 0;
var_7 = 1;
var_11[0] = malloc(sizeof(int));
(*var_12)[0] = 1;
struct var_1 *var_6 = var_14;
while (var_6) {
if (var_3 >= var_8[var_2]) {
var_2++;
var_7++;
var_3 = 0;
var_11[var_2] = malloc(sizeof(int) * var_8[var_2]);
(*var_12)[var_2] = var_8[var_2];
}
if (var_6->left) {
func_3(var_6->left);
var_8[var_7]++;
}
if (var_6->right) {
func_3(var_6->right);
var_8[var_7]++;
}
var_11[var_2][var_3++] = var_6->var_16;
var_6 = func_4();
}
*var_13 = var_2 + 1;
return var_11;
}
int** func_2(struct var_1* var_14, int* var_13, int** var_12)
{
if (!var_14) {
*var_13 = 0;
return NULL;
}
return __level_order(var_14, var_13, var_12);
}