#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
int func_1(int *var_0, int *var_1)
{
return *var_0 - *var_1;
}
int func_2(int *var_6, int var_7, int *var_9, int **var_8)
{
int **var_10;
int var_11 = 0;
int var_2 = 8;
int var_3, var_4, var_5, var_12;
var_10 = (int **)malloc(sizeof(int *) * var_2);
*var_8 = (int **)malloc(sizeof(int) * var_2);
qsort(var_6, var_7, sizeof(int), func_1);
for (var_3 = 0; var_3 < var_7 - 1; var_3++) {
if (var_3 > 0 && var_6[var_3] == var_6[var_3 - 1]) {
continue;
}
var_4 = var_3 + 1;
var_5 = var_7 - 1;
while (var_4 < var_5) {
var_12 = var_6[var_3] + var_6[var_4] + var_6[var_5];
if (var_12 == 0) {
var_10[var_11] = (int *)malloc(sizeof(int) * 3);
(*var_8)[var_11] = 3;
var_10[var_11][0] = var_6[var_3];
var_10[var_11][1] = var_6[var_4];
var_10[var_11][2] = var_6[var_5];
var_11++;
while (var_4 < var_5 && var_6[var_4] == var_6[var_4 + 1]) {
var_4++;
}
var_4++;
var_5--;
if (var_11 == var_2) {
var_2 *= 2;
var_10 = (int **)realloc(var_10, sizeof(int *) * var_2);
(*var_8) = (int **)realloc((*var_8),sizeof(int) * var_2);
}
} else if (var_12 > 0) {
var_5--;
} else {
var_4++;
}
}
}
*var_9 = var_11;
return var_10;
}