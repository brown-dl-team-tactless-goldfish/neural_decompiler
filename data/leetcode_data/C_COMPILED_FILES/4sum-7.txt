#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
int func_1(const void *var_0, const void *var_1)
{
return *(int *)var_0 - *(int *)var_1;
}
int func_2(int *var_6, int var_7, int var_13, int *var_10, int **var_9)
{
int var_2 = 0;
int *var_14;
int var_12; 
int **var_8 = NULL;
	
if(var_6 == NULL || var_10 == NULL || var_9 == NULL) {
return NULL;
}
qsort(var_6, var_7, sizeof(int), func_1);
for (int var_3 = 0; var_3 < var_7 - 3; var_3++) {
if (var_3 > 0 && var_6[var_3] == var_6[var_3 - 1]) {
continue;
}
if (var_6[var_3] + var_6[var_3 + 1] + var_6[var_3 + 2] + var_6[var_3 + 3] > var_13) {
break;
}
if (var_6[var_3] + var_6[var_7 - 3] + var_6[var_7 - 2] + var_6[var_7 - 1] < var_13) {
continue;
}
for (int var_4 = var_3 + 1; var_4 < var_7 - 2; var_4++) {
if (var_4 > var_3 + 1 && var_6[var_4] == var_6[var_4 - 1]) {
continue;
}
if (var_6[var_3] + var_6[var_4] + var_6[var_4 + 1] + var_6[var_4 + 2] > var_13) {
break;
}
if (var_6[var_3] + var_6[var_4] + var_6[var_7 - 2] + var_6[var_7 - 1] < var_13) {
continue;
}
int var_5 = var_4 + 1;
int var_11 = var_7 - 1;
while (var_5 < var_11) {
var_12 = var_6[var_3] + var_6[var_4] + var_6[var_5] + var_6[var_11];
if (var_12 == var_13) {
var_8 = (int **)realloc(var_8, sizeof(int *)*(var_2+1));
var_8[var_2] = (int *)malloc(sizeof(int) * 4);
var_8[var_2][0] = var_6[var_3];
var_8[var_2][1] = var_6[var_4];
var_8[var_2][2] = var_6[var_5];
var_8[var_2][3] = var_6[var_11];
while (var_5 < var_11 && var_6[var_5] == var_6[var_5 + 1]) {
var_5++;
}
while (var_5 < var_11 && var_6[var_11] == var_6[var_11 - 1]) {
var_11--;
}
var_5++;
var_11--;
var_2++;
} else if (var_12 > var_13) {
var_11--;
} else {
var_5++;
}
}
}
}
	
*var_9 = (int *)malloc(sizeof(int) * var_2);
	for (int var_3 = 0; var_3 < var_2; var_3++) {
(*var_9)[var_3] = 4;
	}
*var_10 = var_2;
return var_8;
}