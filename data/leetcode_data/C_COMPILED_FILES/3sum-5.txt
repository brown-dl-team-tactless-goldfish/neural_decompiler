#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
int** func_3(int* var_7, int var_8, int* var_11);
int func_2(const void * var_0, const void * var_1);
int* func_1(int var_0, int var_1, int var_2);
int** func_3(int* var_7, int var_8, int* var_11)
{
int var_3, var_4, var_5;
int var_6 = 0, var_13 = 0, var_9 = 0;
int** var_10 = malloc(sizeof(int*) * var_8 * (var_8-1) *(var_8-2) / 6);
*var_11 = 0;
if (var_8 < 3)
return var_10;
qsort(var_7, var_8, sizeof(int), func_2);
for (var_3 = 0; var_3 < var_8; var_3++) {
if (var_7[var_3] < 0) var_6++;
else if (var_7[var_3] == 0) var_13++;
else var_9++;
}
if (var_13 >= 3)
var_10[(*var_11)++] = func_1(0, 0, 0);
if (var_13 >= 1) {
for (var_3 = 0, var_4 = var_8-1; var_3 < var_6 && var_4 > var_6 + var_13 - 1;) {
if (var_7[var_3] + var_7[var_4] < 0) var_3++;
else if (var_7[var_3] + var_7[var_4] > 0) var_4--;
else if (var_3 > 0 && var_7[var_3] == var_7[var_3-1]) var_3++; 
else if (var_4 < var_8-1 && var_7[var_4] == var_7[var_4+1]) var_4--; 
else var_10[(*var_11)++] = func_1(var_7[var_3++], 0, var_7[var_4--]);
}
}
if (var_6 >= 2 && var_9 >= 1) {
for (var_3 = 0; var_3 < var_6; var_3++) {
if (var_7[var_3] + var_7[var_8-1] < 0);
else if (var_3 > 0 && var_7[var_3] == var_7[var_3-1]);
else
for (var_4 = var_3+1, var_5 = var_8-1; var_4 < var_6 && var_5 > var_6 + var_13 - 1;) {
if (var_7[var_3] + var_7[var_4] + var_7[var_5] < 0) var_4++;
else if (var_7[var_3] + var_7[var_4] + var_7[var_5] > 0) var_5--;
else if (var_4 > var_3+1 && var_7[var_4] == var_7[var_4-1]) var_4++; 
else if (var_5 < var_8-1 && var_7[var_5] == var_7[var_5+1]) var_5--; 
else var_10[(*var_11)++] = func_1(var_7[var_3], var_7[var_4++], var_7[var_5--]);
}
}
}
if (var_6 >= 1 && var_9 >= 2) {
for (var_3 = var_8-1; var_3 > var_6 + var_13 - 1; var_3--) {
if (var_7[var_3] + var_7[0] > 0);
else if (var_3 < var_8-1 && var_7[var_3] == var_7[var_3+1]);
else
for (var_4 = var_3-1, var_5 = 0; var_4 > var_6 + var_13 - 1 && var_5 < var_6;) {
if (var_7[var_3] + var_7[var_4] + var_7[var_5] > 0) var_4--;
else if (var_7[var_3] + var_7[var_4] + var_7[var_5] < 0) var_5++;
else if (var_4 < var_3-1 && var_7[var_4] == var_7[var_4+1]) var_4--; 
else if (var_5 > 0 && var_7[var_5] == var_7[var_5-1]) var_5++; 
else var_10[(*var_11)++] = func_1(var_7[var_3], var_7[var_4--], var_7[var_5++]);
}
}
}
return var_10;
}
int func_2(const void * var_0, const void * var_1)
{
return (*(int*)var_0 - *(int*)var_1);
}
int* func_1(int var_0, int var_1, int var_2)
{
int* var_12 = malloc(sizeof(int) * 3);
var_12[0] = var_0;
var_12[1] = var_1;
var_12[2] = var_2;
return var_12;
}