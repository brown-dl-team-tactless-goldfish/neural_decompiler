#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#include<stdint.h>
#include<math.h>
int func_7(int var_4)
{
return 2*var_4;
}
int func_3(int var_4)
{
return 2*var_4 + 1;
}
void func_5(int* var_11,int* var_12)
{
if(*var_11 != *var_12)
{
*var_11 += *var_12;
*var_12 = *var_11 - *var_12;
*var_11 = *var_11 - *var_12;
}
}
void func_1(int* var_1, int var_5, int var_16)
{
int var_7 = 0;
int var_6 = 0;
int var_13 = 0;
while(true)
{
var_6 = func_7(var_5);
var_13 = func_3(var_5);
if(var_6 < var_16 && var_1[var_5] < var_1[var_6])
var_7 = var_6;
else
var_7 = var_5;
if(var_13 < var_16 && var_1[var_7] < var_1[var_13])
var_7 = var_13;
if(var_7 != var_5)
{
func_5(var_1 + var_5, var_1 + var_7);
var_5 = var_7;
}
else
break;
}
}
void func_2(int* var_1,int var_8)
{
for(int var_4 = var_8/2; var_4 >= 0 ;--var_4)
func_1(var_1,var_4,var_8);
}
void func_4(int* var_1, int var_8)
{
if(var_1 == NULL || var_8 == 0)
{
return;
}
func_2(var_1,var_8);
for(int var_4 = var_8 - 1; var_4 >= 0; --var_4)
{
func_5(var_1,var_1 + var_4);
func_1(var_1,0,var_4);
}
}
int** func_6(int* var_9, int var_10, int* var_14) {
if(var_10 < 3)
return NULL;
int* var_15 = var_9;
int* var_3 = var_9 + var_10 - 1;
int* var_2 = NULL;
int** var_0 = (int**)calloc(4048,sizeof(int*));
int var_4 = 0;
int var_17 = 0;
func_4(var_9,var_10);
while(var_15 < var_3 - 1)
{
var_2 = var_15 + 1;
while(var_2 < var_3)
{
var_17= *var_3 + *var_15;
if(var_17 + *var_2 == 0)
{
if(var_4 != 0 && *var_15 == var_0[var_4 - 1][0] && *var_2 == var_0[var_4 - 1][1])
{
--var_3;
continue;
}
var_0[var_4] = (int*)malloc(3*sizeof(int));
var_0[var_4][0] = *var_15;
var_0[var_4][1] = *var_2;
var_0[var_4][2] = *var_3;
++var_4;
while(var_15 < var_3 && *var_15 == *(var_15 + 1)) ++var_15;
while(var_15 < var_3 && *var_3 == *(var_3 - 1)) --var_3;
--var_3;
}else if(( var_17 > 0 && *var_2 >= 0)|| ( var_17 < 0 && *(var_3 - 1) < 0 ) || (var_2 == var_3 - 1))
{
var_2 = var_15 + 1;
while(var_15 < var_3 && *var_3 == *(var_3 - 1)) --var_3;
--var_3;
}else
{
++var_2;
}
}
++var_15;
var_3 = var_9 + var_10 - 1;
}
*var_14 = var_4;
return var_0;
}