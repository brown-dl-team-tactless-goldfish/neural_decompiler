func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        movq    %rsi, -32(%rbp)
        movq    -24(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -12(%rbp)
        movq    -32(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -16(%rbp)
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        jmp     .L2
.L5:
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %edx
        movl    -8(%rbp), %eax
        movslq  %eax, %rcx
        movq    -32(%rbp), %rax
        addq    %rcx, %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        jne     .L3
        addl    $1, -8(%rbp)
.L3:
        addl    $1, -4(%rbp)
.L2:
        movl    -4(%rbp), %eax
        cmpl    -12(%rbp), %eax
        jge     .L4
        movl    -8(%rbp), %eax
        cmpl    -16(%rbp), %eax
        jl      .L5
.L4:
        movl    -16(%rbp), %eax
        subl    -8(%rbp), %eax
        leave
        ret
