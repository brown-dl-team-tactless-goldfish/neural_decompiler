func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $64, %rsp
        movq    %rdi, -56(%rbp)
        movq    %rsi, -64(%rbp)
        movq    -56(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -20(%rbp)
        movq    -64(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -24(%rbp)
        movl    $0, -4(%rbp)
        movl    $0, -16(%rbp)
        movl    -20(%rbp), %edx
        movl    -24(%rbp), %eax
        addl    %edx, %eax
        addl    $2, %eax
        cltq
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -32(%rbp)
        movl    -20(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -8(%rbp)
        movl    -24(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -12(%rbp)
        jmp     .L2
.L4:
        movl    -8(%rbp), %eax
        leal    -1(%rax), %edx
        movl    %edx, -8(%rbp)
        movslq  %eax, %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        leal    -48(%rax), %ecx
        movl    -12(%rbp), %eax
        leal    -1(%rax), %edx
        movl    %edx, -12(%rbp)
        movslq  %eax, %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        addl    %ecx, %eax
        leal    -48(%rax), %edx
        movl    -4(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, -36(%rbp)
        movl    -36(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -4(%rbp)
        movl    -36(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movl    %edx, %eax
        leal    48(%rax), %ecx
        movl    -16(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -16(%rbp)
        movslq  %eax, %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    %ecx, %edx
        movb    %dl, (%rax)
.L2:
        cmpl    $0, -8(%rbp)
        js      .L5
        cmpl    $0, -12(%rbp)
        jns     .L4
        jmp     .L5
.L6:
        movl    -8(%rbp), %eax
        leal    -1(%rax), %edx
        movl    %edx, -8(%rbp)
        movslq  %eax, %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        leal    -48(%rax), %edx
        movl    -4(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, -40(%rbp)
        movl    -40(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -4(%rbp)
        movl    -40(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movl    %edx, %eax
        leal    48(%rax), %ecx
        movl    -16(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -16(%rbp)
        movslq  %eax, %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    %ecx, %edx
        movb    %dl, (%rax)
.L5:
        cmpl    $0, -8(%rbp)
        jns     .L6
        jmp     .L7
.L8:
        movl    -12(%rbp), %eax
        leal    -1(%rax), %edx
        movl    %edx, -12(%rbp)
        movslq  %eax, %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        leal    -48(%rax), %edx
        movl    -4(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, -44(%rbp)
        movl    -44(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -4(%rbp)
        movl    -44(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movl    %edx, %eax
        leal    48(%rax), %ecx
        movl    -16(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -16(%rbp)
        movslq  %eax, %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    %ecx, %edx
        movb    %dl, (%rax)
.L7:
        cmpl    $0, -12(%rbp)
        jns     .L8
        cmpl    $0, -4(%rbp)
        je      .L9
        movl    -16(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -16(%rbp)
        movslq  %eax, %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movb    $49, (%rax)
.L9:
        movl    -16(%rbp), %eax
        movslq  %eax, %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movb    $0, (%rax)
        movl    $0, -8(%rbp)
        movl    -16(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -12(%rbp)
        jmp     .L10
.L11:
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movb    %al, -45(%rbp)
        movl    -12(%rbp), %eax
        movslq  %eax, %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    -8(%rbp), %edx
        movslq  %edx, %rcx
        movq    -32(%rbp), %rdx
        addq    %rcx, %rdx
        movzbl  (%rax), %eax
        movb    %al, (%rdx)
        movl    -12(%rbp), %eax
        movslq  %eax, %rdx
        movq    -32(%rbp), %rax
        addq    %rax, %rdx
        movzbl  -45(%rbp), %eax
        movb    %al, (%rdx)
        addl    $1, -8(%rbp)
        subl    $1, -12(%rbp)
.L10:
        movl    -8(%rbp), %eax
        cmpl    -12(%rbp), %eax
        jl      .L11
        movq    -32(%rbp), %rax
        leave
        ret
