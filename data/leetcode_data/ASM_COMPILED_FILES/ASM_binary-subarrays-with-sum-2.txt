func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -4(%rbp)
        movl    -4(%rbp), %eax
        addl    $1, %eax
        imull   -4(%rbp), %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $64, %rsp
        movq    %rdi, -56(%rbp)
        movl    %esi, -60(%rbp)
        movl    %edx, -64(%rbp)
        movl    -60(%rbp), %eax
        cltq
        movl    $4, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, -40(%rbp)
        movl    -60(%rbp), %eax
        cltq
        movl    $4, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, -48(%rbp)
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        movl    $0, -12(%rbp)
        jmp     .L4
.L10:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $1, %eax
        jne     .L5
        movl    -12(%rbp), %eax
        movl    %eax, -8(%rbp)
        jmp     .L6
.L8:
        subl    $1, -8(%rbp)
.L6:
        cmpl    $0, -8(%rbp)
        jle     .L7
        movl    -8(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        je      .L8
.L7:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rax, %rdx
        movl    -12(%rbp), %eax
        subl    -8(%rbp), %eax
        movl    %eax, (%rdx)
        subl    $1, -8(%rbp)
        cmpl    $0, -8(%rbp)
        js      .L9
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    -8(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -48(%rbp), %rdx
        addq    %rcx, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
.L9:
        movl    -12(%rbp), %eax
        movl    %eax, -8(%rbp)
        addl    $1, -4(%rbp)
.L5:
        addl    $1, -12(%rbp)
.L4:
        movl    -12(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jl      .L10
        movl    -60(%rbp), %eax
        subl    -8(%rbp), %eax
        movl    %eax, %edx
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -48(%rbp), %rax
        addq    %rcx, %rax
        subl    $1, %edx
        movl    %edx, (%rax)
        movl    $0, -16(%rbp)
        cmpl    $0, -64(%rbp)
        jne     .L11
        cmpl    $0, -4(%rbp)
        jne     .L12
        movl    -60(%rbp), %eax
        movl    %eax, %edi
        call    func_2
        jmp     .L13
.L12:
        movl    $0, -20(%rbp)
        movl    $0, -24(%rbp)
        jmp     .L14
.L16:
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        je      .L15
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    %eax, %edi
        call    func_2
        addl    %eax, -16(%rbp)
        movl    -24(%rbp), %eax
        movl    %eax, -20(%rbp)
.L15:
        addl    $1, -24(%rbp)
.L14:
        movl    -24(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jl      .L16
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    %eax, %edi
        call    func_2
        addl    %eax, -16(%rbp)
        movl    -16(%rbp), %eax
        jmp     .L13
.L11:
        movl    -4(%rbp), %eax
        cmpl    -64(%rbp), %eax
        jge     .L17
        movl    $0, %eax
        jmp     .L13
.L17:
        movl    $0, -28(%rbp)
        movl    $0, -32(%rbp)
        jmp     .L18
.L20:
        addl    $1, -28(%rbp)
.L18:
        movl    -28(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jge     .L19
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        je      .L20
.L19:
        movl    -28(%rbp), %eax
        movl    %eax, -32(%rbp)
        movl    $1, -4(%rbp)
        jmp     .L21
.L23:
        addl    $1, -32(%rbp)
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        addl    %eax, -4(%rbp)
.L21:
        movl    -32(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jge     .L22
        movl    -4(%rbp), %eax
        cmpl    -64(%rbp), %eax
        jne     .L23
.L22:
        movl    -32(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jne     .L25
        movl    $0, %eax
        jmp     .L13
.L26:
        addl    $1, -16(%rbp)
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -48(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        leal    (%rdx,%rax), %ecx
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rsi
        movq    -48(%rbp), %rax
        addq    %rsi, %rax
        movl    (%rax), %eax
        imull   %edx, %eax
        addl    %ecx, %eax
        addl    %eax, -16(%rbp)
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        addl    $1, %eax
        addl    %eax, -28(%rbp)
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        addl    $1, %eax
        addl    %eax, -32(%rbp)
.L25:
        movl    -32(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jl      .L26
        movl    -16(%rbp), %eax
.L13:
        leave
        ret
