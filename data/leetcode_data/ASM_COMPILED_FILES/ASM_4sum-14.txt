func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -8(%rbp)
        movq    %rsi, -16(%rbp)
        movq    -8(%rbp), %rax
        movl    (%rax), %edx
        movq    -16(%rbp), %rax
        movl    (%rax), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $104, %rsp
        movq    %rdi, -88(%rbp)
        movl    %esi, -92(%rbp)
        movl    %edx, -96(%rbp)
        movq    %rcx, -104(%rbp)
        movq    %r8, -112(%rbp)
        cmpq    $0, -88(%rbp)
        je      .L4
        cmpl    $3, -92(%rbp)
        jg      .L5
.L4:
        movq    -104(%rbp), %rax
        movl    $0, (%rax)
        movq    -112(%rbp), %rax
        movq    $0, (%rax)
        movl    $0, %eax
        jmp     .L6
.L5:
        movq    -104(%rbp), %rax
        movl    $0, (%rax)
        movl    $0, -20(%rbp)
        movl    $64, %edi
        call    malloc
        movq    %rax, -32(%rbp)
        movl    $8, -36(%rbp)
        movl    -92(%rbp), %eax
        movslq  %eax, %rsi
        movq    -88(%rbp), %rax
        movl    $func_1, %ecx
        movl    $4, %edx
        movq    %rax, %rdi
        call    qsort
        movl    -92(%rbp), %eax
        movl    %eax, -72(%rbp)
        movl    $0, -40(%rbp)
        jmp     .L7
.L27:
        cmpl    $0, -40(%rbp)
        jle     .L8
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -88(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -40(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -88(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L30
.L8:
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -88(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        leal    (%rax,%rax), %edx
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -88(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        leal    (%rax,%rax), %ecx
        movl    -96(%rbp), %eax
        subl    %ecx, %eax
        cmpl    %eax, %edx
        jg      .L31
        movl    -40(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -44(%rbp)
        jmp     .L12
.L26:
        movl    -40(%rbp), %eax
        addl    $1, %eax
        cmpl    %eax, -44(%rbp)
        jle     .L13
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -88(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -44(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -88(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L32
.L13:
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -88(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        leal    (%rax,%rax), %ecx
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -88(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    -96(%rbp), %edx
        subl    %eax, %edx
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rsi
        movq    -88(%rbp), %rax
        addq    %rsi, %rax
        movl    (%rax), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        cmpl    %eax, %ecx
        jg      .L9
        movl    -92(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -88(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        leal    (%rax,%rax), %ecx
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -88(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    -96(%rbp), %edx
        subl    %eax, %edx
        movl    -92(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rsi
        movq    -88(%rbp), %rax
        addq    %rsi, %rax
        movl    (%rax), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        cmpl    %eax, %ecx
        jl      .L9
        movl    -44(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rdx
        movq    -88(%rbp), %rax
        addq    %rdx, %rax
        movq    %rax, -56(%rbp)
        movl    -92(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -88(%rbp), %rax
        addq    %rdx, %rax
        movq    %rax, -64(%rbp)
        jmp     .L15
.L25:
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -88(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -88(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %edx, %eax
        movl    %eax, -76(%rbp)
        movq    -56(%rbp), %rax
        movl    (%rax), %eax
        movl    -96(%rbp), %edx
        subl    %eax, %edx
        movq    -64(%rbp), %rax
        movl    (%rax), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        cmpl    %eax, -76(%rbp)
        jle     .L16
        subq    $4, -64(%rbp)
        jmp     .L15
.L16:
        movq    -56(%rbp), %rax
        movl    (%rax), %eax
        movl    -96(%rbp), %edx
        subl    %eax, %edx
        movq    -64(%rbp), %rax
        movl    (%rax), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        cmpl    %eax, -76(%rbp)
        jge     .L17
        addq    $4, -56(%rbp)
        jmp     .L15
.L17:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -32(%rbp), %rax
        leaq    (%rdx,%rax), %rbx
        movl    $16, %edi
        call    malloc
        movq    %rax, (%rbx)
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -88(%rbp), %rax
        addq    %rax, %rdx
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rcx
        movq    -32(%rbp), %rax
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    (%rdx), %edx
        movl    %edx, (%rax)
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -88(%rbp), %rax
        addq    %rdx, %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -32(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        addq    $4, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        leaq    8(%rax), %rdx
        movq    -56(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        leaq    12(%rax), %rdx
        movq    -64(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        addl    $1, -20(%rbp)
        movl    -20(%rbp), %eax
        cmpl    -36(%rbp), %eax
        jne     .L19
        sall    -36(%rbp)
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -32(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    realloc
        movq    %rax, -32(%rbp)
        jmp     .L19
.L21:
        addq    $4, -56(%rbp)
.L19:
        movq    -56(%rbp), %rax
        cmpq    -64(%rbp), %rax
        jnb     .L22
        movq    -56(%rbp), %rax
        movl    (%rax), %edx
        movq    -56(%rbp), %rax
        addq    $4, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L21
        jmp     .L22
.L24:
        subq    $4, -64(%rbp)
.L22:
        movq    -64(%rbp), %rax
        cmpq    -56(%rbp), %rax
        jbe     .L23
        movq    -64(%rbp), %rax
        movl    (%rax), %edx
        movq    -64(%rbp), %rax
        subq    $4, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L24
.L23:
        addq    $4, -56(%rbp)
        subq    $4, -64(%rbp)
.L15:
        movq    -56(%rbp), %rax
        cmpq    -64(%rbp), %rax
        jb      .L25
        jmp     .L14
.L32:
        nop
.L14:
        addl    $1, -44(%rbp)
.L12:
        movl    -92(%rbp), %eax
        subl    $2, %eax
        cmpl    %eax, -44(%rbp)
        jl      .L26
        jmp     .L9
.L30:
        nop
.L9:
        addl    $1, -40(%rbp)
.L7:
        movl    -92(%rbp), %eax
        subl    $3, %eax
        cmpl    %eax, -40(%rbp)
        jl      .L27
        jmp     .L11
.L31:
        nop
.L11:
        movq    -104(%rbp), %rax
        movl    -20(%rbp), %edx
        movl    %edx, (%rax)
        movq    -104(%rbp), %rax
        movl    (%rax), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, %rdx
        movq    -112(%rbp), %rax
        movq    %rdx, (%rax)
        movl    $0, -68(%rbp)
        jmp     .L28
.L29:
        movq    -112(%rbp), %rax
        movq    (%rax), %rax
        movl    -68(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    $4, (%rax)
        addl    $1, -68(%rbp)
.L28:
        movq    -104(%rbp), %rax
        movl    (%rax), %eax
        cmpl    %eax, -68(%rbp)
        jl      .L29
        movq    -32(%rbp), %rax
.L6:
        addq    $104, %rsp
        popq    %rbx
        popq    %rbp
        ret
