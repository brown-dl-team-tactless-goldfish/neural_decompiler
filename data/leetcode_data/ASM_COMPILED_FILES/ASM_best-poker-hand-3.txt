func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movq    %rsi, -32(%rbp)
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, -4(%rbp)
        movq    -32(%rbp), %rax
        movl    (%rax), %edx
        movq    -24(%rbp), %rax
        movl    %edx, (%rax)
        movq    -32(%rbp), %rax
        movl    -4(%rbp), %edx
        movl    %edx, (%rax)
        nop
        popq    %rbp
        ret
.LC0:
        .string "Flush"
.LC1:
        .string "Three var_8 var_2 Kind"
.LC2:
        .string "Pair"
.LC3:
        .string "High Card"
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $56, %rsp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movq    %rdx, -56(%rbp)
        movl    %ecx, -48(%rbp)
        movb    $1, -1(%rbp)
        movb    $0, -25(%rbp)
        movb    $0, -26(%rbp)
        movl    $1, -8(%rbp)
        jmp     .L3
.L5:
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %edx
        movl    -8(%rbp), %eax
        cltq
        leaq    -1(%rax), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        je      .L4
        movb    $0, -1(%rbp)
.L4:
        addl    $1, -8(%rbp)
.L3:
        movl    -8(%rbp), %eax
        cmpl    -48(%rbp), %eax
        jl      .L5
        cmpb    $0, -1(%rbp)
        je      .L6
        movl    $.LC0, %eax
        jmp     .L7
.L6:
        movl    $0, -12(%rbp)
        jmp     .L8
.L12:
        movl    $0, -16(%rbp)
        jmp     .L9
.L11:
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -16(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jle     .L10
        movl    -16(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rax, %rdx
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    func_2
.L10:
        addl    $1, -16(%rbp)
.L9:
        movl    -44(%rbp), %eax
        subl    -12(%rbp), %eax
        subl    $1, %eax
        cmpl    %eax, -16(%rbp)
        jl      .L11
        addl    $1, -12(%rbp)
.L8:
        movl    -12(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L12
        movl    $2, -20(%rbp)
        jmp     .L13
.L15:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -20(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jne     .L14
        movl    -20(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -20(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -8(%rax), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jne     .L14
        movl    $.LC1, %eax
        jmp     .L7
.L14:
        addl    $1, -20(%rbp)
.L13:
        movl    -20(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L15
        movl    $1, -24(%rbp)
        jmp     .L16
.L18:
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -24(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jne     .L17
        movl    $.LC2, %eax
        jmp     .L7
.L17:
        addl    $1, -24(%rbp)
.L16:
        movl    -24(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L18
        movl    $.LC3, %eax
.L7:
        leave
        ret
