func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L2
.L3:
        addl    $1, -4(%rbp)
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -24(%rbp)
.L2:
        cmpq    $0, -24(%rbp)
        jne     .L3
        movl    -4(%rbp), %eax
        popq    %rbp
        ret
func_4:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -24(%rbp)
        movq    %rsi, -32(%rbp)
        movq    %rdx, -40(%rbp)
        cmpq    $0, -24(%rbp)
        jne     .L6
        movl    $0, %eax
        jmp     .L7
.L6:
        movl    $16, %edi
        call    malloc
        movq    %rax, -8(%rbp)
        movq    -32(%rbp), %rax
        movq    8(%rax), %rcx
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    -40(%rbp), %rdx
        movq    %rcx, %rsi
        movq    %rax, %rdi
        call    func_4
        movq    %rax, %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, 8(%rax)
        movq    -24(%rbp), %rax
        movl    (%rax), %edx
        movq    -32(%rbp), %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        addl    %edx, %eax
        movl    %eax, -12(%rbp)
        movl    -12(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movq    -8(%rbp), %rax
        movl    %edx, (%rax)
        movl    -12(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movq    -40(%rbp), %rax
        movl    %edx, (%rax)
        movq    -8(%rbp), %rax
.L7:
        leave
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -24(%rbp)
        movq    %rsi, -32(%rbp)
        movq    %rdx, -40(%rbp)
        movq    -24(%rbp), %rax
        cmpq    -32(%rbp), %rax
        je      .L9
        movl    $16, %edi
        call    malloc
        movq    %rax, -8(%rbp)
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    -40(%rbp), %rdx
        movq    -32(%rbp), %rcx
        movq    %rcx, %rsi
        movq    %rax, %rdi
        call    func_2
        movq    %rax, %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, 8(%rax)
        movq    -24(%rbp), %rax
        movl    (%rax), %edx
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        addl    %edx, %eax
        movl    %eax, -12(%rbp)
        movl    -12(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movq    -8(%rbp), %rax
        movl    %edx, (%rax)
        movl    -12(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movq    -40(%rbp), %rax
        movl    %edx, (%rax)
        movq    -8(%rbp), %rax
        jmp     .L10
.L9:
        movl    $0, %eax
.L10:
        leave
        ret
func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $96, %rsp
        movq    %rdi, -88(%rbp)
        movq    %rsi, -96(%rbp)
        movq    -88(%rbp), %rax
        movq    %rax, %rdi
        call    func_1
        movl    %eax, -36(%rbp)
        movq    -96(%rbp), %rax
        movq    %rax, %rdi
        call    func_1
        movl    %eax, -40(%rbp)
        cmpq    $0, -88(%rbp)
        jne     .L12
        movq    -96(%rbp), %rax
        jmp     .L24
.L12:
        cmpq    $0, -96(%rbp)
        jne     .L14
        movq    -88(%rbp), %rax
        jmp     .L24
.L14:
        movl    -36(%rbp), %eax
        subl    -40(%rbp), %eax
        movl    %eax, %edx
        movl    %edx, %eax
        sarl    $31, %eax
        xorl    %eax, %edx
        movl    %edx, -44(%rbp)
        subl    %eax, -44(%rbp)
        movl    $0, -76(%rbp)
        movq    $0, -8(%rbp)
        cmpl    $0, -44(%rbp)
        jne     .L15
        leaq    -76(%rbp), %rdx
        movq    -96(%rbp), %rcx
        movq    -88(%rbp), %rax
        movq    %rcx, %rsi
        movq    %rax, %rdi
        call    func_4
        movq    %rax, -8(%rbp)
        jmp     .L16
.L15:
        movl    -36(%rbp), %eax
        cmpl    -40(%rbp), %eax
        jge     .L17
        movq    -96(%rbp), %rax
        movq    %rax, -56(%rbp)
        movq    -88(%rbp), %rax
        movq    %rax, -96(%rbp)
        movq    -56(%rbp), %rax
        movq    %rax, -88(%rbp)
.L17:
        movq    -88(%rbp), %rax
        movq    %rax, -16(%rbp)
        movl    $0, -20(%rbp)
        jmp     .L18
.L19:
        movq    -16(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -16(%rbp)
        addl    $1, -20(%rbp)
.L18:
        movl    -20(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L19
        leaq    -76(%rbp), %rdx
        movq    -96(%rbp), %rcx
        movq    -16(%rbp), %rax
        movq    %rcx, %rsi
        movq    %rax, %rdi
        call    func_4
        movq    %rax, -8(%rbp)
        movq    $0, -32(%rbp)
        movq    $0, -64(%rbp)
        leaq    -76(%rbp), %rdx
        movq    -16(%rbp), %rcx
        movq    -88(%rbp), %rax
        movq    %rcx, %rsi
        movq    %rax, %rdi
        call    func_2
        movq    %rax, -32(%rbp)
        movq    -32(%rbp), %rax
        movq    %rax, -64(%rbp)
        jmp     .L20
.L22:
        movq    -32(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -32(%rbp)
.L20:
        cmpq    $0, -32(%rbp)
        je      .L21
        movq    -32(%rbp), %rax
        movq    8(%rax), %rax
        testq   %rax, %rax
        jne     .L22
.L21:
        movq    -32(%rbp), %rax
        movq    -8(%rbp), %rdx
        movq    %rdx, 8(%rax)
        movq    -64(%rbp), %rax
        movq    %rax, -8(%rbp)
.L16:
        movl    -76(%rbp), %eax
        testl   %eax, %eax
        je      .L23
        movl    $16, %edi
        call    malloc
        movq    %rax, -72(%rbp)
        movq    -72(%rbp), %rax
        movq    -8(%rbp), %rdx
        movq    %rdx, 8(%rax)
        movl    -76(%rbp), %edx
        movq    -72(%rbp), %rax
        movl    %edx, (%rax)
        movq    -72(%rbp), %rax
        movq    %rax, -8(%rbp)
.L23:
        movq    -8(%rbp), %rax
.L24:
        leave
        ret
