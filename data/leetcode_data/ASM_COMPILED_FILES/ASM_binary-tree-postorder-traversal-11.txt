var_1:
        .long   -1
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $16, %rsp
        movq    %rdi, -8(%rbp)
        cmpq    $0, -8(%rbp)
        je      .L3
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, %rdi
        call    func_1
        movq    -8(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, %rdi
        call    func_1
        movl    var_1(%rip), %eax
        addl    $1, %eax
        movl    %eax, var_1(%rip)
        movl    var_1(%rip), %ecx
        movq    -8(%rbp), %rax
        movl    (%rax), %edx
        movslq  %ecx, %rax
        movl    %edx, var_0(,%rax,4)
.L3:
        nop
        leave
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $16, %rsp
        movq    %rdi, -8(%rbp)
        movq    %rsi, -16(%rbp)
        movq    -8(%rbp), %rax
        movq    %rax, %rdi
        call    func_1
        movl    var_1(%rip), %eax
        leal    1(%rax), %edx
        movq    -16(%rbp), %rax
        movl    %edx, (%rax)
        movl    $-1, var_1(%rip)
        movl    $var_0, %eax
        leave
        ret
