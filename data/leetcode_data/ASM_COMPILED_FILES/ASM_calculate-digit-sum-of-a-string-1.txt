func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    %edx, -32(%rbp)
        movl    -28(%rbp), %eax
        subl    -32(%rbp), %eax
        movl    %eax, -4(%rbp)
        movl    -28(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -8(%rbp)
        jmp     .L2
.L3:
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movb    %al, -9(%rbp)
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    -4(%rbp), %edx
        movslq  %edx, %rcx
        movq    -24(%rbp), %rdx
        addq    %rcx, %rdx
        movzbl  (%rax), %eax
        movb    %al, (%rdx)
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movzbl  -9(%rbp), %eax
        movb    %al, (%rdx)
        addl    $1, -4(%rbp)
        subl    $1, -8(%rbp)
.L2:
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jl      .L3
        nop
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -24(%rbp)
        movq    %rsi, -32(%rbp)
        movl    %edx, -36(%rbp)
        movq    %rcx, -48(%rbp)
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        jmp     .L5
.L7:
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        subl    $48, %eax
        addl    %eax, -4(%rbp)
        addl    $1, -8(%rbp)
.L5:
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        testb   %al, %al
        je      .L6
        movl    -8(%rbp), %eax
        cmpl    -36(%rbp), %eax
        jl      .L7
.L6:
        cmpl    $99, -4(%rbp)
        jle     .L8
        movl    $3, %eax
        jmp     .L9
.L8:
        movl    $2, %eax
.L9:
        movl    %eax, -12(%rbp)
        cmpl    $9, -4(%rbp)
        jle     .L10
        jmp     .L11
.L12:
        movl    -4(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movl    %edx, %eax
        leal    48(%rax), %esi
        movq    -48(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %ecx
        movq    -48(%rbp), %rdx
        movl    %ecx, (%rdx)
        movslq  %eax, %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    %esi, %edx
        movb    %dl, (%rax)
        movl    -4(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -4(%rbp)
.L11:
        cmpl    $0, -4(%rbp)
        jg      .L12
        movq    -48(%rbp), %rax
        movl    (%rax), %ecx
        movl    -12(%rbp), %edx
        movq    -32(%rbp), %rax
        movl    %ecx, %esi
        movq    %rax, %rdi
        call    func_1
        jmp     .L14
.L10:
        movl    -4(%rbp), %eax
        leal    48(%rax), %esi
        movq    -48(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %ecx
        movq    -48(%rbp), %rdx
        movl    %ecx, (%rdx)
        movslq  %eax, %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    %esi, %edx
        movb    %dl, (%rax)
.L14:
        nop
        leave
        ret
func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movq    -24(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -4(%rbp)
        jmp     .L16
.L19:
        movl    $0, -12(%rbp)
        movl    $0, -8(%rbp)
        jmp     .L17
.L18:
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        leaq    (%rdx,%rax), %rdi
        leaq    -12(%rbp), %rcx
        movl    -28(%rbp), %edx
        movq    -24(%rbp), %rax
        movq    %rax, %rsi
        call    func_2
        movl    -28(%rbp), %eax
        addl    %eax, -8(%rbp)
.L17:
        movl    -8(%rbp), %eax
        cmpl    -4(%rbp), %eax
        jl      .L18
        movl    -12(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -12(%rbp)
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movb    $0, (%rax)
        movq    -24(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -4(%rbp)
.L16:
        movl    -4(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jg      .L19
        movq    -24(%rbp), %rax
        leave
        ret
