.LC0:
        .string ""
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -40(%rbp)
        movq    -40(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -20(%rbp)
        cmpl    $1, -20(%rbp)
        jne     .L2
        movl    $.LC0, %eax
        jmp     .L3
.L2:
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        jmp     .L4
.L6:
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $97, %al
        je      .L5
        addl    $1, -4(%rbp)
.L5:
        addl    $1, -8(%rbp)
.L4:
        movl    -8(%rbp), %eax
        cmpl    -20(%rbp), %eax
        jl      .L6
        cmpl    $1, -4(%rbp)
        jne     .L7
        movl    -20(%rbp), %eax
        cltq
        leaq    -1(%rax), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movb    $98, (%rax)
        movq    -40(%rbp), %rax
        jmp     .L3
.L7:
        movl    $0, -12(%rbp)
        jmp     .L8
.L10:
        movl    -12(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $97, %al
        je      .L9
        movl    -12(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movb    $97, (%rax)
        movq    -40(%rbp), %rax
        jmp     .L3
.L9:
        addl    $1, -12(%rbp)
.L8:
        movl    -12(%rbp), %eax
        cmpl    -20(%rbp), %eax
        jl      .L10
        movl    -20(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -16(%rbp)
        jmp     .L11
.L13:
        movl    -16(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $98, %al
        je      .L12
        movl    -16(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movb    $98, (%rax)
        movq    -40(%rbp), %rax
        jmp     .L3
.L12:
        subl    $1, -16(%rbp)
.L11:
        cmpl    $0, -16(%rbp)
        jns     .L13
        movl    $.LC0, %eax
.L3:
        leave
        ret
