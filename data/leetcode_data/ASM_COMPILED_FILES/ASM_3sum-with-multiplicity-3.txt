func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $40, %rsp
        movl    %edi, -36(%rbp)
        movl    var_7(%rip), %ecx
        movl    -36(%rbp), %eax
        cltd
        idivl   %ecx
        movl    %edx, -20(%rbp)
.L5:
        movq    var_12(%rip), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        testq   %rax, %rax
        jne     .L2
        movq    var_12(%rip), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        leaq    (%rax,%rdx), %rbx
        movl    $8, %esi
        movl    $1, %edi
        call    calloc
        movq    %rax, (%rbx)
        movq    var_12(%rip), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -36(%rbp), %edx
        movl    %edx, (%rax)
        movq    var_12(%rip), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    $1, 4(%rax)
        jmp     .L1
.L2:
        movq    var_12(%rip), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        cmpl    %eax, -36(%rbp)
        jne     .L4
        movq    var_12(%rip), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    4(%rax), %edx
        addl    $1, %edx
        movl    %edx, 4(%rax)
        jmp     .L1
.L4:
        addl    $1, -20(%rbp)
        movl    var_7(%rip), %ecx
        movl    -20(%rbp), %eax
        cltd
        idivl   %ecx
        movl    %edx, -20(%rbp)
        jmp     .L5
.L1:
        addq    $40, %rsp
        popq    %rbx
        popq    %rbp
        ret
func_4:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -20(%rbp)
        movl    var_7(%rip), %ecx
        movl    -20(%rbp), %eax
        cltd
        idivl   %ecx
        movl    %edx, -4(%rbp)
.L10:
        movq    var_12(%rip), %rax
        movl    -4(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        testq   %rax, %rax
        jne     .L7
        movl    $-1, %eax
        jmp     .L8
.L7:
        movq    var_12(%rip), %rax
        movl    -4(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        cmpl    %eax, -20(%rbp)
        jne     .L9
        movl    -4(%rbp), %eax
        jmp     .L8
.L9:
        addl    $1, -4(%rbp)
        movl    var_7(%rip), %ecx
        movl    -4(%rbp), %eax
        cltd
        idivl   %ecx
        movl    %edx, -4(%rbp)
        jmp     .L10
.L8:
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -20(%rbp)
        movl    %esi, -24(%rbp)
        cmpl    $1, -24(%rbp)
        jne     .L12
        movl    -20(%rbp), %eax
        cltq
        jmp     .L13
.L12:
        movl    -20(%rbp), %eax
        cmpl    -24(%rbp), %eax
        je      .L14
        cmpl    $0, -24(%rbp)
        jne     .L15
.L14:
        movl    $1, %eax
        jmp     .L13
.L15:
        movl    -24(%rbp), %eax
        cmpl    -20(%rbp), %eax
        jle     .L16
        movl    $0, %eax
        jmp     .L13
.L16:
        movq    $1, -8(%rbp)
        movl    $0, -12(%rbp)
        jmp     .L17
.L18:
        movl    -20(%rbp), %eax
        subl    -12(%rbp), %eax
        cltq
        movq    -8(%rbp), %rdx
        imulq   %rdx, %rax
        movq    %rax, -8(%rbp)
        addl    $1, -12(%rbp)
.L17:
        movl    -12(%rbp), %eax
        cmpl    -24(%rbp), %eax
        jl      .L18
        movl    -24(%rbp), %eax
        movl    %eax, -16(%rbp)
        jmp     .L19
.L20:
        movl    -16(%rbp), %eax
        movslq  %eax, %rcx
        movq    -8(%rbp), %rax
        cqto
        idivq   %rcx
        movq    %rax, -8(%rbp)
        subl    $1, -16(%rbp)
.L19:
        cmpl    $1, -16(%rbp)
        jg      .L20
        movq    -8(%rbp), %rax
.L13:
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $56, %rsp
        movq    %rdi, -56(%rbp)
        movl    %esi, -60(%rbp)
        movl    %edx, -64(%rbp)
        movl    -60(%rbp), %eax
        addl    $1, %eax
        movl    %eax, var_7(%rip)
        movl    var_7(%rip), %eax
        cltq
        movl    $8, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, var_12(%rip)
        movl    $0, -20(%rbp)
        jmp     .L22
.L23:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    %eax, %edi
        call    func_3
        addl    $1, -20(%rbp)
.L22:
        movl    -20(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jl      .L23
        movq    $0, -32(%rbp)
        movl    $0, -36(%rbp)
        jmp     .L24
.L38:
        movq    var_12(%rip), %rax
        movl    -36(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        testq   %rax, %rax
        je      .L40
        movl    -36(%rbp), %eax
        movl    %eax, -40(%rbp)
        jmp     .L27
.L37:
        movq    var_12(%rip), %rax
        movl    -40(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        testq   %rax, %rax
        je      .L41
        movq    var_12(%rip), %rax
        movl    -36(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        movl    -64(%rbp), %edx
        movl    %edx, %ecx
        subl    %eax, %ecx
        movq    var_12(%rip), %rax
        movl    -40(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        subl    %eax, %ecx
        movl    %ecx, %eax
        movl    %eax, -44(%rbp)
        cmpl    $0, -44(%rbp)
        js      .L42
        movl    -44(%rbp), %eax
        movl    %eax, %edi
        call    func_4
        movl    %eax, -48(%rbp)
        cmpl    $-1, -48(%rbp)
        je      .L43
        movl    -48(%rbp), %eax
        cmpl    -40(%rbp), %eax
        jl      .L43
        movq    var_12(%rip), %rax
        movl    -36(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %edx
        movq    var_12(%rip), %rax
        movl    -40(%rbp), %ecx
        movslq  %ecx, %rcx
        salq    $3, %rcx
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L33
        movq    var_12(%rip), %rax
        movl    -40(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %edx
        movq    var_12(%rip), %rax
        movl    -48(%rbp), %ecx
        movslq  %ecx, %rcx
        salq    $3, %rcx
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L33
        movq    var_12(%rip), %rax
        movl    -36(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %edx
        movq    var_12(%rip), %rax
        movl    -48(%rbp), %ecx
        movslq  %ecx, %rcx
        salq    $3, %rcx
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L33
        movq    var_12(%rip), %rax
        movl    -36(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    4(%rax), %edx
        movq    var_12(%rip), %rax
        movl    -40(%rbp), %ecx
        movslq  %ecx, %rcx
        salq    $3, %rcx
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    4(%rax), %eax
        imull   %eax, %edx
        movq    var_12(%rip), %rax
        movl    -48(%rbp), %ecx
        movslq  %ecx, %rcx
        salq    $3, %rcx
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    4(%rax), %eax
        imull   %edx, %eax
        cltq
        addq    %rax, -32(%rbp)
        jmp     .L29
.L33:
        movq    var_12(%rip), %rax
        movl    -36(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %edx
        movq    var_12(%rip), %rax
        movl    -40(%rbp), %ecx
        movslq  %ecx, %rcx
        salq    $3, %rcx
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jne     .L34
        movq    var_12(%rip), %rax
        movl    -40(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %edx
        movq    var_12(%rip), %rax
        movl    -48(%rbp), %ecx
        movslq  %ecx, %rcx
        salq    $3, %rcx
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L34
        movq    var_12(%rip), %rax
        movl    -48(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    4(%rax), %eax
        movslq  %eax, %rbx
        movq    var_12(%rip), %rax
        movl    -36(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    4(%rax), %eax
        movl    $2, %esi
        movl    %eax, %edi
        call    func_1
        imulq   %rbx, %rax
        addq    %rax, -32(%rbp)
        jmp     .L29
.L34:
        movq    var_12(%rip), %rax
        movl    -36(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %edx
        movq    var_12(%rip), %rax
        movl    -40(%rbp), %ecx
        movslq  %ecx, %rcx
        salq    $3, %rcx
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L35
        movq    var_12(%rip), %rax
        movl    -40(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %edx
        movq    var_12(%rip), %rax
        movl    -48(%rbp), %ecx
        movslq  %ecx, %rcx
        salq    $3, %rcx
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jne     .L35
        movq    var_12(%rip), %rax
        movl    -36(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    4(%rax), %eax
        movslq  %eax, %rbx
        movq    var_12(%rip), %rax
        movl    -40(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    4(%rax), %eax
        movl    $2, %esi
        movl    %eax, %edi
        call    func_1
        imulq   %rbx, %rax
        addq    %rax, -32(%rbp)
        jmp     .L29
.L35:
        movq    var_12(%rip), %rax
        movl    -36(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %edx
        movq    var_12(%rip), %rax
        movl    -48(%rbp), %ecx
        movslq  %ecx, %rcx
        salq    $3, %rcx
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jne     .L36
        movq    var_12(%rip), %rax
        movl    -40(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %edx
        movq    var_12(%rip), %rax
        movl    -48(%rbp), %ecx
        movslq  %ecx, %rcx
        salq    $3, %rcx
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L36
        movq    var_12(%rip), %rax
        movl    -40(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    4(%rax), %eax
        movslq  %eax, %rbx
        movq    var_12(%rip), %rax
        movl    -36(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    4(%rax), %eax
        movl    $2, %esi
        movl    %eax, %edi
        call    func_1
        imulq   %rbx, %rax
        addq    %rax, -32(%rbp)
        jmp     .L29
.L36:
        movq    var_12(%rip), %rax
        movl    -36(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %edx
        movq    var_12(%rip), %rax
        movl    -48(%rbp), %ecx
        movslq  %ecx, %rcx
        salq    $3, %rcx
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jne     .L29
        movq    var_12(%rip), %rax
        movl    -40(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %edx
        movq    var_12(%rip), %rax
        movl    -48(%rbp), %ecx
        movslq  %ecx, %rcx
        salq    $3, %rcx
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jne     .L29
        movq    var_12(%rip), %rax
        movl    -36(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    4(%rax), %eax
        movl    $3, %esi
        movl    %eax, %edi
        call    func_1
        addq    %rax, -32(%rbp)
        jmp     .L29
.L41:
        nop
        jmp     .L29
.L42:
        nop
        jmp     .L29
.L43:
        nop
.L29:
        addl    $1, -40(%rbp)
.L27:
        movl    var_7(%rip), %eax
        cmpl    %eax, -40(%rbp)
        jl      .L37
        jmp     .L26
.L40:
        nop
.L26:
        addl    $1, -36(%rbp)
.L24:
        movl    var_7(%rip), %eax
        cmpl    %eax, -36(%rbp)
        jl      .L38
        movq    -32(%rbp), %rcx
        movabsq $-8543223828751151131, %rdx
        movq    %rcx, %rax
        imulq   %rdx
        leaq    (%rdx,%rcx), %rax
        sarq    $29, %rax
        movq    %rax, %rdx
        movq    %rcx, %rax
        sarq    $63, %rax
        subq    %rax, %rdx
        movq    %rdx, %rax
        imulq   $1000000007, %rax, %rax
        subq    %rax, %rcx
        movq    %rcx, %rax
        addq    $56, %rsp
        popq    %rbx
        popq    %rbp
        ret
