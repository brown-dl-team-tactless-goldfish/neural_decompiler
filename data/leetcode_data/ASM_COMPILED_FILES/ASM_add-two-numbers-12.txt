func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        cmpq    $0, -24(%rbp)
        jne     .L2
        movl    $0, %eax
        jmp     .L3
.L2:
        movl    $0, -4(%rbp)
        jmp     .L4
.L5:
        addl    $1, -4(%rbp)
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -24(%rbp)
.L4:
        cmpq    $0, -24(%rbp)
        jne     .L5
        movl    -4(%rbp), %eax
.L3:
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $80, %rsp
        movq    %rdi, -72(%rbp)
        movq    %rsi, -80(%rbp)
        cmpq    $0, -72(%rbp)
        je      .L7
        cmpq    $0, -80(%rbp)
        jne     .L8
.L7:
        movl    $0, %eax
        jmp     .L9
.L8:
        movq    -72(%rbp), %rax
        movq    %rax, %rdi
        call    func_1
        movl    %eax, -32(%rbp)
        movq    -80(%rbp), %rax
        movq    %rax, %rdi
        call    func_1
        movl    %eax, -36(%rbp)
        movl    -32(%rbp), %eax
        cmpl    -36(%rbp), %eax
        jle     .L10
        movq    -72(%rbp), %rax
        jmp     .L11
.L10:
        movq    -80(%rbp), %rax
.L11:
        movq    %rax, -48(%rbp)
        movl    -32(%rbp), %eax
        cmpl    -36(%rbp), %eax
        jg      .L12
        movq    -72(%rbp), %rax
        jmp     .L13
.L12:
        movq    -80(%rbp), %rax
.L13:
        movq    %rax, -8(%rbp)
        movq    -48(%rbp), %rax
        movq    %rax, -16(%rbp)
        movq    $0, -24(%rbp)
        movl    $0, -28(%rbp)
        jmp     .L14
.L17:
        cmpq    $0, -8(%rbp)
        je      .L15
        movq    -16(%rbp), %rax
        movl    (%rax), %edx
        movl    -28(%rbp), %eax
        addl    %eax, %edx
        movq    -8(%rbp), %rax
        movl    (%rax), %eax
        addl    %edx, %eax
        movl    %eax, -28(%rbp)
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
        jmp     .L16
.L15:
        movq    -16(%rbp), %rax
        movl    (%rax), %eax
        addl    %eax, -28(%rbp)
.L16:
        movl    -28(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movq    -16(%rbp), %rax
        movl    %edx, (%rax)
        movl    -28(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -28(%rbp)
        movq    -16(%rbp), %rax
        movq    %rax, -24(%rbp)
        movq    -16(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -16(%rbp)
.L14:
        cmpq    $0, -16(%rbp)
        jne     .L17
        cmpl    $0, -28(%rbp)
        je      .L18
        movl    $16, %edi
        call    malloc
        movq    %rax, -56(%rbp)
        movq    -56(%rbp), %rax
        movl    -28(%rbp), %edx
        movl    %edx, (%rax)
        movq    -56(%rbp), %rax
        movq    $0, 8(%rax)
        movq    -24(%rbp), %rax
        movq    -56(%rbp), %rdx
        movq    %rdx, 8(%rax)
.L18:
        movq    -48(%rbp), %rax
.L9:
        leave
        ret
