func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -4(%rbp)
        movl    %esi, -8(%rbp)
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jle     .L2
        movl    -4(%rbp), %eax
        jmp     .L3
.L2:
        movl    -8(%rbp), %eax
.L3:
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $56, %rsp
        movq    %rdi, -56(%rbp)
        movl    %esi, -60(%rbp)
        movq    %rsp, %rax
        movq    %rax, %rbx
        movl    -60(%rbp), %eax
        leal    2(%rax), %ecx
        movslq  %ecx, %rax
        subq    $1, %rax
        movq    %rax, -32(%rbp)
        movslq  %ecx, %rax
        movq    %rax, %r10
        movl    $0, %r11d
        movslq  %ecx, %rax
        movq    %rax, %r8
        movl    $0, %r9d
        movslq  %ecx, %rax
        leaq    0(,%rax,8), %rdx
        movl    $16, %eax
        subq    $1, %rax
        addq    %rdx, %rax
        movl    $16, %esi
        movl    $0, %edx
        divq    %rsi
        imulq   $16, %rax, %rax
        subq    %rax, %rsp
        movq    %rsp, %rax
        addq    $3, %rax
        shrq    $2, %rax
        salq    $2, %rax
        movq    %rax, -40(%rbp)
        movslq  %ecx, %rax
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        movl    $0, %esi
        movq    %rax, %rdi
        call    memset
        movl    -60(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -20(%rbp)
        jmp     .L5
.L6:
        movl    -20(%rbp), %eax
        leal    2(%rax), %edx
        movq    -40(%rbp), %rax
        movslq  %edx, %rdx
        movl    (%rax,%rdx,8), %edx
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        leal    (%rdx,%rax), %ecx
        movl    -20(%rbp), %eax
        leal    1(%rax), %edx
        movq    -40(%rbp), %rax
        movslq  %edx, %rdx
        movl    4(%rax,%rdx,8), %eax
        movl    %ecx, %esi
        movl    %eax, %edi
        call    func_2
        movl    %eax, %ecx
        movq    -40(%rbp), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        movl    %ecx, 4(%rax,%rdx,8)
        movl    -20(%rbp), %eax
        leal    1(%rax), %edx
        movq    -40(%rbp), %rax
        movslq  %edx, %rdx
        movl    4(%rax,%rdx,8), %edx
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        movl    %edx, %ecx
        subl    %eax, %ecx
        movl    -20(%rbp), %eax
        leal    1(%rax), %edx
        movq    -40(%rbp), %rax
        movslq  %edx, %rdx
        movl    (%rax,%rdx,8), %eax
        movl    %ecx, %esi
        movl    %eax, %edi
        call    func_2
        movl    %eax, %ecx
        movq    -40(%rbp), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        movl    %ecx, (%rax,%rdx,8)
        subl    $1, -20(%rbp)
.L5:
        cmpl    $0, -20(%rbp)
        jns     .L6
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        movq    %rbx, %rsp
        movq    -8(%rbp), %rbx
        leave
        ret
