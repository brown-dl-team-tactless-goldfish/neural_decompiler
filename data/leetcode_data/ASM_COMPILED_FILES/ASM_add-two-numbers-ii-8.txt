func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        addq    $-128, %rsp
        movq    %rdi, -120(%rbp)
        movq    %rsi, -128(%rbp)
        movl    $4, %esi
        movl    $100, %edi
        call    calloc
        movq    %rax, -56(%rbp)
        movl    $4, %esi
        movl    $100, %edi
        call    calloc
        movq    %rax, -64(%rbp)
        movl    $4, %esi
        movl    $100, %edi
        call    calloc
        movq    %rax, -72(%rbp)
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        movl    $0, -12(%rbp)
        movl    $0, -76(%rbp)
        movl    $0, -80(%rbp)
        movl    $0, -84(%rbp)
        movl    $0, -88(%rbp)
        movl    $0, -92(%rbp)
        movl    $0, -16(%rbp)
        movl    $0, -20(%rbp)
        movq    -120(%rbp), %rax
        movq    %rax, -32(%rbp)
        movq    -128(%rbp), %rax
        movq    %rax, -40(%rbp)
        movl    $16, %esi
        movl    $1, %edi
        call    calloc
        movq    %rax, -104(%rbp)
        movq    $0, -48(%rbp)
        jmp     .L2
.L3:
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -4(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rax, %rdx
        movq    -32(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        movq    -32(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -32(%rbp)
.L2:
        cmpq    $0, -32(%rbp)
        jne     .L3
        jmp     .L4
.L5:
        movl    -8(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -8(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -64(%rbp), %rax
        addq    %rax, %rdx
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        movq    -40(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -40(%rbp)
.L4:
        cmpq    $0, -40(%rbp)
        jne     .L5
        movl    -4(%rbp), %eax
        cmpl    %eax, -8(%rbp)
        cmovge  -8(%rbp), %eax
        movl    %eax, -76(%rbp)
        movl    $0, -20(%rbp)
        jmp     .L6
.L11:
        movl    -4(%rbp), %eax
        cmpl    -20(%rbp), %eax
        jle     .L7
        movl    -4(%rbp), %eax
        subl    -20(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        jmp     .L8
.L7:
        movl    $0, %eax
.L8:
        movl    %eax, -88(%rbp)
        movl    -8(%rbp), %eax
        cmpl    -20(%rbp), %eax
        jle     .L9
        movl    -8(%rbp), %eax
        subl    -20(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        jmp     .L10
.L9:
        movl    $0, %eax
.L10:
        movl    %eax, -92(%rbp)
        movl    -88(%rbp), %edx
        movl    -92(%rbp), %eax
        addl    %eax, %edx
        movl    -16(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, -80(%rbp)
        movl    -80(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %eax
        movl    %eax, -84(%rbp)
        movl    -80(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -16(%rbp)
        movl    -12(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -12(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rax, %rdx
        movl    -84(%rbp), %eax
        movl    %eax, (%rdx)
        addl    $1, -20(%rbp)
.L6:
        movl    -20(%rbp), %eax
        cmpl    -76(%rbp), %eax
        jl      .L11
        cmpl    $0, -16(%rbp)
        je      .L12
        movl    -12(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -12(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rax, %rdx
        movl    -16(%rbp), %eax
        movl    %eax, (%rdx)
.L12:
        movl    -12(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -20(%rbp)
        jmp     .L13
.L16:
        cmpq    $0, -48(%rbp)
        je      .L14
        movl    $16, %esi
        movl    $1, %edi
        call    calloc
        movq    %rax, %rdx
        movq    -48(%rbp), %rax
        movq    %rdx, 8(%rax)
        movq    -48(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -48(%rbp)
        jmp     .L15
.L14:
        movq    -104(%rbp), %rax
        movq    %rax, -48(%rbp)
.L15:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movq    -48(%rbp), %rax
        movl    %edx, (%rax)
        movq    -48(%rbp), %rax
        movq    $0, 8(%rax)
        subl    $1, -20(%rbp)
.L13:
        cmpl    $0, -20(%rbp)
        jns     .L16
        movq    -56(%rbp), %rax
        movq    %rax, %rdi
        call    free
        movq    -64(%rbp), %rax
        movq    %rax, %rdi
        call    free
        movq    -72(%rbp), %rax
        movq    %rax, %rdi
        call    free
        movq    -104(%rbp), %rax
        leave
        ret
