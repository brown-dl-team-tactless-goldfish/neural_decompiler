func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L2
.L3:
        addl    $1, -4(%rbp)
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -24(%rbp)
.L2:
        cmpq    $0, -24(%rbp)
        jne     .L3
        movl    -4(%rbp), %eax
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        jmp     .L6
.L7:
        movl    $16, %edi
        call    malloc
        movq    %rax, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    $0, (%rax)
        movq    -8(%rbp), %rax
        movq    -24(%rbp), %rdx
        movq    %rdx, 8(%rax)
        movq    -8(%rbp), %rax
        movq    %rax, -24(%rbp)
        subl    $1, -28(%rbp)
.L6:
        cmpl    $0, -28(%rbp)
        jg      .L7
        movq    -24(%rbp), %rax
        leave
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -40(%rbp)
        movq    %rsi, -48(%rbp)
        cmpq    $0, -40(%rbp)
        jne     .L10
        cmpq    $0, -48(%rbp)
        jne     .L10
        movl    $0, %eax
        jmp     .L11
.L10:
        movl    $0, -4(%rbp)
        movq    -48(%rbp), %rax
        movq    8(%rax), %rdx
        movq    -40(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    func_1
        movq    %rax, -16(%rbp)
        cmpq    $0, -16(%rbp)
        je      .L12
        movq    -16(%rbp), %rax
        movl    (%rax), %eax
        cmpl    $9, %eax
        jle     .L12
        movq    -16(%rbp), %rax
        movl    (%rax), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movq    -16(%rbp), %rax
        movl    %edx, (%rax)
        movl    $1, -4(%rbp)
.L12:
        movl    $16, %edi
        call    malloc
        movq    %rax, -24(%rbp)
        movq    -40(%rbp), %rax
        movl    (%rax), %edx
        movq    -48(%rbp), %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -4(%rbp), %eax
        addl    %eax, %edx
        movq    -24(%rbp), %rax
        movl    %edx, (%rax)
        movq    -24(%rbp), %rax
        movq    -16(%rbp), %rdx
        movq    %rdx, 8(%rax)
        movq    -24(%rbp), %rax
.L11:
        leave
        ret
func_1TwoNumbers:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $56, %rsp
        movq    %rdi, -56(%rbp)
        movq    %rsi, -64(%rbp)
        movq    -56(%rbp), %rax
        movq    %rax, %rdi
        call    func_3
        movl    %eax, %ebx
        movq    -64(%rbp), %rax
        movq    %rax, %rdi
        call    func_3
        subl    %eax, %ebx
        movl    %ebx, %eax
        movl    %eax, -28(%rbp)
        cmpl    $0, -28(%rbp)
        jns     .L14
        movl    -28(%rbp), %eax
        negl    %eax
        movl    %eax, %edx
        movq    -56(%rbp), %rax
        movl    %edx, %esi
        movq    %rax, %rdi
        call    func_2
        movq    %rax, -56(%rbp)
        jmp     .L15
.L14:
        cmpl    $0, -28(%rbp)
        jle     .L15
        movl    -28(%rbp), %edx
        movq    -64(%rbp), %rax
        movl    %edx, %esi
        movq    %rax, %rdi
        call    func_2
        movq    %rax, -64(%rbp)
.L15:
        movq    -64(%rbp), %rdx
        movq    -56(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    func_1
        movq    %rax, -24(%rbp)
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        cmpl    $9, %eax
        jle     .L16
        movq    -24(%rbp), %rax
        movl    (%rax), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movq    -24(%rbp), %rax
        movl    %edx, (%rax)
        movl    $16, %edi
        call    malloc
        movq    %rax, -40(%rbp)
        movq    -40(%rbp), %rax
        movl    $1, (%rax)
        movq    -40(%rbp), %rax
        movq    -24(%rbp), %rdx
        movq    %rdx, 8(%rax)
        movq    -40(%rbp), %rax
        movq    %rax, -24(%rbp)
.L16:
        movq    -24(%rbp), %rax
        addq    $56, %rsp
        popq    %rbx
        popq    %rbp
        ret
