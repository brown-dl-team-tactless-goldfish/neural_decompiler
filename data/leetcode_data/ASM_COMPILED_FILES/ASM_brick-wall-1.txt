func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movl    %edi, -20(%rbp)
        movl    -20(%rbp), %ecx
        movl    $274877907, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $6, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        imull   $1000, %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %eax
        cltd
        xorl    %edx, %eax
        movl    %eax, -12(%rbp)
        subl    %edx, -12(%rbp)
        movl    -12(%rbp), %eax
        cltq
        salq    $4, %rax
        addq    $var_0, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L2
        movl    -12(%rbp), %eax
        cltq
        salq    $4, %rax
        leaq    var_0(%rax), %rdx
        movl    -20(%rbp), %eax
        movl    %eax, (%rdx)
        movl    -12(%rbp), %eax
        cltq
        salq    $4, %rax
        addq    $var_0+4, %rax
        movl    (%rax), %eax
        leal    1(%rax), %edx
        movl    -12(%rbp), %eax
        cltq
        salq    $4, %rax
        addq    $var_0+4, %rax
        movl    %edx, (%rax)
        jmp     .L9
.L2:
        movl    -12(%rbp), %eax
        cltq
        salq    $4, %rax
        addq    $var_0, %rax
        movl    (%rax), %eax
        cmpl    %eax, -20(%rbp)
        jne     .L4
        movl    -12(%rbp), %eax
        cltq
        salq    $4, %rax
        addq    $var_0+4, %rax
        movl    (%rax), %eax
        leal    1(%rax), %edx
        movl    -12(%rbp), %eax
        cltq
        salq    $4, %rax
        addq    $var_0+4, %rax
        movl    %edx, (%rax)
        jmp     .L9
.L4:
        movl    -12(%rbp), %eax
        cltq
        salq    $4, %rax
        addq    $var_0, %rax
        movq    %rax, -8(%rbp)
        jmp     .L5
.L7:
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
.L5:
        movq    -8(%rbp), %rax
        movl    (%rax), %eax
        cmpl    %eax, -20(%rbp)
        je      .L6
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        testq   %rax, %rax
        jne     .L7
.L6:
        movq    -8(%rbp), %rax
        movl    (%rax), %eax
        cmpl    %eax, -20(%rbp)
        jne     .L8
        movq    -8(%rbp), %rax
        movl    4(%rax), %eax
        leal    1(%rax), %edx
        movq    -8(%rbp), %rax
        movl    %edx, 4(%rax)
        jmp     .L9
.L8:
        movl    $16, %edi
        call    malloc
        movq    %rax, %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, 8(%rax)
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    -20(%rbp), %edx
        movl    %edx, (%rax)
        movq    -8(%rbp), %rax
        movl    $1, 4(%rax)
        movq    -8(%rbp), %rax
        movq    $0, 8(%rax)
.L9:
        nop
        leave
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $64, %rsp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movq    %rdx, -56(%rbp)
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        movl    $0, -20(%rbp)
        jmp     .L11
.L12:
        movl    -20(%rbp), %eax
        cltq
        salq    $4, %rax
        addq    $var_0, %rax
        movl    $0, (%rax)
        movl    -20(%rbp), %eax
        cltq
        salq    $4, %rax
        addq    $var_0+4, %rax
        movl    $0, (%rax)
        movl    -20(%rbp), %eax
        cltq
        salq    $4, %rax
        addq    $var_0+8, %rax
        movq    $0, (%rax)
        addl    $1, -20(%rbp)
.L11:
        cmpl    $999, -20(%rbp)
        jle     .L12
        movl    $0, -24(%rbp)
        jmp     .L13
.L16:
        movl    $0, -8(%rbp)
        movl    $0, -28(%rbp)
        jmp     .L14
.L15:
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -28(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        addl    %eax, -8(%rbp)
        movl    -8(%rbp), %eax
        movl    %eax, %edi
        call    func_1
        addl    $1, -28(%rbp)
.L14:
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        subl    $1, %eax
        cmpl    %eax, -28(%rbp)
        jl      .L15
        addl    $1, -24(%rbp)
.L13:
        movl    -24(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L16
        movl    $0, -32(%rbp)
        jmp     .L17
.L22:
        movl    -32(%rbp), %eax
        cltq
        salq    $4, %rax
        addq    $var_0+4, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        je      .L18
        movl    -32(%rbp), %eax
        cltq
        salq    $4, %rax
        addq    $var_0+4, %rax
        movl    (%rax), %eax
        cmpl    %eax, -4(%rbp)
        jge     .L19
        movl    -32(%rbp), %eax
        cltq
        salq    $4, %rax
        addq    $var_0+4, %rax
        movl    (%rax), %eax
        movl    %eax, -4(%rbp)
.L19:
        movl    -32(%rbp), %eax
        cltq
        salq    $4, %rax
        addq    $var_0+8, %rax
        movq    (%rax), %rax
        testq   %rax, %rax
        je      .L18
        movl    -32(%rbp), %eax
        cltq
        salq    $4, %rax
        addq    $var_0, %rax
        movq    %rax, -16(%rbp)
        jmp     .L20
.L21:
        movq    -16(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -16(%rbp)
        movq    -16(%rbp), %rax
        movl    4(%rax), %eax
        cmpl    %eax, -4(%rbp)
        jge     .L20
        movq    -16(%rbp), %rax
        movl    4(%rax), %eax
        movl    %eax, -4(%rbp)
.L20:
        movq    -16(%rbp), %rax
        movq    8(%rax), %rax
        testq   %rax, %rax
        jne     .L21
.L18:
        addl    $1, -32(%rbp)
.L17:
        cmpl    $999, -32(%rbp)
        jle     .L22
        movl    -44(%rbp), %eax
        subl    -4(%rbp), %eax
        leave
        ret
