func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movl    %edi, -20(%rbp)
        movq    %rsi, -32(%rbp)
        movq    %rdx, -40(%rbp)
        movl    %ecx, -24(%rbp)
        movl    %r8d, -44(%rbp)
        movl    -44(%rbp), %eax
        cltd
        idivl   -24(%rbp)
        movl    %edx, %eax
        testl   %eax, %eax
        je      .L2
        movl    -24(%rbp), %eax
        cltd
        idivl   -44(%rbp)
        movl    %edx, %eax
        testl   %eax, %eax
        jne     .L7
.L2:
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    $1, (%rax)
        movl    $1, -4(%rbp)
        jmp     .L4
.L6:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $1, %eax
        je      .L5
        movl    -44(%rbp), %eax
        leal    1(%rax), %edi
        movl    -4(%rbp), %ecx
        movq    -40(%rbp), %rdx
        movq    -32(%rbp), %rsi
        movl    -20(%rbp), %eax
        movl    %edi, %r8d
        movl    %eax, %edi
        call    func_1
.L5:
        addl    $1, -4(%rbp)
.L4:
        movl    -4(%rbp), %eax
        cmpl    -20(%rbp), %eax
        jle     .L6
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    $0, (%rax)
        movl    -44(%rbp), %eax
        cmpl    -20(%rbp), %eax
        jne     .L7
        movq    -32(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %edx
        movq    -32(%rbp), %rax
        movl    %edx, (%rax)
.L7:
        nop
        leave
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $112, %rsp
        movl    %edi, -100(%rbp)
        leaq    -80(%rbp), %rax
        movl    $64, %edx
        movl    $0, %esi
        movq    %rax, %rdi
        call    memset
        movl    $0, -84(%rbp)
        movl    $1, -4(%rbp)
        jmp     .L9
.L10:
        movl    -4(%rbp), %ecx
        leaq    -80(%rbp), %rdx
        leaq    -84(%rbp), %rsi
        movl    -100(%rbp), %eax
        movl    $1, %r8d
        movl    %eax, %edi
        call    func_1
        addl    $1, -4(%rbp)
.L9:
        movl    -4(%rbp), %eax
        cmpl    -100(%rbp), %eax
        jle     .L10
        movl    -84(%rbp), %eax
        leave
        ret
