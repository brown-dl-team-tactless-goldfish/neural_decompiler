var_0:
        .zero   4
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -4(%rbp)
        movl    %esi, -8(%rbp)
        movl    -8(%rbp), %eax
        cmpl    %eax, -4(%rbp)
        cmovge  -4(%rbp), %eax
        popq    %rbp
        ret
func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $40, %rsp
        movl    %edi, -36(%rbp)
        movl    %esi, -40(%rbp)
        movl    %edx, -44(%rbp)
        cmpl    $0, -40(%rbp)
        je      .L4
        movl    var_15(%rip), %eax
        cmpl    %eax, -36(%rbp)
        jne     .L5
.L4:
        movl    $0, %eax
        jmp     .L6
.L5:
        movl    var_0(%rip), %eax
        imull   -36(%rbp), %eax
        movl    %eax, %edx
        movl    -40(%rbp), %eax
        addl    %edx, %eax
        leal    (%rax,%rax), %edx
        movl    -44(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, -20(%rbp)
        movq    var_11(%rip), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L7
        cmpl    $0, -44(%rbp)
        je      .L8
        movl    -40(%rbp), %eax
        leal    -1(%rax), %ecx
        movl    -36(%rbp), %eax
        addl    $1, %eax
        movl    $0, %edx
        movl    %ecx, %esi
        movl    %eax, %edi
        call    func_3
        movl    %eax, %ecx
        movq    var_13(%rip), %rax
        movl    -36(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        addl    %ecx, %eax
        jmp     .L9
.L8:
        movl    $0, %eax
.L9:
        movl    %eax, -24(%rbp)
        cmpl    $0, -44(%rbp)
        jne     .L10
        movl    -36(%rbp), %eax
        leal    1(%rax), %ecx
        movl    -40(%rbp), %eax
        movl    $1, %edx
        movl    %eax, %esi
        movl    %ecx, %edi
        call    func_3
        movl    %eax, %ecx
        movq    var_13(%rip), %rax
        movl    -36(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        subl    %eax, %ecx
        movl    %ecx, %eax
        jmp     .L11
.L10:
        movl    $0, %eax
.L11:
        movl    %eax, -28(%rbp)
        movl    -36(%rbp), %eax
        leal    1(%rax), %ecx
        movl    -44(%rbp), %edx
        movl    -40(%rbp), %eax
        movl    %eax, %esi
        movl    %ecx, %edi
        call    func_3
        movl    %eax, -32(%rbp)
        movl    -24(%rbp), %edx
        movl    -28(%rbp), %eax
        movl    %edx, %esi
        movl    %eax, %edi
        call    func_2
        movl    %eax, %ecx
        movq    var_11(%rip), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        leaq    (%rax,%rdx), %rbx
        movl    -32(%rbp), %eax
        movl    %ecx, %esi
        movl    %eax, %edi
        call    func_2
        movl    %eax, (%rbx)
.L7:
        movq    var_11(%rip), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
.L6:
        addq    $40, %rsp
        popq    %rbx
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movl    %edi, -20(%rbp)
        movq    %rsi, -32(%rbp)
        movl    %edx, -24(%rbp)
        movq    -32(%rbp), %rax
        movq    %rax, var_13(%rip)
        movl    -24(%rbp), %eax
        movl    %eax, var_15(%rip)
        movl    -20(%rbp), %eax
        addl    $1, %eax
        movl    %eax, var_0(%rip)
        movl    var_0(%rip), %eax
        imull   -24(%rbp), %eax
        addl    %eax, %eax
        movl    %eax, var_12(%rip)
        movl    var_12(%rip), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, var_11(%rip)
        movl    $0, -4(%rbp)
        jmp     .L13
.L14:
        movq    var_11(%rip), %rax
        movl    -4(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    $0, (%rax)
        addl    $1, -4(%rbp)
.L13:
        movl    var_12(%rip), %eax
        cmpl    %eax, -4(%rbp)
        jl      .L14
        movl    -20(%rbp), %eax
        movl    $0, %edx
        movl    %eax, %esi
        movl    $0, %edi
        call    func_3
        movl    %eax, -8(%rbp)
        movq    var_11(%rip), %rax
        movq    %rax, %rdi
        call    free
        movl    -8(%rbp), %eax
        leave
        ret
