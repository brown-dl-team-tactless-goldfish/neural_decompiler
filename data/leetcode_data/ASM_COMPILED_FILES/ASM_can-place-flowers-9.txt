func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        movq    %rdi, -32(%rbp)
        movl    %esi, -36(%rbp)
        movl    %edx, -40(%rbp)
        cmpl    $0, -40(%rbp)
        jne     .L2
        movl    $1, %eax
        jmp     .L3
.L2:
        movl    $0, -12(%rbp)
        movl    $0, %ebx
        jmp     .L4
.L8:
        movslq  %ebx, %rax
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L5
        testl   %ebx, %ebx
        je      .L6
        movslq  %ebx, %rax
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L5
.L6:
        movl    -36(%rbp), %eax
        subl    $1, %eax
        cmpl    %eax, %ebx
        je      .L7
        movslq  %ebx, %rax
        addq    $1, %rax
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L5
.L7:
        addl    $1, -12(%rbp)
        movslq  %ebx, %rax
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    $1, (%rax)
        movl    -12(%rbp), %eax
        cmpl    -40(%rbp), %eax
        jl      .L5
        movl    $1, %eax
        jmp     .L3
.L5:
        addl    $1, %ebx
.L4:
        cmpl    -36(%rbp), %ebx
        jl      .L8
        movl    -12(%rbp), %eax
        cmpl    -40(%rbp), %eax
        setge   %al
.L3:
        popq    %rbx
        popq    %rbp
        ret
