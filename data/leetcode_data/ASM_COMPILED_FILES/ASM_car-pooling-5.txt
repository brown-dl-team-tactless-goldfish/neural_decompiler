func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $80, %rsp
        movq    %rdi, -56(%rbp)
        movl    %esi, -60(%rbp)
        movq    %rdx, -72(%rbp)
        movl    %ecx, -64(%rbp)
        movl    $4004, %edi
        call    malloc
        movq    %rax, -24(%rbp)
        movq    -24(%rbp), %rax
        movl    $4004, %edx
        movl    $0, %esi
        movq    %rax, %rdi
        call    memset
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        jmp     .L2
.L4:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        movl    %eax, -28(%rbp)
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    4(%rax), %eax
        movl    %eax, -32(%rbp)
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    8(%rax), %eax
        movl    %eax, -36(%rbp)
        movl    -36(%rbp), %eax
        cmpl    -4(%rbp), %eax
        jle     .L3
        movl    -36(%rbp), %eax
        movl    %eax, -4(%rbp)
.L3:
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %ecx
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    -28(%rbp), %edx
        addl    %ecx, %edx
        movl    %edx, (%rax)
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    -36(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -24(%rbp), %rdx
        addq    %rcx, %rdx
        subl    -28(%rbp), %eax
        movl    %eax, (%rdx)
        addl    $1, -8(%rbp)
.L2:
        movl    -8(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jl      .L4
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        cmpl    %eax, -64(%rbp)
        jge     .L5
        movl    $0, %eax
        jmp     .L6
.L5:
        movl    $1, -12(%rbp)
        jmp     .L7
.L9:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %ecx
        movl    -12(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rsi
        movq    -24(%rbp), %rax
        addq    %rsi, %rax
        addl    %ecx, %edx
        movl    %edx, (%rax)
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -64(%rbp)
        jge     .L8
        movl    $0, %eax
        jmp     .L6
.L8:
        addl    $1, -12(%rbp)
.L7:
        movl    -12(%rbp), %eax
        cmpl    -4(%rbp), %eax
        jl      .L9
        movl    $1, %eax
.L6:
        leave
        ret
