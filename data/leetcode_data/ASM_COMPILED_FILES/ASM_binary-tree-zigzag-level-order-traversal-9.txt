func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $16088, %rsp
        movq    %rdi, -16072(%rbp)
        movq    %rsi, -16080(%rbp)
        movq    %rdx, -16088(%rbp)
        movq    $0, -48(%rbp)
        movl    $0, -20(%rbp)
        movq    $0, -56(%rbp)
        movl    $0, -24(%rbp)
        movl    $0, -28(%rbp)
        movl    $0, -32(%rbp)
        movl    $0, -36(%rbp)
        movq    $0, -64(%rbp)
        cmpq    $0, -16072(%rbp)
        jne     .L2
        movq    -16080(%rbp), %rax
        movl    $0, (%rax)
        movl    $0, %eax
        jmp     .L12
.L2:
        movl    $16000, %edi
        call    malloc
        movq    %rax, -48(%rbp)
        movl    $8000, %edi
        call    malloc
        movq    %rax, -64(%rbp)
        movl    -24(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -24(%rbp)
        cltq
        movq    -16072(%rbp), %rdx
        movq    %rdx, -16064(%rbp,%rax,8)
        movl    -24(%rbp), %eax
        subl    -32(%rbp), %eax
        movl    %eax, -28(%rbp)
        jmp     .L4
.L11:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -64(%rbp), %rax
        addq    %rax, %rdx
        movl    -28(%rbp), %eax
        movl    %eax, (%rdx)
        movl    -28(%rbp), %eax
        cltq
        salq    $2, %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -48(%rbp), %rdx
        leaq    (%rcx,%rdx), %rbx
        movq    %rax, %rdi
        call    malloc
        movq    %rax, (%rbx)
        movl    -32(%rbp), %eax
        movl    %eax, -36(%rbp)
        jmp     .L5
.L10:
        movl    -36(%rbp), %eax
        cltq
        movq    -16064(%rbp,%rax,8), %rax
        movq    %rax, -56(%rbp)
        movl    -20(%rbp), %eax
        andl    $1, %eax
        testl   %eax, %eax
        je      .L6
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rdx
        movl    -28(%rbp), %eax
        leal    -1(%rax), %ecx
        movl    -36(%rbp), %eax
        subl    -32(%rbp), %eax
        subl    %eax, %ecx
        movl    %ecx, %eax
        cltq
        salq    $2, %rax
        addq    %rax, %rdx
        movq    -56(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        jmp     .L7
.L6:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rdx
        movl    -36(%rbp), %eax
        subl    -32(%rbp), %eax
        cltq
        salq    $2, %rax
        addq    %rax, %rdx
        movq    -56(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, (%rdx)
.L7:
        movq    -56(%rbp), %rax
        movq    8(%rax), %rax
        testq   %rax, %rax
        je      .L8
        movl    -24(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -24(%rbp)
        movq    -56(%rbp), %rdx
        movq    8(%rdx), %rdx
        cltq
        movq    %rdx, -16064(%rbp,%rax,8)
.L8:
        movq    -56(%rbp), %rax
        movq    16(%rax), %rax
        testq   %rax, %rax
        je      .L9
        movl    -24(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -24(%rbp)
        movq    -56(%rbp), %rdx
        movq    16(%rdx), %rdx
        cltq
        movq    %rdx, -16064(%rbp,%rax,8)
.L9:
        addl    $1, -36(%rbp)
.L5:
        movl    -32(%rbp), %edx
        movl    -28(%rbp), %eax
        addl    %edx, %eax
        cmpl    %eax, -36(%rbp)
        jl      .L10
        movl    -36(%rbp), %eax
        movl    %eax, -32(%rbp)
        movl    -24(%rbp), %eax
        subl    -32(%rbp), %eax
        movl    %eax, -28(%rbp)
        addl    $1, -20(%rbp)
.L4:
        cmpl    $0, -28(%rbp)
        jg      .L11
        movq    -16080(%rbp), %rax
        movl    -20(%rbp), %edx
        movl    %edx, (%rax)
        movq    -16088(%rbp), %rax
        movq    -64(%rbp), %rdx
        movq    %rdx, (%rax)
        movq    -48(%rbp), %rax
.L12:
        addq    $16088, %rsp
        popq    %rbx
        popq    %rbp
        ret
