func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $160, %rsp
        movq    %rdi, -136(%rbp)
        movq    %rsi, -144(%rbp)
        movq    -136(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -20(%rbp)
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        movq    $0, -80(%rbp)
        movq    $0, -72(%rbp)
        movq    $0, -64(%rbp)
        movq    $0, -56(%rbp)
        movq    $0, -48(%rbp)
        movq    $0, -128(%rbp)
        movq    $0, -120(%rbp)
        movq    $0, -112(%rbp)
        movq    $0, -104(%rbp)
        movq    $0, -96(%rbp)
        movl    $0, -12(%rbp)
        jmp     .L2
.L5:
        movl    -12(%rbp), %eax
        movslq  %eax, %rdx
        movq    -136(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %edx
        movl    -12(%rbp), %eax
        movslq  %eax, %rcx
        movq    -144(%rbp), %rax
        addq    %rcx, %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        jne     .L3
        addl    $1, -4(%rbp)
        jmp     .L4
.L3:
        movl    -12(%rbp), %eax
        movslq  %eax, %rdx
        movq    -136(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        subl    $48, %eax
        movslq  %eax, %rdx
        movl    -80(%rbp,%rdx,4), %edx
        addl    $1, %edx
        cltq
        movl    %edx, -80(%rbp,%rax,4)
        movl    -12(%rbp), %eax
        movslq  %eax, %rdx
        movq    -144(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        subl    $48, %eax
        movslq  %eax, %rdx
        movl    -128(%rbp,%rdx,4), %edx
        addl    $1, %edx
        cltq
        movl    %edx, -128(%rbp,%rax,4)
.L4:
        addl    $1, -12(%rbp)
.L2:
        movl    -12(%rbp), %eax
        cmpl    -20(%rbp), %eax
        jl      .L5
        movl    $0, -16(%rbp)
        jmp     .L6
.L7:
        cvtsi2sd        -8(%rbp), %xmm2
        movsd   %xmm2, -152(%rbp)
        movl    -16(%rbp), %eax
        cltq
        movl    -128(%rbp,%rax,4), %eax
        cvtsi2sd        %eax, %xmm1
        movl    -16(%rbp), %eax
        cltq
        movl    -80(%rbp,%rax,4), %eax
        cvtsi2sd        %eax, %xmm0
        call    fmin
        addsd   -152(%rbp), %xmm0
        cvttsd2si       %xmm0, %eax
        movl    %eax, -8(%rbp)
        addl    $1, -16(%rbp)
.L6:
        cmpl    $9, -16(%rbp)
        jle     .L7
        movl    $10, %edi
        call    malloc
        movq    %rax, -32(%rbp)
        movq    -32(%rbp), %rax
        leave
        ret
