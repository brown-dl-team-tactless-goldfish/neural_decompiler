func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $56, %rsp
        movl    %edi, -36(%rbp)
        movl    %esi, -40(%rbp)
        movq    %rdx, -48(%rbp)
        movl    %ecx, -52(%rbp)
        movl    %r8d, -56(%rbp)
        movq    %r9, -64(%rbp)
        movl    -36(%rbp), %eax
        cmpl    -40(%rbp), %eax
        je      .L2
        movl    -52(%rbp), %eax
        cmpl    -56(%rbp), %eax
        jl      .L3
.L2:
        movl    -52(%rbp), %eax
        cmpl    -56(%rbp), %eax
        jne     .L9
        movl    -40(%rbp), %eax
        movslq  %eax, %rdx
        movq    16(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %esi
        movq    16(%rbp), %rcx
        movl    %esi, (%rcx)
        cltq
        leaq    0(,%rax,8), %rcx
        movq    -64(%rbp), %rax
        leaq    (%rcx,%rax), %rbx
        movl    $4, %esi
        movq    %rdx, %rdi
        call    calloc
        movq    %rax, (%rbx)
        movl    $0, -20(%rbp)
        jmp     .L5
.L6:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -48(%rbp), %rax
        leaq    (%rdx,%rax), %rcx
        movq    16(%rbp), %rax
        movl    (%rax), %eax
        cltq
        salq    $3, %rax
        leaq    -8(%rax), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rax, %rdx
        movl    (%rcx), %eax
        movl    %eax, (%rdx)
        addl    $1, -20(%rbp)
.L5:
        movl    -20(%rbp), %eax
        cmpl    -40(%rbp), %eax
        jl      .L6
        jmp     .L9
.L3:
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $1, %eax
        jne     .L8
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movl    $1, (%rax)
        movl    -40(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movl    $1, (%rax)
        movl    -52(%rbp), %eax
        leal    2(%rax), %edx
        movl    -40(%rbp), %eax
        leal    2(%rax), %esi
        movl    -36(%rbp), %eax
        leal    1(%rax), %edi
        movq    -64(%rbp), %r8
        movl    -56(%rbp), %ecx
        movq    -48(%rbp), %rax
        subq    $8, %rsp
        pushq   16(%rbp)
        movq    %r8, %r9
        movl    %ecx, %r8d
        movl    %edx, %ecx
        movq    %rax, %rdx
        call    func_1
        addq    $16, %rsp
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movl    $0, (%rax)
        movl    -40(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movl    $0, (%rax)
        movl    -40(%rbp), %eax
        leal    2(%rax), %esi
        movl    -36(%rbp), %eax
        leal    1(%rax), %edi
        movq    -64(%rbp), %r8
        movl    -56(%rbp), %ecx
        movl    -52(%rbp), %edx
        movq    -48(%rbp), %rax
        subq    $8, %rsp
        pushq   16(%rbp)
        movq    %r8, %r9
        movl    %ecx, %r8d
        movl    %edx, %ecx
        movq    %rax, %rdx
        call    func_1
        addq    $16, %rsp
        jmp     .L1
.L8:
        movl    -36(%rbp), %eax
        leal    1(%rax), %edi
        movq    -64(%rbp), %r8
        movl    -56(%rbp), %esi
        movl    -52(%rbp), %ecx
        movq    -48(%rbp), %rdx
        movl    -40(%rbp), %eax
        subq    $8, %rsp
        pushq   16(%rbp)
        movq    %r8, %r9
        movl    %esi, %r8d
        movl    %eax, %esi
        call    func_1
        addq    $16, %rsp
        jmp     .L1
.L9:
        nop
.L1:
        movq    -8(%rbp), %rbx
        leave
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $20056, %rsp
        movq    %rdi, -20056(%rbp)
        movl    %esi, -20060(%rbp)
        movl    $40000, %edi
        call    malloc
        movq    %rax, -40(%rbp)
        leaq    -20048(%rbp), %rax
        movl    $20000, %edx
        movl    $0, %esi
        movq    %rax, %rdi
        call    memset
        movl    $1, -20(%rbp)
        movl    $0, -24(%rbp)
        movl    $0, -28(%rbp)
        jmp     .L11
.L16:
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -20056(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $1, %eax
        jne     .L12
        movl    -28(%rbp), %eax
        cltq
        movl    -20048(%rbp,%rax,4), %eax
        testl   %eax, %eax
        jne     .L13
        addl    $1, -24(%rbp)
        movl    -28(%rbp), %eax
        cltq
        movl    $1, -20048(%rbp,%rax,4)
.L13:
        movl    -20(%rbp), %eax
        movl    %eax, -44(%rbp)
        movl    -20(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -48(%rbp)
        addl    $2, -20(%rbp)
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        testq   %rax, %rax
        jne     .L14
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        leaq    (%rdx,%rax), %rbx
        movl    $24, %edi
        call    malloc
        movq    %rax, (%rbx)
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    $0, (%rax)
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    $0, 8(%rax)
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    $0, 16(%rax)
.L14:
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -20056(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $1, %eax
        jne     .L15
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rbx
        movl    $24, %edi
        call    malloc
        movq    %rax, 8(%rbx)
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    8(%rax), %rax
        movl    $0, (%rax)
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    8(%rax), %rax
        movq    $0, 8(%rax)
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    8(%rax), %rax
        movq    $0, 16(%rax)
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -44(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -40(%rbp), %rdx
        addq    %rcx, %rdx
        movq    8(%rax), %rax
        movq    %rax, (%rdx)
        movl    -44(%rbp), %eax
        cltq
        movl    -20048(%rbp,%rax,4), %eax
        testl   %eax, %eax
        jne     .L15
        addl    $1, -24(%rbp)
        movl    -44(%rbp), %eax
        cltq
        movl    $1, -20048(%rbp,%rax,4)
.L15:
        movl    -48(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -20056(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $1, %eax
        jne     .L12
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rbx
        movl    $24, %edi
        call    malloc
        movq    %rax, 16(%rbx)
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    16(%rax), %rax
        movl    $0, (%rax)
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    16(%rax), %rax
        movq    $0, 8(%rax)
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    16(%rax), %rax
        movq    $0, 16(%rax)
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -48(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -40(%rbp), %rdx
        addq    %rcx, %rdx
        movq    16(%rax), %rax
        movq    %rax, (%rdx)
        movl    -48(%rbp), %eax
        cltq
        movl    -20048(%rbp,%rax,4), %eax
        testl   %eax, %eax
        jne     .L12
        addl    $1, -24(%rbp)
        movl    -48(%rbp), %eax
        cltq
        movl    $1, -20048(%rbp,%rax,4)
.L12:
        addl    $1, -28(%rbp)
.L11:
        movl    -24(%rbp), %eax
        cmpl    -20060(%rbp), %eax
        jl      .L16
        movq    -40(%rbp), %rax
        movq    (%rax), %rax
        addq    $20056, %rsp
        popq    %rbx
        popq    %rbp
        ret
func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $20072, %rsp
        movl    %edi, -20068(%rbp)
        movq    %rsi, -20080(%rbp)
        movl    $40000, %edi
        call    malloc
        movq    %rax, -32(%rbp)
        movl    $4, %edi
        call    malloc
        movq    %rax, -40(%rbp)
        movq    -40(%rbp), %rax
        movl    $0, (%rax)
        leaq    -20064(%rbp), %rax
        movl    $20000, %edx
        movl    $0, %esi
        movq    %rax, %rdi
        call    memset
        movl    $1, -20064(%rbp)
        movl    $0, -44(%rbp)
        movl    $1, -48(%rbp)
        movl    $1, -52(%rbp)
        movq    -32(%rbp), %r8
        movl    -20068(%rbp), %edi
        movl    -52(%rbp), %ecx
        leaq    -20064(%rbp), %rdx
        movl    -48(%rbp), %esi
        movl    -44(%rbp), %eax
        subq    $8, %rsp
        pushq   -40(%rbp)
        movq    %r8, %r9
        movl    %edi, %r8d
        movl    %eax, %edi
        call    func_1
        addq    $16, %rsp
        movq    -40(%rbp), %rax
        movl    (%rax), %edx
        movq    -20080(%rbp), %rax
        movl    %edx, (%rax)
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        cltq
        salq    $3, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -64(%rbp)
        movl    $0, -20(%rbp)
        jmp     .L19
.L20:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -64(%rbp), %rdx
        leaq    (%rcx,%rdx), %rbx
        movl    -20068(%rbp), %edx
        movl    %edx, %esi
        movq    %rax, %rdi
        call    func_2
        movq    %rax, (%rbx)
        addl    $1, -20(%rbp)
.L19:
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        cmpl    %eax, -20(%rbp)
        jl      .L20
        movq    -64(%rbp), %rax
        movq    -8(%rbp), %rbx
        leave
        ret
