func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movl    %edi, -20(%rbp)
        movq    %rsi, -32(%rbp)
        movl    %edx, -24(%rbp)
        movq    %rcx, -40(%rbp)
        movq    %r8, -48(%rbp)
        cmpl    $0, -20(%rbp)
        jne     .L2
        movq    -32(%rbp), %rax
        movl    (%rax), %eax
        andl    $63, %eax
        movb    %al, -5(%rbp)
        cmpb    $59, -5(%rbp)
        jg      .L9
        movq    -32(%rbp), %rax
        movl    (%rax), %eax
        sarl    $6, %eax
        movb    %al, -6(%rbp)
        movl    $1, %esi
        movl    $6, %edi
        call    calloc
        movq    %rax, -16(%rbp)
        movq    -48(%rbp), %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rax, %rdx
        movq    -16(%rbp), %rax
        movq    %rax, (%rdx)
        movq    -48(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %edx
        movq    -48(%rbp), %rax
        movl    %edx, (%rax)
        jmp     .L1
.L2:
        movl    -24(%rbp), %eax
        movl    %eax, -4(%rbp)
        jmp     .L5
.L8:
        cmpl    $1, -4(%rbp)
        jne     .L6
        movq    -32(%rbp), %rax
        movl    (%rax), %eax
        andl    $512, %eax
        testl   %eax, %eax
        jne     .L10
.L6:
        movq    -32(%rbp), %rax
        movl    (%rax), %edx
        movl    $9, %eax
        subl    -4(%rbp), %eax
        movl    $1, %esi
        movl    %eax, %ecx
        sall    %cl, %esi
        movl    %esi, %eax
        orl     %eax, %edx
        movq    -32(%rbp), %rax
        movl    %edx, (%rax)
        movl    -4(%rbp), %eax
        leal    1(%rax), %esi
        movl    -20(%rbp), %eax
        leal    -1(%rax), %edi
        movq    -48(%rbp), %rcx
        movq    -40(%rbp), %rdx
        movq    -32(%rbp), %rax
        movq    %rcx, %r8
        movq    %rdx, %rcx
        movl    %esi, %edx
        movq    %rax, %rsi
        call    func_2
        movq    -32(%rbp), %rax
        movl    (%rax), %edx
        movl    $9, %eax
        subl    -4(%rbp), %eax
        movl    $1, %esi
        movl    %eax, %ecx
        sall    %cl, %esi
        movl    %esi, %eax
        notl    %eax
        andl    %eax, %edx
        movq    -32(%rbp), %rax
        movl    %edx, (%rax)
        jmp     .L7
.L10:
        nop
.L7:
        addl    $1, -4(%rbp)
.L5:
        movl    $10, %eax
        subl    -20(%rbp), %eax
        cmpl    %eax, -4(%rbp)
        jle     .L8
        jmp     .L1
.L9:
        nop
.L1:
        leave
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movl    %edi, -20(%rbp)
        movq    %rsi, -32(%rbp)
        movl    $0, -12(%rbp)
        movl    $5760, %edi
        call    malloc
        movq    %rax, -8(%rbp)
        movq    -32(%rbp), %rax
        movl    $0, (%rax)
        movq    -32(%rbp), %rcx
        movq    -8(%rbp), %rdx
        leaq    -12(%rbp), %rsi
        movl    -20(%rbp), %eax
        movq    %rcx, %r8
        movq    %rdx, %rcx
        movl    $0, %edx
        movl    %eax, %edi
        call    func_2
        movq    -8(%rbp), %rax
        leave
        ret
