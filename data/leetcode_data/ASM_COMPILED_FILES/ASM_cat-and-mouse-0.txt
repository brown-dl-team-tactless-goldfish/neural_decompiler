func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $64, %rsp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movq    %rdx, -56(%rbp)
        movl    %ecx, -48(%rbp)
        movl    %r8d, -60(%rbp)
        movl    %r9d, -64(%rbp)
        movl    $-1, -4(%rbp)
        movl    -48(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    16(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -60(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -64(%rbp), %edx
        movslq  %edx, %rdx
        salq    $4, %rdx
        subq    $16, %rdx
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        xorl    $1, %eax
        testb   %al, %al
        je      .L2
        movl    -48(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    16(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -60(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -64(%rbp), %edx
        movslq  %edx, %rdx
        salq    $4, %rdx
        subq    $16, %rdx
        addq    %rdx, %rax
        movb    $1, (%rax)
        movl    -48(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jne     .L3
        movl    -48(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    16(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -60(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -64(%rbp), %edx
        movslq  %edx, %rdx
        salq    $4, %rdx
        subq    $16, %rdx
        addq    %rdx, %rax
        movq    8(%rax), %rax
        movl    $2, (%rax)
        movl    $2, %eax
        jmp     .L4
.L3:
        cmpl    $0, -60(%rbp)
        jne     .L5
        movl    -48(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    16(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -60(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -64(%rbp), %edx
        movslq  %edx, %rdx
        salq    $4, %rdx
        subq    $16, %rdx
        addq    %rdx, %rax
        movq    8(%rax), %rax
        movl    $1, (%rax)
        movl    $1, %eax
        jmp     .L4
.L5:
        movl    $0, -28(%rbp)
        movq    $0, -16(%rbp)
        cmpl    $1, -64(%rbp)
        jne     .L6
        movl    $0, -20(%rbp)
        jmp     .L7
.L13:
        movl    -60(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %edi
        movl    -48(%rbp), %ecx
        movq    -56(%rbp), %rdx
        movl    -44(%rbp), %esi
        movq    -40(%rbp), %rax
        subq    $8, %rsp
        pushq   16(%rbp)
        movl    $2, %r9d
        movl    %edi, %r8d
        movq    %rax, %rdi
        call    func_1
        addq    $16, %rsp
        movl    %eax, -28(%rbp)
        cmpl    $1, -28(%rbp)
        jne     .L8
        movl    $1, -4(%rbp)
        jmp     .L9
.L8:
        cmpl    $2, -28(%rbp)
        jne     .L10
        cmpl    $-1, -4(%rbp)
        jne     .L10
        movl    $2, -4(%rbp)
        jmp     .L11
.L10:
        cmpl    $0, -28(%rbp)
        je      .L12
        cmpl    $-1, -28(%rbp)
        jne     .L11
.L12:
        movl    $0, -4(%rbp)
        movl    -48(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    16(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -60(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -40(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        movl    -20(%rbp), %ecx
        movslq  %ecx, %rcx
        salq    $2, %rcx
        addq    %rcx, %rdx
        movl    (%rdx), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $16, %rax
        movq    8(%rax), %rax
        movq    %rax, -16(%rbp)
.L11:
        addl    $1, -20(%rbp)
.L7:
        movl    -60(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -20(%rbp)
        jl      .L13
.L9:
        cmpl    $0, -4(%rbp)
        je      .L14
        movl    -48(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    16(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -60(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -64(%rbp), %edx
        movslq  %edx, %rdx
        salq    $4, %rdx
        subq    $16, %rdx
        addq    %rdx, %rax
        movq    8(%rax), %rax
        movl    -4(%rbp), %edx
        movl    %edx, (%rax)
        jmp     .L25
.L14:
        movl    -48(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    16(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -60(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -64(%rbp), %edx
        movslq  %edx, %rdx
        salq    $4, %rdx
        subq    $16, %rdx
        addq    %rax, %rdx
        movq    -16(%rbp), %rax
        movq    %rax, 8(%rdx)
        jmp     .L25
.L6:
        movl    $0, -24(%rbp)
        jmp     .L17
.L23:
        movl    -48(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        je      .L18
        movl    -48(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %ecx
        movl    -60(%rbp), %edi
        movq    -56(%rbp), %rdx
        movl    -44(%rbp), %esi
        movq    -40(%rbp), %rax
        subq    $8, %rsp
        pushq   16(%rbp)
        movl    $1, %r9d
        movl    %edi, %r8d
        movq    %rax, %rdi
        call    func_1
        addq    $16, %rsp
        movl    %eax, -28(%rbp)
        cmpl    $2, -28(%rbp)
        jne     .L19
        movl    $2, -4(%rbp)
        jmp     .L20
.L19:
        cmpl    $1, -28(%rbp)
        jne     .L21
        cmpl    $-1, -4(%rbp)
        jne     .L21
        movl    $1, -4(%rbp)
        jmp     .L18
.L21:
        cmpl    $0, -28(%rbp)
        je      .L22
        cmpl    $-1, -28(%rbp)
        jne     .L18
.L22:
        movl    $0, -4(%rbp)
        movl    -48(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    16(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -60(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    8(%rax), %rax
        movq    %rax, -16(%rbp)
.L18:
        addl    $1, -24(%rbp)
.L17:
        movl    -48(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -24(%rbp)
        jl      .L23
.L20:
        cmpl    $0, -4(%rbp)
        je      .L24
        movl    -48(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    16(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -60(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -64(%rbp), %edx
        movslq  %edx, %rdx
        salq    $4, %rdx
        subq    $16, %rdx
        addq    %rdx, %rax
        movq    8(%rax), %rax
        movl    -4(%rbp), %edx
        movl    %edx, (%rax)
        jmp     .L25
.L24:
        movl    -48(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    16(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -60(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -64(%rbp), %edx
        movslq  %edx, %rdx
        salq    $4, %rdx
        subq    $16, %rdx
        addq    %rax, %rdx
        movq    -16(%rbp), %rax
        movq    %rax, 8(%rdx)
        jmp     .L25
.L2:
        movl    -48(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    16(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -60(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -64(%rbp), %edx
        movslq  %edx, %rdx
        salq    $4, %rdx
        subq    $16, %rdx
        addq    %rdx, %rax
        movq    8(%rax), %rax
        movl    (%rax), %eax
        movl    %eax, -4(%rbp)
.L25:
        movl    -4(%rbp), %eax
.L4:
        leave
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $72, %rsp
        movq    %rdi, -56(%rbp)
        movl    %esi, -60(%rbp)
        movq    %rdx, -72(%rbp)
        movl    -60(%rbp), %eax
        cltq
        salq    $3, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -40(%rbp)
        movl    $0, -20(%rbp)
        jmp     .L27
.L30:
        movl    -60(%rbp), %eax
        cltq
        salq    $3, %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -40(%rbp), %rdx
        leaq    (%rcx,%rdx), %rbx
        movq    %rax, %rdi
        call    malloc
        movq    %rax, (%rbx)
        movl    $0, -24(%rbp)
        jmp     .L28
.L29:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        leaq    (%rax,%rdx), %rbx
        movl    $32, %edi
        call    malloc
        movq    %rax, (%rbx)
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rbx
        movl    $4, %edi
        call    malloc
        movq    %rax, 8(%rbx)
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movb    $0, (%rax)
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    8(%rax), %rax
        movl    $-1, (%rax)
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        leaq    16(%rax), %rbx
        movl    $4, %edi
        call    malloc
        movq    %rax, 8(%rbx)
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $16, %rax
        movb    $0, (%rax)
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $16, %rax
        movq    8(%rax), %rax
        movl    $-1, (%rax)
        addl    $1, -24(%rbp)
.L28:
        movl    -24(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jl      .L29
        addl    $1, -20(%rbp)
.L27:
        movl    -20(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jl      .L30
        movq    -72(%rbp), %rdx
        movl    -60(%rbp), %esi
        movq    -56(%rbp), %rax
        subq    $8, %rsp
        pushq   -40(%rbp)
        movl    $1, %r9d
        movl    $1, %r8d
        movl    $2, %ecx
        movq    %rax, %rdi
        call    func_1
        addq    $16, %rsp
        movl    %eax, -44(%rbp)
        movl    $0, -28(%rbp)
        jmp     .L31
.L32:
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    %rax, %rdi
        call    free
        addl    $1, -28(%rbp)
.L31:
        movl    -28(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jl      .L32
        movq    -40(%rbp), %rax
        movq    %rax, %rdi
        call    free
        movl    -44(%rbp), %eax
        movq    -8(%rbp), %rbx
        leave
        ret
