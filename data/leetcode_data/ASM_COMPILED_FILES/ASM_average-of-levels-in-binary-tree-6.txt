func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $64, %rsp
        movq    %rdi, -24(%rbp)
        movq    %rsi, -32(%rbp)
        movq    %rdx, -40(%rbp)
        movl    %ecx, -44(%rbp)
        movq    %r8, -56(%rbp)
        cmpq    $0, -24(%rbp)
        je      .L5
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movsd   (%rax), %xmm1
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cvtsi2sd        %eax, %xmm0
        mulsd   %xmm0, %xmm1
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        cvtsi2sd        %eax, %xmm0
        addsd   %xmm1, %xmm0
        movsd   %xmm0, -8(%rbp)
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        addl    $1, %edx
        movl    %edx, (%rax)
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cvtsi2sd        %eax, %xmm1
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movsd   -8(%rbp), %xmm0
        divsd   %xmm1, %xmm0
        movsd   %xmm0, (%rax)
        movq    -56(%rbp), %rax
        movl    (%rax), %eax
        cmpl    %eax, -44(%rbp)
        jle     .L4
        movq    -56(%rbp), %rax
        movl    -44(%rbp), %edx
        movl    %edx, (%rax)
.L4:
        movl    -44(%rbp), %eax
        leal    1(%rax), %ecx
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    -56(%rbp), %rdi
        movq    -40(%rbp), %rdx
        movq    -32(%rbp), %rsi
        movq    %rdi, %r8
        movq    %rax, %rdi
        call    func_2
        movl    -44(%rbp), %eax
        leal    1(%rax), %ecx
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        movq    -56(%rbp), %rdi
        movq    -40(%rbp), %rdx
        movq    -32(%rbp), %rsi
        movq    %rdi, %r8
        movq    %rax, %rdi
        call    func_2
        jmp     .L1
.L5:
        nop
.L1:
        leave
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -40(%rbp)
        movq    %rsi, -48(%rbp)
        movl    $8, %esi
        movl    $5000, %edi
        call    calloc
        movq    %rax, -8(%rbp)
        movl    $4, %esi
        movl    $5000, %edi
        call    calloc
        movq    %rax, -16(%rbp)
        movl    $0, -20(%rbp)
        leaq    -20(%rbp), %rcx
        movq    -16(%rbp), %rdx
        movq    -8(%rbp), %rsi
        movq    -40(%rbp), %rax
        movq    %rcx, %r8
        movl    $0, %ecx
        movq    %rax, %rdi
        call    func_2
        movl    -20(%rbp), %eax
        leal    1(%rax), %edx
        movq    -48(%rbp), %rax
        movl    %edx, (%rax)
        movq    -8(%rbp), %rax
        leave
        ret
