func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $72, %rsp
        movq    %rdi, -72(%rbp)
        movl    %esi, -76(%rbp)
        movl    %edx, -80(%rbp)
        movl    -76(%rbp), %eax
        movl    %eax, -36(%rbp)
        movl    -36(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -40(%rbp)
        movl    -40(%rbp), %eax
        cltq
        movl    $8, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, -48(%rbp)
        movl    $0, -20(%rbp)
        movl    $8, %edi
        call    malloc
        movq    %rax, %rdx
        movq    -48(%rbp), %rax
        movq    %rdx, (%rax)
        movq    -48(%rbp), %rax
        movq    (%rax), %rax
        movl    $0, (%rax)
        movq    -48(%rbp), %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    $1, (%rax)
        movl    $0, -28(%rbp)
        movl    $0, -32(%rbp)
        jmp     .L2
.L12:
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        addl    %eax, -20(%rbp)
        movl    -20(%rbp), %eax
        subl    -80(%rbp), %eax
        movl    %eax, -52(%rbp)
        movl    -52(%rbp), %eax
        movl    %eax, -24(%rbp)
        jmp     .L3
.L7:
        movl    -24(%rbp), %eax
        cltd
        idivl   -40(%rbp)
        movl    %edx, %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        testq   %rax, %rax
        je      .L14
        movl    -24(%rbp), %eax
        cltd
        idivl   -40(%rbp)
        movl    %edx, %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        cmpl    %eax, -52(%rbp)
        jne     .L6
        movl    -24(%rbp), %eax
        cltd
        idivl   -40(%rbp)
        movl    %edx, %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    (%rax), %eax
        addl    %eax, -28(%rbp)
        jmp     .L5
.L6:
        addl    $1, -24(%rbp)
.L3:
        cmpl    $0, -52(%rbp)
        jns     .L7
        jmp     .L5
.L14:
        nop
.L5:
        movl    -20(%rbp), %eax
        movl    %eax, -24(%rbp)
.L11:
        movl    -24(%rbp), %eax
        cltd
        idivl   -40(%rbp)
        movl    %edx, %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        testq   %rax, %rax
        jne     .L8
        movl    -24(%rbp), %eax
        cltd
        idivl   -40(%rbp)
        movl    %edx, %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        leaq    (%rdx,%rax), %rbx
        movl    $8, %edi
        call    malloc
        movq    %rax, (%rbx)
        movl    -24(%rbp), %eax
        cltd
        idivl   -40(%rbp)
        movl    %edx, %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movl    %edx, (%rax)
        movl    -24(%rbp), %eax
        cltd
        idivl   -40(%rbp)
        movl    %edx, %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    $1, (%rax)
        jmp     .L9
.L8:
        movl    -24(%rbp), %eax
        cltd
        idivl   -40(%rbp)
        movl    %edx, %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        cmpl    %eax, -20(%rbp)
        jne     .L10
        movl    -24(%rbp), %eax
        cltd
        idivl   -40(%rbp)
        movl    %edx, %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    (%rax), %edx
        addl    $1, %edx
        movl    %edx, (%rax)
        jmp     .L9
.L10:
        addl    $1, -24(%rbp)
        jmp     .L11
.L9:
        addl    $1, -32(%rbp)
.L2:
        movl    -32(%rbp), %eax
        cmpl    -36(%rbp), %eax
        jl      .L12
        movl    -28(%rbp), %eax
        addq    $72, %rsp
        popq    %rbx
        popq    %rbp
        ret
