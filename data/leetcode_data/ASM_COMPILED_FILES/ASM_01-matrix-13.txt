var_1:
        .zero   8
var_15:
        .zero   8
func_5:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    var_1(%rip), %rax
        testq   %rax, %rax
        je      .L3
        movq    var_1(%rip), %rax
        movq    16(%rax), %rax
        movq    %rax, var_1(%rip)
.L3:
        nop
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -8(%rbp)
        movq    var_1(%rip), %rax
        testq   %rax, %rax
        jne     .L5
        movq    -8(%rbp), %rax
        movq    %rax, var_1(%rip)
        movq    -8(%rbp), %rax
        movq    %rax, var_15(%rip)
        movq    var_1(%rip), %rax
        movq    $0, 16(%rax)
        movq    var_15(%rip), %rax
        movq    $0, 16(%rax)
        jmp     .L7
.L5:
        movq    var_15(%rip), %rax
        movq    -8(%rbp), %rdx
        movq    %rdx, 16(%rax)
        movq    -8(%rbp), %rax
        movq    %rax, var_15(%rip)
        movq    var_15(%rip), %rax
        movq    $0, 16(%rax)
.L7:
        nop
        popq    %rbp
        ret
create_func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movl    %edi, -20(%rbp)
        movl    %esi, -24(%rbp)
        movl    %edx, -28(%rbp)
        movl    $24, %edi
        call    malloc
        movq    %rax, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    -20(%rbp), %edx
        movl    %edx, (%rax)
        movq    -8(%rbp), %rax
        movl    -24(%rbp), %edx
        movl    %edx, 4(%rax)
        movq    -8(%rbp), %rax
        movl    -28(%rbp), %edx
        movl    %edx, 8(%rax)
        movq    -8(%rbp), %rax
        movq    %rax, %rdi
        call    func_1
        nop
        leave
        ret
func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    %edx, -32(%rbp)
        movq    %rcx, -40(%rbp)
        movq    %r8, -48(%rbp)
        movq    -48(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, -8(%rbp)
        movq    -48(%rbp), %rax
        movl    4(%rax), %eax
        movl    %eax, -12(%rbp)
        movq    -48(%rbp), %rax
        movl    8(%rax), %eax
        movl    %eax, -4(%rbp)
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -12(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    $1, (%rax)
        cmpl    $0, -8(%rbp)
        jle     .L10
        movl    -8(%rbp), %eax
        cltq
        salq    $3, %rax
        leaq    -8(%rax), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -12(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L10
        movl    -8(%rbp), %eax
        cltq
        salq    $3, %rax
        leaq    -8(%rax), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -12(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        je      .L11
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movl    -8(%rbp), %eax
        leal    -1(%rax), %ecx
        movl    -12(%rbp), %eax
        movl    %eax, %esi
        movl    %ecx, %edi
        call    create_func_1
        jmp     .L10
.L11:
        movl    -4(%rbp), %eax
        jmp     .L12
.L10:
        movl    -28(%rbp), %eax
        subl    $1, %eax
        cmpl    %eax, -8(%rbp)
        jge     .L13
        movl    -8(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -12(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L14
        movl    -8(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -12(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        je      .L14
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movl    -8(%rbp), %eax
        leal    1(%rax), %ecx
        movl    -12(%rbp), %eax
        movl    %eax, %esi
        movl    %ecx, %edi
        call    create_func_1
        jmp     .L13
.L14:
        movl    -8(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -12(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L13
        movl    -8(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -12(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L13
        movl    -4(%rbp), %eax
        jmp     .L12
.L13:
        cmpl    $0, -12(%rbp)
        jle     .L15
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -12(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        subq    $4, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L16
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -12(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        subq    $4, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        je      .L16
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movl    -12(%rbp), %eax
        leal    -1(%rax), %ecx
        movl    -8(%rbp), %eax
        movl    %ecx, %esi
        movl    %eax, %edi
        call    create_func_1
        jmp     .L15
.L16:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -12(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        subq    $4, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L15
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -12(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        subq    $4, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L15
        movl    -4(%rbp), %eax
        jmp     .L12
.L15:
        movl    -32(%rbp), %eax
        subl    $1, %eax
        cmpl    %eax, -12(%rbp)
        jge     .L17
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -12(%rbp), %edx
        movslq  %edx, %rdx
        addq    $1, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L18
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -12(%rbp), %edx
        movslq  %edx, %rdx
        addq    $1, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        je      .L18
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movl    -12(%rbp), %eax
        leal    1(%rax), %ecx
        movl    -8(%rbp), %eax
        movl    %ecx, %esi
        movl    %eax, %edi
        call    create_func_1
        jmp     .L17
.L18:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -12(%rbp), %edx
        movslq  %edx, %rdx
        addq    $1, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L17
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -12(%rbp), %edx
        movslq  %edx, %rdx
        addq    $1, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L17
        movl    -4(%rbp), %eax
        jmp     .L12
.L17:
        movq    -48(%rbp), %rax
        movq    16(%rax), %rax
        testq   %rax, %rax
        je      .L19
        movq    -48(%rbp), %rax
        movq    16(%rax), %rdi
        movq    -40(%rbp), %rcx
        movl    -32(%rbp), %edx
        movl    -28(%rbp), %esi
        movq    -24(%rbp), %rax
        movq    %rdi, %r8
        movq    %rax, %rdi
        call    func_3
        movl    %eax, -4(%rbp)
.L19:
        movl    -4(%rbp), %eax
.L12:
        leave
        ret
func_4:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $104, %rsp
        movq    %rdi, -72(%rbp)
        movl    %esi, -76(%rbp)
        movq    %rdx, -88(%rbp)
        movq    %rcx, -96(%rbp)
        movq    %r8, -104(%rbp)
        cmpq    $0, -72(%rbp)
        je      .L21
        cmpl    $0, -76(%rbp)
        je      .L21
        movq    -88(%rbp), %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L22
.L21:
        movq    -88(%rbp), %rax
        movl    $0, (%rax)
        movq    -72(%rbp), %rax
        jmp     .L23
.L22:
        movl    -76(%rbp), %eax
        movl    %eax, -32(%rbp)
        movq    -88(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, -36(%rbp)
        movq    -96(%rbp), %rax
        movl    -32(%rbp), %edx
        movl    %edx, (%rax)
        movl    -32(%rbp), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, %rdx
        movq    -104(%rbp), %rax
        movq    %rdx, (%rax)
        movl    $0, -20(%rbp)
        jmp     .L24
.L25:
        movq    -104(%rbp), %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rax, %rdx
        movl    -36(%rbp), %eax
        movl    %eax, (%rdx)
        addl    $1, -20(%rbp)
.L24:
        movl    -20(%rbp), %eax
        cmpl    -32(%rbp), %eax
        jl      .L25
        movl    -32(%rbp), %eax
        cltq
        salq    $3, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -48(%rbp)
        movl    $0, -20(%rbp)
        jmp     .L26
.L27:
        movl    -36(%rbp), %eax
        cltq
        salq    $2, %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -48(%rbp), %rdx
        leaq    (%rcx,%rdx), %rbx
        movq    %rax, %rdi
        call    malloc
        movq    %rax, (%rbx)
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rcx
        movq    -48(%rbp), %rax
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    $0, %esi
        movq    %rax, %rdi
        call    memset
        addl    $1, -20(%rbp)
.L26:
        movl    -20(%rbp), %eax
        cmpl    -32(%rbp), %eax
        jl      .L27
        movl    $0, -20(%rbp)
        jmp     .L28
.L36:
        movl    $0, -24(%rbp)
        jmp     .L29
.L35:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $1, %eax
        jne     .L30
        movl    -24(%rbp), %ecx
        movl    -20(%rbp), %eax
        movl    $1, %edx
        movl    %ecx, %esi
        movl    %eax, %edi
        call    create_func_1
        movq    var_1(%rip), %rdi
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        leaq    (%rax,%rdx), %rbx
        movq    -48(%rbp), %rcx
        movl    -36(%rbp), %edx
        movl    -32(%rbp), %esi
        movq    -72(%rbp), %rax
        movq    %rdi, %r8
        movq    %rax, %rdi
        call    func_3
        movl    %eax, (%rbx)
        jmp     .L31
.L32:
        movq    var_1(%rip), %rax
        movq    %rax, -56(%rbp)
        movl    $0, %eax
        call    func_5
        movq    -56(%rbp), %rax
        movq    %rax, %rdi
        call    free
.L31:
        movq    var_1(%rip), %rax
        testq   %rax, %rax
        jne     .L32
.L30:
        movl    $0, -28(%rbp)
        jmp     .L33
.L34:
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rcx
        movq    -48(%rbp), %rax
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    $0, %esi
        movq    %rax, %rdi
        call    memset
        addl    $1, -28(%rbp)
.L33:
        movl    -28(%rbp), %eax
        cmpl    -32(%rbp), %eax
        jl      .L34
        addl    $1, -24(%rbp)
.L29:
        movl    -24(%rbp), %eax
        cmpl    -36(%rbp), %eax
        jl      .L35
        addl    $1, -20(%rbp)
.L28:
        movl    -20(%rbp), %eax
        cmpl    -32(%rbp), %eax
        jl      .L36
        movq    -72(%rbp), %rax
.L23:
        addq    $104, %rsp
        popq    %rbx
        popq    %rbp
        ret
