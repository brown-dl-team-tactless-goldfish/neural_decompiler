func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -20(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L2
.L3:
        movl    -20(%rbp), %eax
        subl    $1, %eax
        andl    %eax, -20(%rbp)
        addl    $1, -4(%rbp)
.L2:
        cmpl    $0, -20(%rbp)
        jne     .L3
        movl    -4(%rbp), %eax
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $88, %rsp
        movl    %edi, -84(%rbp)
        movq    %rsi, -96(%rbp)
        movl    $5760, %edi
        call    malloc
        movq    %rax, -48(%rbp)
        movl    $0, -20(%rbp)
        jmp     .L6
.L7:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        leaq    (%rdx,%rax), %rbx
        movl    $7, %edi
        call    malloc
        movq    %rax, (%rbx)
        addl    $1, -20(%rbp)
.L6:
        cmpl    $719, -20(%rbp)
        jle     .L7
        movl    $11, -52(%rbp)
        movl    $59, -56(%rbp)
        movl    $0, -32(%rbp)
        movl    $0, -24(%rbp)
        jmp     .L8
.L17:
        movl    $0, -28(%rbp)
        jmp     .L9
.L16:
        movl    -24(%rbp), %eax
        movl    %eax, %edi
        call    func_2
        movl    %eax, -60(%rbp)
        movl    -28(%rbp), %eax
        movl    %eax, %edi
        call    func_2
        movl    %eax, -64(%rbp)
        movl    -60(%rbp), %edx
        movl    -64(%rbp), %eax
        addl    %edx, %eax
        cmpl    %eax, -84(%rbp)
        jne     .L10
        movl    $0, -36(%rbp)
        cmpl    $9, -24(%rbp)
        jg      .L11
        movl    -24(%rbp), %eax
        leal    48(%rax), %esi
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rcx
        movl    -36(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -36(%rbp)
        cltq
        addq    %rcx, %rax
        movl    %esi, %edx
        movb    %dl, (%rax)
        jmp     .L12
.L11:
        cmpl    $10, -24(%rbp)
        jne     .L13
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rcx
        movl    -36(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -36(%rbp)
        cltq
        addq    %rcx, %rax
        movb    $49, (%rax)
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rcx
        movl    -36(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -36(%rbp)
        cltq
        addq    %rcx, %rax
        movb    $48, (%rax)
        jmp     .L12
.L13:
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rcx
        movl    -36(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -36(%rbp)
        cltq
        addq    %rcx, %rax
        movb    $49, (%rax)
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rcx
        movl    -36(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -36(%rbp)
        cltq
        addq    %rcx, %rax
        movb    $49, (%rax)
.L12:
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rcx
        movl    -36(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -36(%rbp)
        cltq
        addq    %rcx, %rax
        movb    $58, (%rax)
        movl    -28(%rbp), %eax
        movl    %eax, -68(%rbp)
        cmpl    $9, -28(%rbp)
        jg      .L14
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rcx
        movl    -36(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -36(%rbp)
        cltq
        addq    %rcx, %rax
        movb    $48, (%rax)
        movl    -68(%rbp), %eax
        leal    48(%rax), %esi
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rcx
        movl    -36(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -36(%rbp)
        cltq
        addq    %rcx, %rax
        movl    %esi, %edx
        movb    %dl, (%rax)
        jmp     .L15
.L14:
        movl    -68(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movl    %edx, %eax
        leal    48(%rax), %ecx
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -36(%rbp), %edx
        movslq  %edx, %rdx
        addq    $1, %rdx
        addq    %rdx, %rax
        movl    %ecx, %edx
        movb    %dl, (%rax)
        movl    -68(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -68(%rbp)
        movl    -68(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movl    %edx, %eax
        leal    48(%rax), %ecx
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rdx
        movl    -36(%rbp), %eax
        cltq
        addq    %rdx, %rax
        movl    %ecx, %edx
        movb    %dl, (%rax)
        addl    $2, -36(%rbp)
.L15:
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rdx
        movl    -36(%rbp), %eax
        cltq
        addq    %rdx, %rax
        movb    $0, (%rax)
        addl    $1, -32(%rbp)
.L10:
        addl    $1, -28(%rbp)
.L9:
        movl    -28(%rbp), %eax
        cmpl    -56(%rbp), %eax
        jle     .L16
        addl    $1, -24(%rbp)
.L8:
        movl    -24(%rbp), %eax
        cmpl    -52(%rbp), %eax
        jle     .L17
        movq    -96(%rbp), %rax
        movl    -32(%rbp), %edx
        movl    %edx, (%rax)
        movq    -48(%rbp), %rax
        addq    $88, %rsp
        popq    %rbx
        popq    %rbp
        ret
