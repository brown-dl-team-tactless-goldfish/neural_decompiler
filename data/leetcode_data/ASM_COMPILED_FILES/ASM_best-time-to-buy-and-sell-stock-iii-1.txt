func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -4(%rbp)
        movl    %esi, -8(%rbp)
        movl    -4(%rbp), %eax
        cmpl    %eax, -8(%rbp)
        cmovge  -8(%rbp), %eax
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %r12
        pushq   %rbx
        subq    $64, %rsp
        movq    %rdi, -72(%rbp)
        movl    %esi, -76(%rbp)
        cmpl    $1, -76(%rbp)
        je      .L4
        cmpl    $0, -76(%rbp)
        jne     .L5
.L4:
        movl    $0, %eax
        jmp     .L6
.L5:
        movl    $12, %edi
        call    malloc
        movq    %rax, -40(%rbp)
        movl    $12, %edi
        call    malloc
        movq    %rax, -48(%rbp)
        movl    $0, -20(%rbp)
        jmp     .L7
.L8:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    $0, (%rax)
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movl    $0, (%rax)
        addl    $1, -20(%rbp)
.L7:
        cmpl    $2, -20(%rbp)
        jle     .L8
        movl    $0, -24(%rbp)
        jmp     .L9
.L12:
        movl    -24(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -52(%rbp)
        movl    $2, -28(%rbp)
        jmp     .L10
.L11:
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -52(%rbp), %eax
        leal    (%rdx,%rax), %r12d
        movl    -28(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %ebx
        movl    -52(%rbp), %eax
        movl    $0, %esi
        movl    %eax, %edi
        call    func_2
        addl    %ebx, %eax
        movl    -28(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -48(%rbp), %rdx
        leaq    (%rcx,%rdx), %rbx
        movl    %r12d, %esi
        movl    %eax, %edi
        call    func_2
        movl    %eax, (%rbx)
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        movl    -28(%rbp), %ecx
        movslq  %ecx, %rcx
        leaq    0(,%rcx,4), %rsi
        movq    -40(%rbp), %rcx
        leaq    (%rsi,%rcx), %rbx
        movl    %edx, %esi
        movl    %eax, %edi
        call    func_2
        movl    %eax, (%rbx)
        subl    $1, -28(%rbp)
.L10:
        cmpl    $0, -28(%rbp)
        jg      .L11
        addl    $1, -24(%rbp)
.L9:
        movl    -76(%rbp), %eax
        subl    $1, %eax
        cmpl    %eax, -24(%rbp)
        jl      .L12
        movq    -40(%rbp), %rax
        movl    8(%rax), %eax
.L6:
        addq    $64, %rsp
        popq    %rbx
        popq    %r12
        popq    %rbp
        ret
