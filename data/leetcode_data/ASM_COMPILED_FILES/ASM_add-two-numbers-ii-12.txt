func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %r15
        pushq   %r14
        pushq   %r13
        pushq   %r12
        pushq   %rbx
        subq    $120, %rsp
        movq    %rdi, -152(%rbp)
        movq    %rsi, -160(%rbp)
        movl    $0, -80(%rbp)
        movl    $0, -76(%rbp)
        movl    $0, -72(%rbp)
        movl    $0, -68(%rbp)
        movq    -152(%rbp), %rax
        movq    %rax, -64(%rbp)
        movq    -160(%rbp), %rax
        movq    %rax, -56(%rbp)
        jmp     .L2
.L3:
        addl    $1, -80(%rbp)
        movq    -64(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -64(%rbp)
.L2:
        cmpq    $0, -64(%rbp)
        jne     .L3
        jmp     .L4
.L5:
        addl    $1, -76(%rbp)
        movq    -56(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -56(%rbp)
.L4:
        cmpq    $0, -56(%rbp)
        jne     .L5
        movl    -80(%rbp), %eax
        movq    %rsp, %rdx
        movq    %rdx, %rbx
        movslq  %eax, %rdx
        subq    $1, %rdx
        movq    %rdx, -120(%rbp)
        movslq  %eax, %rdx
        movq    %rdx, %r14
        movl    $0, %r15d
        movslq  %eax, %rdx
        movq    %rdx, %r12
        movl    $0, %r13d
        cltq
        leaq    0(,%rax,4), %rdx
        movl    $16, %eax
        subq    $1, %rax
        addq    %rdx, %rax
        movl    $16, %esi
        movl    $0, %edx
        divq    %rsi
        imulq   $16, %rax, %rax
        subq    %rax, %rsp
        movq    %rsp, %rax
        addq    $3, %rax
        shrq    $2, %rax
        salq    $2, %rax
        movq    %rax, -128(%rbp)
        movl    -76(%rbp), %eax
        movslq  %eax, %rdx
        subq    $1, %rdx
        movq    %rdx, -136(%rbp)
        movslq  %eax, %rdx
        movq    %rdx, %r10
        movl    $0, %r11d
        movslq  %eax, %rdx
        movq    %rdx, %r8
        movl    $0, %r9d
        cltq
        leaq    0(,%rax,4), %rdx
        movl    $16, %eax
        subq    $1, %rax
        addq    %rdx, %rax
        movl    $16, %esi
        movl    $0, %edx
        divq    %rsi
        imulq   $16, %rax, %rax
        subq    %rax, %rsp
        movq    %rsp, %rax
        addq    $3, %rax
        shrq    $2, %rax
        salq    $2, %rax
        movq    %rax, -144(%rbp)
        movq    -152(%rbp), %rax
        movq    %rax, -64(%rbp)
        movq    -160(%rbp), %rax
        movq    %rax, -56(%rbp)
        jmp     .L6
.L7:
        movq    -64(%rbp), %rax
        movl    (%rax), %ecx
        movq    -128(%rbp), %rax
        movl    -72(%rbp), %edx
        movslq  %edx, %rdx
        movl    %ecx, (%rax,%rdx,4)
        addl    $1, -72(%rbp)
        movq    -64(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -64(%rbp)
.L6:
        cmpq    $0, -64(%rbp)
        jne     .L7
        jmp     .L8
.L9:
        movq    -56(%rbp), %rax
        movl    (%rax), %ecx
        movq    -144(%rbp), %rax
        movl    -68(%rbp), %edx
        movslq  %edx, %rdx
        movl    %ecx, (%rax,%rdx,4)
        addl    $1, -68(%rbp)
        movq    -56(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -56(%rbp)
.L8:
        cmpq    $0, -56(%rbp)
        jne     .L9
        movq    $0, -96(%rbp)
        movl    $0, -100(%rbp)
.L17:
        subl    $1, -72(%rbp)
        subl    $1, -68(%rbp)
        cmpl    $0, -72(%rbp)
        jns     .L10
        cmpl    $0, -68(%rbp)
        js      .L21
.L10:
        movl    $16, %edi
        call    malloc
        movq    %rax, -88(%rbp)
        cmpl    $0, -72(%rbp)
        jns     .L12
        movl    $0, -108(%rbp)
        movq    -144(%rbp), %rax
        movl    -68(%rbp), %edx
        movslq  %edx, %rdx
        movl    (%rax,%rdx,4), %eax
        movl    %eax, -112(%rbp)
        jmp     .L13
.L12:
        cmpl    $0, -68(%rbp)
        jns     .L14
        movq    -128(%rbp), %rax
        movl    -72(%rbp), %edx
        movslq  %edx, %rdx
        movl    (%rax,%rdx,4), %eax
        movl    %eax, -108(%rbp)
        movl    $0, -112(%rbp)
        jmp     .L13
.L14:
        movq    -128(%rbp), %rax
        movl    -72(%rbp), %edx
        movslq  %edx, %rdx
        movl    (%rax,%rdx,4), %eax
        movl    %eax, -108(%rbp)
        movq    -144(%rbp), %rax
        movl    -68(%rbp), %edx
        movslq  %edx, %rdx
        movl    (%rax,%rdx,4), %eax
        movl    %eax, -112(%rbp)
.L13:
        movl    -108(%rbp), %edx
        movl    -112(%rbp), %eax
        addl    %eax, %edx
        movl    -100(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, -104(%rbp)
        cmpl    $9, -104(%rbp)
        jle     .L15
        movl    -104(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %eax
        movl    %eax, -104(%rbp)
        movl    $1, -100(%rbp)
        jmp     .L16
.L15:
        movl    $0, -100(%rbp)
.L16:
        movq    -88(%rbp), %rax
        movl    -104(%rbp), %edx
        movl    %edx, (%rax)
        movq    -88(%rbp), %rax
        movq    -96(%rbp), %rdx
        movq    %rdx, 8(%rax)
        movq    -88(%rbp), %rax
        movq    %rax, -96(%rbp)
        jmp     .L17
.L21:
        nop
        cmpl    $1, -100(%rbp)
        jne     .L18
        movl    $16, %edi
        call    malloc
        movq    %rax, -88(%rbp)
        movq    -88(%rbp), %rax
        movl    $1, (%rax)
        movq    -88(%rbp), %rax
        movq    -96(%rbp), %rdx
        movq    %rdx, 8(%rax)
.L18:
        movq    -88(%rbp), %rax
        movq    %rbx, %rsp
        leaq    -40(%rbp), %rsp
        popq    %rbx
        popq    %r12
        popq    %r13
        popq    %r14
        popq    %r15
        popq    %rbp
        ret
