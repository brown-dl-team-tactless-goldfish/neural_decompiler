func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $56, %rsp
        movq    %rdi, -56(%rbp)
        movl    %esi, -60(%rbp)
        movl    -60(%rbp), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -40(%rbp)
        cmpq    $0, -40(%rbp)
        jne     .L2
        movl    $1, %edi
        call    exit
.L2:
        movl    $-1, -20(%rbp)
        movl    $0, -44(%rbp)
        movl    $0, -24(%rbp)
        movl    $0, -28(%rbp)
        movl    $0, -28(%rbp)
        jmp     .L3
.L10:
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movzbl  (%rax), %eax
        cmpb    $67, %al
        jne     .L4
        cmpl    $0, -20(%rbp)
        js      .L12
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        subl    %eax, -24(%rbp)
        subl    $1, -20(%rbp)
        jmp     .L12
.L4:
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movzbl  (%rax), %eax
        cmpb    $68, %al
        jne     .L7
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        addl    %eax, %eax
        movl    %eax, -44(%rbp)
        addl    $1, -20(%rbp)
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rax, %rdx
        movl    -44(%rbp), %eax
        movl    %eax, (%rdx)
        jmp     .L8
.L7:
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movzbl  (%rax), %eax
        cmpb    $43, %al
        jne     .L9
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -20(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %edx, %eax
        movl    %eax, -44(%rbp)
        addl    $1, -20(%rbp)
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rax, %rdx
        movl    -44(%rbp), %eax
        movl    %eax, (%rdx)
        jmp     .L8
.L9:
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addl    $1, -20(%rbp)
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -40(%rbp), %rdx
        leaq    (%rcx,%rdx), %rbx
        movq    %rax, %rdi
        call    atoi
        movl    %eax, (%rbx)
.L8:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        addl    %eax, -24(%rbp)
        jmp     .L6
.L12:
        nop
.L6:
        addl    $1, -28(%rbp)
.L3:
        movl    -28(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jl      .L10
        movq    -40(%rbp), %rax
        movq    %rax, %rdi
        call    free
        movl    -24(%rbp), %eax
        addq    $56, %rsp
        popq    %rbx
        popq    %rbp
        ret
