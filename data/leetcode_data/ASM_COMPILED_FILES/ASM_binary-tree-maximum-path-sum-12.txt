func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -4(%rbp)
        movl    %esi, -8(%rbp)
        movl    %edx, -12(%rbp)
        movl    %ecx, -16(%rbp)
        movl    -12(%rbp), %eax
        cmpl    %eax, -8(%rbp)
        cmovge  -8(%rbp), %eax
        cmpl    %eax, -16(%rbp)
        cmovge  -16(%rbp), %eax
        cmpl    %eax, -4(%rbp)
        jle     .L2
        movl    -4(%rbp), %eax
        jmp     .L3
.L2:
        movl    -12(%rbp), %eax
        cmpl    %eax, -4(%rbp)
        cmovge  -4(%rbp), %eax
        cmpl    %eax, -16(%rbp)
        cmovge  -16(%rbp), %eax
        cmpl    %eax, -8(%rbp)
        jle     .L4
        movl    -8(%rbp), %eax
        jmp     .L3
.L4:
        movl    -8(%rbp), %eax
        cmpl    %eax, -4(%rbp)
        cmovge  -4(%rbp), %eax
        cmpl    %eax, -16(%rbp)
        cmovge  -16(%rbp), %eax
        cmpl    %eax, -12(%rbp)
        jle     .L5
        movl    -12(%rbp), %eax
        jmp     .L3
.L5:
        movl    -16(%rbp), %eax
.L3:
        popq    %rbp
        ret
var_9:
        .long   -9999
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        cmpq    $0, -24(%rbp)
        jne     .L7
        movl    $-9999, %eax
        jmp     .L8
.L7:
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, -12(%rbp)
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        testq   %rax, %rax
        je      .L9
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        testq   %rax, %rax
        je      .L9
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, %rdi
        call    func_2
        movl    %eax, -4(%rbp)
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, %rdi
        call    func_2
        movl    %eax, -8(%rbp)
        movl    -12(%rbp), %edx
        movl    -8(%rbp), %eax
        leal    (%rdx,%rax), %ecx
        movl    -12(%rbp), %edx
        movl    -4(%rbp), %eax
        addl    %eax, %edx
        movl    -12(%rbp), %esi
        movl    -4(%rbp), %eax
        addl    %eax, %esi
        movl    -8(%rbp), %eax
        addl    %esi, %eax
        movl    %eax, %esi
        movl    $-9999, %edi
        call    func_3
        movl    %eax, -12(%rbp)
        jmp     .L10
.L9:
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        testq   %rax, %rax
        je      .L11
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        testq   %rax, %rax
        jne     .L11
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, %rdi
        call    func_2
        movl    %eax, -4(%rbp)
        movl    -4(%rbp), %eax
        addl    %eax, -12(%rbp)
        movl    $-9999, -8(%rbp)
        jmp     .L10
.L11:
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        testq   %rax, %rax
        jne     .L12
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        testq   %rax, %rax
        je      .L12
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, %rdi
        call    func_2
        movl    %eax, -8(%rbp)
        movl    -8(%rbp), %eax
        addl    %eax, -12(%rbp)
        movl    $-9999, -4(%rbp)
        jmp     .L10
.L12:
        movl    $-9999, -8(%rbp)
        movl    -8(%rbp), %eax
        movl    %eax, -4(%rbp)
.L10:
        movq    -24(%rbp), %rax
        movl    (%rax), %edx
        movl    -12(%rbp), %ecx
        movl    -8(%rbp), %esi
        movl    -4(%rbp), %eax
        movl    %eax, %edi
        call    func_3
        movl    %eax, -16(%rbp)
        movl    var_9(%rip), %eax
        cmpl    %eax, -16(%rbp)
        jle     .L13
        movl    -16(%rbp), %eax
        movl    %eax, var_9(%rip)
.L13:
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        movq    -24(%rbp), %rdx
        movl    (%rdx), %ecx
        movl    -8(%rbp), %edx
        leal    (%rcx,%rdx), %edi
        movq    -24(%rbp), %rdx
        movl    (%rdx), %ecx
        movl    -4(%rbp), %edx
        leal    (%rcx,%rdx), %esi
        movl    %eax, %ecx
        movl    %edi, %edx
        movl    $-9999, %edi
        call    func_3
.L8:
        leave
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        movq    -24(%rbp), %rax
        movq    %rax, %rdi
        call    func_2
        movl    %eax, -4(%rbp)
        movl    var_9(%rip), %eax
        cmpl    %eax, -4(%rbp)
        cmovge  -4(%rbp), %eax
        movl    %eax, -8(%rbp)
        movl    $-9999, var_9(%rip)
        movl    -8(%rbp), %eax
        leave
        ret
