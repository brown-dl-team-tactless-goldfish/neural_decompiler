func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movq    %rsi, -32(%rbp)
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, -4(%rbp)
        movq    -32(%rbp), %rax
        movl    (%rax), %edx
        movq    -24(%rbp), %rax
        movl    %edx, (%rax)
        movq    -32(%rbp), %rax
        movl    -4(%rbp), %edx
        movl    %edx, (%rax)
        nop
        popq    %rbp
        ret
func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $40, %rsp
        movq    %rdi, -24(%rbp)
        movq    %rsi, -32(%rbp)
        movl    %edx, -36(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L3
.L7:
        movl    $0, -8(%rbp)
        jmp     .L4
.L6:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -8(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jle     .L5
        movl    -8(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    func_2
        movl    -8(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rax, %rdx
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -32(%rbp), %rax
        addq    %rcx, %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    func_2
.L5:
        addl    $1, -8(%rbp)
.L4:
        movl    -36(%rbp), %eax
        subl    -4(%rbp), %eax
        subl    $1, %eax
        cmpl    %eax, -8(%rbp)
        jl      .L6
        addl    $1, -4(%rbp)
.L3:
        movl    -36(%rbp), %eax
        subl    $1, %eax
        cmpl    %eax, -4(%rbp)
        jl      .L7
        nop
        leave
        ret
func_4:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $40, %rsp
        movq    %rdi, -24(%rbp)
        movq    %rsi, -32(%rbp)
        movl    %edx, -36(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L9
.L13:
        movl    $0, -8(%rbp)
        jmp     .L10
.L12:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -8(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jne     .L11
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -8(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rcx
        movq    -32(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jle     .L11
        movl    -8(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    func_2
        movl    -8(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rax, %rdx
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -32(%rbp), %rax
        addq    %rcx, %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    func_2
.L11:
        addl    $1, -8(%rbp)
.L10:
        movl    -36(%rbp), %eax
        subl    -4(%rbp), %eax
        subl    $1, %eax
        cmpl    %eax, -8(%rbp)
        jl      .L12
        addl    $1, -4(%rbp)
.L9:
        movl    -36(%rbp), %eax
        subl    $1, %eax
        cmpl    %eax, -4(%rbp)
        jl      .L13
        nop
        leave
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %r15
        pushq   %r14
        pushq   %r13
        pushq   %r12
        pushq   %rbx
        subq    $72, %rsp
        movq    %rdi, -88(%rbp)
        movl    %esi, -92(%rbp)
        movq    %rdx, -104(%rbp)
        movl    %ecx, -96(%rbp)
        movq    %rsp, %rax
        movq    %rax, %rbx
        cmpl    $1, -96(%rbp)
        jne     .L15
        movq    -88(%rbp), %rax
        movl    (%rax), %eax
        jmp     .L16
.L15:
        movl    -92(%rbp), %edx
        movq    -88(%rbp), %rcx
        movq    -104(%rbp), %rax
        movq    %rcx, %rsi
        movq    %rax, %rdi
        call    func_3
        movl    -92(%rbp), %edx
        movq    -88(%rbp), %rcx
        movq    -104(%rbp), %rax
        movq    %rcx, %rsi
        movq    %rax, %rdi
        call    func_4
        movl    $0, -60(%rbp)
        movl    -92(%rbp), %eax
        movslq  %eax, %rdx
        subq    $1, %rdx
        movq    %rdx, -72(%rbp)
        movslq  %eax, %rdx
        movq    %rdx, %r14
        movl    $0, %r15d
        movslq  %eax, %rdx
        movq    %rdx, %r12
        movl    $0, %r13d
        cltq
        leaq    0(,%rax,4), %rdx
        movl    $16, %eax
        subq    $1, %rax
        addq    %rdx, %rax
        movl    $16, %esi
        movl    $0, %edx
        divq    %rsi
        imulq   $16, %rax, %rax
        subq    %rax, %rsp
        movq    %rsp, %rax
        addq    $3, %rax
        shrq    $2, %rax
        salq    $2, %rax
        movq    %rax, -80(%rbp)
        movl    $0, -56(%rbp)
        jmp     .L17
.L21:
        movl    -56(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -88(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %ecx
        movq    -80(%rbp), %rax
        movl    -56(%rbp), %edx
        movslq  %edx, %rdx
        movl    %ecx, (%rax,%rdx,4)
        movl    -56(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -52(%rbp)
        jmp     .L18
.L20:
        movl    -56(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -88(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -52(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -88(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jl      .L19
        movq    -80(%rbp), %rax
        movl    -52(%rbp), %edx
        movslq  %edx, %rdx
        movl    (%rax,%rdx,4), %edx
        movl    -56(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -88(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %edx, %eax
        cvtsi2sd        %eax, %xmm1
        movq    -80(%rbp), %rax
        movl    -56(%rbp), %edx
        movslq  %edx, %rdx
        movl    (%rax,%rdx,4), %eax
        cvtsi2sd        %eax, %xmm0
        call    fmax
        cvttsd2si       %xmm0, %ecx
        movq    -80(%rbp), %rax
        movl    -56(%rbp), %edx
        movslq  %edx, %rdx
        movl    %ecx, (%rax,%rdx,4)
.L19:
        subl    $1, -52(%rbp)
.L18:
        cmpl    $0, -52(%rbp)
        jns     .L20
        movq    -80(%rbp), %rax
        movl    -56(%rbp), %edx
        movslq  %edx, %rdx
        movl    (%rax,%rdx,4), %eax
        cvtsi2sd        %eax, %xmm1
        cvtsi2sd        -60(%rbp), %xmm0
        call    fmax
        cvttsd2si       %xmm0, %eax
        movl    %eax, -60(%rbp)
        addl    $1, -56(%rbp)
.L17:
        movl    -56(%rbp), %eax
        cmpl    -92(%rbp), %eax
        jl      .L21
        movl    -60(%rbp), %eax
.L16:
        movq    %rbx, %rsp
        leaq    -40(%rbp), %rsp
        popq    %rbx
        popq    %r12
        popq    %r13
        popq    %r14
        popq    %r15
        popq    %rbp
        ret
