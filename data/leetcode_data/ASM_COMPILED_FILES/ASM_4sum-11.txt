func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movq    %rsi, -32(%rbp)
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, -4(%rbp)
        movq    -32(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, -8(%rbp)
        movl    -4(%rbp), %eax
        subl    -8(%rbp), %eax
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $72, %rsp
        movq    %rdi, -56(%rbp)
        movl    %esi, -60(%rbp)
        movl    %edx, -64(%rbp)
        movq    %rcx, -72(%rbp)
        cmpq    $0, -56(%rbp)
        je      .L4
        cmpl    $0, -60(%rbp)
        jne     .L5
.L4:
        movl    $0, %eax
        jmp     .L6
.L5:
        movl    -60(%rbp), %eax
        movslq  %eax, %rsi
        movq    -56(%rbp), %rax
        movl    $func_2, %ecx
        movl    $4, %edx
        movq    %rax, %rdi
        call    qsort
        movq    $0, -24(%rbp)
        movl    $0, -28(%rbp)
        movl    $0, -32(%rbp)
        jmp     .L7
.L24:
        cmpl    $0, -32(%rbp)
        jle     .L8
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -32(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L25
.L8:
        movl    -32(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -36(%rbp)
        jmp     .L10
.L23:
        movl    -32(%rbp), %eax
        addl    $1, %eax
        cmpl    %eax, -36(%rbp)
        jle     .L11
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -36(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L26
.L11:
        movl    -36(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -40(%rbp)
        movl    -60(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -44(%rbp)
        jmp     .L13
.L22:
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        subl    -64(%rbp), %eax
        movl    %eax, -48(%rbp)
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %edx, %eax
        addl    %eax, -48(%rbp)
        cmpl    $0, -48(%rbp)
        jne     .L14
        addl    $1, -28(%rbp)
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    realloc
        movq    %rax, -24(%rbp)
        movl    -28(%rbp), %eax
        cltq
        salq    $3, %rax
        leaq    -8(%rax), %rdx
        movq    -24(%rbp), %rax
        leaq    (%rdx,%rax), %rbx
        movl    $16, %edi
        call    malloc
        movq    %rax, (%rbx)
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rax, %rdx
        movl    -28(%rbp), %eax
        cltq
        salq    $3, %rax
        leaq    -8(%rax), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    (%rdx), %edx
        movl    %edx, (%rax)
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    -28(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        leaq    -8(%rdx), %rcx
        movq    -24(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        addq    $4, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    -28(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        leaq    -8(%rdx), %rcx
        movq    -24(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        addq    $8, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    -28(%rbp), %edx
        movslq  %edx, %rdx
        salq    $3, %rdx
        leaq    -8(%rdx), %rcx
        movq    -24(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        addq    $12, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        jmp     .L15
.L17:
        addl    $1, -40(%rbp)
.L15:
        movl    -40(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jge     .L18
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -40(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L17
        jmp     .L18
.L20:
        subl    $1, -44(%rbp)
.L18:
        movl    -40(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jge     .L19
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -44(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L20
.L19:
        addl    $1, -40(%rbp)
        subl    $1, -44(%rbp)
        jmp     .L13
.L14:
        cmpl    $0, -48(%rbp)
        jle     .L21
        subl    $1, -44(%rbp)
        jmp     .L13
.L21:
        addl    $1, -40(%rbp)
.L13:
        movl    -40(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L22
        jmp     .L12
.L26:
        nop
.L12:
        addl    $1, -36(%rbp)
.L10:
        movl    -36(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jl      .L23
        jmp     .L9
.L25:
        nop
.L9:
        addl    $1, -32(%rbp)
.L7:
        movl    -32(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jl      .L24
        movq    -72(%rbp), %rax
        movl    -28(%rbp), %edx
        movl    %edx, (%rax)
        movq    -24(%rbp), %rax
.L6:
        addq    $72, %rsp
        popq    %rbx
        popq    %rbp
        ret
