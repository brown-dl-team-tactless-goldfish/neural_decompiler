func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -8(%rbp)
        movl    %esi, -12(%rbp)
        movq    %rdx, -24(%rbp)
        cmpq    $0, -24(%rbp)
        je      .L5
        movq    -8(%rbp), %rax
        movl    (%rax), %eax
        cmpl    %eax, -12(%rbp)
        jle     .L4
        movq    -8(%rbp), %rax
        movl    -12(%rbp), %edx
        movl    %edx, (%rax)
.L4:
        movq    -24(%rbp), %rax
        movq    8(%rax), %rdx
        movl    -12(%rbp), %eax
        leal    1(%rax), %ecx
        movq    -8(%rbp), %rax
        movl    %ecx, %esi
        movq    %rax, %rdi
        call    func_2
        movq    -24(%rbp), %rax
        movq    16(%rax), %rdx
        movl    -12(%rbp), %eax
        leal    1(%rax), %ecx
        movq    -8(%rbp), %rax
        movl    %ecx, %esi
        movq    %rax, %rdi
        call    func_2
        jmp     .L1
.L5:
        nop
.L1:
        leave
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        cmpq    $0, -24(%rbp)
        jne     .L7
        movl    $1, %eax
        jmp     .L11
.L7:
        movl    $-1, -4(%rbp)
        movl    $-1, -8(%rbp)
        movq    -24(%rbp), %rax
        movq    8(%rax), %rdx
        leaq    -4(%rbp), %rax
        movl    $0, %esi
        movq    %rax, %rdi
        call    func_2
        movq    -24(%rbp), %rax
        movq    16(%rax), %rdx
        leaq    -8(%rbp), %rax
        movl    $0, %esi
        movq    %rax, %rdi
        call    func_2
        movl    -4(%rbp), %edx
        movl    -8(%rbp), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        cmpl    $-1, %eax
        jl      .L9
        movl    -4(%rbp), %edx
        movl    -8(%rbp), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        cmpl    $1, %eax
        jg      .L9
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, %rdi
        call    func_1
        testb   %al, %al
        je      .L9
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, %rdi
        call    func_1
        testb   %al, %al
        je      .L9
        movl    $1, %eax
        jmp     .L10
.L9:
        movl    $0, %eax
.L10:
        andl    $1, %eax
.L11:
        leave
        ret
