func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -40(%rbp)
        movq    $0, -8(%rbp)
        movq    -40(%rbp), %rax
        movq    %rax, -16(%rbp)
        jmp     .L2
.L3:
        movq    -16(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -24(%rbp)
        movq    -16(%rbp), %rax
        movq    -8(%rbp), %rdx
        movq    %rdx, 8(%rax)
        movq    -16(%rbp), %rax
        movq    %rax, -8(%rbp)
        movq    -24(%rbp), %rax
        movq    %rax, -16(%rbp)
.L2:
        cmpq    $0, -16(%rbp)
        jne     .L3
        movq    -8(%rbp), %rax
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -40(%rbp)
        movq    %rsi, -48(%rbp)
        movq    -40(%rbp), %rax
        movq    %rax, %rdi
        call    func_1
        movq    %rax, -40(%rbp)
        movq    -48(%rbp), %rax
        movq    %rax, %rdi
        call    func_1
        movq    %rax, -48(%rbp)
        movq    -8(%rbp), %rax
        movq    %rax, -16(%rbp)
        movl    $0, -20(%rbp)
        movl    $1, -24(%rbp)
        jmp     .L6
.L12:
        movl    $16, %edi
        call    malloc
        movq    %rax, -32(%rbp)
        cmpq    $0, -40(%rbp)
        je      .L7
        cmpq    $0, -48(%rbp)
        je      .L7
        movq    -40(%rbp), %rax
        movl    (%rax), %edx
        movq    -48(%rbp), %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -20(%rbp), %eax
        leal    (%rdx,%rax), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movq    -32(%rbp), %rax
        movl    %edx, (%rax)
        movq    -40(%rbp), %rax
        movl    (%rax), %edx
        movq    -48(%rbp), %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -20(%rbp), %eax
        leal    (%rdx,%rax), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -20(%rbp)
        movq    -40(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -40(%rbp)
        movq    -48(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -48(%rbp)
        jmp     .L8
.L7:
        cmpq    $0, -40(%rbp)
        je      .L9
        movq    -40(%rbp), %rax
        movl    (%rax), %edx
        movl    -20(%rbp), %eax
        leal    (%rdx,%rax), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movq    -32(%rbp), %rax
        movl    %edx, (%rax)
        movq    -40(%rbp), %rax
        movl    (%rax), %edx
        movl    -20(%rbp), %eax
        leal    (%rdx,%rax), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -20(%rbp)
        movq    -40(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -40(%rbp)
        jmp     .L8
.L9:
        cmpq    $0, -48(%rbp)
        je      .L10
        movq    -48(%rbp), %rax
        movl    (%rax), %edx
        movl    -20(%rbp), %eax
        leal    (%rdx,%rax), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movq    -32(%rbp), %rax
        movl    %edx, (%rax)
        movq    -48(%rbp), %rax
        movl    (%rax), %edx
        movl    -20(%rbp), %eax
        leal    (%rdx,%rax), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -20(%rbp)
        movq    -48(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -48(%rbp)
        jmp     .L8
.L10:
        cmpl    $0, -20(%rbp)
        jle     .L8
        movq    -32(%rbp), %rax
        movl    $1, (%rax)
        movl    $0, -20(%rbp)
.L8:
        movq    -32(%rbp), %rax
        movq    $0, 8(%rax)
        cmpl    $0, -24(%rbp)
        je      .L11
        movl    $0, -24(%rbp)
        movq    -32(%rbp), %rax
        movq    %rax, -8(%rbp)
        movq    -32(%rbp), %rax
        movq    %rax, -16(%rbp)
        jmp     .L6
.L11:
        movq    -16(%rbp), %rax
        movq    -32(%rbp), %rdx
        movq    %rdx, 8(%rax)
        movq    -16(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -16(%rbp)
.L6:
        cmpq    $0, -40(%rbp)
        jne     .L12
        cmpq    $0, -48(%rbp)
        jne     .L12
        cmpl    $0, -20(%rbp)
        jne     .L12
        movq    -8(%rbp), %rax
        movq    %rax, %rdi
        call    func_1
        leave
        ret
