func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $56, %rsp
        movq    %rdi, -56(%rbp)
        movq    %rsi, -64(%rbp)
        movq    -56(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -44(%rbp)
        movq    -64(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -48(%rbp)
        movl    -44(%rbp), %eax
        cmpl    -48(%rbp), %eax
        je      .L2
        movl    $0, %eax
        jmp     .L3
.L2:
        movl    $-1, -20(%rbp)
        movl    $-1, -24(%rbp)
        movq    -64(%rbp), %rdx
        movq    -56(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    strcmp
        testl   %eax, %eax
        jne     .L4
        movq    -56(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        cmpq    $1, %rax
        jbe     .L4
        movl    $0, -28(%rbp)
        jmp     .L5
.L9:
        movl    -28(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -32(%rbp)
        jmp     .L6
.L8:
        movl    -28(%rbp), %eax
        movslq  %eax, %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %edx
        movl    -32(%rbp), %eax
        movslq  %eax, %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        jne     .L7
        movl    $1, %eax
        jmp     .L3
.L7:
        addl    $1, -32(%rbp)
.L6:
        movl    -32(%rbp), %eax
        movslq  %eax, %rbx
        movq    -56(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        cmpq    %rax, %rbx
        jb      .L8
        addl    $1, -28(%rbp)
.L5:
        movl    -28(%rbp), %eax
        movslq  %eax, %rbx
        movq    -56(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        cmpq    %rax, %rbx
        jb      .L9
.L4:
        movl    $0, -36(%rbp)
        movl    $0, -40(%rbp)
        jmp     .L10
.L13:
        movl    -40(%rbp), %eax
        movslq  %eax, %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %edx
        movl    -40(%rbp), %eax
        movslq  %eax, %rcx
        movq    -64(%rbp), %rax
        addq    %rcx, %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        je      .L11
        addl    $1, -36(%rbp)
        cmpl    $2, -36(%rbp)
        jle     .L12
        movl    $0, %eax
        jmp     .L3
.L12:
        movl    -24(%rbp), %eax
        movl    %eax, -20(%rbp)
        movl    -40(%rbp), %eax
        movl    %eax, -24(%rbp)
.L11:
        addl    $1, -40(%rbp)
.L10:
        movl    -40(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L13
        cmpl    $2, -36(%rbp)
        jne     .L14
        movl    -20(%rbp), %eax
        movslq  %eax, %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %edx
        movl    -24(%rbp), %eax
        movslq  %eax, %rcx
        movq    -64(%rbp), %rax
        addq    %rcx, %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        jne     .L14
        movl    -24(%rbp), %eax
        movslq  %eax, %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %edx
        movl    -20(%rbp), %eax
        movslq  %eax, %rcx
        movq    -64(%rbp), %rax
        addq    %rcx, %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        jne     .L14
        movl    $1, %eax
        jmp     .L15
.L14:
        movl    $0, %eax
.L15:
        andl    $1, %eax
.L3:
        addq    $56, %rsp
        popq    %rbx
        popq    %rbp
        ret
