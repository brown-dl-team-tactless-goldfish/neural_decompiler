func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %r15
        pushq   %r14
        pushq   %r13
        pushq   %r12
        pushq   %rbx
        subq    $120, %rsp
        movq    %rdi, -120(%rbp)
        movq    %rsi, -128(%rbp)
        movq    %rsp, %rax
        movq    %rax, %rbx
        movq    -120(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -72(%rbp)
        movl    $0, -68(%rbp)
        movl    $0, -64(%rbp)
        movl    $1, %esi
        movl    $16, %edi
        call    calloc
        movq    %rax, -80(%rbp)
        movl    -72(%rbp), %eax
        movslq  %eax, %rdx
        subq    $1, %rdx
        movq    %rdx, -88(%rbp)
        movslq  %eax, %rdx
        movq    %rdx, -144(%rbp)
        movq    $0, -136(%rbp)
        movslq  %eax, %rdx
        movq    %rdx, -160(%rbp)
        movq    $0, -152(%rbp)
        cltq
        movl    $16, %edx
        subq    $1, %rdx
        addq    %rdx, %rax
        movl    $16, %esi
        movl    $0, %edx
        divq    %rsi
        imulq   $16, %rax, %rax
        subq    %rax, %rsp
        movq    %rsp, %rax
        addq    $0, %rax
        movq    %rax, -96(%rbp)
        movl    -72(%rbp), %eax
        movslq  %eax, %rdx
        subq    $1, %rdx
        movq    %rdx, -104(%rbp)
        movslq  %eax, %rdx
        movq    %rdx, %r14
        movl    $0, %r15d
        movslq  %eax, %rdx
        movq    %rdx, %r12
        movl    $0, %r13d
        cltq
        movl    $16, %edx
        subq    $1, %rdx
        addq    %rdx, %rax
        movl    $16, %edi
        movl    $0, %edx
        divq    %rdi
        imulq   $16, %rax, %rax
        subq    %rax, %rsp
        movq    %rsp, %rax
        addq    $0, %rax
        movq    %rax, -112(%rbp)
        movl    $0, -60(%rbp)
        jmp     .L2
.L5:
        movl    -60(%rbp), %eax
        movslq  %eax, %rdx
        movq    -120(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %edx
        movl    -60(%rbp), %eax
        movslq  %eax, %rcx
        movq    -128(%rbp), %rax
        addq    %rcx, %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        jne     .L3
        addl    $1, -68(%rbp)
        movq    -96(%rbp), %rdx
        movl    -60(%rbp), %eax
        cltq
        movb    $1, (%rdx,%rax)
        movq    -112(%rbp), %rdx
        movl    -60(%rbp), %eax
        cltq
        movb    $1, (%rdx,%rax)
        jmp     .L4
.L3:
        movq    -96(%rbp), %rdx
        movl    -60(%rbp), %eax
        cltq
        movb    $0, (%rdx,%rax)
        movq    -112(%rbp), %rdx
        movl    -60(%rbp), %eax
        cltq
        movb    $0, (%rdx,%rax)
.L4:
        addl    $1, -60(%rbp)
.L2:
        movl    -60(%rbp), %eax
        cmpl    -72(%rbp), %eax
        jl      .L5
        movl    $0, -56(%rbp)
        jmp     .L6
.L13:
        movq    -96(%rbp), %rdx
        movl    -56(%rbp), %eax
        cltq
        movzbl  (%rdx,%rax), %eax
        testb   %al, %al
        jne     .L15
        movl    $0, -52(%rbp)
        jmp     .L9
.L12:
        movq    -112(%rbp), %rdx
        movl    -52(%rbp), %eax
        cltq
        movzbl  (%rdx,%rax), %eax
        testb   %al, %al
        jne     .L16
        movl    -56(%rbp), %eax
        movslq  %eax, %rdx
        movq    -120(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %edx
        movl    -52(%rbp), %eax
        movslq  %eax, %rcx
        movq    -128(%rbp), %rax
        addq    %rcx, %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        jne     .L11
        addl    $1, -64(%rbp)
        movq    -96(%rbp), %rdx
        movl    -56(%rbp), %eax
        cltq
        movb    $1, (%rdx,%rax)
        movq    -112(%rbp), %rdx
        movl    -52(%rbp), %eax
        cltq
        movb    $1, (%rdx,%rax)
        jmp     .L8
.L16:
        nop
.L11:
        addl    $1, -52(%rbp)
.L9:
        movl    -52(%rbp), %eax
        cmpl    -72(%rbp), %eax
        jl      .L12
        jmp     .L8
.L15:
        nop
.L8:
        addl    $1, -56(%rbp)
.L6:
        movl    -56(%rbp), %eax
        cmpl    -72(%rbp), %eax
        jl      .L13
        movq    -80(%rbp), %rax
        movq    %rbx, %rsp
        leaq    -40(%rbp), %rsp
        popq    %rbx
        popq    %r12
        popq    %r13
        popq    %r14
        popq    %r15
        popq    %rbp
        ret
