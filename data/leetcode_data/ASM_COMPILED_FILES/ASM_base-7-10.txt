func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $10064, %rsp
        movl    %edi, -10052(%rbp)
        movl    -10052(%rbp), %eax
        movl    %eax, -8(%rbp)
        movl    $0, -12(%rbp)
        movl    $0, -16(%rbp)
        movl    $0, -20(%rbp)
        movl    $0, -24(%rbp)
        movb    $0, -25(%rbp)
        cmpl    $0, -8(%rbp)
        jns     .L3
        negl    -8(%rbp)
        addl    $1, -24(%rbp)
        jmp     .L3
.L4:
        movl    -8(%rbp), %ecx
        movl    $-1840700269, %edx
        movl    %ecx, %eax
        imull   %edx
        leal    (%rdx,%rcx), %eax
        sarl    $2, %eax
        movl    %eax, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $3, %eax
        subl    %edx, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movl    %edx, %eax
        addl    $48, %eax
        movl    %eax, %edx
        movl    -12(%rbp), %eax
        cltq
        movb    %dl, -10048(%rbp,%rax)
        addl    $1, -12(%rbp)
        movl    -8(%rbp), %ecx
        movl    $-1840700269, %edx
        movl    %ecx, %eax
        imull   %edx
        leal    (%rdx,%rcx), %eax
        sarl    $2, %eax
        movl    %eax, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -8(%rbp)
.L3:
        cmpl    $0, -8(%rbp)
        jg      .L4
        movl    -12(%rbp), %eax
        cltq
        movb    $0, -10048(%rbp,%rax)
        movl    $0, -16(%rbp)
        movl    -12(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -20(%rbp)
        jmp     .L5
.L6:
        movl    -16(%rbp), %eax
        cltq
        movzbl  -10048(%rbp,%rax), %eax
        movb    %al, -25(%rbp)
        movl    -20(%rbp), %eax
        cltq
        movzbl  -10048(%rbp,%rax), %edx
        movl    -16(%rbp), %eax
        cltq
        movb    %dl, -10048(%rbp,%rax)
        movl    -20(%rbp), %eax
        cltq
        movzbl  -25(%rbp), %edx
        movb    %dl, -10048(%rbp,%rax)
        addl    $1, -16(%rbp)
        subl    $1, -20(%rbp)
.L5:
        movl    -16(%rbp), %eax
        cmpl    -20(%rbp), %eax
        jle     .L6
        cmpl    $0, -24(%rbp)
        jle     .L7
        leaq    -10048(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -24(%rbp)
        movl    -24(%rbp), %eax
        movl    %eax, -4(%rbp)
        jmp     .L8
.L9:
        movl    -4(%rbp), %eax
        leal    1(%rax), %ecx
        movl    -4(%rbp), %eax
        cltq
        movzbl  -10048(%rbp,%rax), %edx
        movslq  %ecx, %rax
        movb    %dl, -10048(%rbp,%rax)
        subl    $1, -4(%rbp)
.L8:
        cmpl    $0, -4(%rbp)
        jns     .L9
        movb    $45, -10048(%rbp)
.L7:
        cmpl    $0, -10052(%rbp)
        jne     .L10
        movb    $48, -10048(%rbp)
        movb    $0, -10047(%rbp)
.L10:
        leaq    -10048(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        addq    $1, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -40(%rbp)
        leaq    -10048(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        addq    $1, %rax
        movq    %rax, -48(%rbp)
        leaq    -10048(%rbp), %rdx
        movq    -40(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    strcpy
        movq    -40(%rbp), %rax
        leave
        ret
