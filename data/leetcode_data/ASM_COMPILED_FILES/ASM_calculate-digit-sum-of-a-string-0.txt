func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -20(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L2
.L3:
        addl    $1, -4(%rbp)
        movl    -20(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -20(%rbp)
.L2:
        cmpl    $0, -20(%rbp)
        jne     .L3
        cmpl    $0, -4(%rbp)
        je      .L4
        movl    -4(%rbp), %eax
        jmp     .L6
.L4:
        movl    $1, %eax
.L6:
        popq    %rbp
        ret
func_1Sum:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movq    -40(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -20(%rbp)
        movl    -20(%rbp), %eax
        addl    $1, %eax
        cltq
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -32(%rbp)
        movl    -20(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jg      .L8
        movq    -40(%rbp), %rdx
        movq    -32(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    strcpy
        movq    -32(%rbp), %rax
        jmp     .L9
.L8:
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        movl    $0, -16(%rbp)
        jmp     .L10
.L15:
        movl    -16(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        subl    $48, %eax
        addl    %eax, -4(%rbp)
        movl    -16(%rbp), %eax
        cltd
        idivl   -44(%rbp)
        movl    -44(%rbp), %eax
        subl    $1, %eax
        cmpl    %eax, %edx
        je      .L11
        movl    -20(%rbp), %eax
        subl    $1, %eax
        cmpl    %eax, -16(%rbp)
        jne     .L12
.L11:
        movl    -4(%rbp), %eax
        movl    %eax, %edi
        call    func_1
        movl    %eax, -12(%rbp)
        jmp     .L13
.L14:
        movl    -12(%rbp), %eax
        subl    $1, %eax
        cvtsi2sd        %eax, %xmm1
        movsd   .LC0(%rip), %xmm0
        call    pow
        cvttsd2si       %xmm0, %esi
        movl    -4(%rbp), %eax
        cltd
        idivl   %esi
        leal    48(%rax), %ecx
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    %ecx, %edx
        movb    %dl, (%rax)
        addl    $1, -8(%rbp)
        movl    -12(%rbp), %eax
        subl    $1, %eax
        cvtsi2sd        %eax, %xmm1
        movsd   .LC0(%rip), %xmm0
        call    pow
        cvttsd2si       %xmm0, %ecx
        movl    -4(%rbp), %eax
        cltd
        idivl   %ecx
        movl    %edx, -4(%rbp)
        subl    $1, -12(%rbp)
.L13:
        cmpl    $0, -12(%rbp)
        jg      .L14
        movl    $0, -4(%rbp)
.L12:
        addl    $1, -16(%rbp)
.L10:
        movl    -16(%rbp), %eax
        cmpl    -20(%rbp), %eax
        jl      .L15
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movb    $0, (%rax)
        movl    -8(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jg      .L16
        movq    -32(%rbp), %rax
        jmp     .L9
.L16:
        movl    -44(%rbp), %edx
        movq    -32(%rbp), %rax
        movl    %edx, %esi
        movq    %rax, %rdi
        call    func_1Sum
.L9:
        leave
        ret
.LC0:
        .long   0
        .long   1076101120
