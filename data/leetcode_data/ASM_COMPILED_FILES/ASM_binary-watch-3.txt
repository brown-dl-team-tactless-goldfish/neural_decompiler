func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -4(%rbp)
        movl    %esi, -8(%rbp)
        cmpl    $11, -4(%rbp)
        jg      .L2
        cmpl    $59, -8(%rbp)
        jle     .L3
.L2:
        movl    $0, %eax
        jmp     .L4
.L3:
        movl    $1, %eax
.L4:
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movl    %edi, -20(%rbp)
        movl    %esi, -24(%rbp)
        movl    $0, -12(%rbp)
        cmpl    $9, -20(%rbp)
        jle     .L6
        movl    $6, %edi
        call    malloc
        movq    %rax, -8(%rbp)
        movl    -20(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        leal    48(%rax), %ecx
        movl    -12(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -12(%rbp)
        movslq  %eax, %rdx
        movq    -8(%rbp), %rax
        addq    %rdx, %rax
        movl    %ecx, %edx
        movb    %dl, (%rax)
        jmp     .L7
.L6:
        movl    $5, %edi
        call    malloc
        movq    %rax, -8(%rbp)
.L7:
        movl    -20(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movl    %edx, %eax
        leal    48(%rax), %ecx
        movl    -12(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -12(%rbp)
        movslq  %eax, %rdx
        movq    -8(%rbp), %rax
        addq    %rdx, %rax
        movl    %ecx, %edx
        movb    %dl, (%rax)
        movl    -12(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -12(%rbp)
        movslq  %eax, %rdx
        movq    -8(%rbp), %rax
        addq    %rdx, %rax
        movb    $58, (%rax)
        movl    -24(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        leal    48(%rax), %ecx
        movl    -12(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -12(%rbp)
        movslq  %eax, %rdx
        movq    -8(%rbp), %rax
        addq    %rdx, %rax
        movl    %ecx, %edx
        movb    %dl, (%rax)
        movl    -24(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movl    %edx, %eax
        leal    48(%rax), %ecx
        movl    -12(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -12(%rbp)
        movslq  %eax, %rdx
        movq    -8(%rbp), %rax
        addq    %rdx, %rax
        movl    %ecx, %edx
        movb    %dl, (%rax)
        movl    -12(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -12(%rbp)
        movslq  %eax, %rdx
        movq    -8(%rbp), %rax
        addq    %rdx, %rax
        movb    $0, (%rax)
        movq    -8(%rbp), %rax
        leave
        ret
func_4:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    %edx, -32(%rbp)
        movl    %ecx, -36(%rbp)
        movq    %r8, -48(%rbp)
        cmpl    $0, -28(%rbp)
        jne     .L10
        movl    -36(%rbp), %edx
        movl    -32(%rbp), %eax
        movl    %edx, %esi
        movl    %eax, %edi
        movl    $0, %eax
        call    to_text
        movslq  %eax, %rsi
        movq    -48(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %ecx
        movq    -48(%rbp), %rdx
        movl    %ecx, (%rdx)
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    %rsi, %rdx
        movq    %rdx, (%rax)
        jmp     .L9
.L10:
        cmpl    $0, -36(%rbp)
        jne     .L12
        movl    $8, -4(%rbp)
        jmp     .L13
.L15:
        movl    -32(%rbp), %edx
        movl    -4(%rbp), %eax
        addl    %eax, %edx
        movl    -36(%rbp), %eax
        movl    %eax, %esi
        movl    %edx, %edi
        call    func_3
        testl   %eax, %eax
        je      .L14
        movl    -32(%rbp), %edx
        movl    -4(%rbp), %eax
        leal    (%rdx,%rax), %edi
        movl    -28(%rbp), %eax
        leal    -1(%rax), %esi
        movq    -48(%rbp), %rcx
        movl    -36(%rbp), %edx
        movq    -24(%rbp), %rax
        movq    %rcx, %r8
        movl    %edx, %ecx
        movl    %edi, %edx
        movq    %rax, %rdi
        call    func_4
.L14:
        sarl    -4(%rbp)
.L13:
        movl    -4(%rbp), %eax
        cmpl    -32(%rbp), %eax
        jg      .L15
.L12:
        movl    $32, -4(%rbp)
        jmp     .L16
.L18:
        movl    -36(%rbp), %edx
        movl    -4(%rbp), %eax
        addl    %eax, %edx
        movl    -32(%rbp), %eax
        movl    %edx, %esi
        movl    %eax, %edi
        call    func_3
        testl   %eax, %eax
        je      .L17
        movl    -36(%rbp), %edx
        movl    -4(%rbp), %eax
        leal    (%rdx,%rax), %ecx
        movl    -28(%rbp), %eax
        leal    -1(%rax), %esi
        movq    -48(%rbp), %rdi
        movl    -32(%rbp), %edx
        movq    -24(%rbp), %rax
        movq    %rdi, %r8
        movq    %rax, %rdi
        call    func_4
.L17:
        sarl    -4(%rbp)
.L16:
        movl    -4(%rbp), %eax
        cmpl    -36(%rbp), %eax
        jg      .L18
.L9:
        leave
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movl    %edi, -20(%rbp)
        movq    %rsi, -32(%rbp)
        movl    $2400, %edi
        call    malloc
        movq    %rax, -8(%rbp)
        cmpq    $0, -8(%rbp)
        jne     .L20
        movl    $0, %eax
        jmp     .L21
.L20:
        movq    -32(%rbp), %rax
        movl    $0, (%rax)
        cmpl    $8, -20(%rbp)
        jg      .L22
        movq    -32(%rbp), %rdx
        movl    -20(%rbp), %esi
        movq    -8(%rbp), %rax
        movq    %rdx, %r8
        movl    $0, %ecx
        movl    $0, %edx
        movq    %rax, %rdi
        call    func_4
.L22:
        movq    -8(%rbp), %rax
.L21:
        leave
        ret
