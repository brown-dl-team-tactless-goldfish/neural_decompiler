func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $72, %rsp
        movq    %rdi, -72(%rbp)
        movl    %esi, -76(%rbp)
        movq    %rsp, %rax
        movq    %rax, %rbx
        movl    $0, -28(%rbp)
        movl    -76(%rbp), %eax
        movslq  %eax, %rdx
        subq    $1, %rdx
        movq    %rdx, -48(%rbp)
        movslq  %eax, %rdx
        movq    %rdx, %r10
        movl    $0, %r11d
        movslq  %eax, %rdx
        movq    %rdx, %r8
        movl    $0, %r9d
        cltq
        leaq    0(,%rax,4), %rdx
        movl    $16, %eax
        subq    $1, %rax
        addq    %rdx, %rax
        movl    $16, %ecx
        movl    $0, %edx
        divq    %rcx
        imulq   $16, %rax, %rax
        subq    %rax, %rsp
        movq    %rsp, %rax
        addq    $3, %rax
        shrq    $2, %rax
        salq    $2, %rax
        movq    %rax, -56(%rbp)
        movq    -56(%rbp), %rax
        movq    %rax, -24(%rbp)
        movq    $0, -40(%rbp)
        jmp     .L2
.L7:
        movq    -72(%rbp), %rax
        movq    (%rax), %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        cmpl    $67, %eax
        je      .L3
        cmpl    $68, %eax
        je      .L4
        cmpl    $43, %eax
        jne     .L5
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, -60(%rbp)
        subq    $4, -24(%rbp)
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        addl    %eax, -60(%rbp)
        addq    $8, -24(%rbp)
        movq    -24(%rbp), %rax
        movl    -60(%rbp), %edx
        movl    %edx, (%rax)
        movl    -60(%rbp), %eax
        addl    %eax, -28(%rbp)
        jmp     .L6
.L3:
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        subl    %eax, -28(%rbp)
        subq    $4, -24(%rbp)
        jmp     .L6
.L4:
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        addl    %eax, %eax
        movl    %eax, -60(%rbp)
        addq    $4, -24(%rbp)
        movq    -24(%rbp), %rax
        movl    -60(%rbp), %edx
        movl    %edx, (%rax)
        movl    -60(%rbp), %eax
        addl    %eax, -28(%rbp)
        jmp     .L6
.L5:
        movq    -72(%rbp), %rax
        movq    (%rax), %rax
        addq    $4, -24(%rbp)
        movq    %rax, %rdi
        call    atoi
        movl    %eax, %edx
        movq    -24(%rbp), %rax
        movl    %edx, (%rax)
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        addl    %eax, -28(%rbp)
        nop
.L6:
        addq    $1, -40(%rbp)
        addq    $8, -72(%rbp)
.L2:
        movl    -76(%rbp), %eax
        cltq
        cmpq    %rax, -40(%rbp)
        jb      .L7
        movl    -28(%rbp), %eax
        movq    %rbx, %rsp
        movq    -8(%rbp), %rbx
        leave
        ret
