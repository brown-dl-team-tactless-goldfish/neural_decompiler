func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $64, %rsp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movq    %rdx, -56(%rbp)
        movl    %ecx, -48(%rbp)
        cmpl    $0, -44(%rbp)
        jne     .L2
        movl    $1, %eax
        jmp     .L3
.L2:
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        jmp     .L4
.L6:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    (%rax), %eax
        cmpl    %eax, -4(%rbp)
        jge     .L5
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    4(%rax), %eax
        movl    %eax, -4(%rbp)
.L5:
        addl    $1, -8(%rbp)
.L4:
        movl    -8(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L6
        movl    -4(%rbp), %eax
        addl    $1, %eax
        cltq
        movl    $4, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, -24(%rbp)
        movl    $0, -12(%rbp)
        jmp     .L7
.L9:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %ecx
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %edx
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rsi
        movq    -40(%rbp), %rax
        addq    %rsi, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,4), %rsi
        movq    -24(%rbp), %rax
        addq    %rsi, %rax
        addl    %ecx, %edx
        movl    %edx, (%rax)
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $8, %rax
        movl    (%rax), %eax
        cmpl    %eax, -4(%rbp)
        jl      .L8
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $8, %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %ecx
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %edx
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rsi
        movq    -40(%rbp), %rax
        addq    %rsi, %rax
        movq    (%rax), %rax
        addq    $8, %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,4), %rsi
        movq    -24(%rbp), %rax
        addq    %rsi, %rax
        subl    %edx, %ecx
        movl    %ecx, %edx
        movl    %edx, (%rax)
.L8:
        addl    $1, -12(%rbp)
.L7:
        movl    -12(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L9
        movl    $0, -16(%rbp)
        jmp     .L10
.L13:
        cmpl    $0, -16(%rbp)
        jle     .L11
        movl    -16(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %ecx
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rsi
        movq    -24(%rbp), %rax
        addq    %rsi, %rax
        addl    %ecx, %edx
        movl    %edx, (%rax)
.L11:
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -48(%rbp)
        jge     .L12
        movl    $0, %eax
        jmp     .L3
.L12:
        addl    $1, -16(%rbp)
.L10:
        movl    -16(%rbp), %eax
        cmpl    -4(%rbp), %eax
        jle     .L13
        movl    $1, %eax
.L3:
        leave
        ret
