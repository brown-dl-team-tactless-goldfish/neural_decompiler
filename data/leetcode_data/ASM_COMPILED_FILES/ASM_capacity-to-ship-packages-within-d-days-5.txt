func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    %edx, -32(%rbp)
        movl    %ecx, -36(%rbp)
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        movl    $0, -12(%rbp)
        jmp     .L2
.L5:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -8(%rbp), %eax
        addl    %edx, %eax
        cmpl    %eax, -36(%rbp)
        jl      .L3
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        addl    %eax, -8(%rbp)
        jmp     .L4
.L3:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    %eax, -8(%rbp)
        addl    $1, -4(%rbp)
.L4:
        addl    $1, -12(%rbp)
.L2:
        movl    -12(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jl      .L5
        movl    -4(%rbp), %eax
        cmpl    -32(%rbp), %eax
        jge     .L6
        movl    $1, %eax
        jmp     .L7
.L6:
        movl    $0, %eax
.L7:
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    %edx, -32(%rbp)
        movl    %ecx, -36(%rbp)
        movl    %r8d, -40(%rbp)
        movl    -40(%rbp), %eax
        cmpl    -36(%rbp), %eax
        jl      .L9
        movl    -40(%rbp), %eax
        subl    -36(%rbp), %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        movl    %eax, %edx
        movl    -36(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, -4(%rbp)
        movl    -4(%rbp), %ecx
        movl    -32(%rbp), %edx
        movl    -28(%rbp), %esi
        movq    -24(%rbp), %rax
        movq    %rax, %rdi
        call    func_2
        testb   %al, %al
        je      .L10
        movl    -4(%rbp), %eax
        leal    -1(%rax), %edi
        movl    -36(%rbp), %ecx
        movl    -32(%rbp), %edx
        movl    -28(%rbp), %esi
        movq    -24(%rbp), %rax
        movl    %edi, %r8d
        movq    %rax, %rdi
        call    func_1
        jmp     .L11
.L10:
        movl    -4(%rbp), %eax
        leal    1(%rax), %ecx
        movl    -40(%rbp), %edi
        movl    -32(%rbp), %edx
        movl    -28(%rbp), %esi
        movq    -24(%rbp), %rax
        movl    %edi, %r8d
        movq    %rax, %rdi
        call    func_1
        jmp     .L11
.L9:
        movl    -36(%rbp), %eax
.L11:
        leave
        ret
func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    %edx, -32(%rbp)
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        movl    $0, -12(%rbp)
        jmp     .L13
.L15:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        addl    %eax, -8(%rbp)
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -4(%rbp)
        jge     .L14
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    %eax, -4(%rbp)
.L14:
        addl    $1, -12(%rbp)
.L13:
        movl    -12(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jl      .L15
        movl    -8(%rbp), %edi
        movl    -4(%rbp), %ecx
        movl    -32(%rbp), %edx
        movl    -28(%rbp), %esi
        movq    -24(%rbp), %rax
        movl    %edi, %r8d
        movq    %rax, %rdi
        call    func_1
        leave
        ret
