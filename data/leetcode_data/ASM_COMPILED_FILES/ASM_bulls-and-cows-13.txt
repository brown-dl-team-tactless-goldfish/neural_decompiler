func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $56, %rsp
        movq    %rdi, -56(%rbp)
        movq    %rsi, -64(%rbp)
        movl    $4, %esi
        movl    $10, %edi
        call    calloc
        movq    %rax, -40(%rbp)
        movl    $0, -24(%rbp)
        movl    $0, -28(%rbp)
        movl    $0, -20(%rbp)
        jmp     .L2
.L4:
        movl    -20(%rbp), %eax
        movslq  %eax, %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %edx
        movl    -20(%rbp), %eax
        movslq  %eax, %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        je      .L3
        movl    -20(%rbp), %eax
        movslq  %eax, %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbq  %al, %rax
        salq    $2, %rax
        leaq    -192(%rax), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        addl    $1, %edx
        movl    %edx, (%rax)
.L3:
        addl    $1, -20(%rbp)
.L2:
        movl    -20(%rbp), %eax
        movslq  %eax, %rbx
        movq    -64(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        cmpq    %rax, %rbx
        jb      .L4
        movl    $0, -20(%rbp)
        jmp     .L5
.L8:
        movl    -20(%rbp), %eax
        movslq  %eax, %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %edx
        movl    -20(%rbp), %eax
        movslq  %eax, %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        jne     .L6
        addl    $1, -24(%rbp)
        jmp     .L7
.L6:
        movl    -20(%rbp), %eax
        movslq  %eax, %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbq  %al, %rax
        salq    $2, %rax
        leaq    -192(%rax), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        je      .L7
        addl    $1, -28(%rbp)
        movl    -20(%rbp), %eax
        movslq  %eax, %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbq  %al, %rax
        salq    $2, %rax
        leaq    -192(%rax), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        subl    $1, %edx
        movl    %edx, (%rax)
.L7:
        addl    $1, -20(%rbp)
.L5:
        movl    -20(%rbp), %eax
        movslq  %eax, %rbx
        movq    -64(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        cmpq    %rax, %rbx
        jb      .L8
        movl    $10, %edi
        call    malloc
        movq    %rax, -48(%rbp)
        movq    -48(%rbp), %rax
        addq    $56, %rsp
        popq    %rbx
        popq    %rbp
        ret
