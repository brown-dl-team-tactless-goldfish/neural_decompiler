func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $88, %rsp
        movq    %rdi, -72(%rbp)
        movq    %rsi, -80(%rbp)
        movq    %rdx, -88(%rbp)
        cmpq    $0, -72(%rbp)
        jne     .L2
        movq    -88(%rbp), %rax
        movl    $0, (%rax)
        movl    $4, %esi
        movl    $1, %edi
        call    calloc
        movq    %rax, %rdx
        movq    -80(%rbp), %rax
        movq    %rdx, (%rax)
        movq    -80(%rbp), %rax
        movq    (%rax), %rax
        movl    $0, (%rax)
        movl    $8, %edi
        call    malloc
        jmp     .L3
.L2:
        movl    $9600, %edi
        call    malloc
        movq    %rax, -48(%rbp)
        movl    $16, %edi
        call    malloc
        movq    %rax, %rdx
        movq    -48(%rbp), %rax
        movq    %rdx, (%rax)
        movq    -48(%rbp), %rax
        movq    (%rax), %rax
        movl    $0, (%rax)
        movq    -48(%rbp), %rax
        movq    (%rax), %rax
        movq    -72(%rbp), %rdx
        movq    %rdx, 8(%rax)
        movl    $0, -20(%rbp)
        movl    $1, -24(%rbp)
        movl    $0, -28(%rbp)
        jmp     .L4
.L9:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    8(%rax), %rax
        movq    8(%rax), %rax
        testq   %rax, %rax
        je      .L5
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        leaq    (%rdx,%rax), %rbx
        movl    $16, %edi
        call    malloc
        movq    %rax, (%rbx)
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    8(%rax), %rdx
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rcx
        movq    -48(%rbp), %rax
        addq    %rcx, %rax
        movq    (%rax), %rax
        movq    8(%rdx), %rdx
        movq    %rdx, 8(%rax)
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %edx
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rcx
        movq    -48(%rbp), %rax
        addq    %rcx, %rax
        movq    (%rax), %rax
        addl    $1, %edx
        movl    %edx, (%rax)
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        cmpl    %eax, -28(%rbp)
        jge     .L6
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        movl    %eax, -28(%rbp)
.L6:
        addl    $1, -24(%rbp)
.L5:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    8(%rax), %rax
        movq    16(%rax), %rax
        testq   %rax, %rax
        je      .L7
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        leaq    (%rdx,%rax), %rbx
        movl    $16, %edi
        call    malloc
        movq    %rax, (%rbx)
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    8(%rax), %rdx
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rcx
        movq    -48(%rbp), %rax
        addq    %rcx, %rax
        movq    (%rax), %rax
        movq    16(%rdx), %rdx
        movq    %rdx, 8(%rax)
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %edx
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rcx
        movq    -48(%rbp), %rax
        addq    %rcx, %rax
        movq    (%rax), %rax
        addl    $1, %edx
        movl    %edx, (%rax)
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        cmpl    %eax, -28(%rbp)
        jge     .L8
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        movl    %eax, -28(%rbp)
.L8:
        addl    $1, -24(%rbp)
.L7:
        addl    $1, -20(%rbp)
.L4:
        movl    -20(%rbp), %eax
        cmpl    -24(%rbp), %eax
        jne     .L9
        movl    -28(%rbp), %eax
        addl    $1, %eax
        cltq
        salq    $3, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -56(%rbp)
        movq    -88(%rbp), %rax
        movl    $0, (%rax)
        movl    $0, -32(%rbp)
        jmp     .L10
.L11:
        movl    -24(%rbp), %eax
        cltq
        salq    $2, %rax
        movl    -32(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -56(%rbp), %rdx
        leaq    (%rcx,%rdx), %rbx
        movq    %rax, %rdi
        call    malloc
        movq    %rax, (%rbx)
        addl    $1, -32(%rbp)
.L10:
        movl    -28(%rbp), %eax
        cmpl    -32(%rbp), %eax
        jge     .L11
        movl    $4, %esi
        movl    $1200, %edi
        call    calloc
        movq    %rax, %rdx
        movq    -80(%rbp), %rax
        movq    %rdx, (%rax)
        movl    $0, -36(%rbp)
        jmp     .L12
.L14:
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    8(%rax), %rax
        movl    -36(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -48(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        movl    (%rdx), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -56(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rcx
        movq    -80(%rbp), %rdx
        movq    (%rdx), %rsi
        movl    -36(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rdi
        movq    -48(%rbp), %rdx
        addq    %rdi, %rdx
        movq    (%rdx), %rdx
        movl    (%rdx), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rsi, %rdx
        movl    (%rdx), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rcx, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        movq    -80(%rbp), %rax
        movq    (%rax), %rdx
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rcx
        movq    -48(%rbp), %rax
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        cltq
        salq    $2, %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        addl    $1, %edx
        movl    %edx, (%rax)
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %edx
        movq    -88(%rbp), %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jl      .L13
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %eax
        leal    1(%rax), %edx
        movq    -88(%rbp), %rax
        movl    %edx, (%rax)
.L13:
        addl    $1, -36(%rbp)
.L12:
        movl    -36(%rbp), %eax
        cmpl    -24(%rbp), %eax
        jl      .L14
        movq    -56(%rbp), %rax
.L3:
        addq    $88, %rsp
        popq    %rbx
        popq    %rbp
        ret
