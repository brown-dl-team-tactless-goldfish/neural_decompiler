func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $16, %rsp
        movq    %rdi, -8(%rbp)
        cmpq    $0, -8(%rbp)
        jne     .L2
        movl    $0, %eax
        jmp     .L3
.L2:
        movq    -8(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, %rdi
        call    func_1
        cvtsi2sd        %eax, %xmm2
        movsd   %xmm2, -16(%rbp)
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, %rdi
        call    func_1
        cvtsi2sd        %eax, %xmm0
        movsd   -16(%rbp), %xmm1
        call    fmax
        movapd  %xmm0, %xmm1
        movsd   .LC0(%rip), %xmm0
        addsd   %xmm1, %xmm0
        cvttsd2si       %xmm0, %eax
.L3:
        leave
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $88, %rsp
        movq    %rdi, -72(%rbp)
        movq    %rsi, -80(%rbp)
        movq    %rdx, -88(%rbp)
        movq    -72(%rbp), %rax
        movq    %rax, %rdi
        call    func_1
        movl    %eax, -40(%rbp)
        cmpl    $0, -40(%rbp)
        jne     .L5
        movq    -80(%rbp), %rax
        movl    $0, (%rax)
        movl    $0, %eax
        jmp     .L6
.L5:
        movl    -40(%rbp), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, %rdx
        movq    -88(%rbp), %rax
        movq    %rdx, (%rax)
        movl    -40(%rbp), %eax
        cltq
        salq    $3, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -48(%rbp)
        movl    $0, -20(%rbp)
        movl    $8000, %edi
        call    malloc
        movq    %rax, -56(%rbp)
        movl    $8000, %edi
        call    malloc
        movq    %rax, -64(%rbp)
        movl    $0, -24(%rbp)
        movl    $0, -28(%rbp)
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rax, %rdx
        movq    -72(%rbp), %rax
        movq    %rax, (%rdx)
        movl    $1, -24(%rbp)
        jmp     .L7
.L17:
        cmpl    $0, -24(%rbp)
        je      .L8
        movl    -24(%rbp), %eax
        cltq
        salq    $2, %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -48(%rbp), %rdx
        leaq    (%rcx,%rdx), %rbx
        movq    %rax, %rdi
        call    malloc
        movq    %rax, (%rbx)
        movq    -88(%rbp), %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rax, %rdx
        movl    -24(%rbp), %eax
        movl    %eax, (%rdx)
        movl    -24(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -32(%rbp)
        jmp     .L9
.L12:
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -48(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        movl    -24(%rbp), %ecx
        subl    $1, %ecx
        subl    -32(%rbp), %ecx
        movslq  %ecx, %rcx
        salq    $2, %rcx
        addq    %rcx, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    8(%rax), %rax
        testq   %rax, %rax
        je      .L10
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -28(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -64(%rbp), %rdx
        addq    %rcx, %rdx
        movq    8(%rax), %rax
        movq    %rax, (%rdx)
        addl    $1, -28(%rbp)
.L10:
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    16(%rax), %rax
        testq   %rax, %rax
        je      .L11
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -28(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -64(%rbp), %rdx
        addq    %rcx, %rdx
        movq    16(%rax), %rax
        movq    %rax, (%rdx)
        addl    $1, -28(%rbp)
.L11:
        subl    $1, -32(%rbp)
.L9:
        cmpl    $0, -32(%rbp)
        jns     .L12
        addl    $1, -20(%rbp)
        movl    $0, -24(%rbp)
        jmp     .L7
.L8:
        movl    -28(%rbp), %eax
        cltq
        salq    $2, %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -48(%rbp), %rdx
        leaq    (%rcx,%rdx), %rbx
        movq    %rax, %rdi
        call    malloc
        movq    %rax, (%rbx)
        movq    -88(%rbp), %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rax, %rdx
        movl    -28(%rbp), %eax
        movl    %eax, (%rdx)
        movl    -28(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -36(%rbp)
        jmp     .L13
.L16:
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -48(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        movl    -28(%rbp), %ecx
        subl    $1, %ecx
        subl    -36(%rbp), %ecx
        movslq  %ecx, %rcx
        salq    $2, %rcx
        addq    %rcx, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    16(%rax), %rax
        testq   %rax, %rax
        je      .L14
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -56(%rbp), %rdx
        addq    %rcx, %rdx
        movq    16(%rax), %rax
        movq    %rax, (%rdx)
        addl    $1, -24(%rbp)
.L14:
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    8(%rax), %rax
        testq   %rax, %rax
        je      .L15
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -64(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -56(%rbp), %rdx
        addq    %rcx, %rdx
        movq    8(%rax), %rax
        movq    %rax, (%rdx)
        addl    $1, -24(%rbp)
.L15:
        subl    $1, -36(%rbp)
.L13:
        cmpl    $0, -36(%rbp)
        jns     .L16
        addl    $1, -20(%rbp)
        movl    $0, -28(%rbp)
.L7:
        cmpl    $0, -24(%rbp)
        jne     .L17
        cmpl    $0, -28(%rbp)
        jne     .L17
        movq    -80(%rbp), %rax
        movl    -40(%rbp), %edx
        movl    %edx, (%rax)
        movq    -48(%rbp), %rax
.L6:
        addq    $88, %rsp
        popq    %rbx
        popq    %rbp
        ret
.LC0:
        .long   0
        .long   1072693248
