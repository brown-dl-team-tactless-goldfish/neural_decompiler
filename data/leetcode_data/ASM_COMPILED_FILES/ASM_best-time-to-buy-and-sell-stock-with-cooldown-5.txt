func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        cmpq    $0, -40(%rbp)
        je      .L2
        cmpl    $1, -44(%rbp)
        jg      .L3
.L2:
        movl    $0, %eax
        jmp     .L4
.L3:
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        negl    %eax
        movl    %eax, -4(%rbp)
        movl    $0, -8(%rbp)
        movl    $0, -12(%rbp)
        movl    $0, -20(%rbp)
        movl    $1, -16(%rbp)
        jmp     .L5
.L6:
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    -8(%rbp), %edx
        subl    %eax, %edx
        movl    -4(%rbp), %eax
        movl    %edx, %esi
        movl    %eax, %edi
        movl    $0, %eax
        call    func_2
        movl    %eax, -20(%rbp)
        movl    -12(%rbp), %edx
        movl    -8(%rbp), %eax
        movl    %edx, %esi
        movl    %eax, %edi
        movl    $0, %eax
        call    func_2
        movl    %eax, -8(%rbp)
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -4(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, -12(%rbp)
        movl    -20(%rbp), %eax
        movl    %eax, -4(%rbp)
        addl    $1, -16(%rbp)
.L5:
        movl    -16(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L6
        movl    -12(%rbp), %edx
        movl    -8(%rbp), %eax
        movl    %edx, %esi
        movl    %eax, %edi
        movl    $0, %eax
        call    func_2
.L4:
        leave
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -4(%rbp)
        movl    %esi, -8(%rbp)
        movl    -4(%rbp), %eax
        cmpl    %eax, -8(%rbp)
        cmovge  -8(%rbp), %eax
        popq    %rbp
        ret
