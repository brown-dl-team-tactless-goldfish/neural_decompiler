.LC0:
        .string "Push"
var_4:
        .quad   .LC0
.LC1:
        .string "Pop"
var_3:
        .quad   .LC1
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $96, %rsp
        movq    %rdi, -72(%rbp)
        movl    %esi, -76(%rbp)
        movl    %edx, -80(%rbp)
        movq    %rcx, -88(%rbp)
        movl    -80(%rbp), %eax
        addl    %eax, %eax
        cltq
        salq    $3, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -24(%rbp)
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        movl    -76(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    %eax, -28(%rbp)
        movl    $1, -12(%rbp)
        jmp     .L2
.L5:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -12(%rbp)
        jne     .L3
        addl    $1, -8(%rbp)
        movl    $8, %edi
        call    malloc
        movq    %rax, -40(%rbp)
        movq    var_4(%rip), %rax
        movq    %rax, -40(%rbp)
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -4(%rbp)
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movq    -40(%rbp), %rax
        movq    %rax, (%rdx)
        jmp     .L4
.L3:
        movl    $8, %edi
        call    malloc
        movq    %rax, -48(%rbp)
        movl    $8, %edi
        call    malloc
        movq    %rax, -56(%rbp)
        movq    var_4(%rip), %rax
        movq    %rax, -48(%rbp)
        movq    var_3(%rip), %rax
        movq    %rax, -56(%rbp)
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -4(%rbp)
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movq    -48(%rbp), %rax
        movq    %rax, (%rdx)
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -4(%rbp)
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movq    -56(%rbp), %rax
        movq    %rax, (%rdx)
.L4:
        addl    $1, -12(%rbp)
.L2:
        movl    -12(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jle     .L5
        movq    -88(%rbp), %rax
        movl    -4(%rbp), %edx
        movl    %edx, (%rax)
        movq    -24(%rbp), %rax
        leave
        ret
