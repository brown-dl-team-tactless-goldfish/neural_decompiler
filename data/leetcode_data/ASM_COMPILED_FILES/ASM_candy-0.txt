func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %r13
        pushq   %r12
        pushq   %rbx
        subq    $72, %rsp
        movq    %rdi, -88(%rbp)
        movl    %esi, -92(%rbp)
        movq    %rsp, %rax
        movq    %rax, %rsi
        movl    -92(%rbp), %eax
        cltq
        subq    $1, %rax
        movq    %rax, -56(%rbp)
        movl    -92(%rbp), %eax
        cltq
        movq    %rax, %r12
        movl    $0, %r13d
        movl    -92(%rbp), %eax
        cltq
        movq    %rax, %r10
        movl    $0, %r11d
        movl    -92(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movl    $16, %eax
        subq    $1, %rax
        addq    %rdx, %rax
        movl    $16, %edi
        movl    $0, %edx
        divq    %rdi
        imulq   $16, %rax, %rax
        subq    %rax, %rsp
        movq    %rsp, %rax
        addq    $3, %rax
        shrq    $2, %rax
        salq    $2, %rax
        movq    %rax, -64(%rbp)
        movl    -92(%rbp), %eax
        cltq
        subq    $1, %rax
        movq    %rax, -72(%rbp)
        movl    -92(%rbp), %eax
        cltq
        movq    %rax, %r8
        movl    $0, %r9d
        movl    -92(%rbp), %eax
        cltq
        movq    %rax, %rcx
        movl    $0, %ebx
        movl    -92(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movl    $16, %eax
        subq    $1, %rax
        addq    %rdx, %rax
        movl    $16, %ebx
        movl    $0, %edx
        divq    %rbx
        imulq   $16, %rax, %rax
        subq    %rax, %rsp
        movq    %rsp, %rax
        addq    $3, %rax
        shrq    $2, %rax
        salq    $2, %rax
        movq    %rax, -80(%rbp)
        movq    -64(%rbp), %rax
        movl    $1, (%rax)
        movl    -92(%rbp), %eax
        leal    -1(%rax), %edx
        movq    -80(%rbp), %rax
        movslq  %edx, %rdx
        movl    $1, (%rax,%rdx,4)
        movl    $1, -48(%rbp)
        jmp     .L2
.L5:
        movl    -48(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -88(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -48(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -88(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jle     .L3
        movl    -48(%rbp), %eax
        leal    -1(%rax), %edx
        movq    -64(%rbp), %rax
        movslq  %edx, %rdx
        movl    (%rax,%rdx,4), %eax
        leal    1(%rax), %ecx
        jmp     .L4
.L3:
        movl    $1, %ecx
.L4:
        movq    -64(%rbp), %rax
        movl    -48(%rbp), %edx
        movslq  %edx, %rdx
        movl    %ecx, (%rax,%rdx,4)
        addl    $1, -48(%rbp)
.L2:
        movl    -48(%rbp), %eax
        cmpl    -92(%rbp), %eax
        jl      .L5
        movl    -92(%rbp), %eax
        subl    $2, %eax
        movl    %eax, -44(%rbp)
        jmp     .L6
.L9:
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -88(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -44(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rcx
        movq    -88(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jle     .L7
        movl    -44(%rbp), %eax
        leal    1(%rax), %edx
        movq    -80(%rbp), %rax
        movslq  %edx, %rdx
        movl    (%rax,%rdx,4), %eax
        leal    1(%rax), %ecx
        jmp     .L8
.L7:
        movl    $1, %ecx
.L8:
        movq    -80(%rbp), %rax
        movl    -44(%rbp), %edx
        movslq  %edx, %rdx
        movl    %ecx, (%rax,%rdx,4)
        subl    $1, -44(%rbp)
.L6:
        cmpl    $0, -44(%rbp)
        jns     .L9
        movl    $0, -40(%rbp)
        movl    $0, -36(%rbp)
        jmp     .L10
.L11:
        movq    -80(%rbp), %rax
        movl    -36(%rbp), %edx
        movslq  %edx, %rdx
        movl    (%rax,%rdx,4), %edx
        movq    -64(%rbp), %rax
        movl    -36(%rbp), %ecx
        movslq  %ecx, %rcx
        movl    (%rax,%rcx,4), %eax
        cmpl    %eax, %edx
        cmovge  %edx, %eax
        addl    %eax, -40(%rbp)
        addl    $1, -36(%rbp)
.L10:
        movl    -36(%rbp), %eax
        cmpl    -92(%rbp), %eax
        jl      .L11
        movl    -40(%rbp), %eax
        movq    %rsi, %rsp
        leaq    -24(%rbp), %rsp
        popq    %rbx
        popq    %r12
        popq    %r13
        popq    %rbp
        ret
