func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movl    %edi, -20(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L2
.L3:
        movl    -20(%rbp), %eax
        subl    $1, %eax
        andl    %eax, -20(%rbp)
        addl    $1, -4(%rbp)
.L2:
        cmpl    $0, -20(%rbp)
        jne     .L3
        movl    -4(%rbp), %eax
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $40, %rsp
        movl    %edi, -36(%rbp)
        movq    %rsi, -48(%rbp)
        movl    $8, %esi
        movl    $1024, %edi
        call    calloc
        movq    %rax, -32(%rbp)
        movq    -48(%rbp), %rax
        movl    $0, (%rax)
        movl    $0, -20(%rbp)
        jmp     .L6
.L10:
        movl    $0, -24(%rbp)
        jmp     .L7
.L9:
        movl    -20(%rbp), %eax
        movl    %eax, %edi
        call    func_2
        movl    %eax, %ebx
        movl    -24(%rbp), %eax
        movl    %eax, %edi
        call    func_2
        addl    %ebx, %eax
        cmpl    %eax, -36(%rbp)
        jne     .L8
        movq    -48(%rbp), %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -32(%rbp), %rax
        leaq    (%rdx,%rax), %rbx
        movl    $1, %esi
        movl    $6, %edi
        call    calloc
        movq    %rax, (%rbx)
        movq    -48(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %edx
        movq    -48(%rbp), %rax
        movl    %edx, (%rax)
.L8:
        addl    $1, -24(%rbp)
.L7:
        cmpl    $59, -24(%rbp)
        jle     .L9
        addl    $1, -20(%rbp)
.L6:
        cmpl    $11, -20(%rbp)
        jle     .L10
        movq    -32(%rbp), %rax
        addq    $40, %rsp
        popq    %rbx
        popq    %rbp
        ret
