.LC0:
        .string "Push"
.LC1:
        .string "Pop"
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    %edx, -32(%rbp)
        movq    %rcx, -40(%rbp)
        movq    $0, -8(%rbp)
        movl    $0, -12(%rbp)
        movq    -40(%rbp), %rax
        movl    $0, (%rax)
        movl    $1, -16(%rbp)
        jmp     .L2
.L7:
        movl    -12(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jge     .L9
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        addl    $1, %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    realloc
        movq    %rax, -8(%rbp)
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %ecx
        movq    -40(%rbp), %rdx
        movl    %ecx, (%rdx)
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -8(%rbp), %rax
        addq    %rdx, %rax
        movq    $.LC0, (%rax)
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -16(%rbp)
        je      .L5
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        addl    $1, %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    realloc
        movq    %rax, -8(%rbp)
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %ecx
        movq    -40(%rbp), %rdx
        movl    %ecx, (%rdx)
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -8(%rbp), %rax
        addq    %rdx, %rax
        movq    $.LC1, (%rax)
.L5:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -16(%rbp)
        jne     .L6
        addl    $1, -12(%rbp)
.L6:
        addl    $1, -16(%rbp)
.L2:
        movl    -16(%rbp), %eax
        cmpl    -32(%rbp), %eax
        jle     .L7
        jmp     .L4
.L9:
        nop
.L4:
        movq    -8(%rbp), %rax
        leave
        ret
