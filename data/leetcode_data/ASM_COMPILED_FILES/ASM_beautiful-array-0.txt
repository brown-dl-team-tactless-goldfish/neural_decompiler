func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movl    %edi, -36(%rbp)
        movq    %rsi, -48(%rbp)
        movq    -48(%rbp), %rax
        movl    -36(%rbp), %edx
        movl    %edx, (%rax)
        movl    -36(%rbp), %eax
        addl    %eax, %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -32(%rbp)
        movq    -32(%rbp), %rax
        movl    $1, (%rax)
        cmpl    $1, -36(%rbp)
        jne     .L2
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    realloc
        movq    %rax, -32(%rbp)
        movq    -32(%rbp), %rax
        jmp     .L3
.L2:
        movl    $1, -4(%rbp)
        jmp     .L4
.L9:
        movl    -4(%rbp), %eax
        movl    %eax, -8(%rbp)
        jmp     .L5
.L6:
        movl    -8(%rbp), %eax
        subl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -32(%rbp), %rax
        addq    %rcx, %rax
        addl    %edx, %edx
        movl    %edx, (%rax)
        addl    $1, -8(%rbp)
.L5:
        movl    -4(%rbp), %eax
        addl    %eax, %eax
        cmpl    %eax, -8(%rbp)
        jl      .L6
        movl    $0, -12(%rbp)
        jmp     .L7
.L8:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        leal    (%rax,%rax), %edx
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -32(%rbp), %rax
        addq    %rcx, %rax
        subl    $1, %edx
        movl    %edx, (%rax)
        addl    $1, -12(%rbp)
.L7:
        movl    -12(%rbp), %eax
        cmpl    -4(%rbp), %eax
        jl      .L8
        sall    -4(%rbp)
.L4:
        movl    -4(%rbp), %eax
        cmpl    -36(%rbp), %eax
        jl      .L9
        movl    $0, -16(%rbp)
        movl    $0, -20(%rbp)
        jmp     .L10
.L12:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -36(%rbp)
        jl      .L11
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    -16(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -32(%rbp), %rdx
        addq    %rcx, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        addl    $1, -16(%rbp)
.L11:
        addl    $1, -20(%rbp)
.L10:
        movl    -20(%rbp), %eax
        cmpl    -4(%rbp), %eax
        jl      .L12
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    realloc
        movq    %rax, -32(%rbp)
        movq    -32(%rbp), %rax
.L3:
        leave
        ret
