func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $96, %rsp
        movq    %rdi, -88(%rbp)
        movq    %rsi, -96(%rbp)
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        movq    $0, -64(%rbp)
        movq    $0, -56(%rbp)
        movq    $0, -48(%rbp)
        movq    $0, -40(%rbp)
        movq    $0, -32(%rbp)
        movq    -88(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -20(%rbp)
        movl    $0, -12(%rbp)
        jmp     .L2
.L4:
        movl    -12(%rbp), %eax
        movslq  %eax, %rdx
        movq    -88(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        subl    $48, %eax
        movslq  %eax, %rdx
        movl    -64(%rbp,%rdx,4), %edx
        addl    $1, %edx
        cltq
        movl    %edx, -64(%rbp,%rax,4)
        movl    -12(%rbp), %eax
        movslq  %eax, %rdx
        movq    -88(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %edx
        movl    -12(%rbp), %eax
        movslq  %eax, %rcx
        movq    -96(%rbp), %rax
        addq    %rcx, %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        jne     .L3
        addl    $1, -4(%rbp)
.L3:
        addl    $1, -12(%rbp)
.L2:
        movl    -12(%rbp), %eax
        cmpl    -20(%rbp), %eax
        jl      .L4
        movl    $0, -16(%rbp)
        jmp     .L5
.L7:
        movl    -16(%rbp), %eax
        movslq  %eax, %rdx
        movq    -96(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        subl    $48, %eax
        cltq
        movl    -64(%rbp,%rax,4), %eax
        testl   %eax, %eax
        je      .L6
        addl    $1, -8(%rbp)
        movl    -16(%rbp), %eax
        movslq  %eax, %rdx
        movq    -96(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        subl    $48, %eax
        movslq  %eax, %rdx
        movl    -64(%rbp,%rdx,4), %edx
        subl    $1, %edx
        cltq
        movl    %edx, -64(%rbp,%rax,4)
.L6:
        addl    $1, -16(%rbp)
.L5:
        movl    -16(%rbp), %eax
        cmpl    -20(%rbp), %eax
        jl      .L7
        movl    $0, %eax
        leave
        ret
