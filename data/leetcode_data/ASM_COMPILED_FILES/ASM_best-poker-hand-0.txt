func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -8(%rbp)
        movq    %rsi, -16(%rbp)
        movq    -8(%rbp), %rax
        movl    (%rax), %edx
        movq    -16(%rbp), %rax
        movl    (%rax), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        popq    %rbp
        ret
.LC0:
        .string "Flush"
.LC1:
        .string "Three var_7 var_2 Kind"
.LC2:
        .string "Pair"
.LC3:
        .string "High Card"
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movq    %rdx, -40(%rbp)
        movl    %ecx, -32(%rbp)
        movq    -40(%rbp), %rax
        movzbl  (%rax), %edx
        movq    -40(%rbp), %rax
        addq    $1, %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        jne     .L4
        movq    -40(%rbp), %rax
        movzbl  (%rax), %edx
        movq    -40(%rbp), %rax
        addq    $2, %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        jne     .L4
        movq    -40(%rbp), %rax
        movzbl  (%rax), %edx
        movq    -40(%rbp), %rax
        addq    $3, %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        jne     .L4
        movq    -40(%rbp), %rax
        movzbl  (%rax), %edx
        movq    -40(%rbp), %rax
        addq    $4, %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        jne     .L4
        movl    $.LC0, %eax
        jmp     .L5
.L4:
        movq    -24(%rbp), %rax
        movl    $func_2, %ecx
        movl    $4, %edx
        movl    $5, %esi
        movq    %rax, %rdi
        call    qsort
        movl    $1, -4(%rbp)
        movl    $1, -8(%rbp)
        movl    $1, -12(%rbp)
        jmp     .L6
.L9:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -12(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jne     .L7
        addl    $1, -8(%rbp)
        jmp     .L8
.L7:
        cvtsi2sd        -8(%rbp), %xmm1
        cvtsi2sd        -4(%rbp), %xmm0
        call    fmax
        cvttsd2si       %xmm0, %eax
        movl    %eax, -4(%rbp)
        movl    $1, -8(%rbp)
.L8:
        addl    $1, -12(%rbp)
.L6:
        cmpl    $4, -12(%rbp)
        jle     .L9
        cvtsi2sd        -8(%rbp), %xmm1
        cvtsi2sd        -4(%rbp), %xmm0
        call    fmax
        cvttsd2si       %xmm0, %eax
        movl    %eax, -4(%rbp)
        cmpl    $2, -4(%rbp)
        jle     .L10
        movl    $.LC1, %eax
        jmp     .L5
.L10:
        cmpl    $2, -4(%rbp)
        jne     .L11
        movl    $.LC2, %eax
        jmp     .L5
.L11:
        movl    $.LC3, %eax
.L5:
        leave
        ret
