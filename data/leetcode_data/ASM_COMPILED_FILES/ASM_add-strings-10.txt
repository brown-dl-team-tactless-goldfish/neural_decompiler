func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -8(%rbp)
        movq    %rsi, -16(%rbp)
        movq    %rdx, -24(%rbp)
        movl    %ecx, -28(%rbp)
        movq    -16(%rbp), %rax
        movzbl  (%rax), %eax
        movsbl  %al, %edx
        movq    -24(%rbp), %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        addl    %eax, %edx
        movl    -28(%rbp), %eax
        addl    %edx, %eax
        cmpl    $105, %eax
        jle     .L2
        movq    -16(%rbp), %rax
        movzbl  (%rax), %eax
        movl    %eax, %edx
        movq    -24(%rbp), %rax
        movzbl  (%rax), %eax
        addl    %edx, %eax
        movl    -28(%rbp), %edx
        addl    %edx, %eax
        subl    $58, %eax
        movl    %eax, %edx
        movq    -8(%rbp), %rax
        movb    %dl, (%rax)
        movl    $1, %eax
        jmp     .L3
.L2:
        movq    -16(%rbp), %rax
        movzbl  (%rax), %eax
        movl    %eax, %edx
        movq    -24(%rbp), %rax
        movzbl  (%rax), %eax
        addl    %edx, %eax
        movl    -28(%rbp), %edx
        addl    %edx, %eax
        subl    $48, %eax
        movl    %eax, %edx
        movq    -8(%rbp), %rax
        movb    %dl, (%rax)
        movl    $0, %eax
.L3:
        popq    %rbp
        ret
func_1Strings:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $80, %rsp
        movq    %rdi, -72(%rbp)
        movq    %rsi, -80(%rbp)
        movq    -72(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -4(%rbp)
        movq    -80(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -8(%rbp)
        movl    $6000, %edi
        call    malloc
        movq    %rax, -24(%rbp)
        movl    $6000, -12(%rbp)
        movl    $0, -16(%rbp)
        jmp     .L5
.L7:
        subl    $1, -4(%rbp)
        subl    $1, -8(%rbp)
        subl    $1, -12(%rbp)
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -80(%rbp), %rax
        addq    %rax, %rdx
        movl    -4(%rbp), %eax
        movslq  %eax, %rcx
        movq    -72(%rbp), %rax
        leaq    (%rcx,%rax), %rsi
        movl    -12(%rbp), %eax
        movslq  %eax, %rcx
        movq    -24(%rbp), %rax
        leaq    (%rcx,%rax), %rdi
        movl    -16(%rbp), %eax
        movl    %eax, %ecx
        call    func_1
        movl    %eax, -16(%rbp)
.L5:
        cmpl    $0, -4(%rbp)
        je      .L8
        cmpl    $0, -8(%rbp)
        jne     .L7
        jmp     .L8
.L9:
        subl    $1, -4(%rbp)
        subl    $1, -12(%rbp)
        movl    $1, %edi
        call    malloc
        movq    %rax, -32(%rbp)
        movq    -32(%rbp), %rax
        movb    $48, (%rax)
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -72(%rbp), %rax
        leaq    (%rdx,%rax), %rsi
        movl    -12(%rbp), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        leaq    (%rdx,%rax), %rdi
        movl    -16(%rbp), %edx
        movq    -32(%rbp), %rax
        movl    %edx, %ecx
        movq    %rax, %rdx
        call    func_1
        movl    %eax, -16(%rbp)
.L8:
        cmpl    $0, -4(%rbp)
        jne     .L9
        jmp     .L10
.L11:
        subl    $1, -8(%rbp)
        subl    $1, -12(%rbp)
        movl    $1, %edi
        call    malloc
        movq    %rax, -40(%rbp)
        movq    -40(%rbp), %rax
        movb    $48, (%rax)
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -80(%rbp), %rax
        leaq    (%rdx,%rax), %rsi
        movl    -12(%rbp), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        leaq    (%rdx,%rax), %rdi
        movl    -16(%rbp), %edx
        movq    -40(%rbp), %rax
        movl    %edx, %ecx
        movq    %rsi, %rdx
        movq    %rax, %rsi
        call    func_1
        movl    %eax, -16(%rbp)
.L10:
        cmpl    $0, -8(%rbp)
        jne     .L11
        jmp     .L12
.L13:
        subl    $1, -12(%rbp)
        movl    $1, %edi
        call    malloc
        movq    %rax, -48(%rbp)
        movq    -48(%rbp), %rax
        movb    $48, (%rax)
        movl    $1, %edi
        call    malloc
        movq    %rax, -56(%rbp)
        movq    -56(%rbp), %rax
        movb    $48, (%rax)
        movl    -12(%rbp), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        leaq    (%rdx,%rax), %rdi
        movl    -16(%rbp), %ecx
        movq    -56(%rbp), %rdx
        movq    -48(%rbp), %rax
        movq    %rax, %rsi
        call    func_1
        movl    %eax, -16(%rbp)
.L12:
        cmpl    $1, -16(%rbp)
        je      .L13
        movl    -12(%rbp), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        leave
        ret
