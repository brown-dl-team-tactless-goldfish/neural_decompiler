func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %r15
        pushq   %r14
        pushq   %r13
        pushq   %r12
        pushq   %rbx
        subq    $136, %rsp
        movl    %edi, -116(%rbp)
        movl    %esi, -120(%rbp)
        movq    %rdx, -128(%rbp)
        movl    %ecx, -132(%rbp)
        movq    %r8, -144(%rbp)
        movq    %rsp, %rax
        movq    %rax, %r15
        movl    -120(%rbp), %ecx
        movl    -116(%rbp), %esi
        movslq  %ecx, %rax
        subq    $1, %rax
        movq    %rax, -88(%rbp)
        movslq  %ecx, %rax
        movq    %rax, -176(%rbp)
        movq    $0, -168(%rbp)
        movslq  %ecx, %rax
        leaq    0(,%rax,4), %rbx
        movslq  %esi, %rax
        subq    $1, %rax
        movq    %rax, -96(%rbp)
        movslq  %ecx, %rax
        movq    %rax, -160(%rbp)
        movq    $0, -152(%rbp)
        movslq  %esi, %rax
        movq    %rax, %r13
        movl    $0, %r14d
        movq    -152(%rbp), %rdx
        imulq   %r13, %rdx
        movq    -160(%rbp), %rax
        imulq   %r14, %rax
        leaq    (%rdx,%rax), %rdi
        movq    -160(%rbp), %rax
        mulq    %r13
        addq    %rdx, %rdi
        movq    %rdi, %rdx
        movslq  %ecx, %rax
        movq    %rax, %r11
        movl    $0, %r12d
        movslq  %esi, %rax
        movq    %rax, %r9
        movl    $0, %r10d
        movq    %r12, %rdx
        imulq   %r9, %rdx
        movq    %r10, %rax
        imulq   %r11, %rax
        leaq    (%rdx,%rax), %rdi
        movq    %r11, %rax
        mulq    %r9
        addq    %rdx, %rdi
        movq    %rdi, %rdx
        movslq  %ecx, %rdx
        movslq  %esi, %rax
        imulq   %rdx, %rax
        leaq    0(,%rax,4), %rdx
        movl    $16, %eax
        subq    $1, %rax
        addq    %rdx, %rax
        movl    $16, %edi
        movl    $0, %edx
        divq    %rdi
        imulq   $16, %rax, %rax
        subq    %rax, %rsp
        movq    %rsp, %rax
        addq    $3, %rax
        shrq    $2, %rax
        salq    $2, %rax
        movq    %rax, -104(%rbp)
        movl    $0, -76(%rbp)
        movl    $0, -72(%rbp)
        jmp     .L2
.L3:
        movl    -120(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    %rbx, %rcx
        shrq    $2, %rcx
        movl    -72(%rbp), %eax
        cltq
        imulq   %rcx, %rax
        leaq    0(,%rax,4), %rcx
        movq    -104(%rbp), %rax
        addq    %rcx, %rax
        movl    $0, %esi
        movq    %rax, %rdi
        call    memset
        addl    $1, -72(%rbp)
.L2:
        movl    -72(%rbp), %eax
        cmpl    -116(%rbp), %eax
        jl      .L3
        movl    $0, -68(%rbp)
        jmp     .L4
.L9:
        movl    $0, -64(%rbp)
        jmp     .L5
.L6:
        movq    %rbx, %rsi
        shrq    $2, %rsi
        movl    -68(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -128(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    (%rax), %edx
        movq    -104(%rbp), %rax
        movslq  %edx, %rcx
        movl    -64(%rbp), %edx
        movslq  %edx, %rdx
        imulq   %rsi, %rdx
        addq    %rcx, %rdx
        movl    (%rax,%rdx,4), %eax
        movq    %rbx, %rdi
        shrq    $2, %rdi
        movl    -68(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -128(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        addq    $4, %rdx
        movl    (%rdx), %edx
        xorl    $1, %eax
        movl    %eax, %ecx
        movq    -104(%rbp), %rax
        movslq  %edx, %rsi
        movl    -64(%rbp), %edx
        movslq  %edx, %rdx
        imulq   %rdi, %rdx
        addq    %rsi, %rdx
        movl    %ecx, (%rax,%rdx,4)
        addl    $1, -64(%rbp)
.L5:
        movl    -64(%rbp), %eax
        cmpl    -116(%rbp), %eax
        jl      .L6
        movl    $0, -60(%rbp)
        jmp     .L7
.L8:
        movq    %rbx, %rsi
        shrq    $2, %rsi
        movl    -68(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -128(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %edx
        movq    -104(%rbp), %rax
        movl    -60(%rbp), %ecx
        movslq  %ecx, %rcx
        movslq  %edx, %rdx
        imulq   %rsi, %rdx
        addq    %rcx, %rdx
        movl    (%rax,%rdx,4), %ecx
        movq    %rbx, %rdi
        shrq    $2, %rdi
        movl    -68(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -128(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %edx
        xorl    $1, %ecx
        movq    -104(%rbp), %rax
        movl    -60(%rbp), %esi
        movslq  %esi, %rsi
        movslq  %edx, %rdx
        imulq   %rdi, %rdx
        addq    %rsi, %rdx
        movl    %ecx, (%rax,%rdx,4)
        addl    $1, -60(%rbp)
.L7:
        movl    -60(%rbp), %eax
        cmpl    -120(%rbp), %eax
        jl      .L8
        addl    $1, -68(%rbp)
.L4:
        movl    -68(%rbp), %eax
        cmpl    -132(%rbp), %eax
        jl      .L9
        movl    $0, -56(%rbp)
        jmp     .L10
.L13:
        movl    $0, -52(%rbp)
        jmp     .L11
.L12:
        movq    %rbx, %rsi
        shrq    $2, %rsi
        movq    -104(%rbp), %rax
        movl    -52(%rbp), %edx
        movslq  %edx, %rcx
        movl    -56(%rbp), %edx
        movslq  %edx, %rdx
        imulq   %rsi, %rdx
        addq    %rcx, %rdx
        movl    (%rax,%rdx,4), %eax
        addl    %eax, -76(%rbp)
        addl    $1, -52(%rbp)
.L11:
        movl    -52(%rbp), %eax
        cmpl    -120(%rbp), %eax
        jl      .L12
        addl    $1, -56(%rbp)
.L10:
        movl    -56(%rbp), %eax
        cmpl    -116(%rbp), %eax
        jl      .L13
        movl    -76(%rbp), %eax
        movq    %r15, %rsp
        leaq    -40(%rbp), %rsp
        popq    %rbx
        popq    %r12
        popq    %r13
        popq    %r14
        popq    %r15
        popq    %rbp
        ret
