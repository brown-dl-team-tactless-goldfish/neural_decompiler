func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        cmpl    $2, -44(%rbp)
        jg      .L2
        movl    $0, %eax
        jmp     .L3
.L2:
        movl    $2, -8(%rbp)
        movl    $0, -12(%rbp)
        movq    -40(%rbp), %rax
        addq    $4, %rax
        movl    (%rax), %edx
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -16(%rbp)
        movl    $1, -4(%rbp)
        jmp     .L4
.L8:
        movl    -4(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -20(%rbp)
        movl    -20(%rbp), %eax
        cmpl    -16(%rbp), %eax
        jne     .L5
        addl    $1, -8(%rbp)
        movl    -44(%rbp), %eax
        subl    $2, %eax
        cmpl    %eax, -4(%rbp)
        jne     .L9
.L5:
        cmpl    $2, -8(%rbp)
        jle     .L7
        movl    -8(%rbp), %eax
        leal    -2(%rax), %edx
        movl    -8(%rbp), %eax
        subl    $1, %eax
        imull   %edx, %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        addl    %eax, -12(%rbp)
.L7:
        movl    -20(%rbp), %eax
        movl    %eax, -16(%rbp)
        movl    $2, -8(%rbp)
        jmp     .L6
.L9:
        nop
.L6:
        addl    $1, -4(%rbp)
.L4:
        movl    -44(%rbp), %eax
        subl    $1, %eax
        cmpl    %eax, -4(%rbp)
        jl      .L8
        movl    -12(%rbp), %eax
.L3:
        popq    %rbp
        ret
