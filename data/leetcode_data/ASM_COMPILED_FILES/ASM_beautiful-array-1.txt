func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movl    %edi, -36(%rbp)
        movq    %rsi, -48(%rbp)
        movl    -36(%rbp), %eax
        addl    %eax, %eax
        cltq
        movl    $4, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, -32(%rbp)
        movl    $0, -4(%rbp)
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -4(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    $1, (%rax)
        jmp     .L2
.L5:
        movl    $0, -8(%rbp)
        jmp     .L3
.L4:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        leal    (%rax,%rax), %edx
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -32(%rbp), %rax
        addq    %rcx, %rax
        subl    $1, %edx
        movl    %edx, (%rax)
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -4(%rbp), %ecx
        movl    -8(%rbp), %eax
        addl    %ecx, %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -32(%rbp), %rax
        addq    %rcx, %rax
        addl    $1, %edx
        movl    %edx, (%rax)
        addl    $1, -8(%rbp)
.L3:
        movl    -8(%rbp), %eax
        cmpl    -4(%rbp), %eax
        jl      .L4
        sall    -4(%rbp)
.L2:
        movl    -4(%rbp), %eax
        cmpl    -36(%rbp), %eax
        jl      .L5
        movl    -4(%rbp), %eax
        cmpl    -36(%rbp), %eax
        jle     .L6
        movl    $0, -12(%rbp)
        jmp     .L7
.L9:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -36(%rbp)
        jge     .L8
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    $-1, (%rax)
.L8:
        addl    $1, -12(%rbp)
.L7:
        movl    -12(%rbp), %eax
        cmpl    -4(%rbp), %eax
        jl      .L9
        movl    $0, -16(%rbp)
        movl    $0, -20(%rbp)
        jmp     .L10
.L12:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $-1, %eax
        je      .L11
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        leaq    (%rdx,%rax), %rcx
        movl    -16(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -16(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rax, %rdx
        movl    (%rcx), %eax
        movl    %eax, (%rdx)
.L11:
        addl    $1, -20(%rbp)
.L10:
        movl    -20(%rbp), %eax
        cmpl    -4(%rbp), %eax
        jl      .L12
.L6:
        movq    -48(%rbp), %rax
        movl    -36(%rbp), %edx
        movl    %edx, (%rax)
        movq    -32(%rbp), %rax
        leave
        ret
