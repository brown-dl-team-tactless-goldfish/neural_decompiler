func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movl    %edi, -36(%rbp)
        movl    %esi, -40(%rbp)
        movq    %rdx, -48(%rbp)
        movl    -36(%rbp), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -24(%rbp)
        movq    -48(%rbp), %rax
        movl    -36(%rbp), %edx
        movl    %edx, (%rax)
        movl    $0, -4(%rbp)
        jmp     .L2
.L3:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    -4(%rbp), %edx
        addl    $1, %edx
        movl    %edx, (%rax)
        addl    $1, -4(%rbp)
.L2:
        movl    -36(%rbp), %eax
        subl    -40(%rbp), %eax
        cmpl    %eax, -4(%rbp)
        jl      .L3
        movl    -36(%rbp), %eax
        subl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movl    -36(%rbp), %eax
        movl    %eax, (%rdx)
        cmpl    $1, -40(%rbp)
        jne     .L4
        movq    -24(%rbp), %rax
        jmp     .L5
.L4:
        movl    -40(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -8(%rbp)
        movb    $1, -9(%rbp)
        movl    -36(%rbp), %eax
        subl    -40(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -16(%rbp)
        jmp     .L6
.L9:
        cmpb    $0, -9(%rbp)
        je      .L7
        movl    -16(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    -16(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -24(%rbp), %rdx
        addq    %rcx, %rdx
        subl    -8(%rbp), %eax
        movl    %eax, (%rdx)
        movb    $0, -9(%rbp)
        jmp     .L8
.L7:
        movl    -16(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %ecx
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    -8(%rbp), %edx
        addl    %ecx, %edx
        movl    %edx, (%rax)
        movb    $1, -9(%rbp)
.L8:
        subl    $1, -8(%rbp)
        addl    $1, -16(%rbp)
.L6:
        movl    -16(%rbp), %eax
        cmpl    -36(%rbp), %eax
        jl      .L9
        movq    -24(%rbp), %rax
.L5:
        leave
        ret
