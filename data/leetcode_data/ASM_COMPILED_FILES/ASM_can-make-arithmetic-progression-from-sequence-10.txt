func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -8(%rbp)
        movq    %rsi, -16(%rbp)
        movq    -8(%rbp), %rax
        movl    (%rax), %edx
        movq    -16(%rbp), %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        setg    %al
        movzbl  %al, %eax
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        cmpl    $2, -28(%rbp)
        jne     .L4
        movl    $1, %eax
        jmp     .L5
.L4:
        movl    -28(%rbp), %eax
        movslq  %eax, %rsi
        movq    -24(%rbp), %rax
        movl    $func_2, %ecx
        movl    $4, %edx
        movq    %rax, %rdi
        call    qsort
        movq    -24(%rbp), %rax
        addq    $4, %rax
        movl    (%rax), %edx
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -8(%rbp)
        movq    -24(%rbp), %rax
        movl    (%rax), %edx
        movl    -28(%rbp), %eax
        subl    $1, %eax
        imull   -8(%rbp), %eax
        addl    %eax, %edx
        movl    -28(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L6
        movl    $0, %eax
        jmp     .L5
.L6:
        movl    $0, -4(%rbp)
        jmp     .L7
.L9:
        movl    -4(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        cmpl    %eax, -8(%rbp)
        je      .L8
        movl    $0, %eax
        jmp     .L5
.L8:
        addl    $1, -4(%rbp)
.L7:
        movl    -28(%rbp), %eax
        subl    $1, %eax
        cmpl    %eax, -4(%rbp)
        jl      .L9
        movl    $1, %eax
.L5:
        leave
        ret
