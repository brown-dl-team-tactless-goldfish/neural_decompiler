.LC0:
        .string "C"
.LC1:
        .string "D"
.LC2:
        .string "+"
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $4032, %rsp
        movq    %rdi, -4024(%rbp)
        movl    %esi, -4028(%rbp)
        movl    $-1, -8(%rbp)
        movl    $0, -12(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L2
.L7:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -4024(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    $.LC0, %esi
        movq    %rax, %rdi
        call    strcmp
        testl   %eax, %eax
        jne     .L3
        movl    -8(%rbp), %eax
        leal    -1(%rax), %edx
        movl    %edx, -8(%rbp)
        cltq
        movl    -4016(%rbp,%rax,4), %eax
        subl    %eax, -12(%rbp)
        jmp     .L4
.L3:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -4024(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    $.LC1, %esi
        movq    %rax, %rdi
        call    strcmp
        testl   %eax, %eax
        jne     .L5
        movl    -8(%rbp), %eax
        cltq
        movl    -4016(%rbp,%rax,4), %eax
        movl    -8(%rbp), %edx
        leal    1(%rdx), %ecx
        leal    (%rax,%rax), %edx
        movslq  %ecx, %rax
        movl    %edx, -4016(%rbp,%rax,4)
        addl    $1, -8(%rbp)
        movl    -8(%rbp), %eax
        cltq
        movl    -4016(%rbp,%rax,4), %eax
        addl    %eax, -12(%rbp)
        jmp     .L4
.L5:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -4024(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    $.LC2, %esi
        movq    %rax, %rdi
        call    strcmp
        testl   %eax, %eax
        jne     .L6
        movl    -8(%rbp), %eax
        cltq
        movl    -4016(%rbp,%rax,4), %edx
        movl    -8(%rbp), %eax
        subl    $1, %eax
        cltq
        movl    -4016(%rbp,%rax,4), %eax
        movl    -8(%rbp), %ecx
        addl    $1, %ecx
        addl    %eax, %edx
        movslq  %ecx, %rax
        movl    %edx, -4016(%rbp,%rax,4)
        addl    $1, -8(%rbp)
        movl    -8(%rbp), %eax
        cltq
        movl    -4016(%rbp,%rax,4), %eax
        addl    %eax, -12(%rbp)
        jmp     .L4
.L6:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -4024(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addl    $1, -8(%rbp)
        movq    %rax, %rdi
        call    atoi
        movl    %eax, %edx
        movl    -8(%rbp), %eax
        cltq
        movl    %edx, -4016(%rbp,%rax,4)
        movl    -8(%rbp), %eax
        cltq
        movl    -4016(%rbp,%rax,4), %eax
        addl    %eax, -12(%rbp)
.L4:
        addl    $1, -4(%rbp)
.L2:
        movl    -4(%rbp), %eax
        cmpl    -4028(%rbp), %eax
        jl      .L7
        movl    -12(%rbp), %eax
        leave
        ret
