func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    %edx, -32(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L2
.L5:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -32(%rbp)
        jne     .L3
        movl    -4(%rbp), %eax
        jmp     .L4
.L3:
        addl    $1, -4(%rbp)
.L2:
        movl    -4(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jl      .L5
        movl    $-1, %eax
.L4:
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movq    %rdx, -40(%rbp)
        movl    %ecx, -32(%rbp)
        cmpl    $0, -28(%rbp)
        jne     .L7
        movl    $0, %eax
        jmp     .L8
.L7:
        movl    $24, %edi
        call    malloc
        movq    %rax, -8(%rbp)
        movq    -24(%rbp), %rax
        movl    (%rax), %edx
        movq    -8(%rbp), %rax
        movl    %edx, (%rax)
        movq    -24(%rbp), %rax
        movl    (%rax), %edx
        movl    -32(%rbp), %ecx
        movq    -40(%rbp), %rax
        movl    %ecx, %esi
        movq    %rax, %rdi
        call    func_2
        movl    %eax, -12(%rbp)
        movl    -32(%rbp), %eax
        subl    -12(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -16(%rbp)
        movq    -24(%rbp), %rax
        leaq    4(%rax), %rdi
        movl    -12(%rbp), %ecx
        movq    -40(%rbp), %rdx
        movl    -12(%rbp), %eax
        movl    %eax, %esi
        call    func_1
        movq    %rax, %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, 8(%rax)
        movl    -12(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        leaq    (%rdx,%rax), %rsi
        movl    -12(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        leaq    (%rdx,%rax), %rdi
        movl    -16(%rbp), %edx
        movl    -16(%rbp), %eax
        movl    %edx, %ecx
        movq    %rsi, %rdx
        movl    %eax, %esi
        call    func_1
        movq    %rax, %rdx
        movq    -8(%rbp), %rax
        movq    %rdx, 16(%rax)
        movq    -8(%rbp), %rax
.L8:
        leave
        ret
