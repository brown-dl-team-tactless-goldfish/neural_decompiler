func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %r15
        pushq   %r14
        pushq   %r13
        pushq   %r12
        pushq   %rbx
        subq    $88, %rsp
        movl    %edi, -116(%rbp)
        movl    %esi, -120(%rbp)
        movq    %rdx, -128(%rbp)
        movq    %rsp, %rax
        movq    %rax, %rbx
        movl    -116(%rbp), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -80(%rbp)
        movl    -116(%rbp), %eax
        movslq  %eax, %rdx
        subq    $1, %rdx
        movq    %rdx, -88(%rbp)
        movslq  %eax, %rdx
        movq    %rdx, %r14
        movl    $0, %r15d
        movslq  %eax, %rdx
        movq    %rdx, %r12
        movl    $0, %r13d
        cltq
        leaq    0(,%rax,4), %rdx
        movl    $16, %eax
        subq    $1, %rax
        addq    %rdx, %rax
        movl    $16, %esi
        movl    $0, %edx
        divq    %rsi
        imulq   $16, %rax, %rax
        subq    %rax, %rsp
        movq    %rsp, %rax
        addq    $3, %rax
        shrq    $2, %rax
        salq    $2, %rax
        movq    %rax, -96(%rbp)
        movl    -116(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -56(%rbp)
        movl    $0, -60(%rbp)
        movl    $0, -64(%rbp)
        movl    $0, -68(%rbp)
        movl    $0, -100(%rbp)
        movl    $1, -52(%rbp)
        jmp     .L2
.L3:
        movl    -52(%rbp), %eax
        leal    -1(%rax), %edx
        movq    -96(%rbp), %rax
        movslq  %edx, %rdx
        movl    -52(%rbp), %ecx
        movl    %ecx, (%rax,%rdx,4)
        addl    $1, -52(%rbp)
.L2:
        movl    -52(%rbp), %eax
        cmpl    -116(%rbp), %eax
        jle     .L3
        jmp     .L4
.L6:
        cmpl    $0, -120(%rbp)
        jle     .L5
        movl    -56(%rbp), %eax
        leal    -1(%rax), %edx
        movl    %edx, -56(%rbp)
        movl    -60(%rbp), %edx
        leal    1(%rdx), %ecx
        movl    %ecx, -60(%rbp)
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -80(%rbp), %rdx
        addq    %rdx, %rcx
        movq    -96(%rbp), %rdx
        cltq
        movl    (%rdx,%rax,4), %eax
        movl    %eax, (%rcx)
        subl    $1, -120(%rbp)
        movl    $1, -68(%rbp)
        movl    $0, -100(%rbp)
.L5:
        cmpl    $0, -120(%rbp)
        jle     .L4
        movl    -64(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -64(%rbp)
        movl    -60(%rbp), %edx
        leal    1(%rdx), %ecx
        movl    %ecx, -60(%rbp)
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -80(%rbp), %rdx
        addq    %rdx, %rcx
        movq    -96(%rbp), %rdx
        cltq
        movl    (%rdx,%rax,4), %eax
        movl    %eax, (%rcx)
        subl    $1, -120(%rbp)
        movl    $0, -68(%rbp)
        movl    $1, -100(%rbp)
.L4:
        cmpl    $0, -120(%rbp)
        jg      .L6
        cmpl    $0, -68(%rbp)
        je      .L7
        movl    -60(%rbp), %eax
        movl    %eax, -52(%rbp)
        jmp     .L8
.L9:
        movl    -56(%rbp), %eax
        leal    -1(%rax), %edx
        movl    %edx, -56(%rbp)
        movl    -52(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -80(%rbp), %rdx
        addq    %rdx, %rcx
        movq    -96(%rbp), %rdx
        cltq
        movl    (%rdx,%rax,4), %eax
        movl    %eax, (%rcx)
        addl    $1, -52(%rbp)
.L8:
        movl    -52(%rbp), %eax
        cmpl    -116(%rbp), %eax
        jl      .L9
        jmp     .L10
.L7:
        movl    -60(%rbp), %eax
        movl    %eax, -52(%rbp)
        jmp     .L11
.L12:
        movl    -64(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -64(%rbp)
        movl    -52(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -80(%rbp), %rdx
        addq    %rdx, %rcx
        movq    -96(%rbp), %rdx
        cltq
        movl    (%rdx,%rax,4), %eax
        movl    %eax, (%rcx)
        addl    $1, -52(%rbp)
.L11:
        movl    -52(%rbp), %eax
        cmpl    -116(%rbp), %eax
        jl      .L12
.L10:
        movq    -128(%rbp), %rax
        movl    -116(%rbp), %edx
        movl    %edx, (%rax)
        movq    -80(%rbp), %rax
        movq    %rbx, %rsp
        leaq    -40(%rbp), %rsp
        popq    %rbx
        popq    %r12
        popq    %r13
        popq    %r14
        popq    %r15
        popq    %rbp
        ret
