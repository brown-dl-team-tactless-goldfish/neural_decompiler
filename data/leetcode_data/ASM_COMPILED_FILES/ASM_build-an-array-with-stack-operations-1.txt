func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    (%rax), %edx
        movq    -8(%rbp), %rax
        movl    4(%rax), %eax
        subl    $1, %eax
        cmpl    %eax, %edx
        sete    %al
        popq    %rbp
        ret
func_4:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    (%rax), %eax
        cmpl    $-1, %eax
        sete    %al
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $16, %rsp
        movq    %rdi, -8(%rbp)
        movl    %esi, -12(%rbp)
        movq    -8(%rbp), %rax
        movq    %rax, %rdi
        call    func_1
        testb   %al, %al
        jne     .L8
        movq    -8(%rbp), %rax
        movq    8(%rax), %rdx
        movq    -8(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %ecx
        movq    -8(%rbp), %rax
        movl    %ecx, (%rax)
        movq    -8(%rbp), %rax
        movl    (%rax), %eax
        cltq
        salq    $2, %rax
        addq    %rax, %rdx
        movl    -12(%rbp), %eax
        movl    %eax, (%rdx)
        jmp     .L5
.L8:
        nop
.L5:
        leave
        ret
func_5:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $8, %rsp
        movq    %rdi, -8(%rbp)
        movq    -8(%rbp), %rax
        movq    %rax, %rdi
        call    func_4
        testb   %al, %al
        je      .L10
        movl    $-1, %eax
        jmp     .L11
.L10:
        movq    -8(%rbp), %rax
        movq    8(%rax), %rsi
        movq    -8(%rbp), %rax
        movl    (%rax), %eax
        leal    -1(%rax), %ecx
        movq    -8(%rbp), %rdx
        movl    %ecx, (%rdx)
        cltq
        salq    $2, %rax
        addq    %rsi, %rax
        movl    (%rax), %eax
.L11:
        leave
        ret
func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $96, %rsp
        movq    %rdi, -72(%rbp)
        movl    %esi, -76(%rbp)
        movl    %edx, -80(%rbp)
        movq    %rcx, -88(%rbp)
        movl    $1, -4(%rbp)
        movl    -80(%rbp), %eax
        addl    %eax, %eax
        cltq
        salq    $3, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -24(%rbp)
        movl    $0, -8(%rbp)
        movl    $0, -12(%rbp)
        movl    $-1, -64(%rbp)
        movl    -80(%rbp), %eax
        movl    %eax, -60(%rbp)
        movl    -60(%rbp), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -56(%rbp)
        jmp     .L13
.L16:
        movl    -4(%rbp), %edx
        leaq    -64(%rbp), %rax
        movl    %edx, %esi
        movq    %rax, %rdi
        call    func_2
        movl    $5, %edi
        call    malloc
        movq    %rax, -32(%rbp)
        movq    -32(%rbp), %rax
        movl    $1752397136, (%rax)
        movb    $0, 4(%rax)
        movl    -8(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -8(%rbp)
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movq    -32(%rbp), %rax
        movq    %rax, (%rdx)
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -4(%rbp)
        jne     .L14
        addl    $1, -12(%rbp)
        jmp     .L15
.L14:
        leaq    -64(%rbp), %rax
        movq    %rax, %rdi
        call    func_5
        movl    $4, %edi
        call    malloc
        movq    %rax, -40(%rbp)
        movq    -40(%rbp), %rax
        movl    $7368528, (%rax)
        movl    -8(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -8(%rbp)
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movq    -40(%rbp), %rax
        movq    %rax, (%rdx)
.L15:
        addl    $1, -4(%rbp)
.L13:
        movl    -76(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -4(%rbp)
        jne     .L16
        movl    -4(%rbp), %edx
        leaq    -64(%rbp), %rax
        movl    %edx, %esi
        movq    %rax, %rdi
        call    func_2
        movl    $5, %edi
        call    malloc
        movq    %rax, -48(%rbp)
        movq    -48(%rbp), %rax
        movl    $1752397136, (%rax)
        movb    $0, 4(%rax)
        movl    -8(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -8(%rbp)
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movq    -48(%rbp), %rax
        movq    %rax, (%rdx)
        movq    -88(%rbp), %rax
        movl    -8(%rbp), %edx
        movl    %edx, (%rax)
        movq    -24(%rbp), %rax
        leave
        ret
