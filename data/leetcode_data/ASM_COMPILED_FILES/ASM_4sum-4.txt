func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    -28(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -4(%rbp)
        jmp     .L2
.L8:
        movl    $0, -12(%rbp)
        movl    $0, -8(%rbp)
        jmp     .L3
.L5:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -8(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jle     .L4
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    %eax, -16(%rbp)
        movl    -8(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    -8(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -24(%rbp), %rdx
        addq    %rcx, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        movl    -8(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movl    -16(%rbp), %eax
        movl    %eax, (%rdx)
        movl    $1, -12(%rbp)
.L4:
        addl    $1, -8(%rbp)
.L3:
        movl    -8(%rbp), %eax
        cmpl    -4(%rbp), %eax
        jl      .L5
        cmpl    $0, -12(%rbp)
        je      .L9
        subl    $1, -4(%rbp)
.L2:
        cmpl    $0, -4(%rbp)
        jns     .L8
        jmp     .L7
.L9:
        nop
.L7:
        nop
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $88, %rsp
        movq    %rdi, -72(%rbp)
        movl    %esi, -76(%rbp)
        movl    %edx, -80(%rbp)
        movq    %rcx, -88(%rbp)
        cmpq    $0, -72(%rbp)
        je      .L11
        cmpl    $3, -76(%rbp)
        jg      .L12
.L11:
        movl    $0, %eax
        jmp     .L13
.L12:
        movl    $100, -56(%rbp)
        movl    -56(%rbp), %eax
        cltq
        salq    $3, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -24(%rbp)
        jmp     .L14
.L15:
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        leaq    (%rdx,%rax), %rbx
        movl    $16, %edi
        call    malloc
        movq    %rax, (%rbx)
        addl    $1, -28(%rbp)
.L14:
        movl    -28(%rbp), %eax
        cmpl    -56(%rbp), %eax
        jl      .L15
        movl    -76(%rbp), %edx
        movq    -72(%rbp), %rax
        movl    %edx, %esi
        movq    %rax, %rdi
        call    func_1
        movl    $0, -32(%rbp)
        movl    $0, -36(%rbp)
        jmp     .L16
.L31:
        cmpl    $0, -36(%rbp)
        jle     .L17
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -36(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L32
.L17:
        movl    -36(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -40(%rbp)
        jmp     .L19
.L30:
        movl    -36(%rbp), %eax
        addl    $1, %eax
        cmpl    %eax, -40(%rbp)
        jle     .L20
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -40(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        je      .L33
.L20:
        movl    -40(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -44(%rbp)
        movl    -76(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -48(%rbp)
        jmp     .L22
.L29:
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movl    -48(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %edx, %eax
        movl    %eax, -60(%rbp)
        movl    -60(%rbp), %eax
        cmpl    -80(%rbp), %eax
        jne     .L23
        cmpl    $0, -32(%rbp)
        jle     .L24
        movl    -32(%rbp), %eax
        cltq
        salq    $3, %rax
        leaq    -8(%rax), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    (%rax), %edx
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jne     .L24
        movl    -32(%rbp), %eax
        cltq
        salq    $3, %rax
        leaq    -8(%rax), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $4, %rax
        movl    (%rax), %edx
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jne     .L24
        movl    -32(%rbp), %eax
        cltq
        salq    $3, %rax
        leaq    -8(%rax), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $8, %rax
        movl    (%rax), %edx
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jne     .L24
        movl    -32(%rbp), %eax
        cltq
        salq    $3, %rax
        leaq    -8(%rax), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        addq    $12, %rax
        movl    (%rax), %edx
        movl    -48(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -72(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jne     .L24
        addl    $1, -44(%rbp)
        subl    $1, -48(%rbp)
        jmp     .L22
.L24:
        movl    -32(%rbp), %eax
        cmpl    -56(%rbp), %eax
        jne     .L25
        movl    -56(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    realloc
        movq    %rax, -24(%rbp)
        movl    -32(%rbp), %eax
        movl    %eax, -52(%rbp)
        jmp     .L26
.L27:
        movl    -52(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -24(%rbp), %rax
        leaq    (%rdx,%rax), %rbx
        movl    $16, %edi
        call    malloc
        movq    %rax, (%rbx)
        addl    $1, -52(%rbp)
.L26:
        movl    -52(%rbp), %eax
        cmpl    -56(%rbp), %eax
        jl      .L27
.L25:
        movl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rax, %rdx
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movq    (%rax), %rax
        movl    (%rdx), %edx
        movl    %edx, (%rax)
        movl    -40(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    -32(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -24(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        addq    $4, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        movl    -44(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    -32(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -24(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        addq    $8, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        movl    -48(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    -32(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -24(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        addq    $12, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        addl    $1, -32(%rbp)
        addl    $1, -44(%rbp)
        subl    $1, -48(%rbp)
        jmp     .L22
.L23:
        movl    -60(%rbp), %eax
        cmpl    -80(%rbp), %eax
        jge     .L28
        addl    $1, -44(%rbp)
        jmp     .L22
.L28:
        subl    $1, -48(%rbp)
.L22:
        movl    -44(%rbp), %eax
        cmpl    -48(%rbp), %eax
        jl      .L29
        jmp     .L21
.L33:
        nop
.L21:
        addl    $1, -40(%rbp)
.L19:
        movl    -76(%rbp), %eax
        subl    $2, %eax
        cmpl    %eax, -40(%rbp)
        jl      .L30
        jmp     .L18
.L32:
        nop
.L18:
        addl    $1, -36(%rbp)
.L16:
        movl    -76(%rbp), %eax
        subl    $3, %eax
        cmpl    %eax, -36(%rbp)
        jl      .L31
        movq    -88(%rbp), %rax
        movl    -32(%rbp), %edx
        movl    %edx, (%rax)
        movq    -24(%rbp), %rax
.L13:
        addq    $88, %rsp
        popq    %rbx
        popq    %rbp
        ret
