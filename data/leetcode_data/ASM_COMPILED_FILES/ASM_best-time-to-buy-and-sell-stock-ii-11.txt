func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        cmpl    $0, -44(%rbp)
        jne     .L2
        movl    $0, %eax
        jmp     .L3
.L2:
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, -4(%rbp)
        movl    $0, -8(%rbp)
        movl    $1, -12(%rbp)
        jmp     .L4
.L9:
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    %eax, -16(%rbp)
        movl    -16(%rbp), %eax
        subl    -4(%rbp), %eax
        movl    %eax, -20(%rbp)
        cmpl    $0, -20(%rbp)
        jns     .L5
        movl    -16(%rbp), %eax
        movl    %eax, -4(%rbp)
        jmp     .L6
.L5:
        movl    -20(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jle     .L7
        movl    -20(%rbp), %eax
        movl    %eax, -8(%rbp)
.L7:
        movl    -12(%rbp), %eax
        addl    $1, %eax
        cmpl    %eax, -44(%rbp)
        jle     .L6
        movl    -12(%rbp), %eax
        cltq
        addq    $1, %rax
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -16(%rbp)
        jg      .L11
.L6:
        addl    $1, -12(%rbp)
.L4:
        movl    -12(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L9
        jmp     .L8
.L11:
        nop
.L8:
        movl    -12(%rbp), %eax
        cmpl    -44(%rbp), %eax
        je      .L10
        movl    -44(%rbp), %eax
        subl    -12(%rbp), %eax
        movl    -12(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -40(%rbp), %rdx
        addq    %rcx, %rdx
        movl    %eax, %esi
        movq    %rdx, %rdi
        call    func_1
        addl    %eax, -8(%rbp)
.L10:
        movl    -8(%rbp), %eax
.L3:
        leave
        ret
