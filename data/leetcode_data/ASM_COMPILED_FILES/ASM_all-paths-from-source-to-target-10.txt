func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $88, %rsp
        movq    %rdi, -56(%rbp)
        movl    %esi, -60(%rbp)
        movq    %rdx, -72(%rbp)
        movq    %rcx, -80(%rbp)
        movq    %r8, -88(%rbp)
        movq    -88(%rbp), %rax
        movl    $0, (%rax)
        movl    $56000, %edi
        call    malloc
        movq    %rax, -40(%rbp)
        movl    $4, %esi
        movl    $7000, %edi
        call    calloc
        movq    %rax, %rdx
        movq    -80(%rbp), %rax
        movq    %rdx, (%rax)
        movl    $4, %esi
        movl    $16, %edi
        call    calloc
        movq    %rax, %rdx
        movq    -40(%rbp), %rax
        movq    %rdx, (%rax)
        movl    $4, %esi
        movl    $7000, %edi
        call    calloc
        movq    %rax, -48(%rbp)
        movq    -88(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %ecx
        movq    -88(%rbp), %rdx
        movl    %ecx, (%rdx)
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rsi
        movq    -48(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %ecx
        movq    -48(%rbp), %rdx
        movl    %ecx, (%rdx)
        cltq
        salq    $2, %rax
        addq    %rsi, %rax
        movl    $0, (%rax)
        movl    $0, -20(%rbp)
        jmp     .L2
.L9:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -48(%rbp), %rdx
        addq    %rcx, %rdx
        movl    (%rdx), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        subq    $4, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -40(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        movl    -20(%rbp), %ecx
        movslq  %ecx, %rcx
        leaq    0(,%rcx,4), %rsi
        movq    -48(%rbp), %rcx
        addq    %rsi, %rcx
        movl    (%rcx), %ecx
        movslq  %ecx, %rcx
        salq    $2, %rcx
        addq    %rcx, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        movl    $1, -24(%rbp)
        jmp     .L4
.L8:
        movq    -88(%rbp), %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        leaq    (%rdx,%rax), %rbx
        movl    $4, %esi
        movl    $16, %edi
        call    calloc
        movq    %rax, (%rbx)
        movl    $0, -28(%rbp)
        jmp     .L5
.L6:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -28(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        leaq    (%rax,%rdx), %rcx
        movq    -88(%rbp), %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -28(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rax, %rdx
        movl    (%rcx), %eax
        movl    %eax, (%rdx)
        movq    -88(%rbp), %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movl    -28(%rbp), %edx
        addl    $1, %edx
        movl    %edx, (%rax)
        addl    $1, -28(%rbp)
.L5:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -28(%rbp)
        jl      .L6
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -48(%rbp), %rdx
        addq    %rcx, %rdx
        movl    (%rdx), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        subq    $4, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -24(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        leaq    (%rax,%rdx), %rsi
        movq    -88(%rbp), %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rdi
        movq    -88(%rbp), %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -48(%rbp), %rax
        addq    %rax, %rdx
        movl    (%rdx), %eax
        leal    1(%rax), %ecx
        movl    %ecx, (%rdx)
        cltq
        salq    $2, %rax
        leaq    (%rdi,%rax), %rdx
        movl    (%rsi), %eax
        movl    %eax, (%rdx)
        movq    -88(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %edx
        movq    -88(%rbp), %rax
        movl    %edx, (%rax)
        addl    $1, -24(%rbp)
.L4:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -48(%rbp), %rdx
        addq    %rcx, %rdx
        movl    (%rdx), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        subq    $4, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -24(%rbp)
        jge     .L7
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L8
.L7:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        addl    $1, %edx
        movl    %edx, (%rax)
.L3:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -48(%rbp), %rdx
        addq    %rcx, %rdx
        movl    (%rdx), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        subq    $4, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        testl   %eax, %eax
        jne     .L9
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -48(%rbp), %rax
        leaq    (%rdx,%rax), %rcx
        movq    -80(%rbp), %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rax, %rdx
        movl    (%rcx), %eax
        movl    %eax, (%rdx)
        addl    $1, -20(%rbp)
.L2:
        movq    -88(%rbp), %rax
        movl    (%rax), %eax
        cmpl    %eax, -20(%rbp)
        jl      .L3
        movq    -40(%rbp), %rax
        addq    $88, %rsp
        popq    %rbx
        popq    %rbp
        ret
