func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $88, %rsp
        movq    %rdi, -72(%rbp)
        movl    %esi, -76(%rbp)
        movq    %rdx, -88(%rbp)
        movq    %rcx, -96(%rbp)
        movl    -76(%rbp), %eax
        movl    %eax, -36(%rbp)
        movq    -96(%rbp), %rax
        movl    -36(%rbp), %edx
        movl    %edx, (%rax)
        movl    -36(%rbp), %eax
        cltq
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -48(%rbp)
        movq    -88(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -52(%rbp)
        movl    $0, -20(%rbp)
        jmp     .L2
.L10:
        movl    $0, -24(%rbp)
        movb    $1, -25(%rbp)
        movl    $0, -32(%rbp)
        jmp     .L3
.L7:
        movl    -24(%rbp), %eax
        cmpl    -52(%rbp), %eax
        jge     .L4
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rdx
        movl    -32(%rbp), %eax
        cltq
        addq    %rdx, %rax
        movzbl  (%rax), %edx
        movl    -24(%rbp), %eax
        movslq  %eax, %rcx
        movq    -88(%rbp), %rax
        addq    %rcx, %rax
        movzbl  (%rax), %eax
        cmpb    %al, %dl
        jne     .L4
        addl    $1, -24(%rbp)
        jmp     .L5
.L4:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rdx
        movl    -32(%rbp), %eax
        cltq
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $64, %al
        jle     .L5
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rdx
        movl    -32(%rbp), %eax
        cltq
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        cmpb    $90, %al
        jg      .L5
        movb    $0, -25(%rbp)
        jmp     .L6
.L5:
        addl    $1, -32(%rbp)
.L3:
        movl    -32(%rbp), %eax
        movslq  %eax, %rbx
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    %rax, %rdi
        call    strlen
        cmpq    %rax, %rbx
        jb      .L7
.L6:
        cmpb    $0, -25(%rbp)
        je      .L8
        movl    -24(%rbp), %eax
        cmpl    -52(%rbp), %eax
        jne     .L8
        movl    -20(%rbp), %eax
        movslq  %eax, %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movb    $1, (%rax)
        jmp     .L9
.L8:
        movl    -20(%rbp), %eax
        movslq  %eax, %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movb    $0, (%rax)
.L9:
        addl    $1, -20(%rbp)
.L2:
        movl    -20(%rbp), %eax
        cmpl    -36(%rbp), %eax
        jl      .L10
        movq    -48(%rbp), %rax
        addq    $88, %rsp
        popq    %rbx
        popq    %rbp
        ret
