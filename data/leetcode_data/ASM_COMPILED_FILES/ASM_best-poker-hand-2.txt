.LC0:
        .string "Flush"
.LC1:
        .string "Three var_6 var_2 Kind"
.LC2:
        .string "Pair"
.LC3:
        .string "High Card"
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $64, %rsp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movq    %rdx, -56(%rbp)
        movl    %ecx, -48(%rbp)
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        movl    $4, %esi
        movl    $14, %edi
        call    calloc
        movq    %rax, -24(%rbp)
        movl    $0, -12(%rbp)
        jmp     .L2
.L3:
        movl    -12(%rbp), %eax
        movslq  %eax, %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        subl    $97, %eax
        movl    $1, %edx
        movl    %eax, %ecx
        sall    %cl, %edx
        movl    %edx, %eax
        orl     %eax, -4(%rbp)
        addl    $1, -12(%rbp)
.L2:
        movl    -12(%rbp), %eax
        cmpl    -48(%rbp), %eax
        jl      .L3
        movl    $0, -16(%rbp)
        jmp     .L4
.L6:
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        addl    $1, %edx
        movl    %edx, (%rax)
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -8(%rbp)
        jge     .L5
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    %eax, -8(%rbp)
.L5:
        addl    $1, -16(%rbp)
.L4:
        movl    -16(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L6
        movl    -4(%rbp), %eax
        movl    %eax, %eax
        movq    %rax, %rdi
        call    __popcountdi2
        cmpl    $1, %eax
        jne     .L7
        movl    $.LC0, %eax
        jmp     .L8
.L7:
        cmpl    $2, -8(%rbp)
        jle     .L9
        movl    $.LC1, %eax
        jmp     .L8
.L9:
        cmpl    $2, -8(%rbp)
        jne     .L10
        movl    $.LC2, %eax
        jmp     .L8
.L10:
        movl    $.LC3, %eax
.L8:
        leave
        ret
