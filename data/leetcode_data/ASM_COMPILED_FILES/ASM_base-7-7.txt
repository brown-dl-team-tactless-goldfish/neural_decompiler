func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $64, %rsp
        movl    %edi, -52(%rbp)
        movq    $0, -24(%rbp)
        movl    $0, -4(%rbp)
        movb    $0, -5(%rbp)
        cmpl    $0, -52(%rbp)
        jne     .L2
        movl    $2, %edi
        call    malloc
        movq    %rax, -24(%rbp)
        movq    -24(%rbp), %rax
        movb    $48, (%rax)
        movq    -24(%rbp), %rax
        addq    $1, %rax
        movb    $0, (%rax)
        movq    -24(%rbp), %rax
        jmp     .L9
.L2:
        cmpl    $0, -52(%rbp)
        jns     .L5
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -4(%rbp)
        cltq
        movb    $45, -48(%rbp,%rax)
        negl    -52(%rbp)
        movb    $1, -5(%rbp)
        jmp     .L5
.L6:
        movl    -52(%rbp), %ecx
        movl    $-1840700269, %edx
        movl    %ecx, %eax
        imull   %edx
        leal    (%rdx,%rcx), %eax
        sarl    $2, %eax
        movl    %eax, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $3, %eax
        subl    %edx, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movl    %edx, %eax
        leal    48(%rax), %ecx
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -4(%rbp)
        movl    %ecx, %edx
        cltq
        movb    %dl, -48(%rbp,%rax)
        movl    -52(%rbp), %ecx
        movl    $-1840700269, %edx
        movl    %ecx, %eax
        imull   %edx
        leal    (%rdx,%rcx), %eax
        sarl    $2, %eax
        movl    %eax, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -52(%rbp)
.L5:
        cmpl    $0, -52(%rbp)
        jne     .L6
        movl    -4(%rbp), %eax
        cltq
        movb    $0, -48(%rbp,%rax)
        movzbl  -5(%rbp), %eax
        movzbl  %al, %eax
        movl    %eax, -12(%rbp)
        movl    -4(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -16(%rbp)
        jmp     .L7
.L8:
        movl    -12(%rbp), %eax
        cltq
        movzbl  -48(%rbp,%rax), %edx
        movl    -16(%rbp), %eax
        cltq
        movzbl  -48(%rbp,%rax), %eax
        xorl    %eax, %edx
        movl    -12(%rbp), %eax
        cltq
        movb    %dl, -48(%rbp,%rax)
        movl    -16(%rbp), %eax
        cltq
        movzbl  -48(%rbp,%rax), %edx
        movl    -12(%rbp), %eax
        cltq
        movzbl  -48(%rbp,%rax), %eax
        xorl    %eax, %edx
        movl    -16(%rbp), %eax
        cltq
        movb    %dl, -48(%rbp,%rax)
        movl    -12(%rbp), %eax
        cltq
        movzbl  -48(%rbp,%rax), %edx
        movl    -16(%rbp), %eax
        cltq
        movzbl  -48(%rbp,%rax), %eax
        xorl    %eax, %edx
        movl    -12(%rbp), %eax
        cltq
        movb    %dl, -48(%rbp,%rax)
        addl    $1, -12(%rbp)
        subl    $1, -16(%rbp)
.L7:
        movl    -12(%rbp), %eax
        cmpl    -16(%rbp), %eax
        jl      .L8
        movl    -4(%rbp), %eax
        addl    $1, %eax
        cltq
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -24(%rbp)
        movl    -4(%rbp), %eax
        movslq  %eax, %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movb    $0, (%rax)
        leaq    -48(%rbp), %rdx
        movq    -24(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    strcpy
        movq    -24(%rbp), %rax
.L9:
        leave
        ret
