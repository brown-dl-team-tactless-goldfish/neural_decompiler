func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movl    $0, -4(%rbp)
        movq    -24(%rbp), %rax
        movq    %rax, -16(%rbp)
        jmp     .L2
.L3:
        addl    $1, -4(%rbp)
        movq    -16(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -16(%rbp)
.L2:
        cmpq    $0, -16(%rbp)
        jne     .L3
        movl    -4(%rbp), %eax
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $96, %rsp
        movq    %rdi, -88(%rbp)
        movq    %rsi, -96(%rbp)
        movq    -88(%rbp), %rax
        movq    %rax, %rdi
        call    func_2
        movl    %eax, -28(%rbp)
        movq    -96(%rbp), %rax
        movq    %rax, %rdi
        call    func_2
        movl    %eax, -32(%rbp)
        movl    -28(%rbp), %eax
        cltq
        movl    $4, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, -40(%rbp)
        movl    -32(%rbp), %eax
        cltq
        movl    $4, %esi
        movq    %rax, %rdi
        call    calloc
        movq    %rax, -48(%rbp)
        movl    $-1, -4(%rbp)
        movl    $-1, -8(%rbp)
        jmp     .L6
.L7:
        addl    $1, -4(%rbp)
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rax, %rdx
        movq    -88(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        movq    -88(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -88(%rbp)
.L6:
        cmpq    $0, -88(%rbp)
        jne     .L7
        jmp     .L8
.L9:
        addl    $1, -8(%rbp)
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -48(%rbp), %rax
        addq    %rax, %rdx
        movq    -96(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        movq    -96(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -96(%rbp)
.L8:
        cmpq    $0, -96(%rbp)
        jne     .L9
        movb    $1, -9(%rbp)
        movl    $0, -16(%rbp)
        movl    $16, %edi
        call    malloc
        movq    %rax, -24(%rbp)
        movq    -24(%rbp), %rax
        movq    $0, 8(%rax)
        jmp     .L10
.L16:
        cmpl    $-1, -4(%rbp)
        je      .L11
        movl    -4(%rbp), %eax
        leal    -1(%rax), %edx
        movl    %edx, -4(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        jmp     .L12
.L11:
        movl    $0, %eax
.L12:
        movl    %eax, -52(%rbp)
        cmpl    $-1, -8(%rbp)
        je      .L13
        movl    -8(%rbp), %eax
        leal    -1(%rax), %edx
        movl    %edx, -8(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        jmp     .L14
.L13:
        movl    $0, %eax
.L14:
        movl    %eax, -56(%rbp)
        movl    -52(%rbp), %edx
        movl    -56(%rbp), %eax
        addl    %eax, %edx
        movl    -16(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, -60(%rbp)
        movl    -60(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -16(%rbp)
        movl    -16(%rbp), %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        negl    %eax
        addl    %eax, -60(%rbp)
        cmpb    $0, -9(%rbp)
        je      .L15
        movq    -24(%rbp), %rax
        movl    -60(%rbp), %edx
        movl    %edx, (%rax)
        movb    $0, -9(%rbp)
        jmp     .L10
.L15:
        movl    $16, %edi
        call    malloc
        movq    %rax, -72(%rbp)
        movq    -72(%rbp), %rax
        movl    -60(%rbp), %edx
        movl    %edx, (%rax)
        movq    -72(%rbp), %rax
        movq    -24(%rbp), %rdx
        movq    %rdx, 8(%rax)
        movq    -72(%rbp), %rax
        movq    %rax, -24(%rbp)
.L10:
        cmpl    $-1, -4(%rbp)
        jne     .L16
        cmpl    $-1, -8(%rbp)
        jne     .L16
        cmpl    $0, -16(%rbp)
        je      .L17
        movl    $16, %edi
        call    malloc
        movq    %rax, -80(%rbp)
        movq    -80(%rbp), %rax
        movl    -16(%rbp), %edx
        movl    %edx, (%rax)
        movq    -80(%rbp), %rax
        movq    -24(%rbp), %rdx
        movq    %rdx, 8(%rax)
        movq    -80(%rbp), %rax
        movq    %rax, -24(%rbp)
.L17:
        movq    -40(%rbp), %rax
        movq    %rax, %rdi
        call    free
        movq    -48(%rbp), %rax
        movq    %rax, %rdi
        call    free
        movq    -24(%rbp), %rax
        leave
        ret
