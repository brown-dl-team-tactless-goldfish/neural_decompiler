func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $56, %rsp
        movq    %rdi, -24(%rbp)
        movq    %rsi, -32(%rbp)
        movq    %rdx, -40(%rbp)
        movl    %ecx, -44(%rbp)
        movq    %r8, -56(%rbp)
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        testq   %rax, %rax
        jne     .L2
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        testq   %rax, %rax
        jne     .L2
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -32(%rbp), %rax
        leaq    (%rdx,%rax), %rbx
        movl    $600, %edi
        call    malloc
        movq    %rax, (%rbx)
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movq    -56(%rbp), %rdx
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    strcpy
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        leal    1(%rax), %edx
        movq    -40(%rbp), %rax
        movl    %edx, (%rax)
        jmp     .L5
.L2:
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        testq   %rax, %rax
        je      .L4
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    -56(%rbp), %rdi
        movl    -44(%rbp), %ecx
        movq    -40(%rbp), %rdx
        movq    -32(%rbp), %rsi
        movq    %rdi, %r8
        movq    %rax, %rdi
        call    func_2
.L4:
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        testq   %rax, %rax
        je      .L5
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        movq    -56(%rbp), %rdi
        movl    -44(%rbp), %ecx
        movq    -40(%rbp), %rdx
        movq    -32(%rbp), %rsi
        movq    %rdi, %r8
        movq    %rax, %rdi
        call    func_2
.L5:
        nop
        addq    $56, %rsp
        popq    %rbx
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $640, %rsp
        movq    %rdi, -632(%rbp)
        movq    %rsi, -640(%rbp)
        movl    $400, %edi
        call    malloc
        movq    %rax, -8(%rbp)
        movl    $0, -12(%rbp)
        leaq    -624(%rbp), %rcx
        leaq    -12(%rbp), %rdx
        movq    -8(%rbp), %rsi
        movq    -632(%rbp), %rax
        movq    %rcx, %r8
        movl    $0, %ecx
        movq    %rax, %rdi
        call    func_2
        movl    -12(%rbp), %edx
        movq    -640(%rbp), %rax
        movl    %edx, (%rax)
        movq    -8(%rbp), %rax
        leave
        ret
