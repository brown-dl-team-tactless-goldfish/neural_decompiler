func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -24(%rbp)
        movq    %rsi, -32(%rbp)
        movq    %rdx, -40(%rbp)
        movq    %rcx, -48(%rbp)
        cmpq    $0, -24(%rbp)
        je      .L5
        movl    var_7(%rip), %eax
        addl    $1, %eax
        movl    %eax, var_7(%rip)
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        testq   %rax, %rax
        jne     .L4
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        testq   %rax, %rax
        jne     .L4
        movq    -32(%rbp), %rax
        movl    (%rax), %edx
        movl    var_7(%rip), %eax
        cmpl    %eax, %edx
        jge     .L4
        movl    var_7(%rip), %edx
        movq    -32(%rbp), %rax
        movl    %edx, (%rax)
.L4:
        movq    -40(%rbp), %rax
        movq    (%rax), %rax
        movl    var_7(%rip), %edx
        movl    $800, %ecx
        subl    %edx, %ecx
        movl    %ecx, %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rax, %rdx
        movl    (%rdx), %eax
        leal    1(%rax), %ecx
        movl    %ecx, (%rdx)
        movl    %eax, -4(%rbp)
        movl    var_7(%rip), %eax
        movl    $800, %edx
        subl    %eax, %edx
        movl    %edx, %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -4(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rax, %rdx
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    -48(%rbp), %rcx
        movq    -40(%rbp), %rdx
        movq    -32(%rbp), %rsi
        movq    %rax, %rdi
        call    func_1
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        movq    -48(%rbp), %rcx
        movq    -40(%rbp), %rdx
        movq    -32(%rbp), %rsi
        movq    %rax, %rdi
        call    func_1
        movl    var_7(%rip), %eax
        subl    $1, %eax
        movl    %eax, var_7(%rip)
        jmp     .L1
.L5:
        nop
.L1:
        leave
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $88, %rsp
        movq    %rdi, -72(%rbp)
        movq    %rsi, -80(%rbp)
        movq    %rdx, -88(%rbp)
        movq    -88(%rbp), %rax
        movl    $0, (%rax)
        cmpq    $0, -72(%rbp)
        jne     .L7
        movl    $4, %edi
        call    malloc
        movq    %rax, %rdx
        movq    -80(%rbp), %rax
        movq    %rdx, (%rax)
        movq    -80(%rbp), %rax
        movq    (%rax), %rax
        movl    $0, (%rax)
        movl    $0, %eax
        jmp     .L8
.L7:
        movl    $0, var_7(%rip)
        movl    $8, %edi
        call    malloc
        movq    %rax, -48(%rbp)
        movl    $3200, %edi
        call    malloc
        movq    %rax, %rdx
        movq    -48(%rbp), %rax
        movq    %rdx, (%rax)
        movl    $0, -20(%rbp)
        jmp     .L9
.L10:
        movq    -48(%rbp), %rax
        movq    (%rax), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    $0, (%rax)
        addl    $1, -20(%rbp)
.L9:
        cmpl    $799, -20(%rbp)
        jle     .L10
        movl    $6400, %edi
        call    malloc
        movq    %rax, -56(%rbp)
        movl    $0, -24(%rbp)
        jmp     .L11
.L12:
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        leaq    (%rdx,%rax), %rbx
        movl    $3200, %edi
        call    malloc
        movq    %rax, (%rbx)
        addl    $1, -24(%rbp)
.L11:
        cmpl    $799, -24(%rbp)
        jle     .L12
        movq    -56(%rbp), %rcx
        movq    -48(%rbp), %rdx
        movq    -88(%rbp), %rsi
        movq    -72(%rbp), %rax
        movq    %rax, %rdi
        call    func_1
        movq    -88(%rbp), %rax
        movl    (%rax), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, %rdx
        movq    -80(%rbp), %rax
        movq    %rdx, (%rax)
        movl    $0, -28(%rbp)
        jmp     .L13
.L14:
        movq    -48(%rbp), %rax
        movq    (%rax), %rdx
        movq    -88(%rbp), %rax
        movl    (%rax), %eax
        movl    $800, %ecx
        subl    %eax, %ecx
        movl    -28(%rbp), %eax
        addl    %ecx, %eax
        cltq
        salq    $2, %rax
        leaq    (%rdx,%rax), %rcx
        movq    -80(%rbp), %rax
        movq    (%rax), %rax
        movl    -28(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rax, %rdx
        movl    (%rcx), %eax
        movl    %eax, (%rdx)
        addl    $1, -28(%rbp)
.L13:
        movq    -88(%rbp), %rax
        movl    (%rax), %eax
        cmpl    %eax, -28(%rbp)
        jl      .L14
        movl    $6400, %edi
        call    malloc
        movq    %rax, -64(%rbp)
        movl    $0, -32(%rbp)
        jmp     .L15
.L18:
        movq    -80(%rbp), %rax
        movq    (%rax), %rax
        movl    -32(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cltq
        salq    $2, %rax
        movl    -32(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -64(%rbp), %rdx
        leaq    (%rcx,%rdx), %rbx
        movq    %rax, %rdi
        call    malloc
        movq    %rax, (%rbx)
        movl    $0, -36(%rbp)
        jmp     .L16
.L17:
        movq    -88(%rbp), %rax
        movl    (%rax), %eax
        movl    $800, %edx
        subl    %eax, %edx
        movl    -32(%rbp), %eax
        addl    %edx, %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rax
        movl    -36(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    -32(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,8), %rcx
        movq    -64(%rbp), %rdx
        addq    %rcx, %rdx
        movq    (%rdx), %rdx
        movl    -36(%rbp), %ecx
        movslq  %ecx, %rcx
        salq    $2, %rcx
        addq    %rcx, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        addl    $1, -36(%rbp)
.L16:
        movq    -80(%rbp), %rax
        movq    (%rax), %rax
        movl    -32(%rbp), %edx
        movslq  %edx, %rdx
        salq    $2, %rdx
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -36(%rbp)
        jl      .L17
        addl    $1, -32(%rbp)
.L15:
        movq    -88(%rbp), %rax
        movl    (%rax), %eax
        cmpl    %eax, -32(%rbp)
        jl      .L18
        movq    -64(%rbp), %rax
.L8:
        addq    $88, %rsp
        popq    %rbx
        popq    %rbp
        ret
