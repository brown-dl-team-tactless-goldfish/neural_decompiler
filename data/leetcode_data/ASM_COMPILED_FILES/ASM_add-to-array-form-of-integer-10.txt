func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $80, %rsp
        movq    %rdi, -56(%rbp)
        movl    %esi, -60(%rbp)
        movl    %edx, -64(%rbp)
        movq    %rcx, -72(%rbp)
        movl    $0, -4(%rbp)
        movq    -72(%rbp), %rax
        movl    -60(%rbp), %edx
        movl    %edx, (%rax)
        movl    -60(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -20(%rbp)
        jmp     .L2
.L5:
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %esi
        movl    -64(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movl    -4(%rbp), %eax
        addl    %eax, %edx
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -56(%rbp), %rax
        addq    %rcx, %rax
        addl    %esi, %edx
        movl    %edx, (%rax)
        movl    -64(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -64(%rbp)
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    $9, %eax
        jle     .L3
        movl    $1, -4(%rbp)
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %ecx
        movl    -20(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        leaq    (%rdx,%rax), %rsi
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movl    %edx, (%rsi)
        jmp     .L4
.L3:
        movl    $0, -4(%rbp)
.L4:
        subl    $1, -20(%rbp)
.L2:
        cmpl    $0, -20(%rbp)
        jns     .L5
        cmpl    $0, -64(%rbp)
        jne     .L6
        cmpl    $0, -4(%rbp)
        je      .L7
.L6:
        movl    -4(%rbp), %eax
        addl    %eax, -64(%rbp)
        cmpl    $0, -64(%rbp)
        je      .L8
        cvtsi2sd        -64(%rbp), %xmm0
        call    log10
        movapd  %xmm0, %xmm1
        movsd   .LC0(%rip), %xmm0
        addsd   %xmm1, %xmm0
        cvttsd2si       %xmm0, %eax
        jmp     .L9
.L8:
        movl    $0, %eax
.L9:
        movl    %eax, -36(%rbp)
        movq    -72(%rbp), %rax
        movl    (%rax), %edx
        movl    -36(%rbp), %eax
        addl    %eax, %edx
        movq    -72(%rbp), %rax
        movl    %edx, (%rax)
        movq    -72(%rbp), %rax
        movl    (%rax), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -16(%rbp)
        movl    -36(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -24(%rbp)
        jmp     .L10
.L11:
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -16(%rbp), %rax
        leaq    (%rdx,%rax), %rsi
        movl    -64(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movl    %edx, (%rsi)
        movl    -64(%rbp), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -64(%rbp)
        subl    $1, -24(%rbp)
.L10:
        cmpl    $0, -24(%rbp)
        jns     .L11
        movl    -36(%rbp), %eax
        movl    %eax, -28(%rbp)
        jmp     .L12
.L13:
        movl    -28(%rbp), %eax
        subl    -36(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    -28(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -16(%rbp), %rdx
        addq    %rcx, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        addl    $1, -28(%rbp)
.L12:
        movq    -72(%rbp), %rax
        movl    (%rax), %eax
        cmpl    %eax, -28(%rbp)
        jl      .L13
        jmp     .L14
.L7:
        movl    -60(%rbp), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -16(%rbp)
        movl    $0, -32(%rbp)
        jmp     .L15
.L16:
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    -32(%rbp), %edx
        movslq  %edx, %rdx
        leaq    0(,%rdx,4), %rcx
        movq    -16(%rbp), %rdx
        addq    %rcx, %rdx
        movl    (%rax), %eax
        movl    %eax, (%rdx)
        addl    $1, -32(%rbp)
.L15:
        movl    -32(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jl      .L16
.L14:
        movq    -16(%rbp), %rax
        leave
        ret
.LC0:
        .long   0
        .long   1072693248
