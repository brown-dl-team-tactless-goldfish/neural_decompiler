func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    %edx, -32(%rbp)
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    %eax, -4(%rbp)
        movl    -28(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    %eax, -8(%rbp)
        movl    $0, -12(%rbp)
        movl    -28(%rbp), %eax
        movl    %eax, -16(%rbp)
        jmp     .L2
.L6:
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -8(%rbp)
        jge     .L3
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    %eax, -8(%rbp)
.L3:
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -4(%rbp)
        jle     .L4
        movl    -8(%rbp), %eax
        subl    -4(%rbp), %eax
        cmpl    %eax, -12(%rbp)
        jge     .L5
        movl    -8(%rbp), %eax
        subl    -4(%rbp), %eax
        movl    %eax, -12(%rbp)
.L5:
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    %eax, -8(%rbp)
        movl    -8(%rbp), %eax
        movl    %eax, -4(%rbp)
.L4:
        addl    $1, -16(%rbp)
.L2:
        movl    -16(%rbp), %eax
        cmpl    -32(%rbp), %eax
        jl      .L6
        movl    -8(%rbp), %eax
        subl    -4(%rbp), %eax
        cmpl    %eax, -12(%rbp)
        jge     .L7
        movl    -8(%rbp), %eax
        subl    -4(%rbp), %eax
        movl    %eax, -12(%rbp)
.L7:
        movl    -12(%rbp), %eax
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    %edx, -32(%rbp)
        movl    -32(%rbp), %eax
        leal    (%rax,%rax), %edx
        movq    -24(%rbp), %rax
        movl    $0, %esi
        movq    %rax, %rdi
        call    func_2
        movl    %eax, -4(%rbp)
        movl    -32(%rbp), %eax
        leal    (%rax,%rax), %ecx
        movl    -28(%rbp), %edx
        movq    -24(%rbp), %rax
        movl    %ecx, %esi
        movq    %rax, %rdi
        call    func_2
        movl    %eax, -8(%rbp)
        movl    -4(%rbp), %edx
        movl    -8(%rbp), %eax
        addl    %edx, %eax
        leave
        ret
func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $64, %rsp
        movq    %rdi, -56(%rbp)
        movl    %esi, -60(%rbp)
        movl    -60(%rbp), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -32(%rbp)
        movl    $0, -4(%rbp)
        movq    -56(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, -8(%rbp)
        movq    -56(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, -12(%rbp)
        movl    $1, -16(%rbp)
        jmp     .L12
.L16:
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -12(%rbp)
        jle     .L13
        movl    -8(%rbp), %eax
        cmpl    -12(%rbp), %eax
        je      .L14
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -4(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rax, %rdx
        movl    -8(%rbp), %eax
        movl    %eax, (%rdx)
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -4(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rax, %rdx
        movl    -12(%rbp), %eax
        movl    %eax, (%rdx)
.L14:
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    %eax, -12(%rbp)
        movl    -12(%rbp), %eax
        movl    %eax, -8(%rbp)
.L13:
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -12(%rbp)
        jg      .L15
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        movl    %eax, -12(%rbp)
.L15:
        addl    $1, -16(%rbp)
.L12:
        movl    -16(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jl      .L16
        movl    -8(%rbp), %eax
        cmpl    -12(%rbp), %eax
        je      .L17
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -4(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rax, %rdx
        movl    -8(%rbp), %eax
        movl    %eax, (%rdx)
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -4(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -32(%rbp), %rax
        addq    %rax, %rdx
        movl    -12(%rbp), %eax
        movl    %eax, (%rdx)
.L17:
        movl    $0, -20(%rbp)
        movl    $0, -24(%rbp)
        jmp     .L18
.L20:
        movl    -24(%rbp), %edx
        movl    -4(%rbp), %ecx
        movq    -32(%rbp), %rax
        movl    %ecx, %esi
        movq    %rax, %rdi
        call    func_1
        movl    %eax, -36(%rbp)
        movl    -36(%rbp), %eax
        cmpl    -20(%rbp), %eax
        jle     .L19
        movl    -36(%rbp), %eax
        movl    %eax, -20(%rbp)
.L19:
        addl    $1, -24(%rbp)
.L18:
        movl    -4(%rbp), %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        cmpl    %eax, -24(%rbp)
        jl      .L20
        movq    -32(%rbp), %rax
        movq    %rax, %rdi
        call    free
        movl    -20(%rbp), %eax
        leave
        ret
