func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        movl    $800016, %esi
        movl    $1, %edi
        call    calloc
        movq    %rax, -16(%rbp)
        movq    -24(%rbp), %rax
        movq    %rax, -8(%rbp)
        movq    -16(%rbp), %rax
        movl    $0, 800008(%rax)
        jmp     .L2
.L3:
        movq    -16(%rbp), %rax
        movl    800008(%rax), %eax
        leal    1(%rax), %ecx
        movq    -16(%rbp), %rdx
        movl    %ecx, 800008(%rdx)
        movq    -16(%rbp), %rdx
        movl    %eax, %ecx
        movq    -8(%rbp), %rax
        movq    %rax, 8(%rdx,%rcx,8)
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
.L2:
        cmpq    $0, -8(%rbp)
        jne     .L3
        movq    -16(%rbp), %rax
        leave
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movq    -24(%rbp), %rax
        movl    800008(%rax), %eax
        leal    -1(%rax), %edx
        movq    -24(%rbp), %rax
        movl    %edx, %edx
        movq    8(%rax,%rdx,8), %rax
        movq    %rax, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, -12(%rbp)
        movq    -24(%rbp), %rax
        movl    800008(%rax), %eax
        leal    -1(%rax), %edx
        movq    -24(%rbp), %rax
        movl    %edx, 800008(%rax)
        movq    -8(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, -8(%rbp)
        jmp     .L6
.L7:
        movq    -24(%rbp), %rax
        movl    800008(%rax), %eax
        leal    1(%rax), %ecx
        movq    -24(%rbp), %rdx
        movl    %ecx, 800008(%rdx)
        movq    -24(%rbp), %rdx
        movl    %eax, %ecx
        movq    -8(%rbp), %rax
        movq    %rax, 8(%rdx,%rcx,8)
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, -8(%rbp)
.L6:
        cmpq    $0, -8(%rbp)
        jne     .L7
        movl    -12(%rbp), %eax
        popq    %rbp
        ret
func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -8(%rbp)
        movq    -8(%rbp), %rax
        movl    800008(%rax), %eax
        testl   %eax, %eax
        setne   %al
        popq    %rbp
        ret
func_4:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $16, %rsp
        movq    %rdi, -8(%rbp)
        movq    -8(%rbp), %rax
        movq    %rax, %rdi
        call    free
        nop
        leave
        ret
