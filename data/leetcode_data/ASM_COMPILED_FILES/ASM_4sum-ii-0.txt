func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $96, %rsp
        movq    %rdi, -56(%rbp)
        movl    %esi, -60(%rbp)
        movq    %rdx, -72(%rbp)
        movl    %ecx, -64(%rbp)
        movq    %r8, -80(%rbp)
        movl    %r9d, -84(%rbp)
        movl    -60(%rbp), %eax
        imull   -64(%rbp), %eax
        movl    %eax, -24(%rbp)
        movl    -84(%rbp), %eax
        imull   24(%rbp), %eax
        movl    %eax, -28(%rbp)
        movl    -24(%rbp), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -40(%rbp)
        movl    -28(%rbp), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -48(%rbp)
        movl    $0, -12(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L2
.L5:
        movl    $0, -8(%rbp)
        jmp     .L3
.L4:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %ecx
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rsi
        movq    -40(%rbp), %rax
        addq    %rsi, %rax
        addl    %ecx, %edx
        movl    %edx, (%rax)
        addl    $1, -12(%rbp)
        addl    $1, -8(%rbp)
.L3:
        movl    -8(%rbp), %eax
        cmpl    -64(%rbp), %eax
        jl      .L4
        addl    $1, -4(%rbp)
.L2:
        movl    -4(%rbp), %eax
        cmpl    -60(%rbp), %eax
        jl      .L5
        movl    $0, -12(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L6
.L9:
        movl    $0, -8(%rbp)
        jmp     .L7
.L8:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -80(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %ecx
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    16(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rsi
        movq    -48(%rbp), %rax
        addq    %rsi, %rax
        addl    %ecx, %edx
        movl    %edx, (%rax)
        addl    $1, -12(%rbp)
        addl    $1, -8(%rbp)
.L7:
        movl    -8(%rbp), %eax
        cmpl    24(%rbp), %eax
        jl      .L8
        addl    $1, -4(%rbp)
.L6:
        movl    -4(%rbp), %eax
        cmpl    -84(%rbp), %eax
        jl      .L9
        movl    -24(%rbp), %eax
        movslq  %eax, %rsi
        movq    -40(%rbp), %rax
        movl    $func_2, %ecx
        movl    $4, %edx
        movq    %rax, %rdi
        call    qsort
        movl    -28(%rbp), %eax
        movslq  %eax, %rsi
        movq    -48(%rbp), %rax
        movl    $func_2, %ecx
        movl    $4, %edx
        movq    %rax, %rdi
        call    qsort
        movl    $0, -20(%rbp)
        movl    $0, -4(%rbp)
        jmp     .L10
.L13:
        cmpl    $0, -4(%rbp)
        jle     .L11
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -4(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rcx
        movq    -40(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jne     .L11
        movl    -16(%rbp), %eax
        addl    %eax, -20(%rbp)
        jmp     .L12
.L11:
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        negl    %eax
        movl    %eax, %edx
        movl    -28(%rbp), %ecx
        movq    -48(%rbp), %rax
        movl    %ecx, %esi
        movq    %rax, %rdi
        call    func_3
        movl    %eax, -16(%rbp)
        movl    -16(%rbp), %eax
        addl    %eax, -20(%rbp)
.L12:
        addl    $1, -4(%rbp)
.L10:
        movl    -4(%rbp), %eax
        cmpl    -24(%rbp), %eax
        jl      .L13
        movq    -40(%rbp), %rax
        movq    %rax, %rdi
        call    free
        movq    -48(%rbp), %rax
        movq    %rax, %rdi
        call    free
        movl    -20(%rbp), %eax
        leave
        ret
func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movl    %edx, -48(%rbp)
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        movl    -44(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -12(%rbp)
        movb    $0, -17(%rbp)
        jmp     .L16
.L20:
        movl    -8(%rbp), %edx
        movl    -12(%rbp), %eax
        addl    %edx, %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        movl    %eax, -16(%rbp)
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -48(%rbp)
        jne     .L17
        movb    $1, -17(%rbp)
        movl    $1, -4(%rbp)
        jmp     .L18
.L17:
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -48(%rbp)
        jle     .L19
        movl    -16(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -8(%rbp)
        jmp     .L16
.L19:
        movl    -16(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -12(%rbp)
.L16:
        movl    -8(%rbp), %eax
        cmpl    -12(%rbp), %eax
        jle     .L20
.L18:
        cmpb    $0, -17(%rbp)
        je      .L21
        movl    -16(%rbp), %eax
        addl    $1, %eax
        movl    %eax, -24(%rbp)
        jmp     .L22
.L26:
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -48(%rbp)
        jne     .L32
        addl    $1, -4(%rbp)
        addl    $1, -24(%rbp)
.L22:
        movl    -24(%rbp), %eax
        cmpl    -44(%rbp), %eax
        jl      .L26
        jmp     .L25
.L32:
        nop
.L25:
        movl    -16(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -24(%rbp)
        jmp     .L27
.L30:
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -48(%rbp)
        jne     .L33
        addl    $1, -4(%rbp)
        subl    $1, -24(%rbp)
.L27:
        cmpl    $0, -24(%rbp)
        jns     .L30
        jmp     .L21
.L33:
        nop
.L21:
        movl    -4(%rbp), %eax
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -8(%rbp)
        movq    %rsi, -16(%rbp)
        movq    -8(%rbp), %rax
        movl    (%rax), %edx
        movq    -16(%rbp), %rax
        movl    (%rax), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        popq    %rbp
        ret
