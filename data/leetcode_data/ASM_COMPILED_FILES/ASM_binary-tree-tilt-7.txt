func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $24, %rsp
        movq    %rdi, -24(%rbp)
        cmpq    $0, -24(%rbp)
        jne     .L2
        movl    $0, %eax
        jmp     .L3
.L2:
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        testq   %rax, %rax
        jne     .L4
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        testq   %rax, %rax
        jne     .L4
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        jmp     .L3
.L4:
        movq    -24(%rbp), %rax
        movl    (%rax), %ebx
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, %rdi
        call    func_1
        addl    %eax, %ebx
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, %rdi
        call    func_1
        addl    %ebx, %eax
.L3:
        addq    $24, %rsp
        popq    %rbx
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $40, %rsp
        movq    %rdi, -40(%rbp)
        movl    $0, -20(%rbp)
        movl    $0, -24(%rbp)
        movl    $0, -28(%rbp)
        cmpq    $0, -40(%rbp)
        jne     .L6
        movl    $0, %eax
        jmp     .L7
.L6:
        movq    -40(%rbp), %rax
        movq    8(%rax), %rax
        testq   %rax, %rax
        jne     .L8
        movq    -40(%rbp), %rax
        movq    16(%rax), %rax
        testq   %rax, %rax
        jne     .L8
        movl    $0, %eax
        jmp     .L7
.L8:
        movq    -40(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, %rdi
        call    func_1
        movl    %eax, -24(%rbp)
        movq    -40(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, %rdi
        call    func_1
        movl    %eax, -28(%rbp)
        movl    -24(%rbp), %eax
        subl    -28(%rbp), %eax
        movl    %eax, -20(%rbp)
        cmpl    $0, -20(%rbp)
        jns     .L9
        negl    -20(%rbp)
.L9:
        movq    -40(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, %rdi
        call    func_2
        movl    %eax, %edx
        movl    -20(%rbp), %eax
        leal    (%rdx,%rax), %ebx
        movq    -40(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, %rdi
        call    func_2
        addl    %ebx, %eax
.L7:
        addq    $40, %rsp
        popq    %rbx
        popq    %rbp
        ret
