func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        addq    $-128, %rsp
        movl    %edi, -116(%rbp)
        movq    %rsi, -128(%rbp)
        movl    -116(%rbp), %eax
        andl    $1, %eax
        testl   %eax, %eax
        jne     .L2
        movq    -128(%rbp), %rax
        movl    $0, (%rax)
        movl    $0, %eax
        jmp     .L3
.L2:
        cmpl    $1, -116(%rbp)
        jne     .L4
        movl    $24, %edi
        call    malloc
        movq    %rax, -24(%rbp)
        movq    -24(%rbp), %rax
        movl    $0, (%rax)
        movq    -24(%rbp), %rax
        movq    $0, 8(%rax)
        movq    -24(%rbp), %rax
        movq    $0, 16(%rax)
        movl    $8, %edi
        call    malloc
        movq    %rax, -32(%rbp)
        movq    -128(%rbp), %rax
        movl    $1, (%rax)
        movq    -32(%rbp), %rax
        movq    -24(%rbp), %rdx
        movq    %rdx, (%rax)
        movq    -32(%rbp), %rax
        jmp     .L3
.L4:
        cmpl    $3, -116(%rbp)
        jne     .L5
        movl    $24, %edi
        call    malloc
        movq    %rax, -40(%rbp)
        movl    $24, %edi
        call    malloc
        movq    %rax, -48(%rbp)
        movl    $24, %edi
        call    malloc
        movq    %rax, -56(%rbp)
        movq    -40(%rbp), %rax
        movl    $0, (%rax)
        movq    -48(%rbp), %rax
        movl    $0, (%rax)
        movq    -56(%rbp), %rax
        movl    $0, (%rax)
        movq    -48(%rbp), %rax
        movq    $0, 8(%rax)
        movq    -48(%rbp), %rax
        movq    $0, 16(%rax)
        movq    -56(%rbp), %rax
        movq    $0, 8(%rax)
        movq    -56(%rbp), %rax
        movq    $0, 16(%rax)
        movq    -40(%rbp), %rax
        movq    -48(%rbp), %rdx
        movq    %rdx, 8(%rax)
        movq    -40(%rbp), %rax
        movq    -56(%rbp), %rdx
        movq    %rdx, 16(%rax)
        movl    $8, %edi
        call    malloc
        movq    %rax, -64(%rbp)
        movq    -128(%rbp), %rax
        movl    $1, (%rax)
        movq    -64(%rbp), %rax
        movq    -40(%rbp), %rdx
        movq    %rdx, (%rax)
        movq    -64(%rbp), %rax
        jmp     .L3
.L5:
        movl    $40000, %edi
        call    malloc
        movq    %rax, -72(%rbp)
        movl    $0, -4(%rbp)
        movl    $1, -8(%rbp)
        jmp     .L6
.L11:
        movl    $4, %esi
        movl    $1, %edi
        call    calloc
        movq    %rax, -80(%rbp)
        movq    -80(%rbp), %rdx
        movl    -8(%rbp), %eax
        movq    %rdx, %rsi
        movl    %eax, %edi
        call    func_1
        movq    %rax, -88(%rbp)
        movl    $4, %esi
        movl    $1, %edi
        call    calloc
        movq    %rax, -96(%rbp)
        movl    -116(%rbp), %eax
        subl    $1, %eax
        subl    -8(%rbp), %eax
        movq    -96(%rbp), %rdx
        movq    %rdx, %rsi
        movl    %eax, %edi
        call    func_1
        movq    %rax, -104(%rbp)
        movl    $0, -12(%rbp)
        jmp     .L7
.L10:
        movl    $0, -16(%rbp)
        jmp     .L8
.L9:
        movl    $24, %edi
        call    malloc
        movq    %rax, -112(%rbp)
        movq    -112(%rbp), %rax
        movl    $0, (%rax)
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -88(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rdx
        movq    -112(%rbp), %rax
        movq    %rdx, 8(%rax)
        movl    -16(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -104(%rbp), %rax
        addq    %rdx, %rax
        movq    (%rax), %rdx
        movq    -112(%rbp), %rax
        movq    %rdx, 16(%rax)
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -72(%rbp), %rax
        addq    %rax, %rdx
        movq    -112(%rbp), %rax
        movq    %rax, (%rdx)
        addl    $1, -4(%rbp)
        addl    $1, -16(%rbp)
.L8:
        movq    -96(%rbp), %rax
        movl    (%rax), %eax
        cmpl    %eax, -16(%rbp)
        jl      .L9
        addl    $1, -12(%rbp)
.L7:
        movq    -80(%rbp), %rax
        movl    (%rax), %eax
        cmpl    %eax, -12(%rbp)
        jl      .L10
        movq    -80(%rbp), %rax
        movq    %rax, %rdi
        call    free
        movq    -96(%rbp), %rax
        movq    %rax, %rdi
        call    free
        addl    $2, -8(%rbp)
.L6:
        movl    -116(%rbp), %eax
        subl    $1, %eax
        cmpl    %eax, -8(%rbp)
        jl      .L11
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,8), %rdx
        movq    -72(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    realloc
        movq    %rax, -72(%rbp)
        movq    -128(%rbp), %rax
        movl    -4(%rbp), %edx
        movl    %edx, (%rax)
        movq    -72(%rbp), %rax
.L3:
        leave
        ret
