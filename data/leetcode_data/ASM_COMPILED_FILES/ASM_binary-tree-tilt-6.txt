func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $16, %rsp
        movq    %rdi, -8(%rbp)
        movq    %rsi, -16(%rbp)
        cmpq    $0, -8(%rbp)
        je      .L4
        movq    -16(%rbp), %rax
        movl    (%rax), %edx
        movq    -8(%rbp), %rax
        movl    (%rax), %eax
        addl    %eax, %edx
        movq    -16(%rbp), %rax
        movl    %edx, (%rax)
        movq    -8(%rbp), %rax
        movq    8(%rax), %rax
        movq    -16(%rbp), %rdx
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    func_2
        movq    -8(%rbp), %rax
        movq    16(%rax), %rax
        movq    -16(%rbp), %rdx
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    func_2
        jmp     .L1
.L4:
        nop
.L1:
        leave
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        movl    $0, -12(%rbp)
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        leaq    -8(%rbp), %rdx
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    func_2
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        leaq    -12(%rbp), %rdx
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    func_2
        movl    -8(%rbp), %edx
        movl    -12(%rbp), %eax
        cmpl    %eax, %edx
        jle     .L6
        movl    -8(%rbp), %edx
        movl    -12(%rbp), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        addl    %eax, -4(%rbp)
        jmp     .L7
.L6:
        movl    -12(%rbp), %edx
        movl    -8(%rbp), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        addl    %eax, -4(%rbp)
.L7:
        movl    -4(%rbp), %eax
        leave
        ret
func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %rbx
        subq    $24, %rsp
        movq    %rdi, -24(%rbp)
        cmpq    $0, -24(%rbp)
        je      .L10
        movq    -24(%rbp), %rax
        movq    %rax, %rdi
        call    func_1
        movl    %eax, %ebx
        movq    -24(%rbp), %rax
        movq    8(%rax), %rax
        movq    %rax, %rdi
        call    func_3
        addl    %eax, %ebx
        movq    -24(%rbp), %rax
        movq    16(%rax), %rax
        movq    %rax, %rdi
        call    func_3
        addl    %ebx, %eax
        jmp     .L11
.L10:
        movl    $0, %eax
.L11:
        addq    $24, %rsp
        popq    %rbx
        popq    %rbp
        ret
