func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movq    -40(%rbp), %rax
        movl    (%rax), %eax
        cvtsi2sd        %eax, %xmm0
        movsd   %xmm0, -8(%rbp)
        movq    -40(%rbp), %rax
        addq    $4, %rax
        movl    (%rax), %eax
        cvtsi2sd        %eax, %xmm0
        movsd   %xmm0, -16(%rbp)
        movq    -40(%rbp), %rax
        addq    $8, %rax
        movl    (%rax), %eax
        cvtsi2sd        %eax, %xmm0
        movsd   %xmm0, -24(%rbp)
        movq    -40(%rbp), %rax
        addq    $12, %rax
        movl    (%rax), %eax
        cvtsi2sd        %eax, %xmm0
        movsd   %xmm0, -32(%rbp)
        movsd   -32(%rbp), %xmm3
        movsd   -24(%rbp), %xmm2
        movsd   -16(%rbp), %xmm1
        movsd   -8(%rbp), %xmm0
        movl    $4, %eax
        call    func_1_4
        testl   %eax, %eax
        setne   %al
        leave
        ret
func_1_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movsd   %xmm0, -8(%rbp)
        movsd   -8(%rbp), %xmm0
        movsd   .LC0(%rip), %xmm1
        subsd   %xmm1, %xmm0
        comisd  .LC1(%rip), %xmm0
        jbe     .L4
        movsd   -8(%rbp), %xmm0
        movsd   .LC0(%rip), %xmm1
        subsd   %xmm1, %xmm0
        movapd  %xmm0, %xmm1
        movsd   .LC2(%rip), %xmm0
        comisd  %xmm1, %xmm0
        jbe     .L4
        movl    $1, %eax
        jmp     .L8
.L4:
        movl    $0, %eax
.L8:
        popq    %rbp
        ret
func_1_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $16, %rsp
        movsd   %xmm0, -8(%rbp)
        movsd   %xmm1, -16(%rbp)
        movsd   -8(%rbp), %xmm0
        addsd   -16(%rbp), %xmm0
        call    func_1_1
        testl   %eax, %eax
        jne     .L12
        movsd   -8(%rbp), %xmm0
        mulsd   -16(%rbp), %xmm0
        call    func_1_1
        testl   %eax, %eax
        jne     .L12
        movsd   -8(%rbp), %xmm0
        subsd   -16(%rbp), %xmm0
        call    func_1_1
        testl   %eax, %eax
        jne     .L12
        movsd   -16(%rbp), %xmm0
        subsd   -8(%rbp), %xmm0
        call    func_1_1
        testl   %eax, %eax
        jne     .L12
        movsd   -8(%rbp), %xmm0
        divsd   -16(%rbp), %xmm0
        call    func_1_1
        testl   %eax, %eax
        jne     .L12
        movsd   -16(%rbp), %xmm0
        divsd   -8(%rbp), %xmm0
        call    func_1_1
        testl   %eax, %eax
        je      .L13
.L12:
        movl    $1, %eax
        jmp     .L15
.L13:
        movl    $0, %eax
.L15:
        leave
        ret
func_1_3:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $24, %rsp
        movsd   %xmm0, -8(%rbp)
        movsd   %xmm1, -16(%rbp)
        movsd   %xmm2, -24(%rbp)
        movsd   -16(%rbp), %xmm0
        addsd   -24(%rbp), %xmm0
        movsd   -8(%rbp), %xmm1
        call    func_1_2
        testl   %eax, %eax
        jne     .L17
        movsd   -16(%rbp), %xmm0
        mulsd   -24(%rbp), %xmm0
        movsd   -8(%rbp), %xmm1
        call    func_1_2
        testl   %eax, %eax
        jne     .L17
        movsd   -16(%rbp), %xmm0
        subsd   -24(%rbp), %xmm0
        movsd   -8(%rbp), %xmm1
        call    func_1_2
        testl   %eax, %eax
        jne     .L17
        movsd   -24(%rbp), %xmm0
        subsd   -16(%rbp), %xmm0
        movsd   -8(%rbp), %xmm1
        call    func_1_2
        testl   %eax, %eax
        jne     .L17
        movsd   -16(%rbp), %xmm0
        divsd   -24(%rbp), %xmm0
        movsd   -8(%rbp), %xmm1
        call    func_1_2
        testl   %eax, %eax
        jne     .L17
        movsd   -24(%rbp), %xmm0
        divsd   -16(%rbp), %xmm0
        movsd   -8(%rbp), %xmm1
        call    func_1_2
        testl   %eax, %eax
        jne     .L17
        movsd   -8(%rbp), %xmm0
        addsd   -24(%rbp), %xmm0
        movsd   -16(%rbp), %xmm1
        call    func_1_2
        testl   %eax, %eax
        jne     .L17
        movsd   -8(%rbp), %xmm0
        mulsd   -24(%rbp), %xmm0
        movsd   -16(%rbp), %xmm1
        call    func_1_2
        testl   %eax, %eax
        jne     .L17
        movsd   -8(%rbp), %xmm0
        subsd   -24(%rbp), %xmm0
        movsd   -16(%rbp), %xmm1
        call    func_1_2
        testl   %eax, %eax
        jne     .L17
        movsd   -24(%rbp), %xmm0
        subsd   -8(%rbp), %xmm0
        movsd   -16(%rbp), %xmm1
        call    func_1_2
        testl   %eax, %eax
        jne     .L17
        movsd   -8(%rbp), %xmm0
        divsd   -24(%rbp), %xmm0
        movsd   -16(%rbp), %xmm1
        call    func_1_2
        testl   %eax, %eax
        jne     .L17
        movsd   -24(%rbp), %xmm0
        divsd   -8(%rbp), %xmm0
        movsd   -16(%rbp), %xmm1
        call    func_1_2
        testl   %eax, %eax
        jne     .L17
        movsd   -8(%rbp), %xmm0
        addsd   -16(%rbp), %xmm0
        movsd   -24(%rbp), %xmm1
        call    func_1_2
        testl   %eax, %eax
        jne     .L17
        movsd   -8(%rbp), %xmm0
        mulsd   -16(%rbp), %xmm0
        movsd   -24(%rbp), %xmm1
        call    func_1_2
        testl   %eax, %eax
        jne     .L17
        movsd   -8(%rbp), %xmm0
        subsd   -16(%rbp), %xmm0
        movsd   -24(%rbp), %xmm1
        call    func_1_2
        testl   %eax, %eax
        jne     .L17
        movsd   -16(%rbp), %xmm0
        subsd   -8(%rbp), %xmm0
        movsd   -24(%rbp), %xmm1
        call    func_1_2
        testl   %eax, %eax
        jne     .L17
        movsd   -8(%rbp), %xmm0
        divsd   -16(%rbp), %xmm0
        movsd   -24(%rbp), %xmm1
        call    func_1_2
        testl   %eax, %eax
        jne     .L17
        movsd   -16(%rbp), %xmm0
        divsd   -8(%rbp), %xmm0
        movsd   -24(%rbp), %xmm1
        call    func_1_2
        testl   %eax, %eax
        je      .L18
.L17:
        movl    $1, %eax
        jmp     .L20
.L18:
        movl    $0, %eax
.L20:
        leave
        ret
func_1_4:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movsd   %xmm0, -8(%rbp)
        movsd   %xmm1, -16(%rbp)
        movsd   %xmm2, -24(%rbp)
        movsd   %xmm3, -32(%rbp)
        movsd   -24(%rbp), %xmm0
        addsd   -32(%rbp), %xmm0
        movsd   -16(%rbp), %xmm2
        movsd   -8(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -24(%rbp), %xmm0
        mulsd   -32(%rbp), %xmm0
        movsd   -16(%rbp), %xmm2
        movsd   -8(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -24(%rbp), %xmm0
        subsd   -32(%rbp), %xmm0
        movsd   -16(%rbp), %xmm2
        movsd   -8(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -32(%rbp), %xmm0
        subsd   -24(%rbp), %xmm0
        movsd   -16(%rbp), %xmm2
        movsd   -8(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -24(%rbp), %xmm0
        divsd   -32(%rbp), %xmm0
        movsd   -16(%rbp), %xmm2
        movsd   -8(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -32(%rbp), %xmm0
        divsd   -24(%rbp), %xmm0
        movsd   -16(%rbp), %xmm2
        movsd   -8(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -16(%rbp), %xmm0
        addsd   -32(%rbp), %xmm0
        movsd   -24(%rbp), %xmm2
        movsd   -8(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -16(%rbp), %xmm0
        mulsd   -32(%rbp), %xmm0
        movsd   -24(%rbp), %xmm2
        movsd   -8(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -16(%rbp), %xmm0
        subsd   -32(%rbp), %xmm0
        movsd   -24(%rbp), %xmm2
        movsd   -8(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -32(%rbp), %xmm0
        subsd   -16(%rbp), %xmm0
        movsd   -24(%rbp), %xmm2
        movsd   -8(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -16(%rbp), %xmm0
        divsd   -32(%rbp), %xmm0
        movsd   -24(%rbp), %xmm2
        movsd   -8(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -32(%rbp), %xmm0
        divsd   -16(%rbp), %xmm0
        movsd   -24(%rbp), %xmm2
        movsd   -8(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -16(%rbp), %xmm0
        addsd   -24(%rbp), %xmm0
        movsd   -32(%rbp), %xmm2
        movsd   -8(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -16(%rbp), %xmm0
        mulsd   -24(%rbp), %xmm0
        movsd   -32(%rbp), %xmm2
        movsd   -8(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -16(%rbp), %xmm0
        subsd   -24(%rbp), %xmm0
        movsd   -32(%rbp), %xmm2
        movsd   -8(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -24(%rbp), %xmm0
        subsd   -16(%rbp), %xmm0
        movsd   -32(%rbp), %xmm2
        movsd   -8(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -16(%rbp), %xmm0
        divsd   -24(%rbp), %xmm0
        movsd   -32(%rbp), %xmm2
        movsd   -8(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -24(%rbp), %xmm0
        divsd   -16(%rbp), %xmm0
        movsd   -32(%rbp), %xmm2
        movsd   -8(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -8(%rbp), %xmm0
        addsd   -32(%rbp), %xmm0
        movsd   -24(%rbp), %xmm2
        movsd   -16(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -8(%rbp), %xmm0
        mulsd   -32(%rbp), %xmm0
        movsd   -24(%rbp), %xmm2
        movsd   -16(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -8(%rbp), %xmm0
        subsd   -32(%rbp), %xmm0
        movsd   -24(%rbp), %xmm2
        movsd   -16(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -32(%rbp), %xmm0
        subsd   -8(%rbp), %xmm0
        movsd   -24(%rbp), %xmm2
        movsd   -16(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -8(%rbp), %xmm0
        divsd   -32(%rbp), %xmm0
        movsd   -24(%rbp), %xmm2
        movsd   -16(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -32(%rbp), %xmm0
        divsd   -8(%rbp), %xmm0
        movsd   -24(%rbp), %xmm2
        movsd   -16(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -8(%rbp), %xmm0
        addsd   -24(%rbp), %xmm0
        movsd   -32(%rbp), %xmm2
        movsd   -16(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -8(%rbp), %xmm0
        mulsd   -24(%rbp), %xmm0
        movsd   -32(%rbp), %xmm2
        movsd   -16(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -8(%rbp), %xmm0
        subsd   -24(%rbp), %xmm0
        movsd   -32(%rbp), %xmm2
        movsd   -16(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -24(%rbp), %xmm0
        subsd   -8(%rbp), %xmm0
        movsd   -32(%rbp), %xmm2
        movsd   -16(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -8(%rbp), %xmm0
        divsd   -24(%rbp), %xmm0
        movsd   -32(%rbp), %xmm2
        movsd   -16(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -24(%rbp), %xmm0
        divsd   -8(%rbp), %xmm0
        movsd   -32(%rbp), %xmm2
        movsd   -16(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -8(%rbp), %xmm0
        addsd   -16(%rbp), %xmm0
        movsd   -32(%rbp), %xmm2
        movsd   -24(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -8(%rbp), %xmm0
        mulsd   -16(%rbp), %xmm0
        movsd   -32(%rbp), %xmm2
        movsd   -24(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -8(%rbp), %xmm0
        subsd   -16(%rbp), %xmm0
        movsd   -32(%rbp), %xmm2
        movsd   -24(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -16(%rbp), %xmm0
        subsd   -8(%rbp), %xmm0
        movsd   -32(%rbp), %xmm2
        movsd   -24(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -8(%rbp), %xmm0
        divsd   -16(%rbp), %xmm0
        movsd   -32(%rbp), %xmm2
        movsd   -24(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        jne     .L22
        movsd   -16(%rbp), %xmm0
        divsd   -8(%rbp), %xmm0
        movsd   -32(%rbp), %xmm2
        movsd   -24(%rbp), %xmm1
        call    func_1_3
        testl   %eax, %eax
        je      .L23
.L22:
        movl    $1, %eax
        jmp     .L25
.L23:
        movl    $0, %eax
.L25:
        leave
        ret
.LC0:
        .long   0
        .long   1077411840
.LC1:
        .long   2696277389
        .long   -1095710985
.LC2:
        .long   2696277389
        .long   1051772663
