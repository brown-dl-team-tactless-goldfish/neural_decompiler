func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -8(%rbp)
        movq    %rsi, -16(%rbp)
        movq    -8(%rbp), %rax
        movl    (%rax), %edx
        movq    -16(%rbp), %rax
        movl    (%rax), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        popq    %rbp
        ret
func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -40(%rbp)
        movl    %esi, -44(%rbp)
        movl    %edx, -48(%rbp)
        movl    $0, -4(%rbp)
        movl    -44(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -8(%rbp)
        movl    $0, -12(%rbp)
        movl    $0, -16(%rbp)
        movl    $1, -20(%rbp)
        movl    -44(%rbp), %eax
        movslq  %eax, %rsi
        movq    -40(%rbp), %rax
        movl    $func_1, %ecx
        movl    $4, %edx
        movq    %rax, %rdi
        call    qsort
        jmp     .L4
.L8:
        movl    $0, -20(%rbp)
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        cmpl    %eax, -48(%rbp)
        jl      .L5
        movl    -4(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -4(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        subl    %eax, -48(%rbp)
        addl    $1, -12(%rbp)
        movl    $1, -20(%rbp)
        jmp     .L6
.L5:
        cmpl    $0, -12(%rbp)
        jle     .L6
        movl    -8(%rbp), %eax
        leal    -1(%rax), %edx
        movl    %edx, -8(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %eax
        addl    %eax, -48(%rbp)
        subl    $1, -12(%rbp)
        movl    $1, -20(%rbp)
.L6:
        movl    -12(%rbp), %eax
        cmpl    -16(%rbp), %eax
        jle     .L4
        movl    -12(%rbp), %eax
        movl    %eax, -16(%rbp)
.L4:
        movl    -4(%rbp), %eax
        cmpl    -8(%rbp), %eax
        jg      .L7
        cmpl    $0, -20(%rbp)
        jne     .L8
.L7:
        movl    -16(%rbp), %eax
        leave
        ret
