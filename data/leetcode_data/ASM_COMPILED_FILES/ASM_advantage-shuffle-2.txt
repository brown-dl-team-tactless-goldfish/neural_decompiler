func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -8(%rbp)
        movq    %rsi, -16(%rbp)
        movq    -8(%rbp), %rax
        movl    (%rax), %edx
        movq    -16(%rbp), %rax
        movl    (%rax), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        popq    %rbp
        ret
func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -8(%rbp)
        movq    %rsi, -16(%rbp)
        movq    -8(%rbp), %rax
        movl    4(%rax), %edx
        movq    -16(%rbp), %rax
        movl    4(%rax), %eax
        subl    %eax, %edx
        movl    %edx, %eax
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        pushq   %r12
        pushq   %rbx
        subq    $80, %rsp
        movq    %rdi, -72(%rbp)
        movl    %esi, -76(%rbp)
        movq    %rdx, -88(%rbp)
        movl    %ecx, -80(%rbp)
        movq    %r8, -96(%rbp)
        movq    %rsp, %rax
        movq    %rax, %rbx
        cmpq    $0, -72(%rbp)
        je      .L6
        cmpq    $0, -88(%rbp)
        je      .L6
        cmpq    $0, -96(%rbp)
        jne     .L7
.L6:
        movl    $0, %eax
        jmp     .L8
.L7:
        cmpl    $0, -76(%rbp)
        je      .L9
        cmpl    $0, -80(%rbp)
        jne     .L10
.L9:
        movq    -96(%rbp), %rax
        movl    $0, (%rax)
        movl    $0, %eax
        jmp     .L8
.L10:
        movl    -80(%rbp), %eax
        movslq  %eax, %rdx
        subq    $1, %rdx
        movq    %rdx, -40(%rbp)
        movslq  %eax, %rdx
        movq    %rdx, %r11
        movl    $0, %r12d
        movslq  %eax, %rdx
        movq    %rdx, %r9
        movl    $0, %r10d
        cltq
        leaq    0(,%rax,8), %rdx
        movl    $16, %eax
        subq    $1, %rax
        addq    %rdx, %rax
        movl    $16, %edi
        movl    $0, %edx
        divq    %rdi
        imulq   $16, %rax, %rax
        subq    %rax, %rsp
        movq    %rsp, %rax
        addq    $3, %rax
        shrq    $2, %rax
        salq    $2, %rax
        movq    %rax, -48(%rbp)
        movl    $0, -32(%rbp)
        jmp     .L11
.L12:
        movq    -48(%rbp), %rax
        movl    -32(%rbp), %edx
        movslq  %edx, %rdx
        movl    -32(%rbp), %ecx
        movl    %ecx, (%rax,%rdx,8)
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -88(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %ecx
        movq    -48(%rbp), %rax
        movl    -32(%rbp), %edx
        movslq  %edx, %rdx
        movl    %ecx, 4(%rax,%rdx,8)
        addl    $1, -32(%rbp)
.L11:
        movl    -32(%rbp), %eax
        cmpl    -80(%rbp), %eax
        jl      .L12
        movl    -76(%rbp), %eax
        movslq  %eax, %rsi
        movq    -72(%rbp), %rax
        movl    $func_2, %ecx
        movl    $4, %edx
        movq    %rax, %rdi
        call    qsort
        movl    -80(%rbp), %eax
        movslq  %eax, %rsi
        movq    -48(%rbp), %rax
        movl    $func_3, %ecx
        movl    $8, %edx
        movq    %rax, %rdi
        call    qsort
        movl    -80(%rbp), %eax
        cltq
        salq    $2, %rax
        movq    %rax, %rdi
        call    malloc
        movq    %rax, -56(%rbp)
        cmpq    $0, -56(%rbp)
        jne     .L13
        movl    $0, %eax
        jmp     .L8
.L13:
        movl    $0, -28(%rbp)
        movl    -80(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -24(%rbp)
        movl    -24(%rbp), %eax
        movl    %eax, -20(%rbp)
        jmp     .L14
.L17:
        movl    -24(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %ecx
        movq    -48(%rbp), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        movl    4(%rax,%rdx,8), %eax
        cmpl    %eax, %ecx
        jle     .L15
        movl    -24(%rbp), %eax
        leal    -1(%rax), %edx
        movl    %edx, -24(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        leaq    (%rdx,%rax), %rcx
        movq    -48(%rbp), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        movl    (%rax,%rdx,8), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rax, %rdx
        movl    (%rcx), %eax
        movl    %eax, (%rdx)
        jmp     .L16
.L15:
        movl    -28(%rbp), %eax
        leal    1(%rax), %edx
        movl    %edx, -28(%rbp)
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -72(%rbp), %rax
        leaq    (%rdx,%rax), %rcx
        movq    -48(%rbp), %rax
        movl    -20(%rbp), %edx
        movslq  %edx, %rdx
        movl    (%rax,%rdx,8), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -56(%rbp), %rax
        addq    %rax, %rdx
        movl    (%rcx), %eax
        movl    %eax, (%rdx)
.L16:
        subl    $1, -20(%rbp)
.L14:
        movl    -28(%rbp), %eax
        cmpl    -24(%rbp), %eax
        jle     .L17
        movq    -96(%rbp), %rax
        movl    -80(%rbp), %edx
        movl    %edx, (%rax)
        movq    -56(%rbp), %rax
.L8:
        movq    %rbx, %rsp
        leaq    -16(%rbp), %rsp
        popq    %rbx
        popq    %r12
        popq    %rbp
        ret
