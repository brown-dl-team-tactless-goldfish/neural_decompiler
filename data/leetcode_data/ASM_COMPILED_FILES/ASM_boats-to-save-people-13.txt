func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        movq    %rdi, -24(%rbp)
        movq    %rsi, -32(%rbp)
        movq    -24(%rbp), %rax
        movl    (%rax), %eax
        movl    %eax, -4(%rbp)
        movq    -32(%rbp), %rax
        movl    (%rax), %edx
        movq    -24(%rbp), %rax
        movl    %edx, (%rax)
        movq    -32(%rbp), %rax
        movl    -4(%rbp), %edx
        movl    %edx, (%rax)
        nop
        popq    %rbp
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    %edx, -32(%rbp)
        movl    -32(%rbp), %eax
        movl    %eax, -4(%rbp)
        movl    -32(%rbp), %eax
        addl    %eax, %eax
        addl    $1, %eax
        movl    %eax, -8(%rbp)
        movl    -32(%rbp), %eax
        addl    $1, %eax
        addl    %eax, %eax
        movl    %eax, -12(%rbp)
        movl    -8(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jge     .L3
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jle     .L3
        movl    -8(%rbp), %eax
        movl    %eax, -4(%rbp)
.L3:
        movl    -12(%rbp), %eax
        cmpl    -28(%rbp), %eax
        jge     .L4
        movl    -12(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        cmpl    %eax, %edx
        jle     .L4
        movl    -12(%rbp), %eax
        movl    %eax, -4(%rbp)
.L4:
        movl    -4(%rbp), %eax
        cmpl    -32(%rbp), %eax
        je      .L6
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movl    -32(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    func_2
        movl    -4(%rbp), %edx
        movl    -28(%rbp), %ecx
        movq    -24(%rbp), %rax
        movl    %ecx, %esi
        movq    %rax, %rdi
        call    func_1
.L6:
        nop
        leave
        ret
func_3:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    -28(%rbp), %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        subl    $1, %eax
        movl    %eax, -4(%rbp)
        jmp     .L8
.L9:
        movl    -4(%rbp), %edx
        movl    -28(%rbp), %ecx
        movq    -24(%rbp), %rax
        movl    %ecx, %esi
        movq    %rax, %rdi
        call    func_1
        subl    $1, -4(%rbp)
.L8:
        cmpl    $0, -4(%rbp)
        jns     .L9
        movl    -28(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -8(%rbp)
        jmp     .L10
.L11:
        movl    -8(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rdx
        movq    -24(%rbp), %rax
        addq    %rax, %rdx
        movq    -24(%rbp), %rax
        movq    %rdx, %rsi
        movq    %rax, %rdi
        call    func_2
        movl    -8(%rbp), %ecx
        movq    -24(%rbp), %rax
        movl    $0, %edx
        movl    %ecx, %esi
        movq    %rax, %rdi
        call    func_1
        subl    $1, -8(%rbp)
.L10:
        cmpl    $0, -8(%rbp)
        jns     .L11
        nop
        leave
        ret
func_4:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movq    %rdi, -24(%rbp)
        movl    %esi, -28(%rbp)
        movl    %edx, -32(%rbp)
        movl    $0, -4(%rbp)
        movl    $0, -8(%rbp)
        movl    -28(%rbp), %edx
        movq    -24(%rbp), %rax
        movl    %edx, %esi
        movq    %rax, %rdi
        call    func_3
        jmp     .L13
.L15:
        movl    -28(%rbp), %eax
        cltq
        salq    $2, %rax
        leaq    -4(%rax), %rdx
        movq    -24(%rbp), %rax
        addq    %rdx, %rax
        movl    (%rax), %edx
        movl    -4(%rbp), %eax
        cltq
        leaq    0(,%rax,4), %rcx
        movq    -24(%rbp), %rax
        addq    %rcx, %rax
        movl    (%rax), %eax
        addl    %edx, %eax
        cmpl    %eax, -32(%rbp)
        jl      .L14
        addl    $1, -8(%rbp)
        subl    $1, -28(%rbp)
        addl    $1, -4(%rbp)
        jmp     .L13
.L14:
        addl    $1, -8(%rbp)
        subl    $1, -28(%rbp)
.L13:
        movl    -28(%rbp), %eax
        cmpl    -4(%rbp), %eax
        jg      .L15
        movl    -8(%rbp), %eax
        leave
        ret
