func_2:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movl    %edi, -20(%rbp)
        cvtsi2sd        -20(%rbp), %xmm0
        call    sqrt
        movq    %xmm0, %rax
        movq    %rax, -16(%rbp)
        movl    $2, -4(%rbp)
        jmp     .L2
.L5:
        movl    -20(%rbp), %eax
        cltd
        idivl   -4(%rbp)
        movl    %edx, %eax
        testl   %eax, %eax
        jne     .L3
        movl    $0, %eax
        jmp     .L4
.L3:
        addl    $1, -4(%rbp)
.L2:
        cvtsi2sd        -4(%rbp), %xmm1
        movsd   -16(%rbp), %xmm2
        movsd   .LC0(%rip), %xmm0
        addsd   %xmm2, %xmm0
        comisd  %xmm1, %xmm0
        ja      .L5
        movl    $1, %eax
.L4:
        leave
        ret
func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $32, %rsp
        movl    %edi, -20(%rbp)
        movl    $0, -4(%rbp)
.L15:
        cmpl    $1, -20(%rbp)
        je      .L17
        cmpl    $2, -20(%rbp)
        jne     .L9
        addl    $2, -4(%rbp)
        jmp     .L8
.L9:
        movl    -20(%rbp), %eax
        movl    %eax, %edi
        call    func_2
        testl   %eax, %eax
        je      .L10
        movl    -20(%rbp), %eax
        addl    %eax, -4(%rbp)
        jmp     .L8
.L10:
        movl    $1, -8(%rbp)
        movl    -20(%rbp), %eax
        movl    %eax, -12(%rbp)
        movl    $2, -16(%rbp)
        jmp     .L11
.L14:
        movl    -12(%rbp), %eax
        cltd
        idivl   -16(%rbp)
        movl    %edx, %eax
        testl   %eax, %eax
        jne     .L12
        movl    -16(%rbp), %eax
        movl    %eax, -8(%rbp)
        nop
.L13:
        movl    -12(%rbp), %eax
        cltd
        idivl   -16(%rbp)
        movl    %eax, -12(%rbp)
        movl    -12(%rbp), %eax
        cltd
        idivl   -16(%rbp)
        movl    %edx, %eax
        testl   %eax, %eax
        je      .L13
.L12:
        addl    $1, -16(%rbp)
.L11:
        movl    -12(%rbp), %eax
        movl    %eax, %edx
        shrl    $31, %edx
        addl    %edx, %eax
        sarl    %eax
        addl    $1, %eax
        cmpl    %eax, -16(%rbp)
        jle     .L14
        movl    -8(%rbp), %eax
        addl    %eax, -4(%rbp)
        movl    -20(%rbp), %eax
        cltd
        idivl   -8(%rbp)
        movl    %eax, -20(%rbp)
        jmp     .L15
.L17:
        nop
.L8:
        movl    -4(%rbp), %eax
        leave
        ret
.LC0:
        .long   0
        .long   1072693248
