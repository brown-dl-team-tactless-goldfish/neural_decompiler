func_1:
        pushq   %rbp
        movq    %rsp, %rbp
        subq    $48, %rsp
        movq    %rdi, -40(%rbp)
        movq    %rsi, -48(%rbp)
        movq    -40(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -20(%rbp)
        movq    -48(%rbp), %rax
        movq    %rax, %rdi
        call    strlen
        movl    %eax, -24(%rbp)
        movl    $5101, %edi
        call    malloc
        movq    %rax, -32(%rbp)
        movl    $0, -4(%rbp)
        movl    $5100, -16(%rbp)
        movl    -20(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -8(%rbp)
        movl    -24(%rbp), %eax
        subl    $1, %eax
        movl    %eax, -12(%rbp)
        jmp     .L2
.L4:
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        leal    -48(%rax), %ecx
        movl    -12(%rbp), %eax
        movslq  %eax, %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        addl    %ecx, %eax
        leal    -48(%rax), %edx
        movl    -4(%rbp), %eax
        leal    (%rdx,%rax), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movl    %edx, %eax
        leal    48(%rax), %ecx
        movl    -16(%rbp), %eax
        leal    -1(%rax), %edx
        movl    %edx, -16(%rbp)
        movslq  %eax, %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    %ecx, %edx
        movb    %dl, (%rax)
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        leal    -48(%rax), %ecx
        movl    -12(%rbp), %eax
        movslq  %eax, %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        addl    %ecx, %eax
        leal    -48(%rax), %edx
        movl    -4(%rbp), %eax
        leal    (%rdx,%rax), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -4(%rbp)
        subl    $1, -8(%rbp)
        subl    $1, -12(%rbp)
.L2:
        cmpl    $0, -8(%rbp)
        js      .L3
        cmpl    $0, -12(%rbp)
        jns     .L4
.L3:
        movl    -20(%rbp), %eax
        cmpl    -24(%rbp), %eax
        jle     .L5
        jmp     .L6
.L7:
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        leal    -48(%rax), %edx
        movl    -4(%rbp), %eax
        leal    (%rdx,%rax), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movl    %edx, %eax
        leal    48(%rax), %ecx
        movl    -16(%rbp), %eax
        leal    -1(%rax), %edx
        movl    %edx, -16(%rbp)
        movslq  %eax, %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    %ecx, %edx
        movb    %dl, (%rax)
        movl    -8(%rbp), %eax
        movslq  %eax, %rdx
        movq    -40(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        leal    -48(%rax), %edx
        movl    -4(%rbp), %eax
        leal    (%rdx,%rax), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -4(%rbp)
        subl    $1, -8(%rbp)
.L6:
        cmpl    $0, -8(%rbp)
        jns     .L7
        jmp     .L8
.L5:
        movl    -20(%rbp), %eax
        cmpl    -24(%rbp), %eax
        jge     .L8
        jmp     .L9
.L10:
        movl    -12(%rbp), %eax
        movslq  %eax, %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        leal    -48(%rax), %edx
        movl    -4(%rbp), %eax
        leal    (%rdx,%rax), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        sall    $2, %eax
        addl    %edx, %eax
        addl    %eax, %eax
        subl    %eax, %ecx
        movl    %ecx, %edx
        movl    %edx, %eax
        leal    48(%rax), %ecx
        movl    -16(%rbp), %eax
        leal    -1(%rax), %edx
        movl    %edx, -16(%rbp)
        movslq  %eax, %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    %ecx, %edx
        movb    %dl, (%rax)
        movl    -12(%rbp), %eax
        movslq  %eax, %rdx
        movq    -48(%rbp), %rax
        addq    %rdx, %rax
        movzbl  (%rax), %eax
        movsbl  %al, %eax
        leal    -48(%rax), %edx
        movl    -4(%rbp), %eax
        leal    (%rdx,%rax), %ecx
        movl    $1717986919, %edx
        movl    %ecx, %eax
        imull   %edx
        sarl    $2, %edx
        movl    %ecx, %eax
        sarl    $31, %eax
        subl    %eax, %edx
        movl    %edx, %eax
        movl    %eax, -4(%rbp)
        subl    $1, -12(%rbp)
.L9:
        cmpl    $0, -12(%rbp)
        jns     .L10
.L8:
        cmpl    $0, -4(%rbp)
        je      .L11
        movl    -4(%rbp), %eax
        leal    48(%rax), %ecx
        movl    -16(%rbp), %eax
        movslq  %eax, %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        movl    %ecx, %edx
        movb    %dl, (%rax)
        movl    -16(%rbp), %eax
        movslq  %eax, %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
        jmp     .L12
.L11:
        movl    -16(%rbp), %eax
        cltq
        leaq    1(%rax), %rdx
        movq    -32(%rbp), %rax
        addq    %rdx, %rax
.L12:
        leave
        ret
